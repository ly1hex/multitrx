Version 3.2 HI-TECH Software Intermediate Code
[s S206 :1 `uc 1 :1 `uc 1 ]
[n S206 . Cap1OVF Cap2OVF ]
[u S205 `S206 1 :8 `uc 1 ]
[n S205 capstatus . . ]
"68 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\peripheral/capture.h
[v _CapStatus `S205 1 e ]
"891 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TRISC `Vuc 0 e@3988 ]
"848 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TRISB `Vuc 0 e@3987 ]
"805 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TRISA `Vuc 0 e@3986 ]
"1782 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _T1CON `Vuc 0 e@4045 ]
"1860 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _WDTCON `Vuc 0 e@4049 ]
"429 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _ANSEL `Vuc 0 e@3966 ]
"447 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _ANSELH `Vuc 0 e@3967 ]
"1557 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _ADCON0 `Vuc 0 e@4034 ]
"1540 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _ADCON1 `Vuc 0 e@4033 ]
"1513 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _ADCON2 `Vuc 0 e@4032 ]
"4 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\uartring.c
[v _rxbuffer `Vuc -> 128 `i e ]
"5 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\uartring.c
[v _txbuffer `Vuc -> 128 `i e ]
"6 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\uartring.c
[v _txip `Vuc 1 e ]
"6 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\uartring.c
[v _txop `Vuc 1 e ]
"6 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\uartring.c
[v _rxip `Vuc 1 e ]
"6 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\uartring.c
[v _rxop `Vuc 1 e ]
"1210 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TXSTA `Vuc 0 e@4012 ]
"1181 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _RCSTA `Vuc 0 e@4011 ]
"1389 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _BAUDCON `Vuc 0 e@4024 ]
"1242 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _SPBRG `Vuc 0 e@4015 ]
"2204 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _INTCON `Vuc 0 e@4082 ]
"961 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _PIE1 `Vuc 0 e@3997 ]
"1184 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _OERR `Vb 0 e@32089 ]
"1187 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _CREN `Vb 0 e@32092 ]
"2215 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _GIE `Vb 0 e@32663 ]
"967 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TXIE `Vb 0 e@31980 ]
[s S241 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S241 . nr_settings bmc_en_rx bmc_sends bmc_en_hex bmc_repeat bmc_hops doro_en_rx gao_en_rx gao_sends esic_en_rx nexa_en_rx nexa_sends waveman_sends kangthai_sends ]
"1499 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18.h
[v _eeprom_write `(v 0 ef2`ui`uc ]
"1498 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18.h
[v _eeprom_read `(uc 0 ef1`ui ]
"990 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _RCIF `Vb 0 e@31989 ]
"1238 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _RCREG `Vuc 0 e@4014 ]
"989 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TXIF `Vb 0 e@31988 ]
"1234 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TXREG `Vuc 0 e@4013 ]
"1569 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18.h
[v __delay `(v 0 ef1`ul ]
[p i __delay ]
"1814 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR1L `Vuc 0 e@4046 ]
"1818 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR1H `Vuc 0 e@4047 ]
"1784 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR1ON `Vb 0 e@32360 ]
"985 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR1IF `Vb 0 e@31984 ]
"787 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _LATC4 `Vb 0 e@31836 ]
"762 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _LATB3 `Vb 0 e@31827 ]
"788 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _LATC5 `Vb 0 e@31837 ]
"1286 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR3H `Vuc 0 e@4019 ]
"1282 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR3L `Vuc 0 e@4018 ]
"1252 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR3ON `Vb 0 e@32136 ]
"1611 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _ADRESH `Vuc 0 e@4036 ]
"1607 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _ADRESL `Vuc 0 e@4035 ]
"761 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _LATB2 `Vb 0 e@31826 ]
[p mainexit ]
"553 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _PORTB `Vuc 0 e@3969 ]
"1985 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR0L `Vuc 0 e@4054 ]
"2208 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR0IF `Vb 0 e@32658 ]
"1059 C:\Program Files (x86)\HI-TECH Software\PICC-18\PRO\9.66\include\pic18f26k20.h
[v _TMR3IF `Vb 0 e@32009 ]
[; ;pic18f26k20.h: 279: extern volatile unsigned char SSPMSK @ 0xF77;
[; ;pic18f26k20.h: 281: extern volatile bit MSK0 @ ((unsigned)&SSPMSK*8)+0;
[; ;pic18f26k20.h: 282: extern volatile bit MSK1 @ ((unsigned)&SSPMSK*8)+1;
[; ;pic18f26k20.h: 283: extern volatile bit MSK2 @ ((unsigned)&SSPMSK*8)+2;
[; ;pic18f26k20.h: 284: extern volatile bit MSK3 @ ((unsigned)&SSPMSK*8)+3;
[; ;pic18f26k20.h: 285: extern volatile bit MSK4 @ ((unsigned)&SSPMSK*8)+4;
[; ;pic18f26k20.h: 286: extern volatile bit MSK5 @ ((unsigned)&SSPMSK*8)+5;
[; ;pic18f26k20.h: 287: extern volatile bit MSK6 @ ((unsigned)&SSPMSK*8)+6;
[; ;pic18f26k20.h: 288: extern volatile bit MSK7 @ ((unsigned)&SSPMSK*8)+7;
[; ;pic18f26k20.h: 289: extern union {
[; ;pic18f26k20.h: 290: struct {
[; ;pic18f26k20.h: 291: volatile unsigned MSK0 : 1;
[; ;pic18f26k20.h: 292: volatile unsigned MSK1 : 1;
[; ;pic18f26k20.h: 293: volatile unsigned MSK2 : 1;
[; ;pic18f26k20.h: 294: volatile unsigned MSK3 : 1;
[; ;pic18f26k20.h: 295: volatile unsigned MSK4 : 1;
[; ;pic18f26k20.h: 296: volatile unsigned MSK5 : 1;
[; ;pic18f26k20.h: 297: volatile unsigned MSK6 : 1;
[; ;pic18f26k20.h: 298: volatile unsigned MSK7 : 1;
[; ;pic18f26k20.h: 299: };
[; ;pic18f26k20.h: 300: } SSPMSKbits @ 0xF77;
[; ;pic18f26k20.h: 303: extern volatile unsigned char SLRCON @ 0xF78;
[; ;pic18f26k20.h: 305: extern volatile bit SLRA @ ((unsigned)&SLRCON*8)+0;
[; ;pic18f26k20.h: 306: extern volatile bit SLRB @ ((unsigned)&SLRCON*8)+1;
[; ;pic18f26k20.h: 307: extern volatile bit SLRC @ ((unsigned)&SLRCON*8)+2;
[; ;pic18f26k20.h: 308: extern union {
[; ;pic18f26k20.h: 309: struct {
[; ;pic18f26k20.h: 310: volatile unsigned SLRA : 1;
[; ;pic18f26k20.h: 311: volatile unsigned SLRB : 1;
[; ;pic18f26k20.h: 312: volatile unsigned SLRC : 1;
[; ;pic18f26k20.h: 313: };
[; ;pic18f26k20.h: 314: } SLRCONbits @ 0xF78;
[; ;pic18f26k20.h: 317: extern volatile unsigned char CM2CON1 @ 0xF79;
[; ;pic18f26k20.h: 319: extern volatile bit C2RSEL @ ((unsigned)&CM2CON1*8)+4;
[; ;pic18f26k20.h: 320: extern volatile bit C1RSEL @ ((unsigned)&CM2CON1*8)+5;
[; ;pic18f26k20.h: 321: extern volatile bit MC2OUT @ ((unsigned)&CM2CON1*8)+6;
[; ;pic18f26k20.h: 322: extern volatile bit MC1OUT @ ((unsigned)&CM2CON1*8)+7;
[; ;pic18f26k20.h: 323: extern union {
[; ;pic18f26k20.h: 324: struct {
[; ;pic18f26k20.h: 325: volatile unsigned : 4;
[; ;pic18f26k20.h: 326: volatile unsigned C2RSEL : 1;
[; ;pic18f26k20.h: 327: volatile unsigned C1RSEL : 1;
[; ;pic18f26k20.h: 328: volatile unsigned MC2OUT : 1;
[; ;pic18f26k20.h: 329: volatile unsigned MC1OUT : 1;
[; ;pic18f26k20.h: 330: };
[; ;pic18f26k20.h: 331: } CM2CON1bits @ 0xF79;
[; ;pic18f26k20.h: 334: extern volatile unsigned char CM2CON0 @ 0xF7A;
[; ;pic18f26k20.h: 336: extern volatile bit C2R @ ((unsigned)&CM2CON0*8)+2;
[; ;pic18f26k20.h: 337: extern volatile bit C2SP @ ((unsigned)&CM2CON0*8)+3;
[; ;pic18f26k20.h: 338: extern volatile bit C2POL @ ((unsigned)&CM2CON0*8)+4;
[; ;pic18f26k20.h: 339: extern volatile bit C2OE @ ((unsigned)&CM2CON0*8)+5;
[; ;pic18f26k20.h: 341: extern volatile bit C2ON @ ((unsigned)&CM2CON0*8)+7;
[; ;pic18f26k20.h: 342: extern volatile bit C2CH0 @ ((unsigned)&CM2CON0*8)+0;
[; ;pic18f26k20.h: 343: extern volatile bit C2CH1 @ ((unsigned)&CM2CON0*8)+1;
[; ;pic18f26k20.h: 344: extern union {
[; ;pic18f26k20.h: 345: struct {
[; ;pic18f26k20.h: 346: volatile unsigned C2CH : 2;
[; ;pic18f26k20.h: 347: volatile unsigned C2R : 1;
[; ;pic18f26k20.h: 348: volatile unsigned C2SP : 1;
[; ;pic18f26k20.h: 349: volatile unsigned C2POL : 1;
[; ;pic18f26k20.h: 350: volatile unsigned C2OE : 1;
[; ;pic18f26k20.h: 351: volatile unsigned C2OUT : 1;
[; ;pic18f26k20.h: 352: volatile unsigned C2ON : 1;
[; ;pic18f26k20.h: 353: };
[; ;pic18f26k20.h: 354: struct {
[; ;pic18f26k20.h: 355: volatile unsigned C2CH0 : 1;
[; ;pic18f26k20.h: 356: volatile unsigned C2CH1 : 1;
[; ;pic18f26k20.h: 357: };
[; ;pic18f26k20.h: 358: } CM2CON0bits @ 0xF7A;
[; ;pic18f26k20.h: 361: extern volatile unsigned char CM1CON0 @ 0xF7B;
[; ;pic18f26k20.h: 363: extern volatile bit C1R @ ((unsigned)&CM1CON0*8)+2;
[; ;pic18f26k20.h: 364: extern volatile bit C1SP @ ((unsigned)&CM1CON0*8)+3;
[; ;pic18f26k20.h: 365: extern volatile bit C1POL @ ((unsigned)&CM1CON0*8)+4;
[; ;pic18f26k20.h: 366: extern volatile bit C1OE @ ((unsigned)&CM1CON0*8)+5;
[; ;pic18f26k20.h: 368: extern volatile bit C1ON @ ((unsigned)&CM1CON0*8)+7;
[; ;pic18f26k20.h: 369: extern volatile bit C1CH0 @ ((unsigned)&CM1CON0*8)+0;
[; ;pic18f26k20.h: 370: extern volatile bit C1CH1 @ ((unsigned)&CM1CON0*8)+1;
[; ;pic18f26k20.h: 371: extern union {
[; ;pic18f26k20.h: 372: struct {
[; ;pic18f26k20.h: 373: volatile unsigned C1CH : 2;
[; ;pic18f26k20.h: 374: volatile unsigned C1R : 1;
[; ;pic18f26k20.h: 375: volatile unsigned C1SP : 1;
[; ;pic18f26k20.h: 376: volatile unsigned C1POL : 1;
[; ;pic18f26k20.h: 377: volatile unsigned C1OE : 1;
[; ;pic18f26k20.h: 378: volatile unsigned C1OUT : 1;
[; ;pic18f26k20.h: 379: volatile unsigned C1ON : 1;
[; ;pic18f26k20.h: 380: };
[; ;pic18f26k20.h: 381: struct {
[; ;pic18f26k20.h: 382: volatile unsigned C1CH0 : 1;
[; ;pic18f26k20.h: 383: volatile unsigned C1CH1 : 1;
[; ;pic18f26k20.h: 384: };
[; ;pic18f26k20.h: 385: } CM1CON0bits @ 0xF7B;
[; ;pic18f26k20.h: 388: extern volatile unsigned char WPUB @ 0xF7C;
[; ;pic18f26k20.h: 390: extern volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
[; ;pic18f26k20.h: 391: extern volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
[; ;pic18f26k20.h: 392: extern volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
[; ;pic18f26k20.h: 393: extern volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
[; ;pic18f26k20.h: 394: extern volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
[; ;pic18f26k20.h: 395: extern volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
[; ;pic18f26k20.h: 396: extern volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
[; ;pic18f26k20.h: 397: extern volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
[; ;pic18f26k20.h: 398: extern union {
[; ;pic18f26k20.h: 399: struct {
[; ;pic18f26k20.h: 400: volatile unsigned WPUB0 : 1;
[; ;pic18f26k20.h: 401: volatile unsigned WPUB1 : 1;
[; ;pic18f26k20.h: 402: volatile unsigned WPUB2 : 1;
[; ;pic18f26k20.h: 403: volatile unsigned WPUB3 : 1;
[; ;pic18f26k20.h: 404: volatile unsigned WPUB4 : 1;
[; ;pic18f26k20.h: 405: volatile unsigned WPUB5 : 1;
[; ;pic18f26k20.h: 406: volatile unsigned WPUB6 : 1;
[; ;pic18f26k20.h: 407: volatile unsigned WPUB7 : 1;
[; ;pic18f26k20.h: 408: };
[; ;pic18f26k20.h: 409: } WPUBbits @ 0xF7C;
[; ;pic18f26k20.h: 412: extern volatile unsigned char IOCB @ 0xF7D;
[; ;pic18f26k20.h: 414: extern volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
[; ;pic18f26k20.h: 415: extern volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
[; ;pic18f26k20.h: 416: extern volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
[; ;pic18f26k20.h: 417: extern volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
[; ;pic18f26k20.h: 418: extern union {
[; ;pic18f26k20.h: 419: struct {
[; ;pic18f26k20.h: 420: volatile unsigned : 4;
[; ;pic18f26k20.h: 421: volatile unsigned IOCB4 : 1;
[; ;pic18f26k20.h: 422: volatile unsigned IOCB5 : 1;
[; ;pic18f26k20.h: 423: volatile unsigned IOCB6 : 1;
[; ;pic18f26k20.h: 424: volatile unsigned IOCB7 : 1;
[; ;pic18f26k20.h: 425: };
[; ;pic18f26k20.h: 426: } IOCBbits @ 0xF7D;
[; ;pic18f26k20.h: 429: extern volatile unsigned char ANSEL @ 0xF7E;
[; ;pic18f26k20.h: 431: extern volatile bit ANS0 @ ((unsigned)&ANSEL*8)+0;
[; ;pic18f26k20.h: 432: extern volatile bit ANS1 @ ((unsigned)&ANSEL*8)+1;
[; ;pic18f26k20.h: 433: extern volatile bit ANS2 @ ((unsigned)&ANSEL*8)+2;
[; ;pic18f26k20.h: 434: extern volatile bit ANS3 @ ((unsigned)&ANSEL*8)+3;
[; ;pic18f26k20.h: 435: extern volatile bit ANS4 @ ((unsigned)&ANSEL*8)+4;
[; ;pic18f26k20.h: 436: extern union {
[; ;pic18f26k20.h: 437: struct {
[; ;pic18f26k20.h: 438: volatile unsigned ANS0 : 1;
[; ;pic18f26k20.h: 439: volatile unsigned ANS1 : 1;
[; ;pic18f26k20.h: 440: volatile unsigned ANS2 : 1;
[; ;pic18f26k20.h: 441: volatile unsigned ANS3 : 1;
[; ;pic18f26k20.h: 442: volatile unsigned ANS4 : 1;
[; ;pic18f26k20.h: 443: };
[; ;pic18f26k20.h: 444: } ANSELbits @ 0xF7E;
[; ;pic18f26k20.h: 447: extern volatile unsigned char ANSELH @ 0xF7F;
[; ;pic18f26k20.h: 449: extern volatile bit ANS8 @ ((unsigned)&ANSELH*8)+0;
[; ;pic18f26k20.h: 450: extern volatile bit ANS9 @ ((unsigned)&ANSELH*8)+1;
[; ;pic18f26k20.h: 451: extern volatile bit ANS10 @ ((unsigned)&ANSELH*8)+2;
[; ;pic18f26k20.h: 452: extern volatile bit ANS11 @ ((unsigned)&ANSELH*8)+3;
[; ;pic18f26k20.h: 453: extern volatile bit ANS12 @ ((unsigned)&ANSELH*8)+4;
[; ;pic18f26k20.h: 454: extern union {
[; ;pic18f26k20.h: 455: struct {
[; ;pic18f26k20.h: 456: volatile unsigned ANS8 : 1;
[; ;pic18f26k20.h: 457: volatile unsigned ANS9 : 1;
[; ;pic18f26k20.h: 458: volatile unsigned ANS10 : 1;
[; ;pic18f26k20.h: 459: volatile unsigned ANS11 : 1;
[; ;pic18f26k20.h: 460: volatile unsigned ANS12 : 1;
[; ;pic18f26k20.h: 461: };
[; ;pic18f26k20.h: 462: } ANSELHbits @ 0xF7F;
[; ;pic18f26k20.h: 465: extern volatile unsigned char PORTA @ 0xF80;
[; ;pic18f26k20.h: 475: extern volatile bit AN0 @ ((unsigned)&PORTA*8)+0;
[; ;pic18f26k20.h: 476: extern volatile bit AN1 @ ((unsigned)&PORTA*8)+1;
[; ;pic18f26k20.h: 477: extern volatile bit AN2 @ ((unsigned)&PORTA*8)+2;
[; ;pic18f26k20.h: 478: extern volatile bit AN3 @ ((unsigned)&PORTA*8)+3;
[; ;pic18f26k20.h: 479: extern volatile bit AN4 @ ((unsigned)&PORTA*8)+5;
[; ;pic18f26k20.h: 480: extern volatile bit C12IN0M @ ((unsigned)&PORTA*8)+0;
[; ;pic18f26k20.h: 481: extern volatile bit C12IN1M @ ((unsigned)&PORTA*8)+1;
[; ;pic18f26k20.h: 482: extern volatile bit C2INP @ ((unsigned)&PORTA*8)+2;
[; ;pic18f26k20.h: 483: extern volatile bit C1INP @ ((unsigned)&PORTA*8)+3;
[; ;pic18f26k20.h: 486: extern volatile bit C12IN0N @ ((unsigned)&PORTA*8)+0;
[; ;pic18f26k20.h: 487: extern volatile bit C12IN1N @ ((unsigned)&PORTA*8)+1;
[; ;pic18f26k20.h: 488: extern volatile bit VREFM @ ((unsigned)&PORTA*8)+2;
[; ;pic18f26k20.h: 489: extern volatile bit VREFP @ ((unsigned)&PORTA*8)+3;
[; ;pic18f26k20.h: 490: extern volatile bit T0CKI @ ((unsigned)&PORTA*8)+4;
[; ;pic18f26k20.h: 491: extern volatile bit SS @ ((unsigned)&PORTA*8)+5;
[; ;pic18f26k20.h: 492: extern volatile bit VREFN @ ((unsigned)&PORTA*8)+2;
[; ;pic18f26k20.h: 493: extern volatile bit nSS @ ((unsigned)&PORTA*8)+5;
[; ;pic18f26k20.h: 494: extern volatile bit CVREF @ ((unsigned)&PORTA*8)+2;
[; ;pic18f26k20.h: 495: extern volatile bit LVDIN @ ((unsigned)&PORTA*8)+5;
[; ;pic18f26k20.h: 496: extern volatile bit HLVDIN @ ((unsigned)&PORTA*8)+5;
[; ;pic18f26k20.h: 497: extern union {
[; ;pic18f26k20.h: 498: struct {
[; ;pic18f26k20.h: 499: volatile unsigned RA0 : 1;
[; ;pic18f26k20.h: 500: volatile unsigned RA1 : 1;
[; ;pic18f26k20.h: 501: volatile unsigned RA2 : 1;
[; ;pic18f26k20.h: 502: volatile unsigned RA3 : 1;
[; ;pic18f26k20.h: 503: volatile unsigned RA4 : 1;
[; ;pic18f26k20.h: 504: volatile unsigned RA5 : 1;
[; ;pic18f26k20.h: 505: volatile unsigned RA6 : 1;
[; ;pic18f26k20.h: 506: volatile unsigned RA7 : 1;
[; ;pic18f26k20.h: 507: };
[; ;pic18f26k20.h: 508: struct {
[; ;pic18f26k20.h: 509: volatile unsigned AN0 : 1;
[; ;pic18f26k20.h: 510: volatile unsigned AN1 : 1;
[; ;pic18f26k20.h: 511: volatile unsigned AN2 : 1;
[; ;pic18f26k20.h: 512: volatile unsigned AN3 : 1;
[; ;pic18f26k20.h: 513: volatile unsigned : 1;
[; ;pic18f26k20.h: 514: volatile unsigned AN4 : 1;
[; ;pic18f26k20.h: 515: };
[; ;pic18f26k20.h: 516: struct {
[; ;pic18f26k20.h: 517: volatile unsigned C12IN0M : 1;
[; ;pic18f26k20.h: 518: volatile unsigned C12IN1M : 1;
[; ;pic18f26k20.h: 519: volatile unsigned C2INP : 1;
[; ;pic18f26k20.h: 520: volatile unsigned C1INP : 1;
[; ;pic18f26k20.h: 521: volatile unsigned C1OUT : 1;
[; ;pic18f26k20.h: 522: volatile unsigned C2OUT : 1;
[; ;pic18f26k20.h: 523: };
[; ;pic18f26k20.h: 524: struct {
[; ;pic18f26k20.h: 525: volatile unsigned C12IN0N : 1;
[; ;pic18f26k20.h: 526: volatile unsigned C12IN1N : 1;
[; ;pic18f26k20.h: 527: volatile unsigned VREFM : 1;
[; ;pic18f26k20.h: 528: volatile unsigned VREFP : 1;
[; ;pic18f26k20.h: 529: volatile unsigned T0CKI : 1;
[; ;pic18f26k20.h: 530: volatile unsigned SS : 1;
[; ;pic18f26k20.h: 531: };
[; ;pic18f26k20.h: 532: struct {
[; ;pic18f26k20.h: 533: volatile unsigned : 2;
[; ;pic18f26k20.h: 534: volatile unsigned VREFN : 1;
[; ;pic18f26k20.h: 535: volatile unsigned : 2;
[; ;pic18f26k20.h: 536: volatile unsigned nSS : 1;
[; ;pic18f26k20.h: 537: };
[; ;pic18f26k20.h: 538: struct {
[; ;pic18f26k20.h: 539: volatile unsigned : 2;
[; ;pic18f26k20.h: 540: volatile unsigned CVREF : 1;
[; ;pic18f26k20.h: 541: volatile unsigned : 1;
[; ;pic18f26k20.h: 542: volatile unsigned : 1;
[; ;pic18f26k20.h: 543: volatile unsigned LVDIN : 1;
[; ;pic18f26k20.h: 544: };
[; ;pic18f26k20.h: 545: struct {
[; ;pic18f26k20.h: 546: volatile unsigned : 4;
[; ;pic18f26k20.h: 547: volatile unsigned : 1;
[; ;pic18f26k20.h: 548: volatile unsigned HLVDIN : 1;
[; ;pic18f26k20.h: 549: };
[; ;pic18f26k20.h: 550: } PORTAbits @ 0xF80;
[; ;pic18f26k20.h: 553: extern volatile unsigned char PORTB @ 0xF81;
[; ;pic18f26k20.h: 563: extern volatile bit INT0 @ ((unsigned)&PORTB*8)+0;
[; ;pic18f26k20.h: 564: extern volatile bit INT1 @ ((unsigned)&PORTB*8)+1;
[; ;pic18f26k20.h: 565: extern volatile bit INT2 @ ((unsigned)&PORTB*8)+2;
[; ;pic18f26k20.h: 567: extern volatile bit KBI0 @ ((unsigned)&PORTB*8)+4;
[; ;pic18f26k20.h: 568: extern volatile bit KBI1 @ ((unsigned)&PORTB*8)+5;
[; ;pic18f26k20.h: 569: extern volatile bit KBI2 @ ((unsigned)&PORTB*8)+6;
[; ;pic18f26k20.h: 570: extern volatile bit KBI3 @ ((unsigned)&PORTB*8)+7;
[; ;pic18f26k20.h: 571: extern volatile bit AN12 @ ((unsigned)&PORTB*8)+0;
[; ;pic18f26k20.h: 572: extern volatile bit AN10 @ ((unsigned)&PORTB*8)+1;
[; ;pic18f26k20.h: 573: extern volatile bit AN8 @ ((unsigned)&PORTB*8)+2;
[; ;pic18f26k20.h: 574: extern volatile bit AN9 @ ((unsigned)&PORTB*8)+3;
[; ;pic18f26k20.h: 575: extern volatile bit AN11 @ ((unsigned)&PORTB*8)+4;
[; ;pic18f26k20.h: 576: extern volatile bit PGM @ ((unsigned)&PORTB*8)+5;
[; ;pic18f26k20.h: 577: extern volatile bit PGC @ ((unsigned)&PORTB*8)+6;
[; ;pic18f26k20.h: 578: extern volatile bit PGD @ ((unsigned)&PORTB*8)+7;
[; ;pic18f26k20.h: 579: extern volatile bit FLT0 @ ((unsigned)&PORTB*8)+0;
[; ;pic18f26k20.h: 580: extern volatile bit C12IN3M @ ((unsigned)&PORTB*8)+1;
[; ;pic18f26k20.h: 581: extern volatile bit C12IN2M @ ((unsigned)&PORTB*8)+3;
[; ;pic18f26k20.h: 582: extern volatile bit C12IN3N @ ((unsigned)&PORTB*8)+1;
[; ;pic18f26k20.h: 583: extern volatile bit C12IN2N @ ((unsigned)&PORTB*8)+3;
[; ;pic18f26k20.h: 584: extern volatile bit P1C @ ((unsigned)&PORTB*8)+1;
[; ;pic18f26k20.h: 585: extern volatile bit P1B @ ((unsigned)&PORTB*8)+2;
[; ;pic18f26k20.h: 586: extern volatile bit P1D @ ((unsigned)&PORTB*8)+4;
[; ;pic18f26k20.h: 587: extern union {
[; ;pic18f26k20.h: 588: struct {
[; ;pic18f26k20.h: 589: volatile unsigned RB0 : 1;
[; ;pic18f26k20.h: 590: volatile unsigned RB1 : 1;
[; ;pic18f26k20.h: 591: volatile unsigned RB2 : 1;
[; ;pic18f26k20.h: 592: volatile unsigned RB3 : 1;
[; ;pic18f26k20.h: 593: volatile unsigned RB4 : 1;
[; ;pic18f26k20.h: 594: volatile unsigned RB5 : 1;
[; ;pic18f26k20.h: 595: volatile unsigned RB6 : 1;
[; ;pic18f26k20.h: 596: volatile unsigned RB7 : 1;
[; ;pic18f26k20.h: 597: };
[; ;pic18f26k20.h: 598: struct {
[; ;pic18f26k20.h: 599: volatile unsigned INT0 : 1;
[; ;pic18f26k20.h: 600: volatile unsigned INT1 : 1;
[; ;pic18f26k20.h: 601: volatile unsigned INT2 : 1;
[; ;pic18f26k20.h: 602: volatile unsigned CCP2 : 1;
[; ;pic18f26k20.h: 603: volatile unsigned KBI0 : 1;
[; ;pic18f26k20.h: 604: volatile unsigned KBI1 : 1;
[; ;pic18f26k20.h: 605: volatile unsigned KBI2 : 1;
[; ;pic18f26k20.h: 606: volatile unsigned KBI3 : 1;
[; ;pic18f26k20.h: 607: };
[; ;pic18f26k20.h: 608: struct {
[; ;pic18f26k20.h: 609: volatile unsigned AN12 : 1;
[; ;pic18f26k20.h: 610: volatile unsigned AN10 : 1;
[; ;pic18f26k20.h: 611: volatile unsigned AN8 : 1;
[; ;pic18f26k20.h: 612: volatile unsigned AN9 : 1;
[; ;pic18f26k20.h: 613: volatile unsigned AN11 : 1;
[; ;pic18f26k20.h: 614: volatile unsigned PGM : 1;
[; ;pic18f26k20.h: 615: volatile unsigned PGC : 1;
[; ;pic18f26k20.h: 616: volatile unsigned PGD : 1;
[; ;pic18f26k20.h: 617: };
[; ;pic18f26k20.h: 618: struct {
[; ;pic18f26k20.h: 619: volatile unsigned FLT0 : 1;
[; ;pic18f26k20.h: 620: volatile unsigned C12IN3M : 1;
[; ;pic18f26k20.h: 621: volatile unsigned : 1;
[; ;pic18f26k20.h: 622: volatile unsigned C12IN2M : 1;
[; ;pic18f26k20.h: 623: };
[; ;pic18f26k20.h: 624: struct {
[; ;pic18f26k20.h: 625: volatile unsigned : 1;
[; ;pic18f26k20.h: 626: volatile unsigned C12IN3N : 1;
[; ;pic18f26k20.h: 627: volatile unsigned : 1;
[; ;pic18f26k20.h: 628: volatile unsigned C12IN2N : 1;
[; ;pic18f26k20.h: 629: };
[; ;pic18f26k20.h: 630: struct {
[; ;pic18f26k20.h: 631: volatile unsigned : 1;
[; ;pic18f26k20.h: 632: volatile unsigned P1C : 1;
[; ;pic18f26k20.h: 633: volatile unsigned P1B : 1;
[; ;pic18f26k20.h: 634: volatile unsigned : 1;
[; ;pic18f26k20.h: 635: volatile unsigned P1D : 1;
[; ;pic18f26k20.h: 636: };
[; ;pic18f26k20.h: 637: } PORTBbits @ 0xF81;
[; ;pic18f26k20.h: 640: extern volatile unsigned char PORTC @ 0xF82;
[; ;pic18f26k20.h: 650: extern volatile bit T1OSO @ ((unsigned)&PORTC*8)+0;
[; ;pic18f26k20.h: 651: extern volatile bit T1OSI @ ((unsigned)&PORTC*8)+1;
[; ;pic18f26k20.h: 652: extern volatile bit CCP1 @ ((unsigned)&PORTC*8)+2;
[; ;pic18f26k20.h: 653: extern volatile bit SCK @ ((unsigned)&PORTC*8)+3;
[; ;pic18f26k20.h: 654: extern volatile bit SDI @ ((unsigned)&PORTC*8)+4;
[; ;pic18f26k20.h: 655: extern volatile bit SDO @ ((unsigned)&PORTC*8)+5;
[; ;pic18f26k20.h: 656: extern volatile bit TX @ ((unsigned)&PORTC*8)+6;
[; ;pic18f26k20.h: 657: extern volatile bit RX @ ((unsigned)&PORTC*8)+7;
[; ;pic18f26k20.h: 658: extern volatile bit T13CKI @ ((unsigned)&PORTC*8)+0;
[; ;pic18f26k20.h: 660: extern volatile bit P1A @ ((unsigned)&PORTC*8)+2;
[; ;pic18f26k20.h: 661: extern volatile bit SCL @ ((unsigned)&PORTC*8)+3;
[; ;pic18f26k20.h: 662: extern volatile bit SDA @ ((unsigned)&PORTC*8)+4;
[; ;pic18f26k20.h: 663: extern volatile bit CK @ ((unsigned)&PORTC*8)+6;
[; ;pic18f26k20.h: 664: extern volatile bit DT @ ((unsigned)&PORTC*8)+7;
[; ;pic18f26k20.h: 665: extern volatile bit T1CKI @ ((unsigned)&PORTC*8)+0;
[; ;pic18f26k20.h: 666: extern volatile bit T3CKI @ ((unsigned)&PORTC*8)+0;
[; ;pic18f26k20.h: 667: extern union {
[; ;pic18f26k20.h: 668: struct {
[; ;pic18f26k20.h: 669: volatile unsigned RC0 : 1;
[; ;pic18f26k20.h: 670: volatile unsigned RC1 : 1;
[; ;pic18f26k20.h: 671: volatile unsigned RC2 : 1;
[; ;pic18f26k20.h: 672: volatile unsigned RC3 : 1;
[; ;pic18f26k20.h: 673: volatile unsigned RC4 : 1;
[; ;pic18f26k20.h: 674: volatile unsigned RC5 : 1;
[; ;pic18f26k20.h: 675: volatile unsigned RC6 : 1;
[; ;pic18f26k20.h: 676: volatile unsigned RC7 : 1;
[; ;pic18f26k20.h: 677: };
[; ;pic18f26k20.h: 678: struct {
[; ;pic18f26k20.h: 679: volatile unsigned T1OSO : 1;
[; ;pic18f26k20.h: 680: volatile unsigned T1OSI : 1;
[; ;pic18f26k20.h: 681: volatile unsigned CCP1 : 1;
[; ;pic18f26k20.h: 682: volatile unsigned SCK : 1;
[; ;pic18f26k20.h: 683: volatile unsigned SDI : 1;
[; ;pic18f26k20.h: 684: volatile unsigned SDO : 1;
[; ;pic18f26k20.h: 685: volatile unsigned TX : 1;
[; ;pic18f26k20.h: 686: volatile unsigned RX : 1;
[; ;pic18f26k20.h: 687: };
[; ;pic18f26k20.h: 688: struct {
[; ;pic18f26k20.h: 689: volatile unsigned T13CKI : 1;
[; ;pic18f26k20.h: 690: volatile unsigned CCP2 : 1;
[; ;pic18f26k20.h: 691: volatile unsigned P1A : 1;
[; ;pic18f26k20.h: 692: volatile unsigned SCL : 1;
[; ;pic18f26k20.h: 693: volatile unsigned SDA : 1;
[; ;pic18f26k20.h: 694: volatile unsigned : 1;
[; ;pic18f26k20.h: 695: volatile unsigned CK : 1;
[; ;pic18f26k20.h: 696: volatile unsigned DT : 1;
[; ;pic18f26k20.h: 697: };
[; ;pic18f26k20.h: 698: struct {
[; ;pic18f26k20.h: 699: volatile unsigned T1CKI : 1;
[; ;pic18f26k20.h: 700: };
[; ;pic18f26k20.h: 701: struct {
[; ;pic18f26k20.h: 702: volatile unsigned T3CKI : 1;
[; ;pic18f26k20.h: 703: };
[; ;pic18f26k20.h: 704: } PORTCbits @ 0xF82;
[; ;pic18f26k20.h: 707: extern volatile unsigned char PORTE @ 0xF84;
[; ;pic18f26k20.h: 709: extern volatile bit RE3 @ ((unsigned)&PORTE*8)+3;
[; ;pic18f26k20.h: 710: extern volatile bit MCLR @ ((unsigned)&PORTE*8)+3;
[; ;pic18f26k20.h: 711: extern volatile bit nMCLR @ ((unsigned)&PORTE*8)+3;
[; ;pic18f26k20.h: 712: extern volatile bit VPP @ ((unsigned)&PORTE*8)+3;
[; ;pic18f26k20.h: 713: extern union {
[; ;pic18f26k20.h: 714: struct {
[; ;pic18f26k20.h: 715: volatile unsigned : 3;
[; ;pic18f26k20.h: 716: volatile unsigned RE3 : 1;
[; ;pic18f26k20.h: 717: };
[; ;pic18f26k20.h: 718: struct {
[; ;pic18f26k20.h: 719: volatile unsigned : 3;
[; ;pic18f26k20.h: 720: volatile unsigned MCLR : 1;
[; ;pic18f26k20.h: 721: };
[; ;pic18f26k20.h: 722: struct {
[; ;pic18f26k20.h: 723: volatile unsigned : 3;
[; ;pic18f26k20.h: 724: volatile unsigned nMCLR : 1;
[; ;pic18f26k20.h: 725: };
[; ;pic18f26k20.h: 726: struct {
[; ;pic18f26k20.h: 727: volatile unsigned : 3;
[; ;pic18f26k20.h: 728: volatile unsigned VPP : 1;
[; ;pic18f26k20.h: 729: };
[; ;pic18f26k20.h: 730: } PORTEbits @ 0xF84;
[; ;pic18f26k20.h: 733: extern volatile unsigned char LATA @ 0xF89;
[; ;pic18f26k20.h: 735: extern volatile bit LATA0 @ ((unsigned)&LATA*8)+0;
[; ;pic18f26k20.h: 736: extern volatile bit LATA1 @ ((unsigned)&LATA*8)+1;
[; ;pic18f26k20.h: 737: extern volatile bit LATA2 @ ((unsigned)&LATA*8)+2;
[; ;pic18f26k20.h: 738: extern volatile bit LATA3 @ ((unsigned)&LATA*8)+3;
[; ;pic18f26k20.h: 739: extern volatile bit LATA4 @ ((unsigned)&LATA*8)+4;
[; ;pic18f26k20.h: 740: extern volatile bit LATA5 @ ((unsigned)&LATA*8)+5;
[; ;pic18f26k20.h: 741: extern volatile bit LATA6 @ ((unsigned)&LATA*8)+6;
[; ;pic18f26k20.h: 742: extern volatile bit LATA7 @ ((unsigned)&LATA*8)+7;
[; ;pic18f26k20.h: 743: extern union {
[; ;pic18f26k20.h: 744: struct {
[; ;pic18f26k20.h: 745: volatile unsigned LATA0 : 1;
[; ;pic18f26k20.h: 746: volatile unsigned LATA1 : 1;
[; ;pic18f26k20.h: 747: volatile unsigned LATA2 : 1;
[; ;pic18f26k20.h: 748: volatile unsigned LATA3 : 1;
[; ;pic18f26k20.h: 749: volatile unsigned LATA4 : 1;
[; ;pic18f26k20.h: 750: volatile unsigned LATA5 : 1;
[; ;pic18f26k20.h: 751: volatile unsigned LATA6 : 1;
[; ;pic18f26k20.h: 752: volatile unsigned LATA7 : 1;
[; ;pic18f26k20.h: 753: };
[; ;pic18f26k20.h: 754: } LATAbits @ 0xF89;
[; ;pic18f26k20.h: 757: extern volatile unsigned char LATB @ 0xF8A;
[; ;pic18f26k20.h: 759: extern volatile bit LATB0 @ ((unsigned)&LATB*8)+0;
[; ;pic18f26k20.h: 760: extern volatile bit LATB1 @ ((unsigned)&LATB*8)+1;
[; ;pic18f26k20.h: 761: extern volatile bit LATB2 @ ((unsigned)&LATB*8)+2;
[; ;pic18f26k20.h: 762: extern volatile bit LATB3 @ ((unsigned)&LATB*8)+3;
[; ;pic18f26k20.h: 763: extern volatile bit LATB4 @ ((unsigned)&LATB*8)+4;
[; ;pic18f26k20.h: 764: extern volatile bit LATB5 @ ((unsigned)&LATB*8)+5;
[; ;pic18f26k20.h: 765: extern volatile bit LATB6 @ ((unsigned)&LATB*8)+6;
[; ;pic18f26k20.h: 766: extern volatile bit LATB7 @ ((unsigned)&LATB*8)+7;
[; ;pic18f26k20.h: 767: extern union {
[; ;pic18f26k20.h: 768: struct {
[; ;pic18f26k20.h: 769: volatile unsigned LATB0 : 1;
[; ;pic18f26k20.h: 770: volatile unsigned LATB1 : 1;
[; ;pic18f26k20.h: 771: volatile unsigned LATB2 : 1;
[; ;pic18f26k20.h: 772: volatile unsigned LATB3 : 1;
[; ;pic18f26k20.h: 773: volatile unsigned LATB4 : 1;
[; ;pic18f26k20.h: 774: volatile unsigned LATB5 : 1;
[; ;pic18f26k20.h: 775: volatile unsigned LATB6 : 1;
[; ;pic18f26k20.h: 776: volatile unsigned LATB7 : 1;
[; ;pic18f26k20.h: 777: };
[; ;pic18f26k20.h: 778: } LATBbits @ 0xF8A;
[; ;pic18f26k20.h: 781: extern volatile unsigned char LATC @ 0xF8B;
[; ;pic18f26k20.h: 783: extern volatile bit LATC0 @ ((unsigned)&LATC*8)+0;
[; ;pic18f26k20.h: 784: extern volatile bit LATC1 @ ((unsigned)&LATC*8)+1;
[; ;pic18f26k20.h: 785: extern volatile bit LATC2 @ ((unsigned)&LATC*8)+2;
[; ;pic18f26k20.h: 786: extern volatile bit LATC3 @ ((unsigned)&LATC*8)+3;
[; ;pic18f26k20.h: 787: extern volatile bit LATC4 @ ((unsigned)&LATC*8)+4;
[; ;pic18f26k20.h: 788: extern volatile bit LATC5 @ ((unsigned)&LATC*8)+5;
[; ;pic18f26k20.h: 789: extern volatile bit LATC6 @ ((unsigned)&LATC*8)+6;
[; ;pic18f26k20.h: 790: extern volatile bit LATC7 @ ((unsigned)&LATC*8)+7;
[; ;pic18f26k20.h: 791: extern union {
[; ;pic18f26k20.h: 792: struct {
[; ;pic18f26k20.h: 793: volatile unsigned LATC0 : 1;
[; ;pic18f26k20.h: 794: volatile unsigned LATC1 : 1;
[; ;pic18f26k20.h: 795: volatile unsigned LATC2 : 1;
[; ;pic18f26k20.h: 796: volatile unsigned LATC3 : 1;
[; ;pic18f26k20.h: 797: volatile unsigned LATC4 : 1;
[; ;pic18f26k20.h: 798: volatile unsigned LATC5 : 1;
[; ;pic18f26k20.h: 799: volatile unsigned LATC6 : 1;
[; ;pic18f26k20.h: 800: volatile unsigned LATC7 : 1;
[; ;pic18f26k20.h: 801: };
[; ;pic18f26k20.h: 802: } LATCbits @ 0xF8B;
[; ;pic18f26k20.h: 805: extern volatile unsigned char TRISA @ 0xF92;
[; ;pic18f26k20.h: 806: extern volatile unsigned char DDRA @ 0xF92;
[; ;pic18f26k20.h: 808: extern volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
[; ;pic18f26k20.h: 809: extern volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
[; ;pic18f26k20.h: 810: extern volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
[; ;pic18f26k20.h: 811: extern volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
[; ;pic18f26k20.h: 812: extern volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
[; ;pic18f26k20.h: 813: extern volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
[; ;pic18f26k20.h: 814: extern volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
[; ;pic18f26k20.h: 815: extern volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;
[; ;pic18f26k20.h: 824: extern union {
[; ;pic18f26k20.h: 825: struct {
[; ;pic18f26k20.h: 826: volatile unsigned TRISA0 : 1;
[; ;pic18f26k20.h: 827: volatile unsigned TRISA1 : 1;
[; ;pic18f26k20.h: 828: volatile unsigned TRISA2 : 1;
[; ;pic18f26k20.h: 829: volatile unsigned TRISA3 : 1;
[; ;pic18f26k20.h: 830: volatile unsigned TRISA4 : 1;
[; ;pic18f26k20.h: 831: volatile unsigned TRISA5 : 1;
[; ;pic18f26k20.h: 832: volatile unsigned TRISA6 : 1;
[; ;pic18f26k20.h: 833: volatile unsigned TRISA7 : 1;
[; ;pic18f26k20.h: 834: };
[; ;pic18f26k20.h: 835: struct {
[; ;pic18f26k20.h: 836: volatile unsigned RA0 : 1;
[; ;pic18f26k20.h: 837: volatile unsigned RA1 : 1;
[; ;pic18f26k20.h: 838: volatile unsigned RA2 : 1;
[; ;pic18f26k20.h: 839: volatile unsigned RA3 : 1;
[; ;pic18f26k20.h: 840: volatile unsigned RA4 : 1;
[; ;pic18f26k20.h: 841: volatile unsigned RA5 : 1;
[; ;pic18f26k20.h: 842: volatile unsigned RA6 : 1;
[; ;pic18f26k20.h: 843: volatile unsigned RA7 : 1;
[; ;pic18f26k20.h: 844: };
[; ;pic18f26k20.h: 845: } TRISAbits @ 0xF92;
[; ;pic18f26k20.h: 848: extern volatile unsigned char TRISB @ 0xF93;
[; ;pic18f26k20.h: 849: extern volatile unsigned char DDRB @ 0xF93;
[; ;pic18f26k20.h: 851: extern volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
[; ;pic18f26k20.h: 852: extern volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
[; ;pic18f26k20.h: 853: extern volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
[; ;pic18f26k20.h: 854: extern volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
[; ;pic18f26k20.h: 855: extern volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
[; ;pic18f26k20.h: 856: extern volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
[; ;pic18f26k20.h: 857: extern volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
[; ;pic18f26k20.h: 858: extern volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
[; ;pic18f26k20.h: 867: extern union {
[; ;pic18f26k20.h: 868: struct {
[; ;pic18f26k20.h: 869: volatile unsigned TRISB0 : 1;
[; ;pic18f26k20.h: 870: volatile unsigned TRISB1 : 1;
[; ;pic18f26k20.h: 871: volatile unsigned TRISB2 : 1;
[; ;pic18f26k20.h: 872: volatile unsigned TRISB3 : 1;
[; ;pic18f26k20.h: 873: volatile unsigned TRISB4 : 1;
[; ;pic18f26k20.h: 874: volatile unsigned TRISB5 : 1;
[; ;pic18f26k20.h: 875: volatile unsigned TRISB6 : 1;
[; ;pic18f26k20.h: 876: volatile unsigned TRISB7 : 1;
[; ;pic18f26k20.h: 877: };
[; ;pic18f26k20.h: 878: struct {
[; ;pic18f26k20.h: 879: volatile unsigned RB0 : 1;
[; ;pic18f26k20.h: 880: volatile unsigned RB1 : 1;
[; ;pic18f26k20.h: 881: volatile unsigned RB2 : 1;
[; ;pic18f26k20.h: 882: volatile unsigned RB3 : 1;
[; ;pic18f26k20.h: 883: volatile unsigned RB4 : 1;
[; ;pic18f26k20.h: 884: volatile unsigned RB5 : 1;
[; ;pic18f26k20.h: 885: volatile unsigned RB6 : 1;
[; ;pic18f26k20.h: 886: volatile unsigned RB7 : 1;
[; ;pic18f26k20.h: 887: };
[; ;pic18f26k20.h: 888: } TRISBbits @ 0xF93;
[; ;pic18f26k20.h: 891: extern volatile unsigned char TRISC @ 0xF94;
[; ;pic18f26k20.h: 892: extern volatile unsigned char DDRC @ 0xF94;
[; ;pic18f26k20.h: 894: extern volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
[; ;pic18f26k20.h: 895: extern volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
[; ;pic18f26k20.h: 896: extern volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
[; ;pic18f26k20.h: 897: extern volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
[; ;pic18f26k20.h: 898: extern volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
[; ;pic18f26k20.h: 899: extern volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;
[; ;pic18f26k20.h: 900: extern volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
[; ;pic18f26k20.h: 901: extern volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;
[; ;pic18f26k20.h: 910: extern union {
[; ;pic18f26k20.h: 911: struct {
[; ;pic18f26k20.h: 912: volatile unsigned TRISC0 : 1;
[; ;pic18f26k20.h: 913: volatile unsigned TRISC1 : 1;
[; ;pic18f26k20.h: 914: volatile unsigned TRISC2 : 1;
[; ;pic18f26k20.h: 915: volatile unsigned TRISC3 : 1;
[; ;pic18f26k20.h: 916: volatile unsigned TRISC4 : 1;
[; ;pic18f26k20.h: 917: volatile unsigned TRISC5 : 1;
[; ;pic18f26k20.h: 918: volatile unsigned TRISC6 : 1;
[; ;pic18f26k20.h: 919: volatile unsigned TRISC7 : 1;
[; ;pic18f26k20.h: 920: };
[; ;pic18f26k20.h: 921: struct {
[; ;pic18f26k20.h: 922: volatile unsigned RC0 : 1;
[; ;pic18f26k20.h: 923: volatile unsigned RC1 : 1;
[; ;pic18f26k20.h: 924: volatile unsigned RC2 : 1;
[; ;pic18f26k20.h: 925: volatile unsigned RC3 : 1;
[; ;pic18f26k20.h: 926: volatile unsigned RC4 : 1;
[; ;pic18f26k20.h: 927: volatile unsigned RC5 : 1;
[; ;pic18f26k20.h: 928: volatile unsigned RC6 : 1;
[; ;pic18f26k20.h: 929: volatile unsigned RC7 : 1;
[; ;pic18f26k20.h: 930: };
[; ;pic18f26k20.h: 931: } TRISCbits @ 0xF94;
[; ;pic18f26k20.h: 934: extern volatile unsigned char OSCTUNE @ 0xF9B;
[; ;pic18f26k20.h: 936: extern volatile bit PLLEN @ ((unsigned)&OSCTUNE*8)+6;
[; ;pic18f26k20.h: 937: extern volatile bit INTSRC @ ((unsigned)&OSCTUNE*8)+7;
[; ;pic18f26k20.h: 938: extern volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
[; ;pic18f26k20.h: 939: extern volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
[; ;pic18f26k20.h: 940: extern volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
[; ;pic18f26k20.h: 941: extern volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
[; ;pic18f26k20.h: 942: extern volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;
[; ;pic18f26k20.h: 943: extern volatile bit TUN5 @ ((unsigned)&OSCTUNE*8)+5;
[; ;pic18f26k20.h: 944: extern union {
[; ;pic18f26k20.h: 945: struct {
[; ;pic18f26k20.h: 946: volatile unsigned TUN : 6;
[; ;pic18f26k20.h: 947: volatile unsigned PLLEN : 1;
[; ;pic18f26k20.h: 948: volatile unsigned INTSRC : 1;
[; ;pic18f26k20.h: 949: };
[; ;pic18f26k20.h: 950: struct {
[; ;pic18f26k20.h: 951: volatile unsigned TUN0 : 1;
[; ;pic18f26k20.h: 952: volatile unsigned TUN1 : 1;
[; ;pic18f26k20.h: 953: volatile unsigned TUN2 : 1;
[; ;pic18f26k20.h: 954: volatile unsigned TUN3 : 1;
[; ;pic18f26k20.h: 955: volatile unsigned TUN4 : 1;
[; ;pic18f26k20.h: 956: volatile unsigned TUN5 : 1;
[; ;pic18f26k20.h: 957: };
[; ;pic18f26k20.h: 958: } OSCTUNEbits @ 0xF9B;
[; ;pic18f26k20.h: 961: extern volatile unsigned char PIE1 @ 0xF9D;
[; ;pic18f26k20.h: 963: extern volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
[; ;pic18f26k20.h: 964: extern volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
[; ;pic18f26k20.h: 965: extern volatile bit CCP1IE @ ((unsigned)&PIE1*8)+2;
[; ;pic18f26k20.h: 966: extern volatile bit SSPIE @ ((unsigned)&PIE1*8)+3;
[; ;pic18f26k20.h: 967: extern volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
[; ;pic18f26k20.h: 968: extern volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
[; ;pic18f26k20.h: 969: extern volatile bit ADIE @ ((unsigned)&PIE1*8)+6;
[; ;pic18f26k20.h: 970: extern union {
[; ;pic18f26k20.h: 971: struct {
[; ;pic18f26k20.h: 972: volatile unsigned TMR1IE : 1;
[; ;pic18f26k20.h: 973: volatile unsigned TMR2IE : 1;
[; ;pic18f26k20.h: 974: volatile unsigned CCP1IE : 1;
[; ;pic18f26k20.h: 975: volatile unsigned SSPIE : 1;
[; ;pic18f26k20.h: 976: volatile unsigned TXIE : 1;
[; ;pic18f26k20.h: 977: volatile unsigned RCIE : 1;
[; ;pic18f26k20.h: 978: volatile unsigned ADIE : 1;
[; ;pic18f26k20.h: 979: };
[; ;pic18f26k20.h: 980: } PIE1bits @ 0xF9D;
[; ;pic18f26k20.h: 983: extern volatile unsigned char PIR1 @ 0xF9E;
[; ;pic18f26k20.h: 985: extern volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
[; ;pic18f26k20.h: 986: extern volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
[; ;pic18f26k20.h: 987: extern volatile bit CCP1IF @ ((unsigned)&PIR1*8)+2;
[; ;pic18f26k20.h: 988: extern volatile bit SSPIF @ ((unsigned)&PIR1*8)+3;
[; ;pic18f26k20.h: 989: extern volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
[; ;pic18f26k20.h: 990: extern volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
[; ;pic18f26k20.h: 991: extern volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
[; ;pic18f26k20.h: 992: extern union {
[; ;pic18f26k20.h: 993: struct {
[; ;pic18f26k20.h: 994: volatile unsigned TMR1IF : 1;
[; ;pic18f26k20.h: 995: volatile unsigned TMR2IF : 1;
[; ;pic18f26k20.h: 996: volatile unsigned CCP1IF : 1;
[; ;pic18f26k20.h: 997: volatile unsigned SSPIF : 1;
[; ;pic18f26k20.h: 998: volatile unsigned TXIF : 1;
[; ;pic18f26k20.h: 999: volatile unsigned RCIF : 1;
[; ;pic18f26k20.h: 1000: volatile unsigned ADIF : 1;
[; ;pic18f26k20.h: 1001: };
[; ;pic18f26k20.h: 1002: } PIR1bits @ 0xF9E;
[; ;pic18f26k20.h: 1005: extern volatile unsigned char IPR1 @ 0xF9F;
[; ;pic18f26k20.h: 1007: extern volatile bit TMR1IP @ ((unsigned)&IPR1*8)+0;
[; ;pic18f26k20.h: 1008: extern volatile bit TMR2IP @ ((unsigned)&IPR1*8)+1;
[; ;pic18f26k20.h: 1009: extern volatile bit CCP1IP @ ((unsigned)&IPR1*8)+2;
[; ;pic18f26k20.h: 1010: extern volatile bit SSPIP @ ((unsigned)&IPR1*8)+3;
[; ;pic18f26k20.h: 1011: extern volatile bit TXIP @ ((unsigned)&IPR1*8)+4;
[; ;pic18f26k20.h: 1012: extern volatile bit RCIP @ ((unsigned)&IPR1*8)+5;
[; ;pic18f26k20.h: 1013: extern volatile bit ADIP @ ((unsigned)&IPR1*8)+6;
[; ;pic18f26k20.h: 1014: extern union {
[; ;pic18f26k20.h: 1015: struct {
[; ;pic18f26k20.h: 1016: volatile unsigned TMR1IP : 1;
[; ;pic18f26k20.h: 1017: volatile unsigned TMR2IP : 1;
[; ;pic18f26k20.h: 1018: volatile unsigned CCP1IP : 1;
[; ;pic18f26k20.h: 1019: volatile unsigned SSPIP : 1;
[; ;pic18f26k20.h: 1020: volatile unsigned TXIP : 1;
[; ;pic18f26k20.h: 1021: volatile unsigned RCIP : 1;
[; ;pic18f26k20.h: 1022: volatile unsigned ADIP : 1;
[; ;pic18f26k20.h: 1023: };
[; ;pic18f26k20.h: 1024: } IPR1bits @ 0xF9F;
[; ;pic18f26k20.h: 1027: extern volatile unsigned char PIE2 @ 0xFA0;
[; ;pic18f26k20.h: 1029: extern volatile bit CCP2IE @ ((unsigned)&PIE2*8)+0;
[; ;pic18f26k20.h: 1030: extern volatile bit TMR3IE @ ((unsigned)&PIE2*8)+1;
[; ;pic18f26k20.h: 1031: extern volatile bit HLVDIE @ ((unsigned)&PIE2*8)+2;
[; ;pic18f26k20.h: 1032: extern volatile bit BCLIE @ ((unsigned)&PIE2*8)+3;
[; ;pic18f26k20.h: 1033: extern volatile bit EEIE @ ((unsigned)&PIE2*8)+4;
[; ;pic18f26k20.h: 1034: extern volatile bit C2IE @ ((unsigned)&PIE2*8)+5;
[; ;pic18f26k20.h: 1035: extern volatile bit C1IE @ ((unsigned)&PIE2*8)+6;
[; ;pic18f26k20.h: 1036: extern volatile bit OSCFIE @ ((unsigned)&PIE2*8)+7;
[; ;pic18f26k20.h: 1037: extern volatile bit LVDIE @ ((unsigned)&PIE2*8)+2;
[; ;pic18f26k20.h: 1038: extern union {
[; ;pic18f26k20.h: 1039: struct {
[; ;pic18f26k20.h: 1040: volatile unsigned CCP2IE : 1;
[; ;pic18f26k20.h: 1041: volatile unsigned TMR3IE : 1;
[; ;pic18f26k20.h: 1042: volatile unsigned HLVDIE : 1;
[; ;pic18f26k20.h: 1043: volatile unsigned BCLIE : 1;
[; ;pic18f26k20.h: 1044: volatile unsigned EEIE : 1;
[; ;pic18f26k20.h: 1045: volatile unsigned C2IE : 1;
[; ;pic18f26k20.h: 1046: volatile unsigned C1IE : 1;
[; ;pic18f26k20.h: 1047: volatile unsigned OSCFIE : 1;
[; ;pic18f26k20.h: 1048: };
[; ;pic18f26k20.h: 1049: struct {
[; ;pic18f26k20.h: 1050: volatile unsigned : 2;
[; ;pic18f26k20.h: 1051: volatile unsigned LVDIE : 1;
[; ;pic18f26k20.h: 1052: };
[; ;pic18f26k20.h: 1053: } PIE2bits @ 0xFA0;
[; ;pic18f26k20.h: 1056: extern volatile unsigned char PIR2 @ 0xFA1;
[; ;pic18f26k20.h: 1058: extern volatile bit CCP2IF @ ((unsigned)&PIR2*8)+0;
[; ;pic18f26k20.h: 1059: extern volatile bit TMR3IF @ ((unsigned)&PIR2*8)+1;
[; ;pic18f26k20.h: 1060: extern volatile bit HLVDIF @ ((unsigned)&PIR2*8)+2;
[; ;pic18f26k20.h: 1061: extern volatile bit BCLIF @ ((unsigned)&PIR2*8)+3;
[; ;pic18f26k20.h: 1062: extern volatile bit EEIF @ ((unsigned)&PIR2*8)+4;
[; ;pic18f26k20.h: 1063: extern volatile bit C2IF @ ((unsigned)&PIR2*8)+5;
[; ;pic18f26k20.h: 1064: extern volatile bit C1IF @ ((unsigned)&PIR2*8)+6;
[; ;pic18f26k20.h: 1065: extern volatile bit OSCFIF @ ((unsigned)&PIR2*8)+7;
[; ;pic18f26k20.h: 1066: extern volatile bit LVDIF @ ((unsigned)&PIR2*8)+2;
[; ;pic18f26k20.h: 1067: extern union {
[; ;pic18f26k20.h: 1068: struct {
[; ;pic18f26k20.h: 1069: volatile unsigned CCP2IF : 1;
[; ;pic18f26k20.h: 1070: volatile unsigned TMR3IF : 1;
[; ;pic18f26k20.h: 1071: volatile unsigned HLVDIF : 1;
[; ;pic18f26k20.h: 1072: volatile unsigned BCLIF : 1;
[; ;pic18f26k20.h: 1073: volatile unsigned EEIF : 1;
[; ;pic18f26k20.h: 1074: volatile unsigned C2IF : 1;
[; ;pic18f26k20.h: 1075: volatile unsigned C1IF : 1;
[; ;pic18f26k20.h: 1076: volatile unsigned OSCFIF : 1;
[; ;pic18f26k20.h: 1077: };
[; ;pic18f26k20.h: 1078: struct {
[; ;pic18f26k20.h: 1079: volatile unsigned : 2;
[; ;pic18f26k20.h: 1080: volatile unsigned LVDIF : 1;
[; ;pic18f26k20.h: 1081: };
[; ;pic18f26k20.h: 1082: } PIR2bits @ 0xFA1;
[; ;pic18f26k20.h: 1085: extern volatile unsigned char IPR2 @ 0xFA2;
[; ;pic18f26k20.h: 1087: extern volatile bit CCP2IP @ ((unsigned)&IPR2*8)+0;
[; ;pic18f26k20.h: 1088: extern volatile bit TMR3IP @ ((unsigned)&IPR2*8)+1;
[; ;pic18f26k20.h: 1089: extern volatile bit HLVDIP @ ((unsigned)&IPR2*8)+2;
[; ;pic18f26k20.h: 1090: extern volatile bit BCLIP @ ((unsigned)&IPR2*8)+3;
[; ;pic18f26k20.h: 1091: extern volatile bit EEIP @ ((unsigned)&IPR2*8)+4;
[; ;pic18f26k20.h: 1092: extern volatile bit C2IP @ ((unsigned)&IPR2*8)+5;
[; ;pic18f26k20.h: 1093: extern volatile bit C1IP @ ((unsigned)&IPR2*8)+6;
[; ;pic18f26k20.h: 1094: extern volatile bit OSCFIP @ ((unsigned)&IPR2*8)+7;
[; ;pic18f26k20.h: 1095: extern volatile bit LVDIP @ ((unsigned)&IPR2*8)+2;
[; ;pic18f26k20.h: 1096: extern union {
[; ;pic18f26k20.h: 1097: struct {
[; ;pic18f26k20.h: 1098: volatile unsigned CCP2IP : 1;
[; ;pic18f26k20.h: 1099: volatile unsigned TMR3IP : 1;
[; ;pic18f26k20.h: 1100: volatile unsigned HLVDIP : 1;
[; ;pic18f26k20.h: 1101: volatile unsigned BCLIP : 1;
[; ;pic18f26k20.h: 1102: volatile unsigned EEIP : 1;
[; ;pic18f26k20.h: 1103: volatile unsigned C2IP : 1;
[; ;pic18f26k20.h: 1104: volatile unsigned C1IP : 1;
[; ;pic18f26k20.h: 1105: volatile unsigned OSCFIP : 1;
[; ;pic18f26k20.h: 1106: };
[; ;pic18f26k20.h: 1107: struct {
[; ;pic18f26k20.h: 1108: volatile unsigned : 2;
[; ;pic18f26k20.h: 1109: volatile unsigned LVDIP : 1;
[; ;pic18f26k20.h: 1110: };
[; ;pic18f26k20.h: 1111: } IPR2bits @ 0xFA2;
[; ;pic18f26k20.h: 1114: extern volatile unsigned char EECON1 @ 0xFA6;
[; ;pic18f26k20.h: 1116: extern volatile bit RD @ ((unsigned)&EECON1*8)+0;
[; ;pic18f26k20.h: 1117: extern volatile bit WR @ ((unsigned)&EECON1*8)+1;
[; ;pic18f26k20.h: 1118: extern volatile bit WREN @ ((unsigned)&EECON1*8)+2;
[; ;pic18f26k20.h: 1119: extern volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
[; ;pic18f26k20.h: 1120: extern volatile bit FREE @ ((unsigned)&EECON1*8)+4;
[; ;pic18f26k20.h: 1121: extern volatile bit CFGS @ ((unsigned)&EECON1*8)+6;
[; ;pic18f26k20.h: 1122: extern volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
[; ;pic18f26k20.h: 1123: extern union {
[; ;pic18f26k20.h: 1124: struct {
[; ;pic18f26k20.h: 1125: volatile unsigned RD : 1;
[; ;pic18f26k20.h: 1126: volatile unsigned WR : 1;
[; ;pic18f26k20.h: 1127: volatile unsigned WREN : 1;
[; ;pic18f26k20.h: 1128: volatile unsigned WRERR : 1;
[; ;pic18f26k20.h: 1129: volatile unsigned FREE : 1;
[; ;pic18f26k20.h: 1130: volatile unsigned : 1;
[; ;pic18f26k20.h: 1131: volatile unsigned CFGS : 1;
[; ;pic18f26k20.h: 1132: volatile unsigned EEPGD : 1;
[; ;pic18f26k20.h: 1133: };
[; ;pic18f26k20.h: 1134: } EECON1bits @ 0xFA6;
[; ;pic18f26k20.h: 1137: extern volatile unsigned char EECON2 @ 0xFA7;
[; ;pic18f26k20.h: 1141: extern volatile unsigned char EEDATA @ 0xFA8;
[; ;pic18f26k20.h: 1145: extern volatile unsigned char EEADR @ 0xFA9;
[; ;pic18f26k20.h: 1147: extern volatile bit EEADR0 @ ((unsigned)&EEADR*8)+0;
[; ;pic18f26k20.h: 1148: extern volatile bit EEADR1 @ ((unsigned)&EEADR*8)+1;
[; ;pic18f26k20.h: 1149: extern volatile bit EEADR2 @ ((unsigned)&EEADR*8)+2;
[; ;pic18f26k20.h: 1150: extern volatile bit EEADR3 @ ((unsigned)&EEADR*8)+3;
[; ;pic18f26k20.h: 1151: extern volatile bit EEADR4 @ ((unsigned)&EEADR*8)+4;
[; ;pic18f26k20.h: 1152: extern volatile bit EEADR5 @ ((unsigned)&EEADR*8)+5;
[; ;pic18f26k20.h: 1153: extern volatile bit EEADR6 @ ((unsigned)&EEADR*8)+6;
[; ;pic18f26k20.h: 1154: extern volatile bit EEADR7 @ ((unsigned)&EEADR*8)+7;
[; ;pic18f26k20.h: 1155: extern union {
[; ;pic18f26k20.h: 1156: struct {
[; ;pic18f26k20.h: 1157: volatile unsigned EEADR0 : 1;
[; ;pic18f26k20.h: 1158: volatile unsigned EEADR1 : 1;
[; ;pic18f26k20.h: 1159: volatile unsigned EEADR2 : 1;
[; ;pic18f26k20.h: 1160: volatile unsigned EEADR3 : 1;
[; ;pic18f26k20.h: 1161: volatile unsigned EEADR4 : 1;
[; ;pic18f26k20.h: 1162: volatile unsigned EEADR5 : 1;
[; ;pic18f26k20.h: 1163: volatile unsigned EEADR6 : 1;
[; ;pic18f26k20.h: 1164: volatile unsigned EEADR7 : 1;
[; ;pic18f26k20.h: 1165: };
[; ;pic18f26k20.h: 1166: } EEADRbits @ 0xFA9;
[; ;pic18f26k20.h: 1169: extern volatile unsigned char EEADRH @ 0xFAA;
[; ;pic18f26k20.h: 1171: extern volatile bit EEADR8 @ ((unsigned)&EEADRH*8)+0;
[; ;pic18f26k20.h: 1172: extern volatile bit EEADR9 @ ((unsigned)&EEADRH*8)+1;
[; ;pic18f26k20.h: 1173: extern union {
[; ;pic18f26k20.h: 1174: struct {
[; ;pic18f26k20.h: 1175: volatile unsigned EEADR8 : 1;
[; ;pic18f26k20.h: 1176: volatile unsigned EEADR9 : 1;
[; ;pic18f26k20.h: 1177: };
[; ;pic18f26k20.h: 1178: } EEADRHbits @ 0xFAA;
[; ;pic18f26k20.h: 1181: extern volatile unsigned char RCSTA @ 0xFAB;
[; ;pic18f26k20.h: 1183: extern volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
[; ;pic18f26k20.h: 1184: extern volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
[; ;pic18f26k20.h: 1185: extern volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
[; ;pic18f26k20.h: 1186: extern volatile bit ADDEN @ ((unsigned)&RCSTA*8)+3;
[; ;pic18f26k20.h: 1187: extern volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
[; ;pic18f26k20.h: 1188: extern volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
[; ;pic18f26k20.h: 1189: extern volatile bit RX9 @ ((unsigned)&RCSTA*8)+6;
[; ;pic18f26k20.h: 1190: extern volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
[; ;pic18f26k20.h: 1191: extern volatile bit ADEN @ ((unsigned)&RCSTA*8)+3;
[; ;pic18f26k20.h: 1192: extern union {
[; ;pic18f26k20.h: 1193: struct {
[; ;pic18f26k20.h: 1194: volatile unsigned RX9D : 1;
[; ;pic18f26k20.h: 1195: volatile unsigned OERR : 1;
[; ;pic18f26k20.h: 1196: volatile unsigned FERR : 1;
[; ;pic18f26k20.h: 1197: volatile unsigned ADDEN : 1;
[; ;pic18f26k20.h: 1198: volatile unsigned CREN : 1;
[; ;pic18f26k20.h: 1199: volatile unsigned SREN : 1;
[; ;pic18f26k20.h: 1200: volatile unsigned RX9 : 1;
[; ;pic18f26k20.h: 1201: volatile unsigned SPEN : 1;
[; ;pic18f26k20.h: 1202: };
[; ;pic18f26k20.h: 1203: struct {
[; ;pic18f26k20.h: 1204: volatile unsigned : 3;
[; ;pic18f26k20.h: 1205: volatile unsigned ADEN : 1;
[; ;pic18f26k20.h: 1206: };
[; ;pic18f26k20.h: 1207: } RCSTAbits @ 0xFAB;
[; ;pic18f26k20.h: 1210: extern volatile unsigned char TXSTA @ 0xFAC;
[; ;pic18f26k20.h: 1212: extern volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
[; ;pic18f26k20.h: 1213: extern volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
[; ;pic18f26k20.h: 1214: extern volatile bit BRGH @ ((unsigned)&TXSTA*8)+2;
[; ;pic18f26k20.h: 1215: extern volatile bit SENDB @ ((unsigned)&TXSTA*8)+3;
[; ;pic18f26k20.h: 1216: extern volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
[; ;pic18f26k20.h: 1217: extern volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
[; ;pic18f26k20.h: 1218: extern volatile bit TX9 @ ((unsigned)&TXSTA*8)+6;
[; ;pic18f26k20.h: 1219: extern volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
[; ;pic18f26k20.h: 1220: extern union {
[; ;pic18f26k20.h: 1221: struct {
[; ;pic18f26k20.h: 1222: volatile unsigned TX9D : 1;
[; ;pic18f26k20.h: 1223: volatile unsigned TRMT : 1;
[; ;pic18f26k20.h: 1224: volatile unsigned BRGH : 1;
[; ;pic18f26k20.h: 1225: volatile unsigned SENDB : 1;
[; ;pic18f26k20.h: 1226: volatile unsigned SYNC : 1;
[; ;pic18f26k20.h: 1227: volatile unsigned TXEN : 1;
[; ;pic18f26k20.h: 1228: volatile unsigned TX9 : 1;
[; ;pic18f26k20.h: 1229: volatile unsigned CSRC : 1;
[; ;pic18f26k20.h: 1230: };
[; ;pic18f26k20.h: 1231: } TXSTAbits @ 0xFAC;
[; ;pic18f26k20.h: 1234: extern volatile unsigned char TXREG @ 0xFAD;
[; ;pic18f26k20.h: 1238: extern volatile unsigned char RCREG @ 0xFAE;
[; ;pic18f26k20.h: 1242: extern volatile unsigned char SPBRG @ 0xFAF;
[; ;pic18f26k20.h: 1246: extern volatile unsigned char SPBRGH @ 0xFB0;
[; ;pic18f26k20.h: 1250: extern volatile unsigned char T3CON @ 0xFB1;
[; ;pic18f26k20.h: 1252: extern volatile bit TMR3ON @ ((unsigned)&T3CON*8)+0;
[; ;pic18f26k20.h: 1253: extern volatile bit TMR3CS @ ((unsigned)&T3CON*8)+1;
[; ;pic18f26k20.h: 1254: extern volatile bit nT3SYNC @ ((unsigned)&T3CON*8)+2;
[; ;pic18f26k20.h: 1255: extern volatile bit T3CCP1 @ ((unsigned)&T3CON*8)+3;
[; ;pic18f26k20.h: 1256: extern volatile bit T3CCP2 @ ((unsigned)&T3CON*8)+6;
[; ;pic18f26k20.h: 1258: extern volatile bit T3SYNC @ ((unsigned)&T3CON*8)+2;
[; ;pic18f26k20.h: 1259: extern volatile bit T3CKPS0 @ ((unsigned)&T3CON*8)+4;
[; ;pic18f26k20.h: 1260: extern volatile bit T3CKPS1 @ ((unsigned)&T3CON*8)+5;
[; ;pic18f26k20.h: 1261: extern union {
[; ;pic18f26k20.h: 1262: struct {
[; ;pic18f26k20.h: 1263: volatile unsigned TMR3ON : 1;
[; ;pic18f26k20.h: 1264: volatile unsigned TMR3CS : 1;
[; ;pic18f26k20.h: 1265: volatile unsigned nT3SYNC : 1;
[; ;pic18f26k20.h: 1266: volatile unsigned T3CCP1 : 1;
[; ;pic18f26k20.h: 1267: volatile unsigned T3CKPS : 2;
[; ;pic18f26k20.h: 1268: volatile unsigned T3CCP2 : 1;
[; ;pic18f26k20.h: 1269: volatile unsigned RD16 : 1;
[; ;pic18f26k20.h: 1270: };
[; ;pic18f26k20.h: 1271: struct {
[; ;pic18f26k20.h: 1272: volatile unsigned : 2;
[; ;pic18f26k20.h: 1273: volatile unsigned T3SYNC : 1;
[; ;pic18f26k20.h: 1274: volatile unsigned : 1;
[; ;pic18f26k20.h: 1275: volatile unsigned T3CKPS0 : 1;
[; ;pic18f26k20.h: 1276: volatile unsigned T3CKPS1 : 1;
[; ;pic18f26k20.h: 1277: };
[; ;pic18f26k20.h: 1278: } T3CONbits @ 0xFB1;
[; ;pic18f26k20.h: 1282: extern volatile unsigned char TMR3L @ 0xFB2;
[; ;pic18f26k20.h: 1286: extern volatile unsigned char TMR3H @ 0xFB3;
[; ;pic18f26k20.h: 1290: extern volatile unsigned int TMR3 @ 0xFB2;
[; ;pic18f26k20.h: 1293: extern volatile unsigned char CVRCON2 @ 0xFB4;
[; ;pic18f26k20.h: 1295: extern volatile bit FVRST @ ((unsigned)&CVRCON2*8)+6;
[; ;pic18f26k20.h: 1296: extern volatile bit FVREN @ ((unsigned)&CVRCON2*8)+7;
[; ;pic18f26k20.h: 1297: extern union {
[; ;pic18f26k20.h: 1298: struct {
[; ;pic18f26k20.h: 1299: volatile unsigned : 6;
[; ;pic18f26k20.h: 1300: volatile unsigned FVRST : 1;
[; ;pic18f26k20.h: 1301: volatile unsigned FVREN : 1;
[; ;pic18f26k20.h: 1302: };
[; ;pic18f26k20.h: 1303: } CVRCON2bits @ 0xFB4;
[; ;pic18f26k20.h: 1306: extern volatile unsigned char CVRCON @ 0xFB5;
[; ;pic18f26k20.h: 1308: extern volatile bit CVRSS @ ((unsigned)&CVRCON*8)+4;
[; ;pic18f26k20.h: 1309: extern volatile bit CVRR @ ((unsigned)&CVRCON*8)+5;
[; ;pic18f26k20.h: 1310: extern volatile bit CVROE @ ((unsigned)&CVRCON*8)+6;
[; ;pic18f26k20.h: 1311: extern volatile bit CVREN @ ((unsigned)&CVRCON*8)+7;
[; ;pic18f26k20.h: 1312: extern volatile bit CVR0 @ ((unsigned)&CVRCON*8)+0;
[; ;pic18f26k20.h: 1313: extern volatile bit CVR1 @ ((unsigned)&CVRCON*8)+1;
[; ;pic18f26k20.h: 1314: extern volatile bit CVR2 @ ((unsigned)&CVRCON*8)+2;
[; ;pic18f26k20.h: 1315: extern volatile bit CVR3 @ ((unsigned)&CVRCON*8)+3;
[; ;pic18f26k20.h: 1316: extern union {
[; ;pic18f26k20.h: 1317: struct {
[; ;pic18f26k20.h: 1318: volatile unsigned CVR : 4;
[; ;pic18f26k20.h: 1319: volatile unsigned CVRSS : 1;
[; ;pic18f26k20.h: 1320: volatile unsigned CVRR : 1;
[; ;pic18f26k20.h: 1321: volatile unsigned CVROE : 1;
[; ;pic18f26k20.h: 1322: volatile unsigned CVREN : 1;
[; ;pic18f26k20.h: 1323: };
[; ;pic18f26k20.h: 1324: struct {
[; ;pic18f26k20.h: 1325: volatile unsigned CVR0 : 1;
[; ;pic18f26k20.h: 1326: volatile unsigned CVR1 : 1;
[; ;pic18f26k20.h: 1327: volatile unsigned CVR2 : 1;
[; ;pic18f26k20.h: 1328: volatile unsigned CVR3 : 1;
[; ;pic18f26k20.h: 1329: };
[; ;pic18f26k20.h: 1330: } CVRCONbits @ 0xFB5;
[; ;pic18f26k20.h: 1333: extern volatile unsigned char ECCP1AS @ 0xFB6;
[; ;pic18f26k20.h: 1335: extern volatile bit ECCPASE @ ((unsigned)&ECCP1AS*8)+7;
[; ;pic18f26k20.h: 1336: extern volatile bit PSSBD0 @ ((unsigned)&ECCP1AS*8)+0;
[; ;pic18f26k20.h: 1337: extern volatile bit PSSBD1 @ ((unsigned)&ECCP1AS*8)+1;
[; ;pic18f26k20.h: 1338: extern volatile bit PSSAC0 @ ((unsigned)&ECCP1AS*8)+2;
[; ;pic18f26k20.h: 1339: extern volatile bit PSSAC1 @ ((unsigned)&ECCP1AS*8)+3;
[; ;pic18f26k20.h: 1340: extern volatile bit ECCPAS0 @ ((unsigned)&ECCP1AS*8)+4;
[; ;pic18f26k20.h: 1341: extern volatile bit ECCPAS1 @ ((unsigned)&ECCP1AS*8)+5;
[; ;pic18f26k20.h: 1342: extern volatile bit ECCPAS2 @ ((unsigned)&ECCP1AS*8)+6;
[; ;pic18f26k20.h: 1343: extern union {
[; ;pic18f26k20.h: 1344: struct {
[; ;pic18f26k20.h: 1345: volatile unsigned PSSBD : 2;
[; ;pic18f26k20.h: 1346: volatile unsigned PSSAC : 2;
[; ;pic18f26k20.h: 1347: volatile unsigned ECCPAS : 3;
[; ;pic18f26k20.h: 1348: volatile unsigned ECCPASE : 1;
[; ;pic18f26k20.h: 1349: };
[; ;pic18f26k20.h: 1350: struct {
[; ;pic18f26k20.h: 1351: volatile unsigned PSSBD0 : 1;
[; ;pic18f26k20.h: 1352: volatile unsigned PSSBD1 : 1;
[; ;pic18f26k20.h: 1353: volatile unsigned PSSAC0 : 1;
[; ;pic18f26k20.h: 1354: volatile unsigned PSSAC1 : 1;
[; ;pic18f26k20.h: 1355: volatile unsigned ECCPAS0 : 1;
[; ;pic18f26k20.h: 1356: volatile unsigned ECCPAS1 : 1;
[; ;pic18f26k20.h: 1357: volatile unsigned ECCPAS2 : 1;
[; ;pic18f26k20.h: 1358: };
[; ;pic18f26k20.h: 1359: } ECCP1ASbits @ 0xFB6;
[; ;pic18f26k20.h: 1362: extern volatile unsigned char PWM1CON @ 0xFB7;
[; ;pic18f26k20.h: 1364: extern volatile bit PRSEN @ ((unsigned)&PWM1CON*8)+7;
[; ;pic18f26k20.h: 1365: extern volatile bit PDC0 @ ((unsigned)&PWM1CON*8)+0;
[; ;pic18f26k20.h: 1366: extern volatile bit PDC1 @ ((unsigned)&PWM1CON*8)+1;
[; ;pic18f26k20.h: 1367: extern volatile bit PDC2 @ ((unsigned)&PWM1CON*8)+2;
[; ;pic18f26k20.h: 1368: extern volatile bit PDC3 @ ((unsigned)&PWM1CON*8)+3;
[; ;pic18f26k20.h: 1369: extern volatile bit PDC4 @ ((unsigned)&PWM1CON*8)+4;
[; ;pic18f26k20.h: 1370: extern volatile bit PDC5 @ ((unsigned)&PWM1CON*8)+5;
[; ;pic18f26k20.h: 1371: extern volatile bit PDC6 @ ((unsigned)&PWM1CON*8)+6;
[; ;pic18f26k20.h: 1372: extern union {
[; ;pic18f26k20.h: 1373: struct {
[; ;pic18f26k20.h: 1374: volatile unsigned PDC : 7;
[; ;pic18f26k20.h: 1375: volatile unsigned PRSEN : 1;
[; ;pic18f26k20.h: 1376: };
[; ;pic18f26k20.h: 1377: struct {
[; ;pic18f26k20.h: 1378: volatile unsigned PDC0 : 1;
[; ;pic18f26k20.h: 1379: volatile unsigned PDC1 : 1;
[; ;pic18f26k20.h: 1380: volatile unsigned PDC2 : 1;
[; ;pic18f26k20.h: 1381: volatile unsigned PDC3 : 1;
[; ;pic18f26k20.h: 1382: volatile unsigned PDC4 : 1;
[; ;pic18f26k20.h: 1383: volatile unsigned PDC5 : 1;
[; ;pic18f26k20.h: 1384: volatile unsigned PDC6 : 1;
[; ;pic18f26k20.h: 1385: };
[; ;pic18f26k20.h: 1386: } PWM1CONbits @ 0xFB7;
[; ;pic18f26k20.h: 1389: extern volatile unsigned char BAUDCON @ 0xFB8;
[; ;pic18f26k20.h: 1390: extern volatile unsigned char BAUDCTL @ 0xFB8;
[; ;pic18f26k20.h: 1392: extern volatile bit ABDEN @ ((unsigned)&BAUDCON*8)+0;
[; ;pic18f26k20.h: 1393: extern volatile bit WUE @ ((unsigned)&BAUDCON*8)+1;
[; ;pic18f26k20.h: 1394: extern volatile bit BRG16 @ ((unsigned)&BAUDCON*8)+3;
[; ;pic18f26k20.h: 1395: extern volatile bit CKTXP @ ((unsigned)&BAUDCON*8)+4;
[; ;pic18f26k20.h: 1396: extern volatile bit DTRXP @ ((unsigned)&BAUDCON*8)+5;
[; ;pic18f26k20.h: 1397: extern volatile bit RCIDL @ ((unsigned)&BAUDCON*8)+6;
[; ;pic18f26k20.h: 1398: extern volatile bit ABDOVF @ ((unsigned)&BAUDCON*8)+7;
[; ;pic18f26k20.h: 1399: extern volatile bit SCKP @ ((unsigned)&BAUDCON*8)+4;
[; ;pic18f26k20.h: 1400: extern union {
[; ;pic18f26k20.h: 1401: struct {
[; ;pic18f26k20.h: 1402: volatile unsigned ABDEN : 1;
[; ;pic18f26k20.h: 1403: volatile unsigned WUE : 1;
[; ;pic18f26k20.h: 1404: volatile unsigned : 1;
[; ;pic18f26k20.h: 1405: volatile unsigned BRG16 : 1;
[; ;pic18f26k20.h: 1406: volatile unsigned CKTXP : 1;
[; ;pic18f26k20.h: 1407: volatile unsigned DTRXP : 1;
[; ;pic18f26k20.h: 1408: volatile unsigned RCIDL : 1;
[; ;pic18f26k20.h: 1409: volatile unsigned ABDOVF : 1;
[; ;pic18f26k20.h: 1410: };
[; ;pic18f26k20.h: 1411: struct {
[; ;pic18f26k20.h: 1412: volatile unsigned : 4;
[; ;pic18f26k20.h: 1413: volatile unsigned SCKP : 1;
[; ;pic18f26k20.h: 1414: };
[; ;pic18f26k20.h: 1415: } BAUDCONbits @ 0xFB8;
[; ;pic18f26k20.h: 1418: extern volatile unsigned char PSTRCON @ 0xFB9;
[; ;pic18f26k20.h: 1420: extern volatile bit STRA @ ((unsigned)&PSTRCON*8)+0;
[; ;pic18f26k20.h: 1421: extern volatile bit STRB @ ((unsigned)&PSTRCON*8)+1;
[; ;pic18f26k20.h: 1422: extern volatile bit STRC @ ((unsigned)&PSTRCON*8)+2;
[; ;pic18f26k20.h: 1423: extern volatile bit STRD @ ((unsigned)&PSTRCON*8)+3;
[; ;pic18f26k20.h: 1424: extern volatile bit STRSYNC @ ((unsigned)&PSTRCON*8)+4;
[; ;pic18f26k20.h: 1425: extern union {
[; ;pic18f26k20.h: 1426: struct {
[; ;pic18f26k20.h: 1427: volatile unsigned STRA : 1;
[; ;pic18f26k20.h: 1428: volatile unsigned STRB : 1;
[; ;pic18f26k20.h: 1429: volatile unsigned STRC : 1;
[; ;pic18f26k20.h: 1430: volatile unsigned STRD : 1;
[; ;pic18f26k20.h: 1431: volatile unsigned STRSYNC : 1;
[; ;pic18f26k20.h: 1432: };
[; ;pic18f26k20.h: 1433: } PSTRCONbits @ 0xFB9;
[; ;pic18f26k20.h: 1436: extern volatile unsigned char CCP2CON @ 0xFBA;
[; ;pic18f26k20.h: 1438: extern volatile bit CCP2M0 @ ((unsigned)&CCP2CON*8)+0;
[; ;pic18f26k20.h: 1439: extern volatile bit CCP2M1 @ ((unsigned)&CCP2CON*8)+1;
[; ;pic18f26k20.h: 1440: extern volatile bit CCP2M2 @ ((unsigned)&CCP2CON*8)+2;
[; ;pic18f26k20.h: 1441: extern volatile bit CCP2M3 @ ((unsigned)&CCP2CON*8)+3;
[; ;pic18f26k20.h: 1442: extern volatile bit DC2B0 @ ((unsigned)&CCP2CON*8)+4;
[; ;pic18f26k20.h: 1443: extern volatile bit DC2B1 @ ((unsigned)&CCP2CON*8)+5;
[; ;pic18f26k20.h: 1444: extern union {
[; ;pic18f26k20.h: 1445: struct {
[; ;pic18f26k20.h: 1446: volatile unsigned CCP2M : 4;
[; ;pic18f26k20.h: 1447: volatile unsigned DC2B : 2;
[; ;pic18f26k20.h: 1448: };
[; ;pic18f26k20.h: 1449: struct {
[; ;pic18f26k20.h: 1450: volatile unsigned CCP2M0 : 1;
[; ;pic18f26k20.h: 1451: volatile unsigned CCP2M1 : 1;
[; ;pic18f26k20.h: 1452: volatile unsigned CCP2M2 : 1;
[; ;pic18f26k20.h: 1453: volatile unsigned CCP2M3 : 1;
[; ;pic18f26k20.h: 1454: volatile unsigned DC2B0 : 1;
[; ;pic18f26k20.h: 1455: volatile unsigned DC2B1 : 1;
[; ;pic18f26k20.h: 1456: };
[; ;pic18f26k20.h: 1457: } CCP2CONbits @ 0xFBA;
[; ;pic18f26k20.h: 1461: extern volatile unsigned char CCPR2L @ 0xFBB;
[; ;pic18f26k20.h: 1465: extern volatile unsigned char CCPR2H @ 0xFBC;
[; ;pic18f26k20.h: 1469: extern volatile unsigned int CCPR2 @ 0xFBB;
[; ;pic18f26k20.h: 1472: extern volatile unsigned char CCP1CON @ 0xFBD;
[; ;pic18f26k20.h: 1474: extern volatile bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
[; ;pic18f26k20.h: 1475: extern volatile bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
[; ;pic18f26k20.h: 1476: extern volatile bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
[; ;pic18f26k20.h: 1477: extern volatile bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;
[; ;pic18f26k20.h: 1478: extern volatile bit DC1B0 @ ((unsigned)&CCP1CON*8)+4;
[; ;pic18f26k20.h: 1479: extern volatile bit DC1B1 @ ((unsigned)&CCP1CON*8)+5;
[; ;pic18f26k20.h: 1480: extern volatile bit P1M0 @ ((unsigned)&CCP1CON*8)+6;
[; ;pic18f26k20.h: 1481: extern volatile bit P1M1 @ ((unsigned)&CCP1CON*8)+7;
[; ;pic18f26k20.h: 1482: extern union {
[; ;pic18f26k20.h: 1483: struct {
[; ;pic18f26k20.h: 1484: volatile unsigned CCP1M : 4;
[; ;pic18f26k20.h: 1485: volatile unsigned DC1B : 2;
[; ;pic18f26k20.h: 1486: volatile unsigned P1M : 2;
[; ;pic18f26k20.h: 1487: };
[; ;pic18f26k20.h: 1488: struct {
[; ;pic18f26k20.h: 1489: volatile unsigned CCP1M0 : 1;
[; ;pic18f26k20.h: 1490: volatile unsigned CCP1M1 : 1;
[; ;pic18f26k20.h: 1491: volatile unsigned CCP1M2 : 1;
[; ;pic18f26k20.h: 1492: volatile unsigned CCP1M3 : 1;
[; ;pic18f26k20.h: 1493: volatile unsigned DC1B0 : 1;
[; ;pic18f26k20.h: 1494: volatile unsigned DC1B1 : 1;
[; ;pic18f26k20.h: 1495: volatile unsigned P1M0 : 1;
[; ;pic18f26k20.h: 1496: volatile unsigned P1M1 : 1;
[; ;pic18f26k20.h: 1497: };
[; ;pic18f26k20.h: 1498: } CCP1CONbits @ 0xFBD;
[; ;pic18f26k20.h: 1502: extern volatile unsigned char CCPR1L @ 0xFBE;
[; ;pic18f26k20.h: 1506: extern volatile unsigned char CCPR1H @ 0xFBF;
[; ;pic18f26k20.h: 1510: extern volatile unsigned int CCPR1 @ 0xFBE;
[; ;pic18f26k20.h: 1513: extern volatile unsigned char ADCON2 @ 0xFC0;
[; ;pic18f26k20.h: 1515: extern volatile bit ADFM @ ((unsigned)&ADCON2*8)+7;
[; ;pic18f26k20.h: 1516: extern volatile bit ADCS0 @ ((unsigned)&ADCON2*8)+0;
[; ;pic18f26k20.h: 1517: extern volatile bit ADCS1 @ ((unsigned)&ADCON2*8)+1;
[; ;pic18f26k20.h: 1518: extern volatile bit ADCS2 @ ((unsigned)&ADCON2*8)+2;
[; ;pic18f26k20.h: 1519: extern volatile bit ACQT0 @ ((unsigned)&ADCON2*8)+3;
[; ;pic18f26k20.h: 1520: extern volatile bit ACQT1 @ ((unsigned)&ADCON2*8)+4;
[; ;pic18f26k20.h: 1521: extern volatile bit ACQT2 @ ((unsigned)&ADCON2*8)+5;
[; ;pic18f26k20.h: 1522: extern union {
[; ;pic18f26k20.h: 1523: struct {
[; ;pic18f26k20.h: 1524: volatile unsigned ADCS : 3;
[; ;pic18f26k20.h: 1525: volatile unsigned ACQT : 3;
[; ;pic18f26k20.h: 1526: volatile unsigned : 1;
[; ;pic18f26k20.h: 1527: volatile unsigned ADFM : 1;
[; ;pic18f26k20.h: 1528: };
[; ;pic18f26k20.h: 1529: struct {
[; ;pic18f26k20.h: 1530: volatile unsigned ADCS0 : 1;
[; ;pic18f26k20.h: 1531: volatile unsigned ADCS1 : 1;
[; ;pic18f26k20.h: 1532: volatile unsigned ADCS2 : 1;
[; ;pic18f26k20.h: 1533: volatile unsigned ACQT0 : 1;
[; ;pic18f26k20.h: 1534: volatile unsigned ACQT1 : 1;
[; ;pic18f26k20.h: 1535: volatile unsigned ACQT2 : 1;
[; ;pic18f26k20.h: 1536: };
[; ;pic18f26k20.h: 1537: } ADCON2bits @ 0xFC0;
[; ;pic18f26k20.h: 1540: extern volatile unsigned char ADCON1 @ 0xFC1;
[; ;pic18f26k20.h: 1542: extern volatile bit VCFG0 @ ((unsigned)&ADCON1*8)+4;
[; ;pic18f26k20.h: 1543: extern volatile bit VCFG1 @ ((unsigned)&ADCON1*8)+5;
[; ;pic18f26k20.h: 1544: extern union {
[; ;pic18f26k20.h: 1545: struct {
[; ;pic18f26k20.h: 1546: volatile unsigned : 4;
[; ;pic18f26k20.h: 1547: volatile unsigned VCFG : 2;
[; ;pic18f26k20.h: 1548: };
[; ;pic18f26k20.h: 1549: struct {
[; ;pic18f26k20.h: 1550: volatile unsigned : 4;
[; ;pic18f26k20.h: 1551: volatile unsigned VCFG0 : 1;
[; ;pic18f26k20.h: 1552: volatile unsigned VCFG1 : 1;
[; ;pic18f26k20.h: 1553: };
[; ;pic18f26k20.h: 1554: } ADCON1bits @ 0xFC1;
[; ;pic18f26k20.h: 1557: extern volatile unsigned char ADCON0 @ 0xFC2;
[; ;pic18f26k20.h: 1559: extern volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
[; ;pic18f26k20.h: 1560: extern volatile bit GO_nDONE @ ((unsigned)&ADCON0*8)+1;
[; ;pic18f26k20.h: 1561: extern volatile bit GO @ ((unsigned)&ADCON0*8)+1;
[; ;pic18f26k20.h: 1562: extern volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
[; ;pic18f26k20.h: 1563: extern volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
[; ;pic18f26k20.h: 1564: extern volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
[; ;pic18f26k20.h: 1565: extern volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
[; ;pic18f26k20.h: 1566: extern volatile bit DONE @ ((unsigned)&ADCON0*8)+1;
[; ;pic18f26k20.h: 1567: extern volatile bit nDONE @ ((unsigned)&ADCON0*8)+1;
[; ;pic18f26k20.h: 1568: extern volatile bit GO_DONE @ ((unsigned)&ADCON0*8)+1;
[; ;pic18f26k20.h: 1569: extern union {
[; ;pic18f26k20.h: 1570: struct {
[; ;pic18f26k20.h: 1571: volatile unsigned ADON : 1;
[; ;pic18f26k20.h: 1572: volatile unsigned GO_nDONE : 1;
[; ;pic18f26k20.h: 1573: volatile unsigned CHS : 4;
[; ;pic18f26k20.h: 1574: };
[; ;pic18f26k20.h: 1575: struct {
[; ;pic18f26k20.h: 1576: volatile unsigned : 1;
[; ;pic18f26k20.h: 1577: volatile unsigned GO : 1;
[; ;pic18f26k20.h: 1578: volatile unsigned CHS0 : 1;
[; ;pic18f26k20.h: 1579: volatile unsigned CHS1 : 1;
[; ;pic18f26k20.h: 1580: volatile unsigned CHS2 : 1;
[; ;pic18f26k20.h: 1581: volatile unsigned CHS3 : 1;
[; ;pic18f26k20.h: 1582: };
[; ;pic18f26k20.h: 1583: struct {
[; ;pic18f26k20.h: 1584: volatile unsigned : 1;
[; ;pic18f26k20.h: 1585: volatile unsigned DONE : 1;
[; ;pic18f26k20.h: 1586: volatile unsigned : 1;
[; ;pic18f26k20.h: 1587: volatile unsigned : 1;
[; ;pic18f26k20.h: 1588: volatile unsigned : 1;
[; ;pic18f26k20.h: 1589: volatile unsigned : 1;
[; ;pic18f26k20.h: 1590: };
[; ;pic18f26k20.h: 1591: struct {
[; ;pic18f26k20.h: 1592: volatile unsigned : 1;
[; ;pic18f26k20.h: 1593: volatile unsigned nDONE : 1;
[; ;pic18f26k20.h: 1594: };
[; ;pic18f26k20.h: 1595: struct {
[; ;pic18f26k20.h: 1596: volatile unsigned : 1;
[; ;pic18f26k20.h: 1597: volatile unsigned GO_DONE : 1;
[; ;pic18f26k20.h: 1598: };
[; ;pic18f26k20.h: 1599: struct {
[; ;pic18f26k20.h: 1600: volatile unsigned : 1;
[; ;pic18f26k20.h: 1601: volatile unsigned : 1;
[; ;pic18f26k20.h: 1602: };
[; ;pic18f26k20.h: 1603: } ADCON0bits @ 0xFC2;
[; ;pic18f26k20.h: 1607: extern volatile unsigned char ADRESL @ 0xFC3;
[; ;pic18f26k20.h: 1611: extern volatile unsigned char ADRESH @ 0xFC4;
[; ;pic18f26k20.h: 1615: extern volatile unsigned int ADRES @ 0xFC3;
[; ;pic18f26k20.h: 1618: extern volatile unsigned char SSPCON2 @ 0xFC5;
[; ;pic18f26k20.h: 1620: extern volatile bit SEN @ ((unsigned)&SSPCON2*8)+0;
[; ;pic18f26k20.h: 1621: extern volatile bit RSEN @ ((unsigned)&SSPCON2*8)+1;
[; ;pic18f26k20.h: 1622: extern volatile bit PEN @ ((unsigned)&SSPCON2*8)+2;
[; ;pic18f26k20.h: 1623: extern volatile bit RCEN @ ((unsigned)&SSPCON2*8)+3;
[; ;pic18f26k20.h: 1624: extern volatile bit ACKEN @ ((unsigned)&SSPCON2*8)+4;
[; ;pic18f26k20.h: 1625: extern volatile bit ACKDT @ ((unsigned)&SSPCON2*8)+5;
[; ;pic18f26k20.h: 1626: extern volatile bit ACKSTAT @ ((unsigned)&SSPCON2*8)+6;
[; ;pic18f26k20.h: 1627: extern volatile bit GCEN @ ((unsigned)&SSPCON2*8)+7;
[; ;pic18f26k20.h: 1628: extern union {
[; ;pic18f26k20.h: 1629: struct {
[; ;pic18f26k20.h: 1630: volatile unsigned SEN : 1;
[; ;pic18f26k20.h: 1631: volatile unsigned RSEN : 1;
[; ;pic18f26k20.h: 1632: volatile unsigned PEN : 1;
[; ;pic18f26k20.h: 1633: volatile unsigned RCEN : 1;
[; ;pic18f26k20.h: 1634: volatile unsigned ACKEN : 1;
[; ;pic18f26k20.h: 1635: volatile unsigned ACKDT : 1;
[; ;pic18f26k20.h: 1636: volatile unsigned ACKSTAT : 1;
[; ;pic18f26k20.h: 1637: volatile unsigned GCEN : 1;
[; ;pic18f26k20.h: 1638: };
[; ;pic18f26k20.h: 1639: } SSPCON2bits @ 0xFC5;
[; ;pic18f26k20.h: 1642: extern volatile unsigned char SSPCON1 @ 0xFC6;
[; ;pic18f26k20.h: 1644: extern volatile bit CKP @ ((unsigned)&SSPCON1*8)+4;
[; ;pic18f26k20.h: 1645: extern volatile bit SSPEN @ ((unsigned)&SSPCON1*8)+5;
[; ;pic18f26k20.h: 1646: extern volatile bit SSPOV @ ((unsigned)&SSPCON1*8)+6;
[; ;pic18f26k20.h: 1647: extern volatile bit WCOL @ ((unsigned)&SSPCON1*8)+7;
[; ;pic18f26k20.h: 1648: extern volatile bit SSPM0 @ ((unsigned)&SSPCON1*8)+0;
[; ;pic18f26k20.h: 1649: extern volatile bit SSPM1 @ ((unsigned)&SSPCON1*8)+1;
[; ;pic18f26k20.h: 1650: extern volatile bit SSPM2 @ ((unsigned)&SSPCON1*8)+2;
[; ;pic18f26k20.h: 1651: extern volatile bit SSPM3 @ ((unsigned)&SSPCON1*8)+3;
[; ;pic18f26k20.h: 1652: extern union {
[; ;pic18f26k20.h: 1653: struct {
[; ;pic18f26k20.h: 1654: volatile unsigned SSPM : 4;
[; ;pic18f26k20.h: 1655: volatile unsigned CKP : 1;
[; ;pic18f26k20.h: 1656: volatile unsigned SSPEN : 1;
[; ;pic18f26k20.h: 1657: volatile unsigned SSPOV : 1;
[; ;pic18f26k20.h: 1658: volatile unsigned WCOL : 1;
[; ;pic18f26k20.h: 1659: };
[; ;pic18f26k20.h: 1660: struct {
[; ;pic18f26k20.h: 1661: volatile unsigned SSPM0 : 1;
[; ;pic18f26k20.h: 1662: volatile unsigned SSPM1 : 1;
[; ;pic18f26k20.h: 1663: volatile unsigned SSPM2 : 1;
[; ;pic18f26k20.h: 1664: volatile unsigned SSPM3 : 1;
[; ;pic18f26k20.h: 1665: };
[; ;pic18f26k20.h: 1666: } SSPCON1bits @ 0xFC6;
[; ;pic18f26k20.h: 1669: extern volatile unsigned char SSPSTAT @ 0xFC7;
[; ;pic18f26k20.h: 1671: extern volatile bit BF @ ((unsigned)&SSPSTAT*8)+0;
[; ;pic18f26k20.h: 1672: extern volatile bit UA @ ((unsigned)&SSPSTAT*8)+1;
[; ;pic18f26k20.h: 1673: extern volatile bit R_nW @ ((unsigned)&SSPSTAT*8)+2;
[; ;pic18f26k20.h: 1674: extern volatile bit S @ ((unsigned)&SSPSTAT*8)+3;
[; ;pic18f26k20.h: 1675: extern volatile bit P @ ((unsigned)&SSPSTAT*8)+4;
[; ;pic18f26k20.h: 1676: extern volatile bit D_nA @ ((unsigned)&SSPSTAT*8)+5;
[; ;pic18f26k20.h: 1677: extern volatile bit CKE @ ((unsigned)&SSPSTAT*8)+6;
[; ;pic18f26k20.h: 1678: extern volatile bit SMP @ ((unsigned)&SSPSTAT*8)+7;
[; ;pic18f26k20.h: 1679: extern volatile bit R @ ((unsigned)&SSPSTAT*8)+2;
[; ;pic18f26k20.h: 1680: extern volatile bit D @ ((unsigned)&SSPSTAT*8)+5;
[; ;pic18f26k20.h: 1681: extern volatile bit A @ ((unsigned)&SSPSTAT*8)+5;
[; ;pic18f26k20.h: 1682: extern volatile bit nW @ ((unsigned)&SSPSTAT*8)+2;
[; ;pic18f26k20.h: 1683: extern volatile bit nA @ ((unsigned)&SSPSTAT*8)+5;
[; ;pic18f26k20.h: 1684: extern volatile bit R_W @ ((unsigned)&SSPSTAT*8)+2;
[; ;pic18f26k20.h: 1685: extern volatile bit D_A @ ((unsigned)&SSPSTAT*8)+5;
[; ;pic18f26k20.h: 1686: extern volatile bit nWRITE @ ((unsigned)&SSPSTAT*8)+2;
[; ;pic18f26k20.h: 1687: extern volatile bit nADDRESS @ ((unsigned)&SSPSTAT*8)+5;
[; ;pic18f26k20.h: 1688: extern volatile bit START @ ((unsigned)&SSPSTAT*8)+3;
[; ;pic18f26k20.h: 1689: extern volatile bit STOP @ ((unsigned)&SSPSTAT*8)+4;
[; ;pic18f26k20.h: 1690: extern union {
[; ;pic18f26k20.h: 1691: struct {
[; ;pic18f26k20.h: 1692: volatile unsigned BF : 1;
[; ;pic18f26k20.h: 1693: volatile unsigned UA : 1;
[; ;pic18f26k20.h: 1694: volatile unsigned R_nW : 1;
[; ;pic18f26k20.h: 1695: volatile unsigned S : 1;
[; ;pic18f26k20.h: 1696: volatile unsigned P : 1;
[; ;pic18f26k20.h: 1697: volatile unsigned D_nA : 1;
[; ;pic18f26k20.h: 1698: volatile unsigned CKE : 1;
[; ;pic18f26k20.h: 1699: volatile unsigned SMP : 1;
[; ;pic18f26k20.h: 1700: };
[; ;pic18f26k20.h: 1701: struct {
[; ;pic18f26k20.h: 1702: volatile unsigned : 2;
[; ;pic18f26k20.h: 1703: volatile unsigned R : 1;
[; ;pic18f26k20.h: 1704: volatile unsigned : 2;
[; ;pic18f26k20.h: 1705: volatile unsigned D : 1;
[; ;pic18f26k20.h: 1706: };
[; ;pic18f26k20.h: 1707: struct {
[; ;pic18f26k20.h: 1708: volatile unsigned : 2;
[; ;pic18f26k20.h: 1709: volatile unsigned W : 1;
[; ;pic18f26k20.h: 1710: volatile unsigned : 2;
[; ;pic18f26k20.h: 1711: volatile unsigned A : 1;
[; ;pic18f26k20.h: 1712: };
[; ;pic18f26k20.h: 1713: struct {
[; ;pic18f26k20.h: 1714: volatile unsigned : 2;
[; ;pic18f26k20.h: 1715: volatile unsigned nW : 1;
[; ;pic18f26k20.h: 1716: volatile unsigned : 2;
[; ;pic18f26k20.h: 1717: volatile unsigned nA : 1;
[; ;pic18f26k20.h: 1718: };
[; ;pic18f26k20.h: 1719: struct {
[; ;pic18f26k20.h: 1720: volatile unsigned : 2;
[; ;pic18f26k20.h: 1721: volatile unsigned R_W : 1;
[; ;pic18f26k20.h: 1722: volatile unsigned : 2;
[; ;pic18f26k20.h: 1723: volatile unsigned D_A : 1;
[; ;pic18f26k20.h: 1724: };
[; ;pic18f26k20.h: 1725: struct {
[; ;pic18f26k20.h: 1726: volatile unsigned : 2;
[; ;pic18f26k20.h: 1727: volatile unsigned nWRITE : 1;
[; ;pic18f26k20.h: 1728: volatile unsigned : 2;
[; ;pic18f26k20.h: 1729: volatile unsigned nADDRESS : 1;
[; ;pic18f26k20.h: 1730: };
[; ;pic18f26k20.h: 1731: struct {
[; ;pic18f26k20.h: 1732: volatile unsigned : 3;
[; ;pic18f26k20.h: 1733: volatile unsigned START : 1;
[; ;pic18f26k20.h: 1734: volatile unsigned STOP : 1;
[; ;pic18f26k20.h: 1735: };
[; ;pic18f26k20.h: 1736: } SSPSTATbits @ 0xFC7;
[; ;pic18f26k20.h: 1739: extern volatile unsigned char SSPADD @ 0xFC8;
[; ;pic18f26k20.h: 1743: extern volatile unsigned char SSPBUF @ 0xFC9;
[; ;pic18f26k20.h: 1747: extern volatile unsigned char T2CON @ 0xFCA;
[; ;pic18f26k20.h: 1749: extern volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
[; ;pic18f26k20.h: 1750: extern volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
[; ;pic18f26k20.h: 1751: extern volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
[; ;pic18f26k20.h: 1752: extern volatile bit T2OUTPS0 @ ((unsigned)&T2CON*8)+3;
[; ;pic18f26k20.h: 1753: extern volatile bit T2OUTPS1 @ ((unsigned)&T2CON*8)+4;
[; ;pic18f26k20.h: 1754: extern volatile bit T2OUTPS2 @ ((unsigned)&T2CON*8)+5;
[; ;pic18f26k20.h: 1755: extern volatile bit T2OUTPS3 @ ((unsigned)&T2CON*8)+6;
[; ;pic18f26k20.h: 1756: extern union {
[; ;pic18f26k20.h: 1757: struct {
[; ;pic18f26k20.h: 1758: volatile unsigned T2CKPS : 2;
[; ;pic18f26k20.h: 1759: volatile unsigned TMR2ON : 1;
[; ;pic18f26k20.h: 1760: volatile unsigned T2OUTPS : 4;
[; ;pic18f26k20.h: 1761: };
[; ;pic18f26k20.h: 1762: struct {
[; ;pic18f26k20.h: 1763: volatile unsigned T2CKPS0 : 1;
[; ;pic18f26k20.h: 1764: volatile unsigned T2CKPS1 : 1;
[; ;pic18f26k20.h: 1765: volatile unsigned : 1;
[; ;pic18f26k20.h: 1766: volatile unsigned T2OUTPS0 : 1;
[; ;pic18f26k20.h: 1767: volatile unsigned T2OUTPS1 : 1;
[; ;pic18f26k20.h: 1768: volatile unsigned T2OUTPS2 : 1;
[; ;pic18f26k20.h: 1769: volatile unsigned T2OUTPS3 : 1;
[; ;pic18f26k20.h: 1770: };
[; ;pic18f26k20.h: 1771: } T2CONbits @ 0xFCA;
[; ;pic18f26k20.h: 1774: extern volatile unsigned char PR2 @ 0xFCB;
[; ;pic18f26k20.h: 1778: extern volatile unsigned char TMR2 @ 0xFCC;
[; ;pic18f26k20.h: 1782: extern volatile unsigned char T1CON @ 0xFCD;
[; ;pic18f26k20.h: 1784: extern volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
[; ;pic18f26k20.h: 1785: extern volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
[; ;pic18f26k20.h: 1786: extern volatile bit nT1SYNC @ ((unsigned)&T1CON*8)+2;
[; ;pic18f26k20.h: 1787: extern volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
[; ;pic18f26k20.h: 1788: extern volatile bit T1RUN @ ((unsigned)&T1CON*8)+6;
[; ;pic18f26k20.h: 1790: extern volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
[; ;pic18f26k20.h: 1791: extern volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
[; ;pic18f26k20.h: 1792: extern volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
[; ;pic18f26k20.h: 1793: extern union {
[; ;pic18f26k20.h: 1794: struct {
[; ;pic18f26k20.h: 1795: volatile unsigned TMR1ON : 1;
[; ;pic18f26k20.h: 1796: volatile unsigned TMR1CS : 1;
[; ;pic18f26k20.h: 1797: volatile unsigned nT1SYNC : 1;
[; ;pic18f26k20.h: 1798: volatile unsigned T1OSCEN : 1;
[; ;pic18f26k20.h: 1799: volatile unsigned T1CKPS : 2;
[; ;pic18f26k20.h: 1800: volatile unsigned T1RUN : 1;
[; ;pic18f26k20.h: 1801: volatile unsigned RD16 : 1;
[; ;pic18f26k20.h: 1802: };
[; ;pic18f26k20.h: 1803: struct {
[; ;pic18f26k20.h: 1804: volatile unsigned : 2;
[; ;pic18f26k20.h: 1805: volatile unsigned T1SYNC : 1;
[; ;pic18f26k20.h: 1806: volatile unsigned : 1;
[; ;pic18f26k20.h: 1807: volatile unsigned T1CKPS0 : 1;
[; ;pic18f26k20.h: 1808: volatile unsigned T1CKPS1 : 1;
[; ;pic18f26k20.h: 1809: };
[; ;pic18f26k20.h: 1810: } T1CONbits @ 0xFCD;
[; ;pic18f26k20.h: 1814: extern volatile unsigned char TMR1L @ 0xFCE;
[; ;pic18f26k20.h: 1818: extern volatile unsigned char TMR1H @ 0xFCF;
[; ;pic18f26k20.h: 1822: extern volatile unsigned int TMR1 @ 0xFCE;
[; ;pic18f26k20.h: 1825: extern volatile unsigned char RCON @ 0xFD0;
[; ;pic18f26k20.h: 1827: extern volatile bit nBOR @ ((unsigned)&RCON*8)+0;
[; ;pic18f26k20.h: 1828: extern volatile bit nPOR @ ((unsigned)&RCON*8)+1;
[; ;pic18f26k20.h: 1829: extern volatile bit nPD @ ((unsigned)&RCON*8)+2;
[; ;pic18f26k20.h: 1830: extern volatile bit nTO @ ((unsigned)&RCON*8)+3;
[; ;pic18f26k20.h: 1831: extern volatile bit nRI @ ((unsigned)&RCON*8)+4;
[; ;pic18f26k20.h: 1832: extern volatile bit SBOREN @ ((unsigned)&RCON*8)+6;
[; ;pic18f26k20.h: 1833: extern volatile bit IPEN @ ((unsigned)&RCON*8)+7;
[; ;pic18f26k20.h: 1834: extern volatile bit BOR @ ((unsigned)&RCON*8)+0;
[; ;pic18f26k20.h: 1835: extern volatile bit POR @ ((unsigned)&RCON*8)+1;
[; ;pic18f26k20.h: 1836: extern volatile bit PD @ ((unsigned)&RCON*8)+2;
[; ;pic18f26k20.h: 1837: extern volatile bit TO @ ((unsigned)&RCON*8)+3;
[; ;pic18f26k20.h: 1838: extern volatile bit RI @ ((unsigned)&RCON*8)+4;
[; ;pic18f26k20.h: 1839: extern union {
[; ;pic18f26k20.h: 1840: struct {
[; ;pic18f26k20.h: 1841: volatile unsigned nBOR : 1;
[; ;pic18f26k20.h: 1842: volatile unsigned nPOR : 1;
[; ;pic18f26k20.h: 1843: volatile unsigned nPD : 1;
[; ;pic18f26k20.h: 1844: volatile unsigned nTO : 1;
[; ;pic18f26k20.h: 1845: volatile unsigned nRI : 1;
[; ;pic18f26k20.h: 1846: volatile unsigned : 1;
[; ;pic18f26k20.h: 1847: volatile unsigned SBOREN : 1;
[; ;pic18f26k20.h: 1848: volatile unsigned IPEN : 1;
[; ;pic18f26k20.h: 1849: };
[; ;pic18f26k20.h: 1850: struct {
[; ;pic18f26k20.h: 1851: volatile unsigned BOR : 1;
[; ;pic18f26k20.h: 1852: volatile unsigned POR : 1;
[; ;pic18f26k20.h: 1853: volatile unsigned PD : 1;
[; ;pic18f26k20.h: 1854: volatile unsigned TO : 1;
[; ;pic18f26k20.h: 1855: volatile unsigned RI : 1;
[; ;pic18f26k20.h: 1856: };
[; ;pic18f26k20.h: 1857: } RCONbits @ 0xFD0;
[; ;pic18f26k20.h: 1860: extern volatile unsigned char WDTCON @ 0xFD1;
[; ;pic18f26k20.h: 1862: extern volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
[; ;pic18f26k20.h: 1863: extern volatile bit SWDTE @ ((unsigned)&WDTCON*8)+0;
[; ;pic18f26k20.h: 1864: extern union {
[; ;pic18f26k20.h: 1865: struct {
[; ;pic18f26k20.h: 1866: volatile unsigned SWDTEN : 1;
[; ;pic18f26k20.h: 1867: };
[; ;pic18f26k20.h: 1868: struct {
[; ;pic18f26k20.h: 1869: volatile unsigned SWDTE : 1;
[; ;pic18f26k20.h: 1870: };
[; ;pic18f26k20.h: 1871: } WDTCONbits @ 0xFD1;
[; ;pic18f26k20.h: 1874: extern volatile unsigned char HLVDCON @ 0xFD2;
[; ;pic18f26k20.h: 1875: extern volatile unsigned char LVDCON @ 0xFD2;
[; ;pic18f26k20.h: 1877: extern volatile bit HLVDEN @ ((unsigned)&HLVDCON*8)+4;
[; ;pic18f26k20.h: 1878: extern volatile bit IRVST @ ((unsigned)&HLVDCON*8)+5;
[; ;pic18f26k20.h: 1879: extern volatile bit VDIRMAG @ ((unsigned)&HLVDCON*8)+7;
[; ;pic18f26k20.h: 1880: extern volatile bit HLVDL0 @ ((unsigned)&HLVDCON*8)+0;
[; ;pic18f26k20.h: 1881: extern volatile bit HLVDL1 @ ((unsigned)&HLVDCON*8)+1;
[; ;pic18f26k20.h: 1882: extern volatile bit HLVDL2 @ ((unsigned)&HLVDCON*8)+2;
[; ;pic18f26k20.h: 1883: extern volatile bit HLVDL3 @ ((unsigned)&HLVDCON*8)+3;
[; ;pic18f26k20.h: 1884: extern volatile bit LVDL0 @ ((unsigned)&HLVDCON*8)+0;
[; ;pic18f26k20.h: 1885: extern volatile bit LVDL1 @ ((unsigned)&HLVDCON*8)+1;
[; ;pic18f26k20.h: 1886: extern volatile bit LVDL2 @ ((unsigned)&HLVDCON*8)+2;
[; ;pic18f26k20.h: 1887: extern volatile bit LVDL3 @ ((unsigned)&HLVDCON*8)+3;
[; ;pic18f26k20.h: 1888: extern volatile bit LVDEN @ ((unsigned)&HLVDCON*8)+4;
[; ;pic18f26k20.h: 1889: extern volatile bit IVRST @ ((unsigned)&HLVDCON*8)+5;
[; ;pic18f26k20.h: 1890: extern volatile bit LVV0 @ ((unsigned)&HLVDCON*8)+0;
[; ;pic18f26k20.h: 1891: extern volatile bit LVV1 @ ((unsigned)&HLVDCON*8)+1;
[; ;pic18f26k20.h: 1892: extern volatile bit LVV2 @ ((unsigned)&HLVDCON*8)+2;
[; ;pic18f26k20.h: 1893: extern volatile bit LVV3 @ ((unsigned)&HLVDCON*8)+3;
[; ;pic18f26k20.h: 1894: extern volatile bit BGST @ ((unsigned)&HLVDCON*8)+5;
[; ;pic18f26k20.h: 1895: extern union {
[; ;pic18f26k20.h: 1896: struct {
[; ;pic18f26k20.h: 1897: volatile unsigned HLVDL : 4;
[; ;pic18f26k20.h: 1898: volatile unsigned HLVDEN : 1;
[; ;pic18f26k20.h: 1899: volatile unsigned IRVST : 1;
[; ;pic18f26k20.h: 1900: volatile unsigned : 1;
[; ;pic18f26k20.h: 1901: volatile unsigned VDIRMAG : 1;
[; ;pic18f26k20.h: 1902: };
[; ;pic18f26k20.h: 1903: struct {
[; ;pic18f26k20.h: 1904: volatile unsigned HLVDL0 : 1;
[; ;pic18f26k20.h: 1905: volatile unsigned HLVDL1 : 1;
[; ;pic18f26k20.h: 1906: volatile unsigned HLVDL2 : 1;
[; ;pic18f26k20.h: 1907: volatile unsigned HLVDL3 : 1;
[; ;pic18f26k20.h: 1908: };
[; ;pic18f26k20.h: 1909: struct {
[; ;pic18f26k20.h: 1910: volatile unsigned LVDL0 : 1;
[; ;pic18f26k20.h: 1911: volatile unsigned LVDL1 : 1;
[; ;pic18f26k20.h: 1912: volatile unsigned LVDL2 : 1;
[; ;pic18f26k20.h: 1913: volatile unsigned LVDL3 : 1;
[; ;pic18f26k20.h: 1914: volatile unsigned LVDEN : 1;
[; ;pic18f26k20.h: 1915: volatile unsigned IVRST : 1;
[; ;pic18f26k20.h: 1916: };
[; ;pic18f26k20.h: 1917: struct {
[; ;pic18f26k20.h: 1918: volatile unsigned LVV0 : 1;
[; ;pic18f26k20.h: 1919: volatile unsigned LVV1 : 1;
[; ;pic18f26k20.h: 1920: volatile unsigned LVV2 : 1;
[; ;pic18f26k20.h: 1921: volatile unsigned LVV3 : 1;
[; ;pic18f26k20.h: 1922: volatile unsigned : 1;
[; ;pic18f26k20.h: 1923: volatile unsigned BGST : 1;
[; ;pic18f26k20.h: 1924: };
[; ;pic18f26k20.h: 1925: } HLVDCONbits @ 0xFD2;
[; ;pic18f26k20.h: 1928: extern volatile unsigned char OSCCON @ 0xFD3;
[; ;pic18f26k20.h: 1930: extern volatile bit IOFS @ ((unsigned)&OSCCON*8)+2;
[; ;pic18f26k20.h: 1931: extern volatile bit OSTS @ ((unsigned)&OSCCON*8)+3;
[; ;pic18f26k20.h: 1932: extern volatile bit IDLEN @ ((unsigned)&OSCCON*8)+7;
[; ;pic18f26k20.h: 1933: extern volatile bit SCS0 @ ((unsigned)&OSCCON*8)+0;
[; ;pic18f26k20.h: 1934: extern volatile bit SCS1 @ ((unsigned)&OSCCON*8)+1;
[; ;pic18f26k20.h: 1935: extern volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
[; ;pic18f26k20.h: 1936: extern volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
[; ;pic18f26k20.h: 1937: extern volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
[; ;pic18f26k20.h: 1938: extern union {
[; ;pic18f26k20.h: 1939: struct {
[; ;pic18f26k20.h: 1940: volatile unsigned SCS : 2;
[; ;pic18f26k20.h: 1941: volatile unsigned IOFS : 1;
[; ;pic18f26k20.h: 1942: volatile unsigned OSTS : 1;
[; ;pic18f26k20.h: 1943: volatile unsigned IRCF : 3;
[; ;pic18f26k20.h: 1944: volatile unsigned IDLEN : 1;
[; ;pic18f26k20.h: 1945: };
[; ;pic18f26k20.h: 1946: struct {
[; ;pic18f26k20.h: 1947: volatile unsigned SCS0 : 1;
[; ;pic18f26k20.h: 1948: volatile unsigned SCS1 : 1;
[; ;pic18f26k20.h: 1949: volatile unsigned : 2;
[; ;pic18f26k20.h: 1950: volatile unsigned IRCF0 : 1;
[; ;pic18f26k20.h: 1951: volatile unsigned IRCF1 : 1;
[; ;pic18f26k20.h: 1952: volatile unsigned IRCF2 : 1;
[; ;pic18f26k20.h: 1953: };
[; ;pic18f26k20.h: 1954: } OSCCONbits @ 0xFD3;
[; ;pic18f26k20.h: 1957: extern volatile unsigned char T0CON @ 0xFD5;
[; ;pic18f26k20.h: 1959: extern volatile bit PSA @ ((unsigned)&T0CON*8)+3;
[; ;pic18f26k20.h: 1960: extern volatile bit T0SE @ ((unsigned)&T0CON*8)+4;
[; ;pic18f26k20.h: 1961: extern volatile bit T0CS @ ((unsigned)&T0CON*8)+5;
[; ;pic18f26k20.h: 1962: extern volatile bit T08BIT @ ((unsigned)&T0CON*8)+6;
[; ;pic18f26k20.h: 1963: extern volatile bit TMR0ON @ ((unsigned)&T0CON*8)+7;
[; ;pic18f26k20.h: 1964: extern volatile bit T0PS0 @ ((unsigned)&T0CON*8)+0;
[; ;pic18f26k20.h: 1965: extern volatile bit T0PS1 @ ((unsigned)&T0CON*8)+1;
[; ;pic18f26k20.h: 1966: extern volatile bit T0PS2 @ ((unsigned)&T0CON*8)+2;
[; ;pic18f26k20.h: 1967: extern union {
[; ;pic18f26k20.h: 1968: struct {
[; ;pic18f26k20.h: 1969: volatile unsigned T0PS : 3;
[; ;pic18f26k20.h: 1970: volatile unsigned PSA : 1;
[; ;pic18f26k20.h: 1971: volatile unsigned T0SE : 1;
[; ;pic18f26k20.h: 1972: volatile unsigned T0CS : 1;
[; ;pic18f26k20.h: 1973: volatile unsigned T08BIT : 1;
[; ;pic18f26k20.h: 1974: volatile unsigned TMR0ON : 1;
[; ;pic18f26k20.h: 1975: };
[; ;pic18f26k20.h: 1976: struct {
[; ;pic18f26k20.h: 1977: volatile unsigned T0PS0 : 1;
[; ;pic18f26k20.h: 1978: volatile unsigned T0PS1 : 1;
[; ;pic18f26k20.h: 1979: volatile unsigned T0PS2 : 1;
[; ;pic18f26k20.h: 1980: };
[; ;pic18f26k20.h: 1981: } T0CONbits @ 0xFD5;
[; ;pic18f26k20.h: 1985: extern volatile unsigned char TMR0L @ 0xFD6;
[; ;pic18f26k20.h: 1989: extern volatile unsigned char TMR0H @ 0xFD7;
[; ;pic18f26k20.h: 1993: extern volatile unsigned int TMR0 @ 0xFD6;
[; ;pic18f26k20.h: 1996: extern volatile unsigned char STATUS @ 0xFD8;
[; ;pic18f26k20.h: 1998: extern volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
[; ;pic18f26k20.h: 1999: extern volatile bit DC @ ((unsigned)&STATUS*8)+1;
[; ;pic18f26k20.h: 2000: extern volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
[; ;pic18f26k20.h: 2001: extern volatile bit OV @ ((unsigned)&STATUS*8)+3;
[; ;pic18f26k20.h: 2002: extern volatile bit N @ ((unsigned)&STATUS*8)+4;
[; ;pic18f26k20.h: 2003: extern union {
[; ;pic18f26k20.h: 2004: struct {
[; ;pic18f26k20.h: 2005: volatile unsigned C : 1;
[; ;pic18f26k20.h: 2006: volatile unsigned DC : 1;
[; ;pic18f26k20.h: 2007: volatile unsigned Z : 1;
[; ;pic18f26k20.h: 2008: volatile unsigned OV : 1;
[; ;pic18f26k20.h: 2009: volatile unsigned N : 1;
[; ;pic18f26k20.h: 2010: };
[; ;pic18f26k20.h: 2011: } STATUSbits @ 0xFD8;
[; ;pic18f26k20.h: 2015: extern volatile unsigned char FSR2L @ 0xFD9;
[; ;pic18f26k20.h: 2019: extern volatile unsigned char FSR2H @ 0xFDA;
[; ;pic18f26k20.h: 2021: extern union {
[; ;pic18f26k20.h: 2022: struct {
[; ;pic18f26k20.h: 2023: volatile unsigned : 4;
[; ;pic18f26k20.h: 2024: };
[; ;pic18f26k20.h: 2025: } FSR2Hbits @ 0xFDA;
[; ;pic18f26k20.h: 2028: extern volatile unsigned int FSR2 @ 0xFD9;
[; ;pic18f26k20.h: 2031: extern volatile unsigned char PLUSW2 @ 0xFDB;
[; ;pic18f26k20.h: 2035: extern volatile unsigned char PREINC2 @ 0xFDC;
[; ;pic18f26k20.h: 2039: extern volatile unsigned char POSTDEC2 @ 0xFDD;
[; ;pic18f26k20.h: 2043: extern volatile unsigned char POSTINC2 @ 0xFDE;
[; ;pic18f26k20.h: 2047: extern volatile unsigned char INDF2 @ 0xFDF;
[; ;pic18f26k20.h: 2051: extern volatile unsigned char BSR @ 0xFE0;
[; ;pic18f26k20.h: 2053: extern union {
[; ;pic18f26k20.h: 2054: struct {
[; ;pic18f26k20.h: 2055: volatile unsigned : 4;
[; ;pic18f26k20.h: 2056: };
[; ;pic18f26k20.h: 2057: } BSRbits @ 0xFE0;
[; ;pic18f26k20.h: 2061: extern volatile unsigned char FSR1L @ 0xFE1;
[; ;pic18f26k20.h: 2065: extern volatile unsigned char FSR1H @ 0xFE2;
[; ;pic18f26k20.h: 2067: extern union {
[; ;pic18f26k20.h: 2068: struct {
[; ;pic18f26k20.h: 2069: volatile unsigned : 4;
[; ;pic18f26k20.h: 2070: };
[; ;pic18f26k20.h: 2071: } FSR1Hbits @ 0xFE2;
[; ;pic18f26k20.h: 2074: extern volatile unsigned int FSR1 @ 0xFE1;
[; ;pic18f26k20.h: 2077: extern volatile unsigned char PLUSW1 @ 0xFE3;
[; ;pic18f26k20.h: 2081: extern volatile unsigned char PREINC1 @ 0xFE4;
[; ;pic18f26k20.h: 2085: extern volatile unsigned char POSTDEC1 @ 0xFE5;
[; ;pic18f26k20.h: 2089: extern volatile unsigned char POSTINC1 @ 0xFE6;
[; ;pic18f26k20.h: 2093: extern volatile unsigned char INDF1 @ 0xFE7;
[; ;pic18f26k20.h: 2097: extern volatile unsigned char WREG @ 0xFE8;
[; ;pic18f26k20.h: 2098: extern volatile unsigned char W @ 0xFE8;
[; ;pic18f26k20.h: 2103: extern volatile unsigned char FSR0L @ 0xFE9;
[; ;pic18f26k20.h: 2107: extern volatile unsigned char FSR0H @ 0xFEA;
[; ;pic18f26k20.h: 2109: extern union {
[; ;pic18f26k20.h: 2110: struct {
[; ;pic18f26k20.h: 2111: volatile unsigned : 4;
[; ;pic18f26k20.h: 2112: };
[; ;pic18f26k20.h: 2113: } FSR0Hbits @ 0xFEA;
[; ;pic18f26k20.h: 2116: extern volatile unsigned int FSR0 @ 0xFE9;
[; ;pic18f26k20.h: 2119: extern volatile unsigned char PLUSW0 @ 0xFEB;
[; ;pic18f26k20.h: 2123: extern volatile unsigned char PREINC0 @ 0xFEC;
[; ;pic18f26k20.h: 2127: extern volatile unsigned char POSTDEC0 @ 0xFED;
[; ;pic18f26k20.h: 2131: extern volatile unsigned char POSTINC0 @ 0xFEE;
[; ;pic18f26k20.h: 2135: extern volatile unsigned char INDF0 @ 0xFEF;
[; ;pic18f26k20.h: 2139: extern volatile unsigned char INTCON3 @ 0xFF0;
[; ;pic18f26k20.h: 2141: extern volatile bit INT1IF @ ((unsigned)&INTCON3*8)+0;
[; ;pic18f26k20.h: 2142: extern volatile bit INT2IF @ ((unsigned)&INTCON3*8)+1;
[; ;pic18f26k20.h: 2143: extern volatile bit INT1IE @ ((unsigned)&INTCON3*8)+3;
[; ;pic18f26k20.h: 2144: extern volatile bit INT2IE @ ((unsigned)&INTCON3*8)+4;
[; ;pic18f26k20.h: 2145: extern volatile bit INT1IP @ ((unsigned)&INTCON3*8)+6;
[; ;pic18f26k20.h: 2146: extern volatile bit INT2IP @ ((unsigned)&INTCON3*8)+7;
[; ;pic18f26k20.h: 2147: extern volatile bit INT1F @ ((unsigned)&INTCON3*8)+0;
[; ;pic18f26k20.h: 2148: extern volatile bit INT2F @ ((unsigned)&INTCON3*8)+1;
[; ;pic18f26k20.h: 2149: extern volatile bit INT1E @ ((unsigned)&INTCON3*8)+3;
[; ;pic18f26k20.h: 2150: extern volatile bit INT2E @ ((unsigned)&INTCON3*8)+4;
[; ;pic18f26k20.h: 2151: extern volatile bit INT1P @ ((unsigned)&INTCON3*8)+6;
[; ;pic18f26k20.h: 2152: extern volatile bit INT2P @ ((unsigned)&INTCON3*8)+7;
[; ;pic18f26k20.h: 2153: extern union {
[; ;pic18f26k20.h: 2154: struct {
[; ;pic18f26k20.h: 2155: volatile unsigned INT1IF : 1;
[; ;pic18f26k20.h: 2156: volatile unsigned INT2IF : 1;
[; ;pic18f26k20.h: 2157: volatile unsigned : 1;
[; ;pic18f26k20.h: 2158: volatile unsigned INT1IE : 1;
[; ;pic18f26k20.h: 2159: volatile unsigned INT2IE : 1;
[; ;pic18f26k20.h: 2160: volatile unsigned : 1;
[; ;pic18f26k20.h: 2161: volatile unsigned INT1IP : 1;
[; ;pic18f26k20.h: 2162: volatile unsigned INT2IP : 1;
[; ;pic18f26k20.h: 2163: };
[; ;pic18f26k20.h: 2164: struct {
[; ;pic18f26k20.h: 2165: volatile unsigned INT1F : 1;
[; ;pic18f26k20.h: 2166: volatile unsigned INT2F : 1;
[; ;pic18f26k20.h: 2167: volatile unsigned : 1;
[; ;pic18f26k20.h: 2168: volatile unsigned INT1E : 1;
[; ;pic18f26k20.h: 2169: volatile unsigned INT2E : 1;
[; ;pic18f26k20.h: 2170: volatile unsigned : 1;
[; ;pic18f26k20.h: 2171: volatile unsigned INT1P : 1;
[; ;pic18f26k20.h: 2172: volatile unsigned INT2P : 1;
[; ;pic18f26k20.h: 2173: };
[; ;pic18f26k20.h: 2174: } INTCON3bits @ 0xFF0;
[; ;pic18f26k20.h: 2177: extern volatile unsigned char INTCON2 @ 0xFF1;
[; ;pic18f26k20.h: 2179: extern volatile bit RBIP @ ((unsigned)&INTCON2*8)+0;
[; ;pic18f26k20.h: 2180: extern volatile bit TMR0IP @ ((unsigned)&INTCON2*8)+2;
[; ;pic18f26k20.h: 2181: extern volatile bit INTEDG2 @ ((unsigned)&INTCON2*8)+4;
[; ;pic18f26k20.h: 2182: extern volatile bit INTEDG1 @ ((unsigned)&INTCON2*8)+5;
[; ;pic18f26k20.h: 2183: extern volatile bit INTEDG0 @ ((unsigned)&INTCON2*8)+6;
[; ;pic18f26k20.h: 2184: extern volatile bit nRBPU @ ((unsigned)&INTCON2*8)+7;
[; ;pic18f26k20.h: 2185: extern volatile bit RBPU @ ((unsigned)&INTCON2*8)+7;
[; ;pic18f26k20.h: 2186: extern union {
[; ;pic18f26k20.h: 2187: struct {
[; ;pic18f26k20.h: 2188: volatile unsigned RBIP : 1;
[; ;pic18f26k20.h: 2189: volatile unsigned : 1;
[; ;pic18f26k20.h: 2190: volatile unsigned TMR0IP : 1;
[; ;pic18f26k20.h: 2191: volatile unsigned : 1;
[; ;pic18f26k20.h: 2192: volatile unsigned INTEDG2 : 1;
[; ;pic18f26k20.h: 2193: volatile unsigned INTEDG1 : 1;
[; ;pic18f26k20.h: 2194: volatile unsigned INTEDG0 : 1;
[; ;pic18f26k20.h: 2195: volatile unsigned nRBPU : 1;
[; ;pic18f26k20.h: 2196: };
[; ;pic18f26k20.h: 2197: struct {
[; ;pic18f26k20.h: 2198: volatile unsigned : 7;
[; ;pic18f26k20.h: 2199: volatile unsigned RBPU : 1;
[; ;pic18f26k20.h: 2200: };
[; ;pic18f26k20.h: 2201: } INTCON2bits @ 0xFF1;
[; ;pic18f26k20.h: 2204: extern volatile unsigned char INTCON @ 0xFF2;
[; ;pic18f26k20.h: 2206: extern volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
[; ;pic18f26k20.h: 2207: extern volatile bit INT0IF @ ((unsigned)&INTCON*8)+1;
[; ;pic18f26k20.h: 2208: extern volatile bit TMR0IF @ ((unsigned)&INTCON*8)+2;
[; ;pic18f26k20.h: 2209: extern volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
[; ;pic18f26k20.h: 2210: extern volatile bit INT0IE @ ((unsigned)&INTCON*8)+4;
[; ;pic18f26k20.h: 2211: extern volatile bit TMR0IE @ ((unsigned)&INTCON*8)+5;
[; ;pic18f26k20.h: 2212: extern volatile bit PEIE_GIEL @ ((unsigned)&INTCON*8)+6;
[; ;pic18f26k20.h: 2213: extern volatile bit GIE_GIEH @ ((unsigned)&INTCON*8)+7;
[; ;pic18f26k20.h: 2214: extern volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
[; ;pic18f26k20.h: 2215: extern volatile bit GIE @ ((unsigned)&INTCON*8)+7;
[; ;pic18f26k20.h: 2216: extern volatile bit GIEL @ ((unsigned)&INTCON*8)+6;
[; ;pic18f26k20.h: 2217: extern volatile bit GIEH @ ((unsigned)&INTCON*8)+7;
[; ;pic18f26k20.h: 2218: extern volatile bit INT0F @ ((unsigned)&INTCON*8)+1;
[; ;pic18f26k20.h: 2219: extern volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
[; ;pic18f26k20.h: 2220: extern volatile bit INT0E @ ((unsigned)&INTCON*8)+4;
[; ;pic18f26k20.h: 2221: extern volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
[; ;pic18f26k20.h: 2222: extern union {
[; ;pic18f26k20.h: 2223: struct {
[; ;pic18f26k20.h: 2224: volatile unsigned RBIF : 1;
[; ;pic18f26k20.h: 2225: volatile unsigned INT0IF : 1;
[; ;pic18f26k20.h: 2226: volatile unsigned TMR0IF : 1;
[; ;pic18f26k20.h: 2227: volatile unsigned RBIE : 1;
[; ;pic18f26k20.h: 2228: volatile unsigned INT0IE : 1;
[; ;pic18f26k20.h: 2229: volatile unsigned TMR0IE : 1;
[; ;pic18f26k20.h: 2230: volatile unsigned PEIE_GIEL : 1;
[; ;pic18f26k20.h: 2231: volatile unsigned GIE_GIEH : 1;
[; ;pic18f26k20.h: 2232: };
[; ;pic18f26k20.h: 2233: struct {
[; ;pic18f26k20.h: 2234: volatile unsigned : 1;
[; ;pic18f26k20.h: 2235: volatile unsigned : 1;
[; ;pic18f26k20.h: 2236: volatile unsigned : 1;
[; ;pic18f26k20.h: 2237: volatile unsigned : 1;
[; ;pic18f26k20.h: 2238: volatile unsigned : 1;
[; ;pic18f26k20.h: 2239: volatile unsigned : 1;
[; ;pic18f26k20.h: 2240: volatile unsigned PEIE : 1;
[; ;pic18f26k20.h: 2241: volatile unsigned GIE : 1;
[; ;pic18f26k20.h: 2242: };
[; ;pic18f26k20.h: 2243: struct {
[; ;pic18f26k20.h: 2244: volatile unsigned : 1;
[; ;pic18f26k20.h: 2245: volatile unsigned : 1;
[; ;pic18f26k20.h: 2246: volatile unsigned : 1;
[; ;pic18f26k20.h: 2247: volatile unsigned : 1;
[; ;pic18f26k20.h: 2248: volatile unsigned : 1;
[; ;pic18f26k20.h: 2249: volatile unsigned : 1;
[; ;pic18f26k20.h: 2250: volatile unsigned GIEL : 1;
[; ;pic18f26k20.h: 2251: volatile unsigned GIEH : 1;
[; ;pic18f26k20.h: 2252: };
[; ;pic18f26k20.h: 2253: struct {
[; ;pic18f26k20.h: 2254: volatile unsigned : 1;
[; ;pic18f26k20.h: 2255: volatile unsigned INT0F : 1;
[; ;pic18f26k20.h: 2256: volatile unsigned T0IF : 1;
[; ;pic18f26k20.h: 2257: volatile unsigned : 1;
[; ;pic18f26k20.h: 2258: volatile unsigned INT0E : 1;
[; ;pic18f26k20.h: 2259: volatile unsigned T0IE : 1;
[; ;pic18f26k20.h: 2260: volatile unsigned : 1;
[; ;pic18f26k20.h: 2261: volatile unsigned : 1;
[; ;pic18f26k20.h: 2262: };
[; ;pic18f26k20.h: 2263: struct {
[; ;pic18f26k20.h: 2264: volatile unsigned : 6;
[; ;pic18f26k20.h: 2265: volatile unsigned : 1;
[; ;pic18f26k20.h: 2266: volatile unsigned : 1;
[; ;pic18f26k20.h: 2267: };
[; ;pic18f26k20.h: 2268: } INTCONbits @ 0xFF2;
[; ;pic18f26k20.h: 2272: extern volatile unsigned char PRODL @ 0xFF3;
[; ;pic18f26k20.h: 2276: extern volatile unsigned char PRODH @ 0xFF4;
[; ;pic18f26k20.h: 2280: extern volatile unsigned int PROD @ 0xFF3;
[; ;pic18f26k20.h: 2283: extern volatile unsigned char TABLAT @ 0xFF5;
[; ;pic18f26k20.h: 2288: extern volatile unsigned char TBLPTRL @ 0xFF6;
[; ;pic18f26k20.h: 2292: extern volatile unsigned char TBLPTRH @ 0xFF7;
[; ;pic18f26k20.h: 2296: extern volatile unsigned char TBLPTRU @ 0xFF8;
[; ;pic18f26k20.h: 2298: extern union {
[; ;pic18f26k20.h: 2299: struct {
[; ;pic18f26k20.h: 2300: volatile unsigned : 5;
[; ;pic18f26k20.h: 2301: volatile unsigned : 1;
[; ;pic18f26k20.h: 2302: };
[; ;pic18f26k20.h: 2303: } TBLPTRUbits @ 0xFF8;
[; ;pic18f26k20.h: 2306: extern volatile far unsigned char * TBLPTR @ 0xFF6;
[; ;pic18f26k20.h: 2310: extern volatile unsigned char PCL @ 0xFF9;
[; ;pic18f26k20.h: 2314: extern volatile unsigned char PCLATH @ 0xFFA;
[; ;pic18f26k20.h: 2318: extern volatile unsigned char PCLATU @ 0xFFB;
[; ;pic18f26k20.h: 2320: extern union {
[; ;pic18f26k20.h: 2321: struct {
[; ;pic18f26k20.h: 2322: volatile unsigned : 5;
[; ;pic18f26k20.h: 2323: };
[; ;pic18f26k20.h: 2324: } PCLATUbits @ 0xFFB;
[; ;pic18f26k20.h: 2327: extern volatile unsigned short long int PCLAT @ 0xFF9;
[; ;pic18f26k20.h: 2330: extern volatile unsigned char STKPTR @ 0xFFC;
[; ;pic18f26k20.h: 2332: extern volatile bit STKUNF @ ((unsigned)&STKPTR*8)+6;
[; ;pic18f26k20.h: 2333: extern volatile bit STKFUL @ ((unsigned)&STKPTR*8)+7;
[; ;pic18f26k20.h: 2334: extern volatile bit SP0 @ ((unsigned)&STKPTR*8)+0;
[; ;pic18f26k20.h: 2335: extern volatile bit SP1 @ ((unsigned)&STKPTR*8)+1;
[; ;pic18f26k20.h: 2336: extern volatile bit SP2 @ ((unsigned)&STKPTR*8)+2;
[; ;pic18f26k20.h: 2337: extern volatile bit SP3 @ ((unsigned)&STKPTR*8)+3;
[; ;pic18f26k20.h: 2338: extern volatile bit SP4 @ ((unsigned)&STKPTR*8)+4;
[; ;pic18f26k20.h: 2339: extern volatile bit STKOVF @ ((unsigned)&STKPTR*8)+7;
[; ;pic18f26k20.h: 2340: extern union {
[; ;pic18f26k20.h: 2341: struct {
[; ;pic18f26k20.h: 2342: volatile unsigned STKPTR : 5;
[; ;pic18f26k20.h: 2343: volatile unsigned : 1;
[; ;pic18f26k20.h: 2344: volatile unsigned STKUNF : 1;
[; ;pic18f26k20.h: 2345: volatile unsigned STKFUL : 1;
[; ;pic18f26k20.h: 2346: };
[; ;pic18f26k20.h: 2347: struct {
[; ;pic18f26k20.h: 2348: volatile unsigned SP0 : 1;
[; ;pic18f26k20.h: 2349: volatile unsigned SP1 : 1;
[; ;pic18f26k20.h: 2350: volatile unsigned SP2 : 1;
[; ;pic18f26k20.h: 2351: volatile unsigned SP3 : 1;
[; ;pic18f26k20.h: 2352: volatile unsigned SP4 : 1;
[; ;pic18f26k20.h: 2353: volatile unsigned : 2;
[; ;pic18f26k20.h: 2354: volatile unsigned STKOVF : 1;
[; ;pic18f26k20.h: 2355: };
[; ;pic18f26k20.h: 2356: } STKPTRbits @ 0xFFC;
[; ;pic18f26k20.h: 2360: extern volatile unsigned char TOSL @ 0xFFD;
[; ;pic18f26k20.h: 2364: extern volatile unsigned char TOSH @ 0xFFE;
[; ;pic18f26k20.h: 2368: extern volatile unsigned char TOSU @ 0xFFF;
[; ;pic18f26k20.h: 2370: extern union {
[; ;pic18f26k20.h: 2371: struct {
[; ;pic18f26k20.h: 2372: volatile unsigned : 5;
[; ;pic18f26k20.h: 2373: };
[; ;pic18f26k20.h: 2374: } TOSUbits @ 0xFFF;
[; ;pic18f26k20.h: 2377: extern volatile unsigned short long int TOS @ 0xFFD;
[; ;pic18f26k20.h: 2380: extern volatile unsigned int TMR0_Internal @ 0x1000;
[; ;pic18f26k20.h: 2382: extern union {
[; ;pic18f26k20.h: 2383: struct {
[; ;pic18f26k20.h: 2384: volatile unsigned InternalTMR : 16;
[; ;pic18f26k20.h: 2385: };
[; ;pic18f26k20.h: 2386: } TMR0_Internalbits @ 0x1000;
[; ;pic18f26k20.h: 2389: extern volatile unsigned char TMR0_Prescale @ 0x1002;
[; ;pic18f26k20.h: 2393: extern volatile unsigned int TMR1_Internal @ 0x1003;
[; ;pic18f26k20.h: 2395: extern union {
[; ;pic18f26k20.h: 2396: struct {
[; ;pic18f26k20.h: 2397: volatile unsigned InternalTMR : 16;
[; ;pic18f26k20.h: 2398: };
[; ;pic18f26k20.h: 2399: } TMR1_Internalbits @ 0x1003;
[; ;pic18f26k20.h: 2402: extern volatile unsigned char TMR1_Prescale @ 0x1005;
[; ;pic18f26k20.h: 2406: extern volatile unsigned char TMR2_Prescale @ 0x1006;
[; ;pic18f26k20.h: 2410: extern volatile unsigned int TMR3_Internal @ 0x1007;
[; ;pic18f26k20.h: 2412: extern union {
[; ;pic18f26k20.h: 2413: struct {
[; ;pic18f26k20.h: 2414: volatile unsigned InternalTMR : 16;
[; ;pic18f26k20.h: 2415: };
[; ;pic18f26k20.h: 2416: } TMR3_Internalbits @ 0x1007;
[; ;pic18f26k20.h: 2419: extern volatile unsigned char TMR3_Prescale @ 0x1009;
[; ;ppic18f26k20.h: 6: extern near unsigned char SPBRG1 @ 0xFAF;
[; ;ppic18f26k20.h: 7: extern volatile near unsigned char RCREG1 @ 0xFAE;
[; ;ppic18f26k20.h: 8: extern volatile near unsigned char TXREG1 @ 0xFAD;
[; ;ppic18f26k20.h: 9: extern volatile near unsigned char TXSTA1 @ 0xFAC;
[; ;ppic18f26k20.h: 10: extern volatile near unsigned char RCSTA1 @ 0xFAB;
[; ;ppic18f26k20.h: 13: extern volatile near bit NEGATIVE @ ((unsigned)&STATUS*8)+4;
[; ;ppic18f26k20.h: 15: extern near bit T1RD16 @ ((unsigned)&T1CON*8)+7;
[; ;ppic18f26k20.h: 16: ;
[; ;ppic18f26k20.h: 17: extern volatile near bit RW @ ((unsigned)&SSPSTAT*8)+2;
[; ;ppic18f26k20.h: 18: extern volatile near bit DA @ ((unsigned)&SSPSTAT*8)+5;
[; ;ppic18f26k20.h: 20: extern volatile near bit GODONE @ ((unsigned)&ADCON0*8)+1;
[; ;ppic18f26k20.h: 22: extern near bit T3RD16 @ ((unsigned)&T3CON*8)+7;
[; ;ppic18f26k20.h: 24: extern volatile near bit TX9D1 @ ((unsigned)&TXSTA*8)+0;
[; ;ppic18f26k20.h: 25: extern volatile near bit TRMT1 @ ((unsigned)&TXSTA*8)+1;
[; ;ppic18f26k20.h: 26: extern near bit BRGH1 @ ((unsigned)&TXSTA*8)+2;
[; ;ppic18f26k20.h: 27: extern near bit SENDB1 @ ((unsigned)&TXSTA*8)+3;
[; ;ppic18f26k20.h: 28: extern near bit SYNC1 @ ((unsigned)&TXSTA*8)+4;
[; ;ppic18f26k20.h: 29: extern near bit TXEN1 @ ((unsigned)&TXSTA*8)+5;
[; ;ppic18f26k20.h: 30: extern near bit TX91 @ ((unsigned)&TXSTA*8)+6;
[; ;ppic18f26k20.h: 31: extern near bit CSRC1 @ ((unsigned)&TXSTA*8)+7;
[; ;ppic18f26k20.h: 33: extern near bit TX1IP @ ((unsigned)&IPR1*8)+4;
[; ;ppic18f26k20.h: 34: extern near bit RC1IP @ ((unsigned)&IPR1*8)+5;
[; ;ppic18f26k20.h: 36: extern volatile near bit TX1IF @ ((unsigned)&PIR1*8)+4;
[; ;ppic18f26k20.h: 37: extern volatile near bit RC1IF @ ((unsigned)&PIR1*8)+5;
[; ;ppic18f26k20.h: 39: extern near bit TX1IE @ ((unsigned)&PIE1*8)+4;
[; ;ppic18f26k20.h: 40: extern near bit RC1IE @ ((unsigned)&PIE1*8)+5;
[; ;ppic18f26k20.h: 42: extern volatile near bit RE0 @ ((unsigned)&PORTE*8)+0;
[; ;ppic18f26k20.h: 43: extern volatile near bit RE1 @ ((unsigned)&PORTE*8)+1;
[; ;ppic18f26k20.h: 44: extern volatile near bit RE2 @ ((unsigned)&PORTE*8)+2;
[; ;ppic18f26k20.h: 47: extern volatile near bit RC0 @ ((unsigned)&PORTC*8)+0;
[; ;ppic18f26k20.h: 48: extern volatile near bit RC1 @ ((unsigned)&PORTC*8)+1;
[; ;ppic18f26k20.h: 49: extern volatile near bit RC2 @ ((unsigned)&PORTC*8)+2;
[; ;ppic18f26k20.h: 50: extern volatile near bit RC3 @ ((unsigned)&PORTC*8)+3;
[; ;ppic18f26k20.h: 51: extern volatile near bit RC4 @ ((unsigned)&PORTC*8)+4;
[; ;ppic18f26k20.h: 52: extern volatile near bit RC5 @ ((unsigned)&PORTC*8)+5;
[; ;ppic18f26k20.h: 53: extern volatile near bit RC6 @ ((unsigned)&PORTC*8)+6;
[; ;ppic18f26k20.h: 54: extern volatile near bit RC7 @ ((unsigned)&PORTC*8)+7;
[; ;ppic18f26k20.h: 57: extern volatile near bit RB0 @ ((unsigned)&PORTB*8)+0;
[; ;ppic18f26k20.h: 58: extern volatile near bit RB1 @ ((unsigned)&PORTB*8)+1;
[; ;ppic18f26k20.h: 59: extern volatile near bit RB2 @ ((unsigned)&PORTB*8)+2;
[; ;ppic18f26k20.h: 60: extern volatile near bit RB3 @ ((unsigned)&PORTB*8)+3;
[; ;ppic18f26k20.h: 61: extern volatile near bit RB4 @ ((unsigned)&PORTB*8)+4;
[; ;ppic18f26k20.h: 62: extern volatile near bit RB5 @ ((unsigned)&PORTB*8)+5;
[; ;ppic18f26k20.h: 63: extern volatile near bit RB6 @ ((unsigned)&PORTB*8)+6;
[; ;ppic18f26k20.h: 64: extern volatile near bit RB7 @ ((unsigned)&PORTB*8)+7;
[; ;ppic18f26k20.h: 67: extern volatile near bit RA0 @ ((unsigned)&PORTA*8)+0;
[; ;ppic18f26k20.h: 68: extern volatile near bit RA1 @ ((unsigned)&PORTA*8)+1;
[; ;ppic18f26k20.h: 69: extern volatile near bit RA2 @ ((unsigned)&PORTA*8)+2;
[; ;ppic18f26k20.h: 70: extern volatile near bit RA3 @ ((unsigned)&PORTA*8)+3;
[; ;ppic18f26k20.h: 71: extern volatile near bit RA4 @ ((unsigned)&PORTA*8)+4;
[; ;ppic18f26k20.h: 72: extern volatile near bit RA5 @ ((unsigned)&PORTA*8)+5;
[; ;ppic18f26k20.h: 73: extern volatile near bit RA6 @ ((unsigned)&PORTA*8)+6;
[; ;ppic18f26k20.h: 74: extern volatile near bit RA7 @ ((unsigned)&PORTA*8)+7;
[; ;ppic18f26k20.h: 76: extern near bit ANS5 @ ((unsigned)&ANSEL*8)+5;
[; ;ppic18f26k20.h: 77: extern near bit ANS6 @ ((unsigned)&ANSEL*8)+6;
[; ;ppic18f26k20.h: 78: extern near bit ANS7 @ ((unsigned)&ANSEL*8)+7;
[; ;ppic18f26k20.h: 80: extern volatile near bit C1OUT @ ((unsigned)&CM1CON0*8)+6;
[; ;ppic18f26k20.h: 82: extern volatile near bit C2OUT @ ((unsigned)&CM2CON0*8)+6;
[; ;ppic18f26k20.h: 84: extern near bit SLRD @ ((unsigned)&SLRCON*8)+3;
[; ;ppic18f26k20.h: 85: extern near bit SLRE @ ((unsigned)&SLRCON*8)+4;
[; ;pic18.h: 1376: extern unsigned char idloc_read(unsigned char reg_no);
[; ;pic18.h: 1377: extern void idloc_write(unsigned char reg_no,unsigned char data);
[; ;pic18.h: 1498: extern unsigned char eeprom_read(unsigned int address);
[; ;pic18.h: 1499: extern void eeprom_write(unsigned int address,unsigned char data);
[; ;pic18.h: 1503: extern unsigned char flash_read(unsigned long addr);
[; ;pic18.h: 1507: extern void flash_write(const unsigned char *,unsigned int,far unsigned char *);
[; ;pic18.h: 1510: extern void flash_erase(unsigned long addr);
[; ;pic18.h: 1528: extern unsigned int config_read(unsigned char reg_no);
[; ;pic18.h: 1529: extern void config_write(unsigned char reg_no, unsigned int dataword);
[; ;pic18.h: 1532: extern unsigned int device_id_read(void);
[; ;pic18.h: 1535: extern void initiate_write(void);
[; ;pic18.h: 1554: extern unsigned char checksum8(unsigned long startAddr, unsigned long length);
[; ;pic18.h: 1555: extern unsigned int checksum16(unsigned long startAddr, unsigned long length);
[; ;pic18.h: 1556: extern unsigned long checksum32(unsigned long startAddr, unsigned long length);
[; ;pic18.h: 1569: extern void _delay(unsigned long);
[; ;pic18.h: 1571: extern void _delay3(unsigned char);
[; ;psupport.h: 31: extern volatile bit SEN_x @ ((unsigned)&SSPCON2*8)+0;
[; ;psupport.h: 32: extern volatile bit RSEN_x @ ((unsigned)&SSPCON2*8)+1;
[; ;psupport.h: 33: extern volatile bit PEN_x @ ((unsigned)&SSPCON2*8)+2;
[; ;psupport.h: 34: extern volatile bit RCEN_x @ ((unsigned)&SSPCON2*8)+3;
[; ;psupport.h: 35: extern volatile bit ACKEN_x @ ((unsigned)&SSPCON2*8)+4;
[; ;psupport.h: 36: extern volatile bit ACKDT_x @ ((unsigned)&SSPCON2*8)+5;
[; ;psupport.h: 37: extern volatile bit ACKSTAT_x @ ((unsigned)&SSPCON2*8)+6;
[; ;psupport.h: 38: extern volatile bit GCEN_x @ ((unsigned)&SSPCON2*8)+7;
[; ;psupport.h: 40: extern volatile bit CKP_x @ ((unsigned)&SSPCON1*8)+4;
[; ;psupport.h: 41: extern volatile bit SSPEN_x @ ((unsigned)&SSPCON1*8)+5;
[; ;psupport.h: 42: extern volatile bit SSPOV_x @ ((unsigned)&SSPCON1*8)+6;
[; ;psupport.h: 43: extern volatile bit WCOL_x @ ((unsigned)&SSPCON1*8)+7;
[; ;psupport.h: 44: extern volatile bit SSPM0_x @ ((unsigned)&SSPCON1*8)+0;
[; ;psupport.h: 45: extern volatile bit SSPM1_x @ ((unsigned)&SSPCON1*8)+1;
[; ;psupport.h: 46: extern volatile bit SSPM2_x @ ((unsigned)&SSPCON1*8)+2;
[; ;psupport.h: 47: extern volatile bit SSPM3_x @ ((unsigned)&SSPCON1*8)+3;
[; ;psupport.h: 88: extern volatile bit TX9D_x @ ((unsigned)&TXSTA*8)+0;
[; ;psupport.h: 89: extern volatile bit TRMT_x @ ((unsigned)&TXSTA*8)+1;
[; ;psupport.h: 90: extern volatile bit BRGH_x @ ((unsigned)&TXSTA*8)+2;
[; ;psupport.h: 91: extern volatile bit SENDB_x @ ((unsigned)&TXSTA*8)+3;
[; ;psupport.h: 92: extern volatile bit SYNC_x @ ((unsigned)&TXSTA*8)+4;
[; ;psupport.h: 93: extern volatile bit TXEN_x @ ((unsigned)&TXSTA*8)+5;
[; ;psupport.h: 94: extern volatile bit TX9_x @ ((unsigned)&TXSTA*8)+6;
[; ;psupport.h: 95: extern volatile bit CSRC_x @ ((unsigned)&TXSTA*8)+7;
[; ;psupport.h: 98: extern volatile bit RX9D_x @ ((unsigned)&RCSTA*8)+0;
[; ;psupport.h: 99: extern volatile bit OERR_x @ ((unsigned)&RCSTA*8)+1;
[; ;psupport.h: 100: extern volatile bit FERR_x @ ((unsigned)&RCSTA*8)+2;
[; ;psupport.h: 101: extern volatile bit ADDEN_x @ ((unsigned)&RCSTA*8)+3;
[; ;psupport.h: 102: extern volatile bit CREN_x @ ((unsigned)&RCSTA*8)+4;
[; ;psupport.h: 103: extern volatile bit SREN_x @ ((unsigned)&RCSTA*8)+5;
[; ;psupport.h: 104: extern volatile bit RX9_x @ ((unsigned)&RCSTA*8)+6;
[; ;psupport.h: 105: extern volatile bit SPEN_x @ ((unsigned)&RCSTA*8)+7;
[; ;psupport.h: 107: extern volatile bit TXIE_x @ ((unsigned)&PIE1*8)+4;
[; ;psupport.h: 108: extern volatile bit RCIE_x @ ((unsigned)&PIE1*8)+5;
[; ;psupport.h: 166: extern volatile bit BF_x @ ((unsigned)&SSPSTAT*8)+0;
[; ;psupport.h: 171: extern volatile bit R_W_x @ ((unsigned)&SSPSTAT*8)+2;
[; ;psupport.h: 175: extern volatile bit CKE_x @ ((unsigned)&SSPSTAT*8)+6;
[; ;adc.h: 556: union ADCResult
[; ;adc.h: 557: {
[; ;adc.h: 558: int lr;
[; ;adc.h: 559: char br[2];
[; ;adc.h: 560: };
[; ;adc.h: 638: void OpenADC ( unsigned char ,
[; ;adc.h: 639: unsigned char ,
[; ;adc.h: 640: unsigned int );
[; ;ancomp.h: 20: void Open_ancomp1(unsigned char config);
[; ;ancomp.h: 21: void Open_ancomp2(unsigned char config);
[; ;spi.h: 216: void OpenSPI( unsigned char sync_mode,
[; ;spi.h: 217: unsigned char bus_mode,
[; ;spi.h: 218: unsigned char smp_phase );
[; ;spi.h: 223: extern unsigned char WriteSPI( unsigned char data_out );
[; ;spi.h: 228: void getsSPI( unsigned char *rdptr, unsigned char length );
[; ;spi.h: 233: void putsSPI( unsigned char *wrptr );
[; ;spi.h: 238: extern unsigned char ReadSPI( void );
[; ;spi_can.h: 33: typedef union EFLG {
[; ;spi_can.h: 34: unsigned char byte;
[; ;spi_can.h: 35: near struct {
[; ;spi_can.h: 36: unsigned RX1OVR:1;
[; ;spi_can.h: 37: unsigned RX0OVR:1;
[; ;spi_can.h: 38: unsigned TXBO:1;
[; ;spi_can.h: 39: unsigned TXEP:1;
[; ;spi_can.h: 40: unsigned RXEP:1;
[; ;spi_can.h: 41: unsigned TXWARN:1;
[; ;spi_can.h: 42: unsigned RXWARN:1;
[; ;spi_can.h: 43: unsigned EWANN:1;
[; ;spi_can.h: 44: };
[; ;spi_can.h: 45: } CAN2510_REG_EFLGbits_type ;
[; ;can2510.h: 410: void CAN2510Initialize( unsigned int configuration,
[; ;can2510.h: 411: unsigned char brp,
[; ;can2510.h: 412: unsigned char interruptFlags,
[; ;can2510.h: 413: unsigned char SPI_syncMode,
[; ;can2510.h: 414: unsigned char SPI_busMode,
[; ;can2510.h: 415: unsigned char SPI_smpPhase );
[; ;can2510.h: 417: unsigned char CAN2510Init( unsigned short long BufferConfig,
[; ;can2510.h: 418: unsigned short long BitTimeConfig,
[; ;can2510.h: 419: unsigned char interruptEnables,
[; ;can2510.h: 420: unsigned char SPI_syncMode,
[; ;can2510.h: 421: unsigned char SPI_busMode,
[; ;can2510.h: 422: unsigned char SPI_smpPhase );
[; ;can2510.h: 461: unsigned char CAN2510ReadStatus( void );
[; ;can2510.h: 463: unsigned char CAN2510ErrorState( void );
[; ;can2510.h: 465: unsigned char CAN2510ByteRead( unsigned char addr );
[; ;can2510.h: 467: void CAN2510SequentialRead( unsigned char *DataArray,
[; ;can2510.h: 468: unsigned char CAN2510addr,
[; ;can2510.h: 469: unsigned char numbytes );
[; ;can2510.h: 471: void CAN2510SequentialWrite( unsigned char *DataArray,
[; ;can2510.h: 472: unsigned char CAN2510addr,
[; ;can2510.h: 473: unsigned char numbytes );
[; ;can2510.h: 475: void CAN2510BitModify( unsigned char address,
[; ;can2510.h: 476: unsigned char mask,
[; ;can2510.h: 477: unsigned char data );
[; ;can2510.h: 479: void CAN2510SetSingleMaskStd( unsigned char maskNum, unsigned int mask );
[; ;can2510.h: 481: void CAN2510SetSingleMaskXtd( unsigned char maskNum, unsigned long mask );
[; ;can2510.h: 483: void CAN2510SetSingleFilterStd( unsigned char filterNum, unsigned int filter );
[; ;can2510.h: 485: void CAN2510SetSingleFilterXtd( unsigned char filterNum, unsigned long filter );
[; ;can2510.h: 487: unsigned char CAN2510SetMsgFilterStd( unsigned char bufferNum,
[; ;can2510.h: 488: unsigned int mask,
[; ;can2510.h: 489: unsigned int *filters );
[; ;can2510.h: 491: unsigned char CAN2510SetMsgFilterXtd( unsigned char bufferNum,
[; ;can2510.h: 492: unsigned long mask,
[; ;can2510.h: 493: unsigned long *filters );
[; ;can2510.h: 495: unsigned char CAN2510WriteStd( unsigned int msgId,
[; ;can2510.h: 496: unsigned char msgPriority,
[; ;can2510.h: 497: unsigned char numBytes,
[; ;can2510.h: 498: unsigned char *data );
[; ;can2510.h: 500: unsigned char CAN2510WriteXtd( unsigned long msgId,
[; ;can2510.h: 501: unsigned char msgPriority,
[; ;can2510.h: 502: unsigned char numBytes,
[; ;can2510.h: 503: unsigned char *data );
[; ;can2510.h: 505: void CAN2510LoadBufferStd( unsigned char bufferNum,
[; ;can2510.h: 506: unsigned int msgId,
[; ;can2510.h: 507: unsigned char numBytes,
[; ;can2510.h: 508: unsigned char *data );
[; ;can2510.h: 510: void CAN2510LoadBufferXtd( unsigned char bufferNum,
[; ;can2510.h: 511: unsigned long msgId,
[; ;can2510.h: 512: unsigned char numBytes,
[; ;can2510.h: 513: unsigned char *data );
[; ;can2510.h: 515: void CAN2510LoadRTRStd( unsigned char bufferNum,
[; ;can2510.h: 516: unsigned int msgId,
[; ;can2510.h: 517: unsigned char numBytes );
[; ;can2510.h: 519: void CAN2510LoadRTRXtd( unsigned char bufferNum,
[; ;can2510.h: 520: unsigned long msgId,
[; ;can2510.h: 521: unsigned char numBytes );
[; ;can2510.h: 523: void CAN2510SendBuffer( unsigned char bufferNumber );
[; ;can2510.h: 525: unsigned char CAN2510WriteBuffer( unsigned char bufferNum );
[; ;can2510.h: 527: unsigned char CAN2510DataReady( unsigned char bufferNum );
[; ;can2510.h: 529: unsigned char CAN2510DataRead( unsigned char bufferNum,
[; ;can2510.h: 530: unsigned long *msgId,
[; ;can2510.h: 531: unsigned char *numBytes,
[; ;can2510.h: 532: unsigned char *data );
[; ;capture.h: 35: union capstatus
[; ;capture.h: 36: {
[; ;capture.h: 39: struct
[; ;capture.h: 40: {
[; ;capture.h: 42: unsigned Cap1OVF:1;
[; ;capture.h: 46: unsigned Cap2OVF:1;
[; ;capture.h: 61: };
[; ;capture.h: 63: unsigned :8;
[; ;capture.h: 65: };
[; ;capture.h: 68: union capstatus CapStatus;
[; ;capture.h: 72: union CapResult
[; ;capture.h: 73: {
[; ;capture.h: 74: unsigned int lc;
[; ;capture.h: 75: char bc[2];
[; ;capture.h: 76: };
[; ;capture.h: 113: void OpenCapture1 ( unsigned char config);
[; ;capture.h: 114: unsigned int ReadCapture1 (void);
[; ;capture.h: 136: void OpenCapture2 ( unsigned char config);
[; ;capture.h: 137: unsigned int ReadCapture2 (void);
[; ;compare.h: 89: void OpenCompare1(unsigned char config,unsigned int period);
[; ;compare.h: 94: void OpenCompare2(unsigned char config, unsigned int period);
[; ;EEP.h: 12: unsigned char Read_b_eep(unsigned int badd );
[; ;i2c.h: 309: signed char putsI2C( unsigned char *wrptr );
[; ;i2c.h: 314: unsigned char ReadI2C( void );
[; ;i2c.h: 396: unsigned char WriteI2C( unsigned char data_out );
[; ;i2c.h: 401: unsigned char getsI2C( unsigned char *rdptr, unsigned char length );
[; ;i2c.h: 405: unsigned char EEAckPolling( unsigned char control );
[; ;i2c.h: 409: unsigned char EEByteWrite( unsigned char control,
[; ;i2c.h: 410: unsigned char address,
[; ;i2c.h: 411: unsigned char data );
[; ;i2c.h: 415: unsigned int EECurrentAddRead( unsigned char control );
[; ;i2c.h: 419: unsigned char EEPageWrite( unsigned char control,
[; ;i2c.h: 420: unsigned char address,
[; ;i2c.h: 421: unsigned char *wrptr );
[; ;i2c.h: 425: unsigned int EERandomRead( unsigned char control, unsigned char address );
[; ;i2c.h: 429: unsigned char EESequentialRead( unsigned char control,
[; ;i2c.h: 430: unsigned char address,
[; ;i2c.h: 431: unsigned char *rdptr,
[; ;i2c.h: 432: unsigned char length );
[; ;mwire.h: 231: unsigned char ReadMwire( unsigned char high_byte,
[; ;mwire.h: 232: unsigned char low_byte );
[; ;mwire.h: 242: unsigned char WriteMwire( unsigned char data_out );
[; ;mwire.h: 252: void getsMwire( unsigned char *rdptr, unsigned char length );
[; ;portb.h: 62: void OpenPORTB(unsigned char);
[; ;portb.h: 72: void OpenRB0INT(unsigned char);
[; ;portb.h: 82: void OpenRB1INT(unsigned char);
[; ;portb.h: 92: void OpenRB2INT(unsigned char);
[; ;pwm.h: 57: union PWMDC
[; ;pwm.h: 58: {
[; ;pwm.h: 59: unsigned int lpwm;
[; ;pwm.h: 60: char bpwm[2];
[; ;pwm.h: 61: };
[; ;pwm.h: 123: void OpenPWM1ConfigIO(void);
[; ;pwm.h: 125: void OpenPWM1 ( char period);
[; ;pwm.h: 126: void SetDCPWM1 ( unsigned int duty_cycle);
[; ;pwm.h: 131: void SetOutputPWM1 ( unsigned char output_config,
[; ;pwm.h: 132: unsigned char pwm_mode);
[; ;pwm.h: 142: void ClosePWM1 (void);
[; ;pwm.h: 151: void OpenPWM2 ( char period);
[; ;pwm.h: 152: void SetDCPWM2( unsigned int duty_cycle);
[; ;reset.h: 17: char isMCLR(void);
[; ;reset.h: 22: char isBOR(void);
[; ;reset.h: 27: char isWDTTO(void);
[; ;reset.h: 28: char isWDTWU(void);
[; ;reset.h: 31: char isPOR(void);
[; ;reset.h: 32: char isWU(void);
[; ;rtcc.h: 10: unsigned char update_RTCC(void);
[; ;sw_i2c.h: 9: void SWStopI2C ( void );
[; ;sw_i2c.h: 10: void SWStartI2C ( void );
[; ;sw_i2c.h: 11: void SWRestartI2C ( void );
[; ;sw_i2c.h: 12: void SWStopI2C ( void );
[; ;sw_i2c.h: 76: signed char SWAckI2C( void );
[; ;sw_i2c.h: 77: signed char Clock_test( void );
[; ;sw_i2c.h: 78: unsigned int SWReadI2C( void );
[; ;sw_i2c.h: 79: signed char SWWriteI2C( unsigned char data_out );
[; ;sw_i2c.h: 80: signed char SWGetsI2C( unsigned char *rdptr, unsigned char length );
[; ;sw_i2c.h: 81: signed char SWPutsI2C( unsigned char *wrptr );
[; ;sw_spi.h: 55: void OpenSWSPI(void);
[; ;sw_spi.h: 61: char WriteSWSPI(char);
[; ;sw_uart.h: 25: char ReadUART(void);
[; ;sw_uart.h: 30: void WriteUART(char);
[; ;sw_uart.h: 35: void getsUART(char *, unsigned char);
[; ;sw_uart.h: 40: void putsUART(char *);
[; ;sw_uart.h: 52: extern void DelayRxBitUART (void);
[; ;sw_uart.h: 53: extern void DelayRxHalfBitUART(void);
[; ;sw_uart.h: 54: extern void DelayTxBitUART (void);
[; ;timers.h: 8: union Timers
[; ;timers.h: 9: {
[; ;timers.h: 10: unsigned int lt;
[; ;timers.h: 11: char bt[2];
[; ;timers.h: 12: };
[; ;timers.h: 75: void OpenTimer0 (unsigned char config);
[; ;timers.h: 77: unsigned int ReadTimer0 (void);
[; ;timers.h: 78: void WriteTimer0 (unsigned int timer0);
[; ;timers.h: 140: void OpenTimer1 (unsigned char config);
[; ;timers.h: 191: unsigned int ReadTimer1 (void);
[; ;timers.h: 192: void WriteTimer1 (unsigned int timer1);
[; ;timers.h: 250: void OpenTimer2 (unsigned char config);
[; ;timers.h: 259: void OpenTimer3 (unsigned char config);
[; ;timers.h: 263: unsigned int ReadTimer3 (void);
[; ;timers.h: 264: void WriteTimer3 (unsigned int timer3);
[; ;usart.h: 220: union USART
[; ;usart.h: 221: {
[; ;usart.h: 222: unsigned char val;
[; ;usart.h: 223: struct
[; ;usart.h: 224: {
[; ;usart.h: 225: unsigned RX_NINE:1;
[; ;usart.h: 226: unsigned TX_NINE:1;
[; ;usart.h: 227: unsigned FRAME_ERROR:1;
[; ;usart.h: 228: unsigned OVERRUN_ERROR:1;
[; ;usart.h: 229: unsigned fill:4;
[; ;usart.h: 230: };
[; ;usart.h: 231: };
[; ;usart.h: 232: extern union USART USART_Status;
[; ;usart.h: 233: void OpenUSART (unsigned char config, unsigned spbrg);
[; ;usart.h: 235: char ReadUSART (void);
[; ;usart.h: 236: void WriteUSART (char data);
[; ;usart.h: 237: void getsUSART (char *buffer, unsigned char len);
[; ;usart.h: 238: void putsUSART (char *data);
[; ;xlcd.h: 72: void OpenXLCD(unsigned char);
[; ;xlcd.h: 77: void SetCGRamAddr(unsigned char);
[; ;xlcd.h: 82: void SetDDRamAddr(unsigned char);
[; ;xlcd.h: 87: unsigned char BusyXLCD(void);
[; ;xlcd.h: 92: unsigned char ReadAddrXLCD(void);
[; ;xlcd.h: 97: char ReadDataXLCD(void);
[; ;xlcd.h: 102: void WriteCmdXLCD(unsigned char);
[; ;xlcd.h: 107: void WriteDataXLCD(char);
[; ;xlcd.h: 117: void putsXLCD(char *);
[; ;xlcd.h: 122: void putrsXLCD(const char *);
[; ;xlcd.h: 125: extern void DelayFor18TCY(void);
[; ;xlcd.h: 126: extern void DelayPORXLCD(void);
[; ;xlcd.h: 127: extern void DelayXLCD(void);
"13 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\hardware_config_11.h
[v _init `(i 1 ef ]
{
[; ;hardware_config_11.h: 13: init(){
[e :U _init ]
[f ]
[; ;hardware_config_11.h: 14: TRISC = 0b10000000;
"14
[e = _TRISC -> -> 128 `i `uc ]
[; ;hardware_config_11.h: 15: TRISB = 0b00000110;
"15
[e = _TRISB -> -> 6 `i `uc ]
[; ;hardware_config_11.h: 16: TRISA = 0b00000000;
"16
[e = _TRISA -> -> 0 `i `uc ]
[; ;hardware_config_11.h: 24: T1CON = 0b01111001;
"24
[e = _T1CON -> -> 121 `i `uc ]
[; ;hardware_config_11.h: 26: WDTCON = 0;
"26
[e = _WDTCON -> -> 0 `i `uc ]
[; ;hardware_config_11.h: 29: ANSEL = 0b00000000;
"29
[e = _ANSEL -> -> 0 `i `uc ]
[; ;hardware_config_11.h: 30: ANSELH = 0b00000100;
"30
[e = _ANSELH -> -> 4 `i `uc ]
[; ;hardware_config_11.h: 31: ADCON0 = 0b00101001;
"31
[e = _ADCON0 -> -> 41 `i `uc ]
[; ;hardware_config_11.h: 32: ADCON1 = 0b00000000;
"32
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;hardware_config_11.h: 33: ADCON2 = 0b10111110;
"33
[e = _ADCON2 -> -> 190 `i `uc ]
[; ;hardware_config_11.h: 34: }
"34
[e :UE 212 ]
}
"36
[v _dataPinOut `(i 1 ef ]
{
[; ;hardware_config_11.h: 36: dataPinOut(){
[e :U _dataPinOut ]
[f ]
[; ;hardware_config_11.h: 37: TRISB = 0b00000010;
"37
[e = _TRISB -> -> 2 `i `uc ]
[; ;hardware_config_11.h: 38: }
"38
[e :UE 213 ]
}
"40
[v _dataPinIn `(i 1 ef ]
{
[; ;hardware_config_11.h: 40: dataPinIn(){
[e :U _dataPinIn ]
[f ]
[; ;hardware_config_11.h: 41: TRISB = 0b00000110;
"41
[e = _TRISB -> -> 6 `i `uc ]
[; ;hardware_config_11.h: 42: }
"42
[e :UE 214 ]
}
[; ;uartring.h: 18: void sInit(unsigned long baud);
[; ;uartring.h: 19: char sInWaiting(void);
[; ;uartring.h: 20: char sGet(void);
[; ;uartring.h: 21: void sPut(char c);
[; ;uartring.h: 22: void sPuts(const char *s);
[; ;uartring.h: 23: void sPutint(unsigned int input);
[; ;uartring.h: 24: void sPutonehex(char data);
[; ;uartring.h: 25: void sPuthex(char input);
[; ;uartring.h: 28: extern volatile char rxbuffer[128];
[; ;uartring.h: 29: extern volatile char txbuffer[128];
[; ;uartring.h: 30: extern volatile char txip, txop, rxip, rxop;
[; ;uartring.c: 4: volatile char rxbuffer[128];
[; ;uartring.c: 5: volatile char txbuffer[128];
[; ;uartring.c: 6: volatile char txip, txop, rxip, rxop;
"8 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\uartring.c
[v _sInit `(v 1 ef1`ul ]
{
[; ;uartring.c: 8: void sInit(unsigned long baud){
[e :U _sInit ]
[v _baud `ul 1 r1 ]
[f ]
"9
[v _spbrg_calc `ul 1 a ]
[; ;uartring.c: 9: unsigned long spbrg_calc = ((32000000/baud)/16)-1;
[e = _spbrg_calc - / / -> -> 32000000 `l `ul _baud -> -> -> 16 `i `l `ul -> -> -> 1 `i `l `ul ]
[; ;uartring.c: 10: TXSTA = 0b00100100;
"10
[e = _TXSTA -> -> 36 `i `uc ]
[; ;uartring.c: 11: RCSTA = 0b10010000;
"11
[e = _RCSTA -> -> 144 `i `uc ]
[; ;uartring.c: 12: BAUDCON = 0;
"12
[e = _BAUDCON -> -> 0 `i `uc ]
[; ;uartring.c: 13: SPBRG = spbrg_calc;
"13
[e = _SPBRG -> _spbrg_calc `uc ]
[; ;uartring.c: 14: INTCON |= 0b01000000;
"14
[e =| _INTCON -> -> 64 `i `uc ]
[; ;uartring.c: 15: PIE1 |= 0b00110000;
"15
[e =| _PIE1 -> -> 48 `i `uc ]
[; ;uartring.c: 16: txip = txop = rxip = rxop = 0;
"16
[e = _txip = _txop = _rxip = _rxop -> -> 0 `i `uc ]
[; ;uartring.c: 17: }
"17
[e :UE 215 ]
}
"19
[v _sInWaiting `(uc 1 ef ]
{
[; ;uartring.c: 19: char sInWaiting(void){
[e :U _sInWaiting ]
[f ]
[; ;uartring.c: 20: if (OERR){
"20
[e $ ! _OERR 217  ]
{
[; ;uartring.c: 21: CREN = 0;
"21
[e = _CREN -> -> 0 `i `b ]
[; ;uartring.c: 22: CREN = 1;
"22
[e = _CREN -> -> 1 `i `b ]
[; ;uartring.c: 23: return 0;
"23
[e ) -> -> 0 `i `uc ]
[e $UE 216  ]
"24
}
[e :U 217 ]
[; ;uartring.c: 24: }
[; ;uartring.c: 25: return (rxip!=rxop);
"25
[e ) -> -> != -> _rxip `i -> _rxop `i `i `uc ]
[e $UE 216  ]
[; ;uartring.c: 26: }
"26
[e :UE 216 ]
}
"28
[v _sGet `(uc 1 ef ]
{
[; ;uartring.c: 28: char sGet(void){
[e :U _sGet ]
[f ]
"29
[v _c `uc 1 a ]
[; ;uartring.c: 29: char c;
[; ;uartring.c: 30: GIE = 0;
"30
[e = _GIE -> -> 0 `i `b ]
[; ;uartring.c: 31: c = rxbuffer[rxop];
"31
[e = _c *U + &U _rxbuffer * -> _rxop `ux -> -> # *U &U _rxbuffer `ui `ux ]
[; ;uartring.c: 32: rxop = (rxop+1) & (128 - 1);
"32
[e = _rxop -> & + -> _rxop `i -> 1 `i - -> 128 `i -> 1 `i `uc ]
[; ;uartring.c: 33: GIE = 1;
"33
[e = _GIE -> -> 1 `i `b ]
[; ;uartring.c: 34: return c;
"34
[e ) _c ]
[e $UE 218  ]
[; ;uartring.c: 35: }
"35
[e :UE 218 ]
}
"37
[v _sPut `(v 1 ef1`uc ]
{
[; ;uartring.c: 37: void sPut(char c){
[e :U _sPut ]
[v _c `uc 1 r1 ]
[f ]
[; ;uartring.c: 38: GIE = 0;
"38
[e = _GIE -> -> 0 `i `b ]
[; ;uartring.c: 39: if(txop == ((txip+1) & (128 - 1))){
"39
[e $ ! == -> _txop `i & + -> _txip `i -> 1 `i - -> 128 `i -> 1 `i 220  ]
{
[; ;uartring.c: 40: GIE = 1;
"40
[e = _GIE -> -> 1 `i `b ]
[; ;uartring.c: 41: while(TXIE);
"41
[e $U 221  ]
[e :U 222 ]
[e :U 221 ]
[e $ _TXIE 222  ]
[e :U 223 ]
[; ;uartring.c: 42: GIE = 0;
"42
[e = _GIE -> -> 0 `i `b ]
"43
}
[e :U 220 ]
[; ;uartring.c: 43: }
[; ;uartring.c: 44: txbuffer[txip] = c;
"44
[e = *U + &U _txbuffer * -> _txip `ux -> -> # *U &U _txbuffer `ui `ux _c ]
[; ;uartring.c: 45: txip = (txip+1) & (128 - 1);
"45
[e = _txip -> & + -> _txip `i -> 1 `i - -> 128 `i -> 1 `i `uc ]
[; ;uartring.c: 46: TXIE = 1;
"46
[e = _TXIE -> -> 1 `i `b ]
[; ;uartring.c: 47: GIE = 1;
"47
[e = _GIE -> -> 1 `i `b ]
[; ;uartring.c: 48: }
"48
[e :UE 219 ]
}
"50
[v _sPuts `(v 1 ef1`*Cuc ]
{
[; ;uartring.c: 50: void sPuts(const char *s){
[e :U _sPuts ]
[v _s `*Cuc 1 r1 ]
[f ]
[; ;uartring.c: 51: while(*s) sPut(*s++);
"51
[e $U 225  ]
[e :U 226 ]
[e ( _sPut (1 *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 225 ]
[e $ != -> *U _s `i -> -> -> 0 `i `Cuc `i 226  ]
[e :U 227 ]
[; ;uartring.c: 52: }
"52
[e :UE 224 ]
}
"54
[v _sPutint `(v 1 ef1`ui ]
{
[; ;uartring.c: 54: void sPutint(unsigned int input){
[e :U _sPutint ]
[v _input `ui 1 r1 ]
[f ]
"55
[v _buffer `uc -> 7 `i a ]
"56
[v _start `uc 1 a ]
[; ;uartring.c: 55: char buffer[7];
[; ;uartring.c: 56: char start = 0;
[e = _start -> -> 0 `i `uc ]
"57
[v _stop `uc 1 a ]
[; ;uartring.c: 57: char stop = 0;
[e = _stop -> -> 0 `i `uc ]
[; ;uartring.c: 58: if(input > 0b0111111111111111){
"58
[e $ ! > _input -> -> 32767 `i `ui 229  ]
{
[; ;uartring.c: 59: buffer[0] = '-';
"59
[e = *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 45 `ui `uc ]
[; ;uartring.c: 60: start = 1;
"60
[e = _start -> -> 1 `i `uc ]
[; ;uartring.c: 61: stop = 1;
"61
[e = _stop -> -> 1 `i `uc ]
[; ;uartring.c: 62: input = (input^0b1111111111111111) + 1;
"62
[e = _input + ^ _input -> 65535 `ui -> -> 1 `i `ui ]
"63
}
[e :U 229 ]
"64
[v _temp `ui 1 a ]
[; ;uartring.c: 63: }
[; ;uartring.c: 64: unsigned int temp = input;
[e = _temp _input ]
[; ;uartring.c: 65: while(temp >= 10){
"65
[e $U 230  ]
[e :U 231 ]
{
[; ;uartring.c: 66: stop += 1;
"66
[e =+ _stop -> -> 1 `i `uc ]
[; ;uartring.c: 67: temp /= 10;
"67
[e =/ _temp -> -> 10 `i `ui ]
"68
}
[e :U 230 ]
"65
[e $ >= _temp -> -> 10 `i `ui 231  ]
[e :U 232 ]
[; ;uartring.c: 68: }
[; ;uartring.c: 69: for (signed char j=stop; j>=start; j--){
"69
{
[v _j `c 1 a ]
[e = _j -> _stop `c ]
[e $U 236  ]
[e :U 233 ]
{
[; ;uartring.c: 70: buffer[j] = input%10 + '0';
"70
[e = *U + &U _buffer * -> -> _j `uc `ux -> -> # *U &U _buffer `ui `ux -> + % _input -> -> 10 `i `ui -> 48 `ui `uc ]
[; ;uartring.c: 71: input /= 10;
"71
[e =/ _input -> -> 10 `i `ui ]
"72
}
"69
[e -- _j -> -> 1 `i `c ]
[e :U 236 ]
[e $ >= -> _j `i -> _start `i 233  ]
[e :U 234 ]
"72
}
[; ;uartring.c: 72: }
[; ;uartring.c: 73: buffer[stop+1] = 0;
"73
[e = *U + &U _buffer * -> -> + -> _stop `i -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 0 `i `uc ]
[; ;uartring.c: 74: sPuts(&buffer);
"74
[e ( _sPuts (1 -> &U _buffer `*Cuc ]
[; ;uartring.c: 75: }
"75
[e :UE 228 ]
}
"77
[v _sPutonehex `(v 1 ef1`uc ]
{
[; ;uartring.c: 77: void sPutonehex(char data){
[e :U _sPutonehex ]
[v _data `uc 1 r1 ]
[f ]
[; ;uartring.c: 78: if(data < 10) sPut(data + '0');
"78
[e $ ! < -> _data `i -> 10 `i 238  ]
[e ( _sPut (1 -> + -> _data `ui -> 48 `ui `uc ]
[e $U 239  ]
"79
[e :U 238 ]
[; ;uartring.c: 79: else sPut(data + 55);
[e ( _sPut (1 -> + -> _data `i -> 55 `i `uc ]
[e :U 239 ]
[; ;uartring.c: 80: }
"80
[e :UE 237 ]
}
"82
[v _sPuthex `(v 1 ef1`uc ]
{
[; ;uartring.c: 82: void sPuthex(char input){
[e :U _sPuthex ]
[v _input `uc 1 r1 ]
[f ]
[; ;uartring.c: 83: sPutonehex((input & 0b11110000) >> 4);
"83
[e ( _sPutonehex (1 -> >> & -> _input `i -> 240 `i -> 4 `i `uc ]
[; ;uartring.c: 84: sPutonehex(input & 0b00001111);
"84
[e ( _sPutonehex (1 -> & -> _input `i -> 15 `i `uc ]
[; ;uartring.c: 85: }
"85
[e :UE 240 ]
}
[; ;batchpcb26k20.c: 9: typedef struct{
[; ;batchpcb26k20.c: 10: char nr_settings;
[; ;batchpcb26k20.c: 11: char bmc_en_rx;
[; ;batchpcb26k20.c: 12: char bmc_sends;
[; ;batchpcb26k20.c: 13: char bmc_en_hex;
[; ;batchpcb26k20.c: 14: char bmc_repeat;
[; ;batchpcb26k20.c: 15: char bmc_hops;
[; ;batchpcb26k20.c: 16: char doro_en_rx;
[; ;batchpcb26k20.c: 17: char gao_en_rx;
[; ;batchpcb26k20.c: 18: char gao_sends;
[; ;batchpcb26k20.c: 19: char esic_en_rx;
[; ;batchpcb26k20.c: 20: char nexa_en_rx;
[; ;batchpcb26k20.c: 21: char nexa_sends;
[; ;batchpcb26k20.c: 22: char waveman_sends;
[; ;batchpcb26k20.c: 23: char kangthai_sends;
[; ;batchpcb26k20.c: 24: }settings_t;
"26 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\batchpcb26k20.c
[v _loadDefaults `(v 1 ef1`*S241 ]
{
[; ;batchpcb26k20.c: 26: void loadDefaults(settings_t *settingsp){
[e :U _loadDefaults ]
[v _settingsp `*S241 1 r1 ]
[f ]
[; ;batchpcb26k20.c: 27: settingsp->nr_settings = 14;
"27
[e = . *U _settingsp 0 -> -> 14 `i `uc ]
[; ;batchpcb26k20.c: 28: settingsp->bmc_en_rx = 1;
"28
[e = . *U _settingsp 1 -> -> 1 `i `uc ]
[; ;batchpcb26k20.c: 29: settingsp->bmc_sends = 2;
"29
[e = . *U _settingsp 2 -> -> 2 `i `uc ]
[; ;batchpcb26k20.c: 30: settingsp->bmc_en_hex = 0;
"30
[e = . *U _settingsp 3 -> -> 0 `i `uc ]
[; ;batchpcb26k20.c: 31: settingsp->bmc_repeat = 1;
"31
[e = . *U _settingsp 4 -> -> 1 `i `uc ]
[; ;batchpcb26k20.c: 32: settingsp->bmc_hops = 2;
"32
[e = . *U _settingsp 5 -> -> 2 `i `uc ]
[; ;batchpcb26k20.c: 33: settingsp->doro_en_rx = 1;
"33
[e = . *U _settingsp 6 -> -> 1 `i `uc ]
[; ;batchpcb26k20.c: 34: settingsp->gao_en_rx = 1;
"34
[e = . *U _settingsp 7 -> -> 1 `i `uc ]
[; ;batchpcb26k20.c: 35: settingsp->gao_sends = 6;
"35
[e = . *U _settingsp 8 -> -> 6 `i `uc ]
[; ;batchpcb26k20.c: 36: settingsp->esic_en_rx = 1;
"36
[e = . *U _settingsp 9 -> -> 1 `i `uc ]
[; ;batchpcb26k20.c: 37: settingsp->nexa_en_rx = 1;
"37
[e = . *U _settingsp 10 -> -> 1 `i `uc ]
[; ;batchpcb26k20.c: 38: settingsp->nexa_sends = 5;
"38
[e = . *U _settingsp 11 -> -> 5 `i `uc ]
[; ;batchpcb26k20.c: 39: settingsp->waveman_sends = 8;
"39
[e = . *U _settingsp 12 -> -> 8 `i `uc ]
[; ;batchpcb26k20.c: 40: settingsp->kangthai_sends = 6;
"40
[e = . *U _settingsp 13 -> -> 6 `i `uc ]
[; ;batchpcb26k20.c: 41: }settings_t;
"41
[e :UE 242 ]
}
"43
[v _saveEeprom `(v 1 ef1`*uc ]
{
[; ;batchpcb26k20.c: 43: void saveEeprom(char* settingsp){
[e :U _saveEeprom ]
[v _settingsp `*uc 1 r1 ]
[f ]
[; ;batchpcb26k20.c: 44: for (char j=0; j<settingsp[0]; j++) eeprom_write(j, settingsp[j]);
"44
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $U 247  ]
[e :U 244 ]
[e ( _eeprom_write (2 , -> _j `ui *U + _settingsp * -> _j `ux -> -> # *U _settingsp `ui `ux ]
[e ++ _j -> -> 1 `i `uc ]
[e :U 247 ]
[e $ < -> _j `i -> *U + _settingsp * -> -> 0 `i `x -> -> # *U _settingsp `i `x `i 244  ]
[e :U 245 ]
}
[; ;batchpcb26k20.c: 45: }
"45
[e :UE 243 ]
}
"47
[v _loadEeprom `(v 1 ef1`*uc ]
{
[; ;batchpcb26k20.c: 47: void loadEeprom(char* settingsp){
[e :U _loadEeprom ]
[v _settingsp `*uc 1 r1 ]
[f ]
[; ;batchpcb26k20.c: 48: for (char j=0; j<eeprom_read(0); j++) settingsp[j] = eeprom_read(j);
"48
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $U 252  ]
[e :U 249 ]
[e = *U + _settingsp * -> _j `ux -> -> # *U _settingsp `ui `ux ( _eeprom_read (1 -> _j `ui ]
[e ++ _j -> -> 1 `i `uc ]
[e :U 252 ]
[e $ < -> _j `i -> ( _eeprom_read (1 -> -> 0 `i `ui `i 249  ]
[e :U 250 ]
}
[; ;batchpcb26k20.c: 49: }
"49
[e :UE 248 ]
}
"51
[v F2796 `(v 1 tf ]
[v _intRoutineHigh `IF2796 1 e ]
{
[; ;batchpcb26k20.c: 51: void interrupt intRoutineHigh(void){
[e :U _intRoutineHigh ]
[f ]
[; ;batchpcb26k20.c: 52: if(RCIF){ rxbuffer[rxip] = RCREG; rxip = (rxip+1) & (128 - 1); } if(TXIF && TXIE){ TXREG = txbuffer[txop]; txop = (txop+1) & (128 - 1); if(txop == txip) TXIE = 0; };
"52
[e $ ! _RCIF 254  ]
{
[e = *U + &U _rxbuffer * -> _rxip `ux -> -> # *U &U _rxbuffer `ui `ux _RCREG ]
[e = _rxip -> & + -> _rxip `i -> 1 `i - -> 128 `i -> 1 `i `uc ]
}
[e :U 254 ]
[e $ ! && _TXIF _TXIE 255  ]
{
[e = _TXREG *U + &U _txbuffer * -> _txop `ux -> -> # *U &U _txbuffer `ui `ux ]
[e = _txop -> & + -> _txop `i -> 1 `i - -> 128 `i -> 1 `i `uc ]
[e $ ! == -> _txop `i -> _txip `i 256  ]
[e = _TXIE -> -> 0 `i `b ]
[e :U 256 ]
}
[e :U 255 ]
[; ;batchpcb26k20.c: 53: }
"53
[e :UE 253 ]
}
"55
[v _delayms `(v 1 ef1`i ]
{
[; ;batchpcb26k20.c: 55: void delayms(int ms){
[e :U _delayms ]
[v _ms `i 1 r1 ]
[f ]
[; ;batchpcb26k20.c: 56: for (int counter = 0; counter < ms; counter++) _delay((unsigned long)((1)*(32000000/4000.0)));
"56
{
[v _counter `i 1 a ]
[e = _counter -> 0 `i ]
[e $U 261  ]
[e :U 258 ]
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 32000000 `l `d .4000.0 `ul ]
[e ++ _counter -> 1 `i ]
[e :U 261 ]
[e $ < _counter _ms 258  ]
[e :U 259 ]
}
[; ;batchpcb26k20.c: 57: }
"57
[e :UE 257 ]
}
"59
[v _waitTimer `(v 1 ef1`ui ]
{
[; ;batchpcb26k20.c: 59: void waitTimer(unsigned int value){
[e :U _waitTimer ]
[v _value `ui 1 r1 ]
[f ]
[; ;batchpcb26k20.c: 60: value = 0xFFFF - value;
"60
[e = _value - -> 65535 `ui _value ]
[; ;batchpcb26k20.c: 61: TMR1L = value & 0x00FF;
"61
[e = _TMR1L -> & _value -> -> 255 `i `ui `uc ]
[; ;batchpcb26k20.c: 62: TMR1H = (value & 0xFF00) >> 8;
"62
[e = _TMR1H -> >> & _value -> 65280 `ui -> 8 `i `uc ]
[; ;batchpcb26k20.c: 63: TMR1ON = 1;
"63
[e = _TMR1ON -> -> 1 `i `b ]
[; ;batchpcb26k20.c: 64: while(!TMR1IF);
"64
[e $U 263  ]
[e :U 264 ]
[e :U 263 ]
[e $ ! _TMR1IF 264  ]
[e :U 265 ]
[; ;batchpcb26k20.c: 65: TMR1ON = 0;
"65
[e = _TMR1ON -> -> 0 `i `b ]
[; ;batchpcb26k20.c: 66: TMR1IF = 0;
"66
[e = _TMR1IF -> -> 0 `i `b ]
[; ;batchpcb26k20.c: 67: }
"67
[e :UE 262 ]
}
"69
[v _asciiToHex `(uc 1 ef1`uc ]
{
[; ;batchpcb26k20.c: 69: char asciiToHex(char input){
[e :U _asciiToHex ]
[v _input `uc 1 r1 ]
[f ]
[; ;batchpcb26k20.c: 70: if(input <= '9') input -= '0';
"70
[e $ ! <= -> _input `ui -> 57 `ui 267  ]
[e =- _input -> -> 48 `ui `uc ]
[e $U 268  ]
"71
[e :U 267 ]
[; ;batchpcb26k20.c: 71: else input -= 55;
[e =- _input -> -> 55 `i `uc ]
[e :U 268 ]
[; ;batchpcb26k20.c: 72: return input;
"72
[e ) _input ]
[e $UE 266  ]
[; ;batchpcb26k20.c: 73: }
"73
[e :UE 266 ]
}
"75
[v _reverse `(uc 1 ef1`uc ]
{
[; ;batchpcb26k20.c: 75: char reverse(char input){
[e :U _reverse ]
[v _input `uc 1 r1 ]
[f ]
"76
[v _output `uc 1 a ]
[; ;batchpcb26k20.c: 76: char output = 0;
[e = _output -> -> 0 `i `uc ]
[; ;batchpcb26k20.c: 77: if (input & 0b00000001) output |= 0b00001000;
"77
[e $ ! != & -> _input `i -> 1 `i -> 0 `i 270  ]
[e =| _output -> -> 8 `i `uc ]
[e :U 270 ]
[; ;batchpcb26k20.c: 78: if (input & 0b00000010) output |= 0b00000100;
"78
[e $ ! != & -> _input `i -> 2 `i -> 0 `i 271  ]
[e =| _output -> -> 4 `i `uc ]
[e :U 271 ]
[; ;batchpcb26k20.c: 79: if (input & 0b00000100) output |= 0b00000010;
"79
[e $ ! != & -> _input `i -> 4 `i -> 0 `i 272  ]
[e =| _output -> -> 2 `i `uc ]
[e :U 272 ]
[; ;batchpcb26k20.c: 80: if (input & 0b00001000) output |= 0b00000001;
"80
[e $ ! != & -> _input `i -> 8 `i -> 0 `i 273  ]
[e =| _output -> -> 1 `i `uc ]
[e :U 273 ]
[; ;batchpcb26k20.c: 81: return output;
"81
[e ) _output ]
[e $UE 269  ]
[; ;batchpcb26k20.c: 82: }
"82
[e :UE 269 ]
}
"84
[v _startTransmit `(v 1 ef ]
{
[; ;batchpcb26k20.c: 84: void startTransmit(){
[e :U _startTransmit ]
[f ]
[; ;batchpcb26k20.c: 85: LATC4 = 1;
"85
[e = _LATC4 -> -> 1 `i `b ]
[; ;batchpcb26k20.c: 86: LATB3 = 1;
"86
[e = _LATB3 -> -> 1 `i `b ]
[; ;batchpcb26k20.c: 87: delayms(3);
"87
[e ( _delayms (1 -> 3 `i ]
[; ;batchpcb26k20.c: 88: dataPinOut();
"88
[e ( _dataPinOut ..  ]
[; ;batchpcb26k20.c: 89: }
"89
[e :UE 274 ]
}
"91
[v _stopTransmit `(v 1 ef ]
{
[; ;batchpcb26k20.c: 91: void stopTransmit(){
[e :U _stopTransmit ]
[f ]
[; ;batchpcb26k20.c: 92: dataPinIn();
"92
[e ( _dataPinIn ..  ]
[; ;batchpcb26k20.c: 93: delayms(3);
"93
[e ( _delayms (1 -> 3 `i ]
[; ;batchpcb26k20.c: 94: LATB3 = 0;
"94
[e = _LATB3 -> -> 0 `i `b ]
[; ;batchpcb26k20.c: 95: LATC4 = 0;
"95
[e = _LATC4 -> -> 0 `i `b ]
[; ;batchpcb26k20.c: 96: sPuts("$OK");
"96
[e ( _sPuts (1 :s 1C ]
[; ;batchpcb26k20.c: 97: sPut(10);
"97
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 98: }
"98
[e :UE 275 ]
}
"100
[v _startupBlinkLed `(v 1 ef ]
{
[; ;batchpcb26k20.c: 100: void startupBlinkLed(){
[e :U _startupBlinkLed ]
[f ]
"101
[v _j `uc 1 a ]
[; ;batchpcb26k20.c: 101: char j;
[; ;batchpcb26k20.c: 102: for (j = 0; j < 5; j++){
"102
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 5 `i 277  ]
[e $U 278  ]
[e :U 277 ]
{
[; ;batchpcb26k20.c: 103: LATC4 = LATC5 ^= 1;
"103
[e = _LATC4 =^ _LATC5 -> -> 1 `i `b ]
[; ;batchpcb26k20.c: 104: delayms(100);
"104
[e ( _delayms (1 -> 100 `i ]
"105
}
"102
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 5 `i 277  ]
[e :U 278 ]
"105
}
[; ;batchpcb26k20.c: 105: }
[; ;batchpcb26k20.c: 106: }
"106
[e :UE 276 ]
}
"108
[v _blinkRxLed `(v 1 ef ]
{
[; ;batchpcb26k20.c: 108: void blinkRxLed(){
[e :U _blinkRxLed ]
[f ]
[; ;batchpcb26k20.c: 109: LATC5 = 1;
"109
[e = _LATC5 -> -> 1 `i `b ]
[; ;batchpcb26k20.c: 110: TMR3H = 0; TMR3L = 0;
"110
[e = _TMR3H -> -> 0 `i `uc ]
[e = _TMR3L -> -> 0 `i `uc ]
[; ;batchpcb26k20.c: 111: TMR3ON = 1;
"111
[e = _TMR3ON -> -> 1 `i `b ]
[; ;batchpcb26k20.c: 112: }
"112
[e :UE 280 ]
}
"114
[v _readAd `(ui 1 ef ]
{
[; ;batchpcb26k20.c: 114: unsigned int readAd(){
[e :U _readAd ]
[f ]
"115
[v _value `uc 1 a ]
[; ;batchpcb26k20.c: 115: char value = 0;
[e = _value -> -> 0 `i `uc ]
"116
[v _temp `i 1 a ]
[; ;batchpcb26k20.c: 116: int temp = 0;
[e = _temp -> 0 `i ]
[; ;batchpcb26k20.c: 117: for (int j=0; j<1000; j++){
"117
{
[v _j `i 1 a ]
[e = _j -> 0 `i ]
[e $ < _j -> 1000 `i 282  ]
[e $U 283  ]
[e :U 282 ]
{
[; ;batchpcb26k20.c: 118: ADCON0 |= 0b00000011;
"118
[e =| _ADCON0 -> -> 3 `i `uc ]
[; ;batchpcb26k20.c: 119: while(ADCON0 & 0b00000010);
"119
[e $U 285  ]
[e :U 286 ]
[e :U 285 ]
[e $ != & -> _ADCON0 `i -> 2 `i -> 0 `i 286  ]
[e :U 287 ]
[; ;batchpcb26k20.c: 120: temp = (ADRESH<<8) | ADRESL;
"120
[e = _temp | << -> _ADRESH `i -> 8 `i -> _ADRESL `i ]
[; ;batchpcb26k20.c: 121: temp >>= 2;
"121
[e =>> _temp -> 2 `i ]
[; ;batchpcb26k20.c: 122: if (temp > value) value = temp;
"122
[e $ ! > _temp -> _value `i 288  ]
[e = _value -> _temp `uc ]
[e :U 288 ]
"123
}
"117
[e ++ _j -> 1 `i ]
[e $ < _j -> 1000 `i 282  ]
[e :U 283 ]
"123
}
[; ;batchpcb26k20.c: 123: }
[; ;batchpcb26k20.c: 124: return value;
"124
[e ) -> _value `ui ]
[e $UE 281  ]
[; ;batchpcb26k20.c: 125: }
"125
[e :UE 281 ]
}
"1 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\bmc.h
[v _bmcConvertHex `(v 1 ef2`*uc`*uc ]
{
[; ;bmc.h: 1: void bmcConvertHex(char *datap, char *data_len){
[e :U _bmcConvertHex ]
[v _datap `*uc 1 r1 ]
[v _data_len `*uc 1 r2 ]
[f ]
"2
[v _temp `uc 1 a ]
[; ;bmc.h: 2: char temp;
[; ;bmc.h: 3: for (char k=0; k<(*data_len); k+=2){
"3
{
[v _k `uc 1 a ]
[e = _k -> -> 0 `i `uc ]
[e $U 293  ]
[e :U 290 ]
{
[; ;bmc.h: 4: temp = asciiToHex(datap[k]) << 4;
"4
[e = _temp -> << -> ( _asciiToHex (1 *U + _datap * -> _k `ux -> -> # *U _datap `ui `ux `i -> 4 `i `uc ]
[; ;bmc.h: 5: temp += asciiToHex(datap[k+1]);
"5
[e =+ _temp ( _asciiToHex (1 *U + _datap * -> + -> _k `i -> 1 `i `x -> -> # *U _datap `i `x ]
[; ;bmc.h: 6: datap[k/2] = temp;
"6
[e = *U + _datap * -> / -> _k `i -> 2 `i `x -> -> # *U _datap `i `x _temp ]
"7
}
"3
[e =+ _k -> -> 2 `i `uc ]
[e :U 293 ]
[e $ < -> _k `i -> *U _data_len `i 290  ]
[e :U 291 ]
"7
}
[; ;bmc.h: 7: }
[; ;bmc.h: 8: *data_len /= 2;
"8
[e =/ *U _data_len -> 2 `i ]
[; ;bmc.h: 9: }
"9
[e :UE 289 ]
}
"12
[v _bmcTxByte `(v 1 ef1`uc ]
{
[; ;bmc.h: 12: void bmcTxByte(char data){
[e :U _bmcTxByte ]
[v _data `uc 1 r1 ]
[f ]
[; ;bmc.h: 14: for (char j=0; j<8; j++){
"14
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 8 `i 295  ]
[e $U 296  ]
[e :U 295 ]
{
[; ;bmc.h: 15: if (data&0b10000000){
"15
[e $ ! != & -> _data `i -> 128 `i -> 0 `i 298  ]
{
[; ;bmc.h: 16: LATB2 ^= 1;
"16
[e =^ _LATB2 -> -> 1 `i `b ]
[; ;bmc.h: 17: waitTimer(500);
"17
[e ( _waitTimer (1 -> -> 500 `i `ui ]
[; ;bmc.h: 18: LATB2 ^= 1;
"18
[e =^ _LATB2 -> -> 1 `i `b ]
[; ;bmc.h: 19: waitTimer(500);
"19
[e ( _waitTimer (1 -> -> 500 `i `ui ]
"20
}
[; ;bmc.h: 20: }
[e $U 299  ]
"21
[e :U 298 ]
[; ;bmc.h: 21: else{
{
[; ;bmc.h: 22: LATB2 ^= 1;
"22
[e =^ _LATB2 -> -> 1 `i `b ]
[; ;bmc.h: 23: waitTimer(500*2);
"23
[e ( _waitTimer (1 -> * -> 500 `i -> 2 `i `ui ]
"24
}
[e :U 299 ]
[; ;bmc.h: 24: }
[; ;bmc.h: 25: data <<= 1;
"25
[e =<< _data -> 1 `i ]
"26
}
"14
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 8 `i 295  ]
[e :U 296 ]
"26
}
[; ;bmc.h: 26: }
[; ;bmc.h: 27: }
"27
[e :UE 294 ]
}
"29
[v _bmcTx `(v 1 ef4`*uc`uc`uc`uc ]
{
[; ;bmc.h: 29: void bmcTx(char *datap, char data_len, char hops, char sends){
[e :U _bmcTx ]
[v _datap `*uc 1 r1 ]
[v _data_len `uc 1 r2 ]
[v _hops `uc 1 r3 ]
[v _sends `uc 1 r4 ]
[f ]
"33
[v _temp `uc 1 a ]
[; ;bmc.h: 33: char temp = (data_len&0b11111)|((hops&0b111)<<5);
[e = _temp -> | & -> _data_len `i -> 31 `i << & -> _hops `i -> 7 `i -> 5 `i `uc ]
"34
[v _checksum `uc 1 a ]
[; ;bmc.h: 34: char checksum = temp;
[e = _checksum _temp ]
[; ;bmc.h: 35: for (char k=0; k<data_len; k++) checksum += datap[k];
"35
{
[v _k `uc 1 a ]
[e = _k -> -> 0 `i `uc ]
[e $U 304  ]
[e :U 301 ]
[e =+ _checksum *U + _datap * -> _k `ux -> -> # *U _datap `ui `ux ]
[e ++ _k -> -> 1 `i `uc ]
[e :U 304 ]
[e $ < -> _k `i -> _data_len `i 301  ]
[e :U 302 ]
}
[; ;bmc.h: 37: startTransmit();
"37
[e ( _startTransmit ..  ]
[; ;bmc.h: 38: for (char j=0; j<sends; j++){
"38
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $U 308  ]
[e :U 305 ]
{
[; ;bmc.h: 39: for (char k=0; k<2; k++) bmcTxByte('S');
"39
{
[v _k `uc 1 a ]
[e = _k -> -> 0 `i `uc ]
[e $ < -> _k `i -> 2 `i 309  ]
[e $U 310  ]
[e :U 309 ]
[e ( _bmcTxByte (1 -> -> 83 `ui `uc ]
[e ++ _k -> -> 1 `i `uc ]
[e $ < -> _k `i -> 2 `i 309  ]
[e :U 310 ]
}
[; ;bmc.h: 40: bmcTxByte(temp);
"40
[e ( _bmcTxByte (1 _temp ]
[; ;bmc.h: 41: for (char k=0; k<data_len; k++) bmcTxByte(datap[k]);
"41
{
[v _k `uc 1 a ]
[e = _k -> -> 0 `i `uc ]
[e $U 315  ]
[e :U 312 ]
[e ( _bmcTxByte (1 *U + _datap * -> _k `ux -> -> # *U _datap `ui `ux ]
[e ++ _k -> -> 1 `i `uc ]
[e :U 315 ]
[e $ < -> _k `i -> _data_len `i 312  ]
[e :U 313 ]
}
[; ;bmc.h: 42: bmcTxByte(checksum);
"42
[e ( _bmcTxByte (1 _checksum ]
[; ;bmc.h: 43: LATB2 ^= 1;
"43
[e =^ _LATB2 -> -> 1 `i `b ]
[; ;bmc.h: 44: waitTimer(500);
"44
[e ( _waitTimer (1 -> -> 500 `i `ui ]
[; ;bmc.h: 45: LATB2 = 0;
"45
[e = _LATB2 -> -> 0 `i `b ]
[; ;bmc.h: 46: if (j != (sends-1)) waitTimer(3000);
"46
[e $ ! != -> _j `i - -> _sends `i -> 1 `i 316  ]
[e ( _waitTimer (1 -> -> 3000 `i `ui ]
[e :U 316 ]
"47
}
"38
[e ++ _j -> -> 1 `i `uc ]
[e :U 308 ]
[e $ < -> _j `i -> _sends `i 305  ]
[e :U 306 ]
"47
}
[; ;bmc.h: 47: }
[; ;bmc.h: 48: stopTransmit();
"48
[e ( _stopTransmit ..  ]
[; ;bmc.h: 49: }
"49
[e :UE 300 ]
}
"51
[v _bmcPrint `(v 1 ef2`*uc`uc ]
{
[; ;bmc.h: 51: void bmcPrint(char *datap, char in_hex){
[e :U _bmcPrint ]
[v _datap `*uc 1 r1 ]
[v _in_hex `uc 1 r2 ]
[f ]
"52
[v _payload_size `uc 1 a ]
[; ;bmc.h: 52: char payload_size = datap[0]&0b11111;
[e = _payload_size -> & -> *U + _datap * -> -> 0 `i `x -> -> # *U _datap `i `x `i -> 31 `i `uc ]
[; ;bmc.h: 53: sPuts("$B");
"53
[e ( _sPuts (1 :s 2C ]
[; ;bmc.h: 54: for(char j=1; j<(payload_size+1); j++){
"54
{
[v _j `uc 1 a ]
[e = _j -> -> 1 `i `uc ]
[e $U 321  ]
[e :U 318 ]
{
[; ;bmc.h: 55: if(in_hex) sPuthex(datap[j]);
"55
[e $ ! != -> _in_hex `i -> -> -> 0 `i `uc `i 322  ]
[e ( _sPuthex (1 *U + _datap * -> _j `ux -> -> # *U _datap `ui `ux ]
[e $U 323  ]
"56
[e :U 322 ]
[; ;bmc.h: 56: else sPut(datap[j]);
[e ( _sPut (1 *U + _datap * -> _j `ux -> -> # *U _datap `ui `ux ]
[e :U 323 ]
"57
}
"54
[e ++ _j -> -> 1 `i `uc ]
[e :U 321 ]
[e $ < -> _j `i + -> _payload_size `i -> 1 `i 318  ]
[e :U 319 ]
"57
}
[; ;bmc.h: 57: }
[; ;bmc.h: 58: sPut(10);
"58
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;bmc.h: 59: blinkRxLed();
"59
[e ( _blinkRxLed ..  ]
[; ;bmc.h: 60: }
"60
[e :UE 317 ]
}
"62
[v _bmcRepeat `(v 1 ef2`*uc`*S241 ]
{
[; ;bmc.h: 62: void bmcRepeat(char *datap, settings_t* settingsp){
[e :U _bmcRepeat ]
[v _datap `*uc 1 r1 ]
[v _settingsp `*S241 1 r2 ]
[f ]
"63
[v _payload_size `uc 1 a ]
[; ;bmc.h: 63: char payload_size = datap[0]&0b11111;
[e = _payload_size -> & -> *U + _datap * -> -> 0 `i `x -> -> # *U _datap `i `x `i -> 31 `i `uc ]
"64
[v _hops `uc 1 a ]
[; ;bmc.h: 64: char hops = datap[0]>>5;
[e = _hops -> >> -> *U + _datap * -> -> 0 `i `x -> -> # *U _datap `i `x `i -> 5 `i `uc ]
[; ;bmc.h: 65: if (hops > 0){
"65
[e $ ! > -> _hops `i -> 0 `i 325  ]
{
[; ;bmc.h: 66: if (hops < 7) hops--;
"66
[e $ ! < -> _hops `i -> 7 `i 326  ]
[e -- _hops -> -> 1 `i `uc ]
[e :U 326 ]
[; ;bmc.h: 67: bmcTx(datap+1, payload_size, hops, settingsp->bmc_sends);
"67
[e ( _bmcTx (4 , , , + _datap * -> -> 1 `i `x -> -> # *U _datap `i `x _payload_size _hops . *U _settingsp 2 ]
"68
}
[e :U 325 ]
[; ;bmc.h: 68: }
[; ;bmc.h: 69: }
"69
[e :UE 324 ]
}
"71
[v _bmcDecode `(v 1 ef2`uc`*S241 ]
{
[; ;bmc.h: 71: void bmcDecode(char rf_pulse_length, settings_t* settingsp){
[e :U _bmcDecode ]
[v _rf_pulse_length `uc 1 r1 ]
[v _settingsp `*S241 1 r2 ]
[f ]
"83
[v F2849 `uc 1 s thebit ]
"84
[v F2850 `uc 1 s bits ]
[i F2850
-> -> 0 `i `uc
]
"85
[v F2851 `uc 1 s nrbits ]
[i F2851
-> -> 0 `i `uc
]
"86
[v F2852 `uc -> 33 `i s bytes ]
"87
[v F2853 `uc 1 s nrbytes ]
[i F2853
-> -> 0 `i `uc
]
"88
[v F2854 `uc 1 s state ]
[i F2854
-> -> 0 `i `uc
]
[; ;bmc.h: 83: static char thebit;
[; ;bmc.h: 84: static char bits = 0;
[; ;bmc.h: 85: static char nrbits = 0;
[; ;bmc.h: 86: static char bytes[33];
[; ;bmc.h: 87: static char nrbytes = 0;
[; ;bmc.h: 88: static char state = 0;
[; ;bmc.h: 91: if((rf_pulse_length > 20)&&(rf_pulse_length < 40)){
"91
[e $ ! && > -> _rf_pulse_length `i -> 20 `i < -> _rf_pulse_length `i -> 40 `i 328  ]
{
[; ;bmc.h: 92: if(thebit == 4) thebit = 1;
"92
[e $ ! == -> F2849 `i -> 4 `i 329  ]
[e = F2849 -> -> 1 `i `uc ]
[e $U 330  ]
"93
[e :U 329 ]
[; ;bmc.h: 93: else thebit = 4;
[e = F2849 -> -> 4 `i `uc ]
[e :U 330 ]
"94
}
[; ;bmc.h: 94: }
[e $U 331  ]
"95
[e :U 328 ]
[; ;bmc.h: 95: else if((rf_pulse_length > 50)&&(rf_pulse_length < 70)) thebit = 0;
[e $ ! && > -> _rf_pulse_length `i -> 50 `i < -> _rf_pulse_length `i -> 70 `i 332  ]
[e = F2849 -> -> 0 `i `uc ]
[e $U 333  ]
"96
[e :U 332 ]
[; ;bmc.h: 96: else thebit = 2;
[e = F2849 -> -> 2 `i `uc ]
[e :U 333 ]
[e :U 331 ]
[; ;bmc.h: 98: if(thebit == 4) return;
"98
[e $ ! == -> F2849 `i -> 4 `i 334  ]
[e $UE 327  ]
[e :U 334 ]
[; ;bmc.h: 99: if (thebit == 2){
"99
[e $ ! == -> F2849 `i -> 2 `i 335  ]
{
[; ;bmc.h: 100: nrbits = 0;
"100
[e = F2851 -> -> 0 `i `uc ]
[; ;bmc.h: 101: state = 0;
"101
[e = F2854 -> -> 0 `i `uc ]
[; ;bmc.h: 102: return;
"102
[e $UE 327  ]
"103
}
[e :U 335 ]
[; ;bmc.h: 103: }
[; ;bmc.h: 104: bits <<= 1;
"104
[e =<< F2850 -> 1 `i ]
[; ;bmc.h: 105: bits |= thebit;
"105
[e =| F2850 F2849 ]
[; ;bmc.h: 106: nrbits++;
"106
[e ++ F2851 -> -> 1 `i `uc ]
[; ;bmc.h: 107: switch(state){
"107
[e $U 337  ]
{
[; ;bmc.h: 108: case 0:
"108
[e :U 338 ]
[; ;bmc.h: 109: if ((bits == 'S')&&(nrbits >= 8)){
"109
[e $ ! && == -> F2850 `ui -> 83 `ui >= -> F2851 `i -> 8 `i 339  ]
{
[; ;bmc.h: 110: nrbytes = nrbits = 0;
"110
[e = F2853 = F2851 -> -> 0 `i `uc ]
[; ;bmc.h: 111: state = 1;
"111
[e = F2854 -> -> 1 `i `uc ]
"112
}
[e :U 339 ]
[; ;bmc.h: 112: }
[; ;bmc.h: 113: break;
"113
[e $U 336  ]
[; ;bmc.h: 114: case 1:
"114
[e :U 340 ]
[; ;bmc.h: 115: if(nrbits == 8){
"115
[e $ ! == -> F2851 `i -> 8 `i 341  ]
{
[; ;bmc.h: 116: if ((nrbytes != 0)||(bits != 'S')){
"116
[e $ ! || != -> F2853 `i -> 0 `i != -> F2850 `ui -> 83 `ui 342  ]
{
[; ;bmc.h: 117: bytes[nrbytes++] = bits;
"117
[e = *U + &U F2852 * -> ++ F2853 -> -> 1 `i `uc `ux -> -> # *U &U F2852 `ui `ux F2850 ]
[; ;bmc.h: 118: if ((nrbytes >= 3)&&((nrbytes-2) == (bytes[0]&0b11111))){
"118
[e $ ! && >= -> F2853 `i -> 3 `i == - -> F2853 `i -> 2 `i & -> *U + &U F2852 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2852 `ui `ux `i -> 31 `i 343  ]
{
"119
[v _checksum `uc 1 a ]
[; ;bmc.h: 119: char checksum = 0;
[e = _checksum -> -> 0 `i `uc ]
[; ;bmc.h: 120: for (char j=0; j<(nrbytes-1); j++) checksum += bytes[j];
"120
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $U 347  ]
[e :U 344 ]
[e =+ _checksum *U + &U F2852 * -> _j `ux -> -> # *U &U F2852 `ui `ux ]
[e ++ _j -> -> 1 `i `uc ]
[e :U 347 ]
[e $ < -> _j `i - -> F2853 `i -> 1 `i 344  ]
[e :U 345 ]
}
[; ;bmc.h: 121: if (checksum == bytes[nrbytes-1]){
"121
[e $ ! == -> _checksum `i -> *U + &U F2852 * -> -> - -> F2853 `i -> 1 `i `ui `ux -> -> # *U &U F2852 `ui `ux `i 348  ]
{
[; ;bmc.h: 122: bmcPrint(&bytes, settingsp->bmc_en_hex);
"122
[e ( _bmcPrint (2 , &U F2852 . *U _settingsp 3 ]
[; ;bmc.h: 123: if(settingsp->bmc_repeat) bmcRepeat(&bytes, settingsp);
"123
[e $ ! != -> . *U _settingsp 4 `i -> -> -> 0 `i `uc `i 349  ]
[e ( _bmcRepeat (2 , &U F2852 _settingsp ]
[e :U 349 ]
"124
}
[e :U 348 ]
[; ;bmc.h: 124: }
[; ;bmc.h: 125: state = 0;
"125
[e = F2854 -> -> 0 `i `uc ]
"126
}
[e :U 343 ]
"127
}
[e :U 342 ]
[; ;bmc.h: 126: }
[; ;bmc.h: 127: }
[; ;bmc.h: 128: nrbits = 0;
"128
[e = F2851 -> -> 0 `i `uc ]
"129
}
[e :U 341 ]
[; ;bmc.h: 129: }
[; ;bmc.h: 130: break;
"130
[e $U 336  ]
"131
}
[; ;bmc.h: 131: }
[e $U 336  ]
"107
[e :U 337 ]
[e [\ F2854 , $ -> -> 0 `i `uc 338
 , $ -> -> 1 `i `uc 340
 336 ]
"131
[e :U 336 ]
[; ;bmc.h: 132: }
"132
[e :UE 327 ]
}
"1 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\gaomod.h
[v _gaoTx `(v 1 ef2`*uc`uc ]
{
[; ;gaomod.h: 1: void gaoTx(char *s, char resends){
[e :U _gaoTx ]
[v _s `*uc 1 r1 ]
[v _resends `uc 1 r2 ]
[f ]
"4
[v _temp `ul 1 a ]
"5
[v _data `ul 1 a ]
[; ;gaomod.h: 4: unsigned long temp;
[; ;gaomod.h: 5: unsigned long data = 0;
[e = _data -> -> -> 0 `i `l `ul ]
[; ;gaomod.h: 7: for (char j = 0; j < 5; j++){
"7
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 5 `i 351  ]
[e $U 352  ]
[e :U 351 ]
{
[; ;gaomod.h: 8: data |= asciiToHex(s[j]);
"8
[e =| _data -> ( _asciiToHex (1 *U + _s * -> _j `ux -> -> # *U _s `ui `ux `ul ]
[; ;gaomod.h: 9: data <<= 4;
"9
[e =<< _data -> 4 `i ]
"10
}
"7
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 5 `i 351  ]
[e :U 352 ]
"10
}
[; ;gaomod.h: 10: }
[; ;gaomod.h: 11: if((s[5] - '0') == 1) data |= 0xF;
"11
[e $ ! == - -> *U + _s * -> -> 5 `i `x -> -> # *U _s `i `x `ui -> 48 `ui -> -> 1 `i `ui 354  ]
[e =| _data -> -> -> 15 `i `l `ul ]
[e :U 354 ]
[; ;gaomod.h: 12: if((s[5] - '0') == 2) data |= 0xA;
"12
[e $ ! == - -> *U + _s * -> -> 5 `i `x -> -> # *U _s `i `x `ui -> 48 `ui -> -> 2 `i `ui 355  ]
[e =| _data -> -> -> 10 `i `l `ul ]
[e :U 355 ]
[; ;gaomod.h: 14: startTransmit();
"14
[e ( _startTransmit ..  ]
[; ;gaomod.h: 15: for (char resend = 0; resend < resends; resend++){
"15
{
[v _resend `uc 1 a ]
[e = _resend -> -> 0 `i `uc ]
[e $U 359  ]
[e :U 356 ]
{
[; ;gaomod.h: 16: temp = data;
"16
[e = _temp _data ]
[; ;gaomod.h: 17: for (char preamble = 0; preamble < 4; preamble++){
"17
{
[v _preamble `uc 1 a ]
[e = _preamble -> -> 0 `i `uc ]
[e $ < -> _preamble `i -> 4 `i 360  ]
[e $U 361  ]
[e :U 360 ]
{
[; ;gaomod.h: 18: LATB2 = 1;
"18
[e = _LATB2 -> -> 1 `i `b ]
[; ;gaomod.h: 19: waitTimer(590);
"19
[e ( _waitTimer (1 -> -> 590 `i `ui ]
[; ;gaomod.h: 20: LATB2 = 0;
"20
[e = _LATB2 -> -> 0 `i `b ]
[; ;gaomod.h: 21: waitTimer(590);
"21
[e ( _waitTimer (1 -> -> 590 `i `ui ]
"22
}
"17
[e ++ _preamble -> -> 1 `i `uc ]
[e $ < -> _preamble `i -> 4 `i 360  ]
[e :U 361 ]
"22
}
[; ;gaomod.h: 22: }
[; ;gaomod.h: 23: for (char bitnr = 0; bitnr < 24; bitnr++){
"23
{
[v _bitnr `uc 1 a ]
[e = _bitnr -> -> 0 `i `uc ]
[e $ < -> _bitnr `i -> 24 `i 363  ]
[e $U 364  ]
[e :U 363 ]
{
[; ;gaomod.h: 24: LATB2 = 1;
"24
[e = _LATB2 -> -> 1 `i `b ]
[; ;gaomod.h: 25: waitTimer(590);
"25
[e ( _waitTimer (1 -> -> 590 `i `ui ]
[; ;gaomod.h: 26: LATB2 = 0;
"26
[e = _LATB2 -> -> 0 `i `b ]
[; ;gaomod.h: 27: if(temp & 0b100000000000000000000000) waitTimer(590*2);
"27
[e $ ! != & _temp -> -> 8388608 `l `ul -> -> 0 `i `ul 366  ]
[e ( _waitTimer (1 -> * -> 590 `i -> 2 `i `ui ]
[e $U 367  ]
"28
[e :U 366 ]
[; ;gaomod.h: 28: else waitTimer(590);
[e ( _waitTimer (1 -> -> 590 `i `ui ]
[e :U 367 ]
[; ;gaomod.h: 29: LATB2 = 1;
"29
[e = _LATB2 -> -> 1 `i `b ]
[; ;gaomod.h: 30: waitTimer(590);
"30
[e ( _waitTimer (1 -> -> 590 `i `ui ]
[; ;gaomod.h: 31: LATB2 = 0;
"31
[e = _LATB2 -> -> 0 `i `b ]
[; ;gaomod.h: 32: if(temp & 0b100000000000000000000000) waitTimer(590);
"32
[e $ ! != & _temp -> -> 8388608 `l `ul -> -> 0 `i `ul 368  ]
[e ( _waitTimer (1 -> -> 590 `i `ui ]
[e $U 369  ]
"33
[e :U 368 ]
[; ;gaomod.h: 33: else waitTimer(590*2);
[e ( _waitTimer (1 -> * -> 590 `i -> 2 `i `ui ]
[e :U 369 ]
[; ;gaomod.h: 34: temp <<= 1;
"34
[e =<< _temp -> 1 `i ]
"35
}
"23
[e ++ _bitnr -> -> 1 `i `uc ]
[e $ < -> _bitnr `i -> 24 `i 363  ]
[e :U 364 ]
"35
}
[; ;gaomod.h: 35: }
[; ;gaomod.h: 36: LATB2 = 1;
"36
[e = _LATB2 -> -> 1 `i `b ]
[; ;gaomod.h: 37: waitTimer(590/2);
"37
[e ( _waitTimer (1 -> / -> 590 `i -> 2 `i `ui ]
[; ;gaomod.h: 38: LATB2 = 0;
"38
[e = _LATB2 -> -> 0 `i `b ]
[; ;gaomod.h: 39: waitTimer(7000);
"39
[e ( _waitTimer (1 -> -> 7000 `i `ui ]
"40
}
"15
[e ++ _resend -> -> 1 `i `uc ]
[e :U 359 ]
[e $ < -> _resend `i -> _resends `i 356  ]
[e :U 357 ]
"40
}
[; ;gaomod.h: 40: }
[; ;gaomod.h: 41: stopTransmit();
"41
[e ( _stopTransmit ..  ]
[; ;gaomod.h: 42: }
"42
[e :UE 350 ]
}
"44
[v _gaoPrint `(v 1 ef1`ul ]
{
[; ;gaomod.h: 44: void gaoPrint(unsigned long data){
[e :U _gaoPrint ]
[v _data `ul 1 r1 ]
[f ]
"45
[v _number `ul 1 a ]
[; ;gaomod.h: 45: unsigned long number;
[; ;gaomod.h: 46: sPuts("$G");
"46
[e ( _sPuts (1 :s 3C ]
[; ;gaomod.h: 47: for (char j = 0; j < 5; j++){
"47
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 5 `i 371  ]
[e $U 372  ]
[e :U 371 ]
{
[; ;gaomod.h: 48: number = data & 0xF0000000;
"48
[e = _number & _data -> -268435456 `ul ]
[; ;gaomod.h: 49: data <<= 4;
"49
[e =<< _data -> 4 `i ]
[; ;gaomod.h: 50: number >>= 28;
"50
[e =>> _number -> 28 `i ]
[; ;gaomod.h: 51: sPutonehex(number);
"51
[e ( _sPutonehex (1 -> _number `uc ]
"52
}
"47
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 5 `i 371  ]
[e :U 372 ]
"52
}
[; ;gaomod.h: 52: }
[; ;gaomod.h: 53: if ((data & 0xF0000000) == 0xF0000000) sPut('1');
"53
[e $ ! == & _data -> -268435456 `ul -> -268435456 `ul 374  ]
[e ( _sPut (1 -> -> 49 `ui `uc ]
[e $U 375  ]
"54
[e :U 374 ]
[; ;gaomod.h: 54: else if ((data & 0xF0000000) == 0xA0000000) sPut('2');
[e $ ! == & _data -> -268435456 `ul -> -1610612736 `ul 376  ]
[e ( _sPut (1 -> -> 50 `ui `uc ]
[e $U 377  ]
"55
[e :U 376 ]
[; ;gaomod.h: 55: else sPut('0');
[e ( _sPut (1 -> -> 48 `ui `uc ]
[e :U 377 ]
[e :U 375 ]
[; ;gaomod.h: 56: sPut(10);
"56
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;gaomod.h: 57: blinkRxLed();
"57
[e ( _blinkRxLed ..  ]
[; ;gaomod.h: 58: }
"58
[e :UE 370 ]
}
"60
[v _gaoDecode `(v 1 ef2`uc`uc ]
{
[; ;gaomod.h: 60: void gaoDecode(char rf_state, char rf_pulse_length){
[e :U _gaoDecode ]
[v _rf_state `uc 1 r1 ]
[v _rf_pulse_length `uc 1 r2 ]
[f ]
"68
[v F2873 `uc 1 s symbols ]
[i F2873
-> -> 0 `i `uc
]
"69
[v F2874 `uc 1 s nrsymbols ]
[i F2874
-> -> 0 `i `uc
]
"70
[v F2875 `uc 1 s gaobit ]
"71
[v F2876 `ul 1 s data ]
[i F2876
-> -> -> 0 `i `l `ul
]
"72
[v F2877 `uc 1 s nrbits ]
[i F2877
-> -> 0 `i `uc
]
"73
[v F2878 `uc 1 s preamble_data ]
[i F2878
-> -> 0 `i `uc
]
"74
[v F2879 `uc 1 s state ]
[i F2879
-> -> 0 `i `uc
]
[; ;gaomod.h: 68: static char symbols = 0;
[; ;gaomod.h: 69: static char nrsymbols = 0;
[; ;gaomod.h: 70: static char gaobit;
[; ;gaomod.h: 71: static unsigned long data = 0;
[; ;gaomod.h: 72: static char nrbits = 0;
[; ;gaomod.h: 73: static char preamble_data = 0;
[; ;gaomod.h: 74: static char state = 0;
[; ;gaomod.h: 77: gaobit = 4;
"77
[e = F2875 -> -> 4 `i `uc ]
[; ;gaomod.h: 78: if (rf_state){
"78
[e $ ! != -> _rf_state `i -> -> -> 0 `i `uc `i 379  ]
{
[; ;gaomod.h: 79: if ((rf_pulse_length > 20)&&(rf_pulse_length < 55)){
"79
[e $ ! && > -> _rf_pulse_length `i -> 20 `i < -> _rf_pulse_length `i -> 55 `i 380  ]
{
[; ;gaomod.h: 80: symbols &= (0xFF ^ (1 << nrsymbols));
"80
[e =& F2873 -> ^ -> 255 `i << -> 1 `i -> F2874 `i `uc ]
[; ;gaomod.h: 81: nrsymbols++;
"81
[e ++ F2874 -> -> 1 `i `uc ]
"82
}
[; ;gaomod.h: 82: }
[e $U 381  ]
"83
[e :U 380 ]
[; ;gaomod.h: 83: else{
{
[; ;gaomod.h: 84: nrsymbols = 0;
"84
[e = F2874 -> -> 0 `i `uc ]
[; ;gaomod.h: 85: gaobit = 2;
"85
[e = F2875 -> -> 2 `i `uc ]
"86
}
[e :U 381 ]
"87
}
[; ;gaomod.h: 86: }
[; ;gaomod.h: 87: }
[e $U 382  ]
"88
[e :U 379 ]
[; ;gaomod.h: 88: else{
{
[; ;gaomod.h: 89: if((rf_pulse_length > 20)&&(rf_pulse_length < 55)){
"89
[e $ ! && > -> _rf_pulse_length `i -> 20 `i < -> _rf_pulse_length `i -> 55 `i 383  ]
{
[; ;gaomod.h: 90: symbols &= (0xFF ^ (1 << nrsymbols));
"90
[e =& F2873 -> ^ -> 255 `i << -> 1 `i -> F2874 `i `uc ]
[; ;gaomod.h: 91: nrsymbols++;
"91
[e ++ F2874 -> -> 1 `i `uc ]
"92
}
[; ;gaomod.h: 92: }
[e $U 384  ]
"93
[e :U 383 ]
[; ;gaomod.h: 93: else if((rf_pulse_length > 55)&&(rf_pulse_length < 90)){
[e $ ! && > -> _rf_pulse_length `i -> 55 `i < -> _rf_pulse_length `i -> 90 `i 385  ]
{
[; ;gaomod.h: 94: symbols |= (1 << nrsymbols);
"94
[e =| F2873 -> << -> 1 `i -> F2874 `i `uc ]
[; ;gaomod.h: 95: nrsymbols++;
"95
[e ++ F2874 -> -> 1 `i `uc ]
"96
}
[; ;gaomod.h: 96: }
[e $U 386  ]
"97
[e :U 385 ]
[; ;gaomod.h: 97: else{
{
[; ;gaomod.h: 98: nrsymbols = 0;
"98
[e = F2874 -> -> 0 `i `uc ]
[; ;gaomod.h: 99: gaobit = 2;
"99
[e = F2875 -> -> 2 `i `uc ]
"100
}
[e :U 386 ]
[e :U 384 ]
"101
}
[e :U 382 ]
[; ;gaomod.h: 100: }
[; ;gaomod.h: 101: }
[; ;gaomod.h: 103: if (nrsymbols >= 4){
"103
[e $ ! >= -> F2874 `i -> 4 `i 387  ]
{
[; ;gaomod.h: 104: if (symbols == 0) gaobit = 5;
"104
[e $ ! == -> F2873 `i -> 0 `i 388  ]
[e = F2875 -> -> 5 `i `uc ]
[e $U 389  ]
"105
[e :U 388 ]
[; ;gaomod.h: 105: else if (symbols == 0b1000) gaobit = 0;
[e $ ! == -> F2873 `i -> 8 `i 390  ]
[e = F2875 -> -> 0 `i `uc ]
[e $U 391  ]
"106
[e :U 390 ]
[; ;gaomod.h: 106: else if (symbols == 0b0010) gaobit = 1;
[e $ ! == -> F2873 `i -> 2 `i 392  ]
[e = F2875 -> -> 1 `i `uc ]
[e $U 393  ]
"107
[e :U 392 ]
[; ;gaomod.h: 107: else gaobit = 2;
[e = F2875 -> -> 2 `i `uc ]
[e :U 393 ]
[e :U 391 ]
[e :U 389 ]
[; ;gaomod.h: 108: nrsymbols = 0;
"108
[e = F2874 -> -> 0 `i `uc ]
"109
}
[e :U 387 ]
[; ;gaomod.h: 109: }
[; ;gaomod.h: 112: if(gaobit == 4) return;
"112
[e $ ! == -> F2875 `i -> 4 `i 394  ]
[e $UE 378  ]
[e :U 394 ]
[; ;gaomod.h: 113: if (gaobit!=2) sPutint(gaobit);
"113
[e $ ! != -> F2875 `i -> 2 `i 395  ]
[e ( _sPutint (1 -> F2875 `ui ]
[e :U 395 ]
[; ;gaomod.h: 114: switch (state){
"114
[e $U 397  ]
{
[; ;gaomod.h: 115: case 0:
"115
[e :U 398 ]
[; ;gaomod.h: 116: if ((gaobit == 5)&&(preamble_data == 5)) state = 1;
"116
[e $ ! && == -> F2875 `i -> 5 `i == -> F2878 `i -> 5 `i 399  ]
[e = F2879 -> -> 1 `i `uc ]
[e :U 399 ]
[; ;gaomod.h: 117: preamble_data = gaobit;
"117
[e = F2878 F2875 ]
[; ;gaomod.h: 118: break;
"118
[e $U 396  ]
[; ;gaomod.h: 119: case 1:
"119
[e :U 400 ]
[; ;gaomod.h: 120: if ((gaobit == 2)||(gaobit == 5)){
"120
[e $ ! || == -> F2875 `i -> 2 `i == -> F2875 `i -> 5 `i 401  ]
{
[; ;gaomod.h: 121: if (nrbits >= 24){
"121
[e $ ! >= -> F2877 `i -> 24 `i 402  ]
{
[; ;gaomod.h: 122: data <<= 8;
"122
[e =<< F2876 -> 8 `i ]
[; ;gaomod.h: 123: gaoPrint(data);
"123
[e ( _gaoPrint (1 F2876 ]
"124
}
[e :U 402 ]
[; ;gaomod.h: 124: }
[; ;gaomod.h: 125: preamble_data = gaobit;
"125
[e = F2878 F2875 ]
[; ;gaomod.h: 126: nrbits = 0;
"126
[e = F2877 -> -> 0 `i `uc ]
[; ;gaomod.h: 127: state = 0;
"127
[e = F2879 -> -> 0 `i `uc ]
"128
}
[; ;gaomod.h: 128: }
[e $U 403  ]
"129
[e :U 401 ]
[; ;gaomod.h: 129: else{
{
[; ;gaomod.h: 130: data <<= 1;
"130
[e =<< F2876 -> 1 `i ]
[; ;gaomod.h: 131: data |= gaobit;
"131
[e =| F2876 -> F2875 `ul ]
[; ;gaomod.h: 132: nrbits++;
"132
[e ++ F2877 -> -> 1 `i `uc ]
"133
}
[e :U 403 ]
[; ;gaomod.h: 133: }
[; ;gaomod.h: 134: break;
"134
[e $U 396  ]
"135
}
[; ;gaomod.h: 135: }
[e $U 396  ]
"114
[e :U 397 ]
[e [\ F2879 , $ -> -> 0 `i `uc 398
 , $ -> -> 1 `i `uc 400
 396 ]
"135
[e :U 396 ]
[; ;gaomod.h: 136: }
"136
[e :UE 378 ]
}
"1 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\nexa.h
[v _nexaTx `(v 1 ef2`*uc`uc ]
{
[; ;nexa.h: 1: void nexaTx(char *s, char resends){
[e :U _nexaTx ]
[v _s `*uc 1 r1 ]
[v _resends `uc 1 r2 ]
[f ]
"7
[v _data `ul 1 a ]
[; ;nexa.h: 7: unsigned long data = 0;
[e = _data -> -> -> 0 `i `l `ul ]
"8
[v _dimming `uc 1 a ]
"9
[v _temp `ul 1 a ]
"10
[v _bitnr `uc 1 a ]
[; ;nexa.h: 8: unsigned char dimming;
[; ;nexa.h: 9: unsigned long temp;
[; ;nexa.h: 10: char bitnr;
[; ;nexa.h: 12: for (char j=0; j<6; j++){
"12
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 6 `i 405  ]
[e $U 406  ]
[e :U 405 ]
{
[; ;nexa.h: 13: data |= asciiToHex(s[j]);
"13
[e =| _data -> ( _asciiToHex (1 *U + _s * -> _j `ux -> -> # *U _s `ui `ux `ul ]
[; ;nexa.h: 14: data <<= 4;
"14
[e =<< _data -> 4 `i ]
"15
}
"12
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 6 `i 405  ]
[e :U 406 ]
"15
}
[; ;nexa.h: 15: }
[; ;nexa.h: 16: data <<= 4;
"16
[e =<< _data -> 4 `i ]
[; ;nexa.h: 17: data |= (s[6] - '0') << 6;
"17
[e =| _data -> << - -> *U + _s * -> -> 6 `i `x -> -> # *U _s `i `x `ui -> 48 `ui -> 6 `i `ul ]
[; ;nexa.h: 18: if (s[7] - '0') data |= 0b00100000;
"18
[e $ ! != - -> *U + _s * -> -> 7 `i `x -> -> # *U _s `i `x `ui -> 48 `ui -> -> 0 `i `ui 408  ]
[e =| _data -> -> -> 32 `i `l `ul ]
[e :U 408 ]
[; ;nexa.h: 19: data |= asciiToHex(s[8]);
"19
[e =| _data -> ( _asciiToHex (1 *U + _s * -> -> 8 `i `x -> -> # *U _s `i `x `ul ]
[; ;nexa.h: 20: if (s[9] == '1'){data |= 0b00010000;}
"20
[e $ ! == -> *U + _s * -> -> 9 `i `x -> -> # *U _s `i `x `ui -> 49 `ui 409  ]
{
[e =| _data -> -> -> 16 `i `l `ul ]
}
[e :U 409 ]
[; ;nexa.h: 21: if (s[9] == '2') dimming = asciiToHex(s[10]);
"21
[e $ ! == -> *U + _s * -> -> 9 `i `x -> -> # *U _s `i `x `ui -> 50 `ui 410  ]
[e = _dimming ( _asciiToHex (1 *U + _s * -> -> 10 `i `x -> -> # *U _s `i `x ]
[e $U 411  ]
"22
[e :U 410 ]
[; ;nexa.h: 22: else dimming = 0;
[e = _dimming -> -> 0 `i `uc ]
[e :U 411 ]
[; ;nexa.h: 24: startTransmit();
"24
[e ( _startTransmit ..  ]
[; ;nexa.h: 25: for (char resend = 0; resend < resends; resend++){
"25
{
[v _resend `uc 1 a ]
[e = _resend -> -> 0 `i `uc ]
[e $U 415  ]
[e :U 412 ]
{
[; ;nexa.h: 26: LATB2 = 1;
"26
[e = _LATB2 -> -> 1 `i `b ]
[; ;nexa.h: 27: waitTimer(204);
"27
[e ( _waitTimer (1 -> -> 204 `i `ui ]
[; ;nexa.h: 28: LATB2 = 0;
"28
[e = _LATB2 -> -> 0 `i `b ]
[; ;nexa.h: 29: waitTimer(2720);
"29
[e ( _waitTimer (1 -> -> 2720 `i `ui ]
[; ;nexa.h: 30: temp = data;
"30
[e = _temp _data ]
[; ;nexa.h: 31: for (bitnr = 0; bitnr < 32; bitnr++){
"31
{
[e = _bitnr -> -> 0 `i `uc ]
[e $ < -> _bitnr `i -> 32 `i 416  ]
[e $U 417  ]
[e :U 416 ]
{
[; ;nexa.h: 32: LATB2 = 1;
"32
[e = _LATB2 -> -> 1 `i `b ]
[; ;nexa.h: 33: waitTimer(204);
"33
[e ( _waitTimer (1 -> -> 204 `i `ui ]
[; ;nexa.h: 34: LATB2 = 0;
"34
[e = _LATB2 -> -> 0 `i `b ]
[; ;nexa.h: 35: if (dimming && bitnr == 27) waitTimer(272);
"35
[e $ ! && != -> _dimming `i -> -> -> 0 `i `uc `i == -> _bitnr `i -> 27 `i 419  ]
[e ( _waitTimer (1 -> -> 272 `i `ui ]
[e $U 420  ]
"36
[e :U 419 ]
[; ;nexa.h: 36: else if(temp & 0b10000000000000000000000000000000) waitTimer(1326);
[e $ ! != & _temp -> -2147483648 `ul -> -> 0 `i `ul 421  ]
[e ( _waitTimer (1 -> -> 1326 `i `ui ]
[e $U 422  ]
"37
[e :U 421 ]
[; ;nexa.h: 37: else waitTimer(272);
[e ( _waitTimer (1 -> -> 272 `i `ui ]
[e :U 422 ]
[e :U 420 ]
[; ;nexa.h: 38: LATB2 = 1;
"38
[e = _LATB2 -> -> 1 `i `b ]
[; ;nexa.h: 39: waitTimer(204);
"39
[e ( _waitTimer (1 -> -> 204 `i `ui ]
[; ;nexa.h: 40: LATB2 = 0;
"40
[e = _LATB2 -> -> 0 `i `b ]
[; ;nexa.h: 41: if (dimming && bitnr == 27) waitTimer(272);
"41
[e $ ! && != -> _dimming `i -> -> -> 0 `i `uc `i == -> _bitnr `i -> 27 `i 423  ]
[e ( _waitTimer (1 -> -> 272 `i `ui ]
[e $U 424  ]
"42
[e :U 423 ]
[; ;nexa.h: 42: else if((temp & 0b10000000000000000000000000000000) == 0) waitTimer(1326);
[e $ ! == & _temp -> -2147483648 `ul -> -> -> 0 `i `l `ul 425  ]
[e ( _waitTimer (1 -> -> 1326 `i `ui ]
[e $U 426  ]
"43
[e :U 425 ]
[; ;nexa.h: 43: else waitTimer(272);
[e ( _waitTimer (1 -> -> 272 `i `ui ]
[e :U 426 ]
[e :U 424 ]
[; ;nexa.h: 44: temp <<= 1;
"44
[e =<< _temp -> 1 `i ]
"45
}
"31
[e ++ _bitnr -> -> 1 `i `uc ]
[e $ < -> _bitnr `i -> 32 `i 416  ]
[e :U 417 ]
"45
}
[; ;nexa.h: 45: }
[; ;nexa.h: 46: if (dimming != 0){
"46
[e $ ! != -> _dimming `i -> 0 `i 427  ]
{
[; ;nexa.h: 47: temp = dimming;
"47
[e = _temp -> _dimming `ul ]
[; ;nexa.h: 48: for (bitnr = 0; bitnr < 4; bitnr++){
"48
{
[e = _bitnr -> -> 0 `i `uc ]
[e $ < -> _bitnr `i -> 4 `i 428  ]
[e $U 429  ]
[e :U 428 ]
{
[; ;nexa.h: 49: LATB2 = 1;
"49
[e = _LATB2 -> -> 1 `i `b ]
[; ;nexa.h: 50: waitTimer(204);
"50
[e ( _waitTimer (1 -> -> 204 `i `ui ]
[; ;nexa.h: 51: LATB2 = 0;
"51
[e = _LATB2 -> -> 0 `i `b ]
[; ;nexa.h: 52: if(temp & 0b1000) waitTimer(1326);
"52
[e $ ! != & _temp -> -> -> 8 `i `l `ul -> -> 0 `i `ul 431  ]
[e ( _waitTimer (1 -> -> 1326 `i `ui ]
[e $U 432  ]
"53
[e :U 431 ]
[; ;nexa.h: 53: else waitTimer(272);
[e ( _waitTimer (1 -> -> 272 `i `ui ]
[e :U 432 ]
[; ;nexa.h: 54: LATB2 = 1;
"54
[e = _LATB2 -> -> 1 `i `b ]
[; ;nexa.h: 55: waitTimer(204);
"55
[e ( _waitTimer (1 -> -> 204 `i `ui ]
[; ;nexa.h: 56: LATB2 = 0;
"56
[e = _LATB2 -> -> 0 `i `b ]
[; ;nexa.h: 57: if(temp & 0b1000) waitTimer(272);
"57
[e $ ! != & _temp -> -> -> 8 `i `l `ul -> -> 0 `i `ul 433  ]
[e ( _waitTimer (1 -> -> 272 `i `ui ]
[e $U 434  ]
"58
[e :U 433 ]
[; ;nexa.h: 58: else waitTimer(1326);
[e ( _waitTimer (1 -> -> 1326 `i `ui ]
[e :U 434 ]
[; ;nexa.h: 59: temp <<= 1;
"59
[e =<< _temp -> 1 `i ]
"60
}
"48
[e ++ _bitnr -> -> 1 `i `uc ]
[e $ < -> _bitnr `i -> 4 `i 428  ]
[e :U 429 ]
"60
}
"61
}
[e :U 427 ]
[; ;nexa.h: 60: }
[; ;nexa.h: 61: }
[; ;nexa.h: 62: LATB2 = 1;
"62
[e = _LATB2 -> -> 1 `i `b ]
[; ;nexa.h: 63: waitTimer(204);
"63
[e ( _waitTimer (1 -> -> 204 `i `ui ]
[; ;nexa.h: 64: LATB2 = 0;
"64
[e = _LATB2 -> -> 0 `i `b ]
[; ;nexa.h: 65: waitTimer(10000);
"65
[e ( _waitTimer (1 -> -> 10000 `i `ui ]
"66
}
"25
[e ++ _resend -> -> 1 `i `uc ]
[e :U 415 ]
[e $ < -> _resend `i -> _resends `i 412  ]
[e :U 413 ]
"66
}
[; ;nexa.h: 66: }
[; ;nexa.h: 67: stopTransmit();
"67
[e ( _stopTransmit ..  ]
[; ;nexa.h: 68: }
"68
[e :UE 404 ]
}
"70
[v _nexaPrint `(v 1 ef1`ul ]
{
[; ;nexa.h: 70: void nexaPrint(unsigned long data){
[e :U _nexaPrint ]
[v _data `ul 1 r1 ]
[f ]
"71
[v _number `ul 1 a ]
[; ;nexa.h: 71: unsigned long number;
[; ;nexa.h: 72: sPuts("$N");
"72
[e ( _sPuts (1 :s 4C ]
[; ;nexa.h: 73: for (char j = 0; j < 6; j++){
"73
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 6 `i 436  ]
[e $U 437  ]
[e :U 436 ]
{
[; ;nexa.h: 74: number = data & 0xF0000000;
"74
[e = _number & _data -> -268435456 `ul ]
[; ;nexa.h: 75: data <<= 4;
"75
[e =<< _data -> 4 `i ]
[; ;nexa.h: 76: number >>= 28;
"76
[e =>> _number -> 28 `i ]
[; ;nexa.h: 77: sPutonehex(number);
"77
[e ( _sPutonehex (1 -> _number `uc ]
"78
}
"73
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 6 `i 436  ]
[e :U 437 ]
"78
}
[; ;nexa.h: 78: }
[; ;nexa.h: 79: number = data & 0xFF000000;
"79
[e = _number & _data -> -16777216 `ul ]
[; ;nexa.h: 80: number >>= 24;
"80
[e =>> _number -> 24 `i ]
[; ;nexa.h: 81: sPut('0' + ((number & 0b11000000) >> 6));
"81
[e ( _sPut (1 -> + -> -> 48 `ui `ul >> & _number -> -> -> 192 `i `l `ul -> 6 `i `uc ]
[; ;nexa.h: 82: if (number & 0b00100000) sPut('1');
"82
[e $ ! != & _number -> -> -> 32 `i `l `ul -> -> 0 `i `ul 439  ]
[e ( _sPut (1 -> -> 49 `ui `uc ]
[e $U 440  ]
"83
[e :U 439 ]
[; ;nexa.h: 83: else sPut('0');
[e ( _sPut (1 -> -> 48 `ui `uc ]
[e :U 440 ]
[; ;nexa.h: 84: sPutonehex(number & 0b00001111);
"84
[e ( _sPutonehex (1 -> & _number -> -> -> 15 `i `l `ul `uc ]
[; ;nexa.h: 85: if (number & 0b00010000) sPut('1');
"85
[e $ ! != & _number -> -> -> 16 `i `l `ul -> -> 0 `i `ul 441  ]
[e ( _sPut (1 -> -> 49 `ui `uc ]
[e $U 442  ]
"86
[e :U 441 ]
[; ;nexa.h: 86: else sPut('0');
[e ( _sPut (1 -> -> 48 `ui `uc ]
[e :U 442 ]
[; ;nexa.h: 87: sPut(10);
"87
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;nexa.h: 88: blinkRxLed();
"88
[e ( _blinkRxLed ..  ]
[; ;nexa.h: 89: }
"89
[e :UE 435 ]
}
"91
[v _nexaDecode `(v 1 ef2`uc`uc ]
{
[; ;nexa.h: 91: void nexaDecode(char rf_state, char rf_pulse_length){
[e :U _nexaDecode ]
[v _rf_state `uc 1 r1 ]
[v _rf_pulse_length `uc 1 r2 ]
[f ]
"99
[v F2896 `uc 1 s symbols ]
[i F2896
-> -> 0 `i `uc
]
"100
[v F2897 `uc 1 s nrsymbols ]
[i F2897
-> -> 0 `i `uc
]
"101
[v F2898 `uc 1 s nexabit ]
"102
[v F2899 `ul 1 s data ]
[i F2899
-> -> -> 0 `i `l `ul
]
"103
[v F2900 `uc 1 s nrbits ]
[i F2900
-> -> 0 `i `uc
]
[; ;nexa.h: 99: static char symbols = 0;
[; ;nexa.h: 100: static char nrsymbols = 0;
[; ;nexa.h: 101: static char nexabit;
[; ;nexa.h: 102: static unsigned long data = 0;
[; ;nexa.h: 103: static char nrbits = 0;
[; ;nexa.h: 106: nexabit = 4;
"106
[e = F2898 -> -> 4 `i `uc ]
[; ;nexa.h: 107: if (rf_state){
"107
[e $ ! != -> _rf_state `i -> -> -> 0 `i `uc `i 444  ]
{
[; ;nexa.h: 108: if ((rf_pulse_length > 5)&&(rf_pulse_length < 20)){
"108
[e $ ! && > -> _rf_pulse_length `i -> 5 `i < -> _rf_pulse_length `i -> 20 `i 445  ]
{
[; ;nexa.h: 109: symbols &= 0xFF ^ (1 << nrsymbols);
"109
[e =& F2896 -> ^ -> 255 `i << -> 1 `i -> F2897 `i `uc ]
[; ;nexa.h: 110: nrsymbols++;
"110
[e ++ F2897 -> -> 1 `i `uc ]
"111
}
[; ;nexa.h: 111: }
[e $U 446  ]
"112
[e :U 445 ]
[; ;nexa.h: 112: else{
{
[; ;nexa.h: 113: nrsymbols = 0;
"113
[e = F2897 -> -> 0 `i `uc ]
[; ;nexa.h: 114: nexabit = 2;
"114
[e = F2898 -> -> 2 `i `uc ]
"115
}
[e :U 446 ]
"116
}
[; ;nexa.h: 115: }
[; ;nexa.h: 116: }
[e $U 447  ]
"117
[e :U 444 ]
[; ;nexa.h: 117: else{
{
[; ;nexa.h: 118: if((rf_pulse_length > 12)&&(rf_pulse_length < 23)){
"118
[e $ ! && > -> _rf_pulse_length `i -> 12 `i < -> _rf_pulse_length `i -> 23 `i 448  ]
{
[; ;nexa.h: 119: symbols &= 0xFF ^ (1 << nrsymbols);
"119
[e =& F2896 -> ^ -> 255 `i << -> 1 `i -> F2897 `i `uc ]
[; ;nexa.h: 120: nrsymbols++;
"120
[e ++ F2897 -> -> 1 `i `uc ]
"121
}
[; ;nexa.h: 121: }
[e $U 449  ]
"122
[e :U 448 ]
[; ;nexa.h: 122: else if((rf_pulse_length > 60)&&(rf_pulse_length < 100)){
[e $ ! && > -> _rf_pulse_length `i -> 60 `i < -> _rf_pulse_length `i -> 100 `i 450  ]
{
[; ;nexa.h: 123: symbols |= 1 << nrsymbols;
"123
[e =| F2896 -> << -> 1 `i -> F2897 `i `uc ]
[; ;nexa.h: 124: nrsymbols++;
"124
[e ++ F2897 -> -> 1 `i `uc ]
"125
}
[; ;nexa.h: 125: }
[e $U 451  ]
"126
[e :U 450 ]
[; ;nexa.h: 126: else{
{
[; ;nexa.h: 127: nrsymbols = 0;
"127
[e = F2897 -> -> 0 `i `uc ]
[; ;nexa.h: 128: nexabit = 2;
"128
[e = F2898 -> -> 2 `i `uc ]
"129
}
[e :U 451 ]
[e :U 449 ]
"130
}
[e :U 447 ]
[; ;nexa.h: 129: }
[; ;nexa.h: 130: }
[; ;nexa.h: 131: if (nrsymbols >= 4){
"131
[e $ ! >= -> F2897 `i -> 4 `i 452  ]
{
[; ;nexa.h: 132: if (symbols == 0) nexabit = 6;
"132
[e $ ! == -> F2896 `i -> 0 `i 453  ]
[e = F2898 -> -> 6 `i `uc ]
[e $U 454  ]
"133
[e :U 453 ]
[; ;nexa.h: 133: else if (symbols == 0b1000) nexabit = 0;
[e $ ! == -> F2896 `i -> 8 `i 455  ]
[e = F2898 -> -> 0 `i `uc ]
[e $U 456  ]
"134
[e :U 455 ]
[; ;nexa.h: 134: else if (symbols == 0b0010) nexabit = 1;
[e $ ! == -> F2896 `i -> 2 `i 457  ]
[e = F2898 -> -> 1 `i `uc ]
[e $U 458  ]
"135
[e :U 457 ]
[; ;nexa.h: 135: else nexabit = 2;
[e = F2898 -> -> 2 `i `uc ]
[e :U 458 ]
[e :U 456 ]
[e :U 454 ]
[; ;nexa.h: 136: nrsymbols = 0;
"136
[e = F2897 -> -> 0 `i `uc ]
"137
}
[e :U 452 ]
[; ;nexa.h: 137: }
[; ;nexa.h: 140: if(nexabit == 4) return;
"140
[e $ ! == -> F2898 `i -> 4 `i 459  ]
[e $UE 443  ]
[e :U 459 ]
[; ;nexa.h: 141: if (nexabit == 2){
"141
[e $ ! == -> F2898 `i -> 2 `i 460  ]
{
[; ;nexa.h: 142: if (nrbits >= 32) nexaPrint(data);
"142
[e $ ! >= -> F2900 `i -> 32 `i 461  ]
[e ( _nexaPrint (1 F2899 ]
[e :U 461 ]
[; ;nexa.h: 143: nrbits = 0;
"143
[e = F2900 -> -> 0 `i `uc ]
[; ;nexa.h: 144: return;
"144
[e $UE 443  ]
"145
}
[e :U 460 ]
[; ;nexa.h: 145: }
[; ;nexa.h: 146: data <<= 1;
"146
[e =<< F2899 -> 1 `i ]
[; ;nexa.h: 147: data |= nexabit;
"147
[e =| F2899 -> F2898 `ul ]
[; ;nexa.h: 148: nrbits++;
"148
[e ++ F2900 -> -> 1 `i `uc ]
[; ;nexa.h: 149: }
"149
[e :UE 443 ]
}
"1 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\esic.h
[v _esicPrint `(v 1 ef1`ul ]
{
[; ;esic.h: 1: void esicPrint(unsigned long data){
[e :U _esicPrint ]
[v _data `ul 1 r1 ]
[f ]
"2
[v _temp `ul 1 a ]
"3
[v _house `uc 1 a ]
"4
[v _channel `uc 1 a ]
"5
[v _constantcheck `uc 1 a ]
[; ;esic.h: 2: unsigned long temp;
[; ;esic.h: 3: char house;
[; ;esic.h: 4: char channel;
[; ;esic.h: 5: char constantcheck = 0;
[e = _constantcheck -> -> 0 `i `uc ]
"6
[v _humidity `uc 1 a ]
"7
[v _temperature `l 1 a ]
"8
[v _lowbatt `uc 1 a ]
"9
[v _packetcount `uc 1 a ]
"10
[v _parity `uc 1 a ]
"11
[v _paritycalc `uc 1 a ]
[; ;esic.h: 6: char humidity;
[; ;esic.h: 7: signed long temperature;
[; ;esic.h: 8: char lowbatt;
[; ;esic.h: 9: char packetcount;
[; ;esic.h: 10: char parity;
[; ;esic.h: 11: char paritycalc = 0;
[e = _paritycalc -> -> 0 `i `uc ]
[; ;esic.h: 13: parity = data & 0b11;
"13
[e = _parity -> & _data -> -> -> 3 `i `l `ul `uc ]
[; ;esic.h: 15: temp = data;
"15
[e = _temp _data ]
[; ;esic.h: 16: for (char counter = 0; counter < 15; counter++){
"16
{
[v _counter `uc 1 a ]
[e = _counter -> -> 0 `i `uc ]
[e $ < -> _counter `i -> 15 `i 463  ]
[e $U 464  ]
[e :U 463 ]
{
[; ;esic.h: 17: temp = data & 0b11;
"17
[e = _temp & _data -> -> -> 3 `i `l `ul ]
[; ;esic.h: 18: paritycalc = paritycalc ^ temp;
"18
[e = _paritycalc -> ^ -> _paritycalc `ul _temp `uc ]
[; ;esic.h: 19: temp >>= 2;
"19
[e =>> _temp -> 2 `i ]
"20
}
"16
[e ++ _counter -> -> 1 `i `uc ]
[e $ < -> _counter `i -> 15 `i 463  ]
[e :U 464 ]
"20
}
[; ;esic.h: 20: }
[; ;esic.h: 22: temp = data & 0b00000011000000000000000000000000;
"22
[e = _temp & _data -> -> 50331648 `l `ul ]
[; ;esic.h: 23: temp >>= 24;
"23
[e =>> _temp -> 24 `i ]
[; ;esic.h: 25: if ((temp == 0b11)&&(paritycalc == parity)){
"25
[e $ ! && == _temp -> -> -> 3 `i `l `ul == -> _paritycalc `i -> _parity `i 466  ]
{
[; ;esic.h: 26: temp = data & 0b11110000000000000000000000000000;
"26
[e = _temp & _data -> -268435456 `ul ]
[; ;esic.h: 27: house = temp >> 28;
"27
[e = _house -> >> _temp -> 28 `i `uc ]
[; ;esic.h: 29: temp = data & 0b00001100000000000000000000000000;
"29
[e = _temp & _data -> -> 201326592 `l `ul ]
[; ;esic.h: 30: temp >>= 26;
"30
[e =>> _temp -> 26 `i ]
[; ;esic.h: 31: channel = temp + 1;
"31
[e = _channel -> + _temp -> -> -> 1 `i `l `ul `uc ]
[; ;esic.h: 33: temp = data & 0b00000000100000000000000000000000;
"33
[e = _temp & _data -> -> 8388608 `l `ul ]
[; ;esic.h: 34: lowbatt = temp >> 23;
"34
[e = _lowbatt -> >> _temp -> 23 `i `uc ]
[; ;esic.h: 36: temp = data & 0b00000000011111111000000000000000;
"36
[e = _temp & _data -> -> 8355840 `l `ul ]
[; ;esic.h: 37: humidity = temp >> 15;
"37
[e = _humidity -> >> _temp -> 15 `i `uc ]
[; ;esic.h: 39: temp = data & 0b00000000000000000111111111110000;
"39
[e = _temp & _data -> -> -> 32752 `i `l `ul ]
[; ;esic.h: 40: temperature = temp >> 4;
"40
[e = _temperature -> >> _temp -> 4 `i `l ]
[; ;esic.h: 41: temperature = ((temperature-800)*10) / 16;
"41
[e = _temperature / * - _temperature -> -> 800 `i `l -> -> 10 `i `l -> -> 16 `i `l ]
[; ;esic.h: 43: temp = data & 0b00000000000000000000000000001100;
"43
[e = _temp & _data -> -> -> 12 `i `l `ul ]
[; ;esic.h: 44: temp >>= 2;
"44
[e =>> _temp -> 2 `i ]
[; ;esic.h: 45: packetcount = temp;
"45
[e = _packetcount -> _temp `uc ]
[; ;esic.h: 47: sPuts("$E");
"47
[e ( _sPuts (1 :s 5C ]
[; ;esic.h: 48: sPutint(house); sPut(',');
"48
[e ( _sPutint (1 -> _house `ui ]
[e ( _sPut (1 -> -> 44 `ui `uc ]
[; ;esic.h: 49: sPutint(channel); sPut(',');
"49
[e ( _sPutint (1 -> _channel `ui ]
[e ( _sPut (1 -> -> 44 `ui `uc ]
[; ;esic.h: 51: if(temperature < 0){
"51
[e $ ! < _temperature -> -> 0 `i `l 467  ]
{
[; ;esic.h: 52: sPut('-');
"52
[e ( _sPut (1 -> -> 45 `ui `uc ]
[; ;esic.h: 53: temperature *= -1;
"53
[e =* _temperature -> -U -> 1 `i `l ]
"54
}
[e :U 467 ]
[; ;esic.h: 54: }
[; ;esic.h: 56: sPutint(temperature/10); sPut('.'); sPutint(temperature%10); sPut(',');
"56
[e ( _sPutint (1 -> / _temperature -> -> 10 `i `l `ui ]
[e ( _sPut (1 -> -> 46 `ui `uc ]
[e ( _sPutint (1 -> % _temperature -> -> 10 `i `l `ui ]
[e ( _sPut (1 -> -> 44 `ui `uc ]
[; ;esic.h: 57: sPutint(humidity/2); sPut(',');
"57
[e ( _sPutint (1 -> / -> _humidity `i -> 2 `i `ui ]
[e ( _sPut (1 -> -> 44 `ui `uc ]
[; ;esic.h: 58: sPut(lowbatt + '0');
"58
[e ( _sPut (1 -> + -> _lowbatt `ui -> 48 `ui `uc ]
[; ;esic.h: 59: sPut(10);
"59
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;esic.h: 60: blinkRxLed();
"60
[e ( _blinkRxLed ..  ]
"61
}
[e :U 466 ]
[; ;esic.h: 61: }
[; ;esic.h: 62: }
"62
[e :UE 462 ]
}
"64
[v _esicDecode `(v 1 ef1`uc ]
{
[; ;esic.h: 64: void esicDecode(char rf_pulse_length){
[e :U _esicDecode ]
[v _rf_pulse_length `uc 1 r1 ]
[f ]
"75
[v F2916 `uc 1 s esicbit ]
"76
[v F2917 `ul 1 s data ]
[i F2917
-> -> -> 0 `i `l `ul
]
"77
[v F2918 `uc 1 s nrbits ]
[i F2918
-> -> 0 `i `uc
]
"78
[v F2919 `uc 1 s preamble_data ]
[i F2919
-> -> 0 `i `uc
]
"79
[v F2920 `uc 1 s state ]
[i F2920
-> -> 0 `i `uc
]
[; ;esic.h: 75: static char esicbit;
[; ;esic.h: 76: static unsigned long data = 0;
[; ;esic.h: 77: static char nrbits = 0;
[; ;esic.h: 78: static char preamble_data = 0;
[; ;esic.h: 79: static char state = 0;
[; ;esic.h: 82: if((rf_pulse_length > 40)&&(rf_pulse_length < 80)){
"82
[e $ ! && > -> _rf_pulse_length `i -> 40 `i < -> _rf_pulse_length `i -> 80 `i 469  ]
{
[; ;esic.h: 83: if(esicbit == 4) esicbit = 1;
"83
[e $ ! == -> F2916 `i -> 4 `i 470  ]
[e = F2916 -> -> 1 `i `uc ]
[e $U 471  ]
"84
[e :U 470 ]
[; ;esic.h: 84: else esicbit = 4;
[e = F2916 -> -> 4 `i `uc ]
[e :U 471 ]
"85
}
[; ;esic.h: 85: }
[e $U 472  ]
"86
[e :U 469 ]
[; ;esic.h: 86: else if((rf_pulse_length > 100)&&(rf_pulse_length < 140)&&
[; ;esic.h: 87: !((esicbit == 4)&&(nrbits > 0))) esicbit = 0;
"87
[e $ ! && && > -> _rf_pulse_length `i -> 100 `i < -> _rf_pulse_length `i -> 140 `i ! && == -> F2916 `i -> 4 `i > -> F2918 `i -> 0 `i 473  ]
[e = F2916 -> -> 0 `i `uc ]
[e $U 474  ]
"88
[e :U 473 ]
[; ;esic.h: 88: else esicbit = 2;
[e = F2916 -> -> 2 `i `uc ]
[e :U 474 ]
[e :U 472 ]
[; ;esic.h: 91: if(esicbit != 4){
"91
[e $ ! != -> F2916 `i -> 4 `i 475  ]
{
[; ;esic.h: 92: switch (state){
"92
[e $U 477  ]
{
[; ;esic.h: 93: case 0:
"93
[e :U 478 ]
[; ;esic.h: 94: if(esicbit != 2){
"94
[e $ ! != -> F2916 `i -> 2 `i 479  ]
{
[; ;esic.h: 95: preamble_data <<= 1;
"95
[e =<< F2919 -> 1 `i ]
[; ;esic.h: 96: preamble_data |= esicbit;
"96
[e =| F2919 F2916 ]
[; ;esic.h: 97: if ((preamble_data & 0b00001111) == 0b00001100) state = 1;
"97
[e $ ! == & -> F2919 `i -> 15 `i -> 12 `i 480  ]
[e = F2920 -> -> 1 `i `uc ]
[e :U 480 ]
"98
}
[; ;esic.h: 98: }
[e $U 481  ]
"99
[e :U 479 ]
[; ;esic.h: 99: else preamble_data = 0;
[e = F2919 -> -> 0 `i `uc ]
[e :U 481 ]
[; ;esic.h: 100: break;
"100
[e $U 476  ]
[; ;esic.h: 101: case 1:
"101
[e :U 482 ]
[; ;esic.h: 102: if (esicbit == 2){
"102
[e $ ! == -> F2916 `i -> 2 `i 483  ]
{
[; ;esic.h: 103: if (nrbits == 32) esicPrint(data);
"103
[e $ ! == -> F2918 `i -> 32 `i 484  ]
[e ( _esicPrint (1 F2917 ]
[e :U 484 ]
[; ;esic.h: 104: nrbits = 0;
"104
[e = F2918 -> -> 0 `i `uc ]
[; ;esic.h: 105: state = 0;
"105
[e = F2920 -> -> 0 `i `uc ]
"106
}
[; ;esic.h: 106: }
[e $U 485  ]
"107
[e :U 483 ]
[; ;esic.h: 107: else{
{
[; ;esic.h: 108: data <<= 1;
"108
[e =<< F2917 -> 1 `i ]
[; ;esic.h: 109: data |= esicbit;
"109
[e =| F2917 -> F2916 `ul ]
[; ;esic.h: 110: nrbits++;
"110
[e ++ F2918 -> -> 1 `i `uc ]
"111
}
[e :U 485 ]
[; ;esic.h: 111: }
[; ;esic.h: 112: break;
"112
[e $U 476  ]
"113
}
[; ;esic.h: 113: }
[e $U 476  ]
"92
[e :U 477 ]
[e [\ F2920 , $ -> -> 0 `i `uc 478
 , $ -> -> 1 `i `uc 482
 476 ]
"113
[e :U 476 ]
"114
}
[e :U 475 ]
[; ;esic.h: 114: }
[; ;esic.h: 115: }
"115
[e :UE 468 ]
}
"1 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\doro.h
[v _doroPrint `(v 1 ef1`ui ]
{
[; ;doro.h: 1: void doroPrint(unsigned int data){
[e :U _doroPrint ]
[v _data `ui 1 r1 ]
[f ]
[; ;doro.h: 2: sPuts("$D");
"2
[e ( _sPuts (1 :s 6C ]
"3
[v _number `ui 1 a ]
[; ;doro.h: 3: unsigned int number;
[; ;doro.h: 4: for (char j = 0; j < 3; j++){
"4
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 3 `i 487  ]
[e $U 488  ]
[e :U 487 ]
{
[; ;doro.h: 5: number = data & 0b0000111100000000;
"5
[e = _number & _data -> -> 3840 `i `ui ]
[; ;doro.h: 6: data <<= 4;
"6
[e =<< _data -> 4 `i ]
[; ;doro.h: 7: number >>= 8;
"7
[e =>> _number -> 8 `i ]
[; ;doro.h: 8: sPutonehex(number);
"8
[e ( _sPutonehex (1 -> _number `uc ]
"9
}
"4
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 3 `i 487  ]
[e :U 488 ]
"9
}
[; ;doro.h: 9: }
[; ;doro.h: 10: sPut(10);
"10
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;doro.h: 11: blinkRxLed();
"11
[e ( _blinkRxLed ..  ]
[; ;doro.h: 12: }
"12
[e :UE 486 ]
}
"14
[v _doroDecode `(v 1 ef2`uc`uc ]
{
[; ;doro.h: 14: void doroDecode(char rf_state, char rf_pulse_length){
[e :U _doroDecode ]
[v _rf_state `uc 1 r1 ]
[v _rf_pulse_length `uc 1 r2 ]
[f ]
"24
[v F2928 `uc 1 s dorobit ]
"25
[v F2929 `ui 1 s data ]
[i F2929
-> -> 0 `i `ui
]
"26
[v F2930 `uc 1 s nrbits ]
[i F2930
-> -> 0 `i `uc
]
[; ;doro.h: 24: static char dorobit;
[; ;doro.h: 25: static unsigned int data = 0;
[; ;doro.h: 26: static char nrbits = 0;
[; ;doro.h: 29: if(rf_state){
"29
[e $ ! != -> _rf_state `i -> -> -> 0 `i `uc `i 491  ]
{
[; ;doro.h: 30: if ((rf_pulse_length >= 32)&&
[; ;doro.h: 31: (rf_pulse_length <= 40)&&
[; ;doro.h: 32: ((nrbits==0)||(dorobit==7))) dorobit = 1;
"32
[e $ ! && && >= -> _rf_pulse_length `i -> 32 `i <= -> _rf_pulse_length `i -> 40 `i || == -> F2930 `i -> 0 `i == -> F2928 `i -> 7 `i 492  ]
[e = F2928 -> -> 1 `i `uc ]
[e $U 493  ]
"33
[e :U 492 ]
[; ;doro.h: 33: else if ((rf_pulse_length >= 15)&&
[; ;doro.h: 34: (rf_pulse_length <= 21)&&
[; ;doro.h: 35: ((nrbits==0)||(dorobit==8))) dorobit = 0;
"35
[e $ ! && && >= -> _rf_pulse_length `i -> 15 `i <= -> _rf_pulse_length `i -> 21 `i || == -> F2930 `i -> 0 `i == -> F2928 `i -> 8 `i 494  ]
[e = F2928 -> -> 0 `i `uc ]
[e $U 495  ]
"36
[e :U 494 ]
[; ;doro.h: 36: else dorobit = 2;
[e = F2928 -> -> 2 `i `uc ]
[e :U 495 ]
[e :U 493 ]
"37
}
[; ;doro.h: 37: }
[e $U 496  ]
"38
[e :U 491 ]
[; ;doro.h: 38: else{
{
[; ;doro.h: 39: if ((rf_pulse_length >= 32)&&
[; ;doro.h: 40: (rf_pulse_length <= 40)) dorobit = 8;
"40
[e $ ! && >= -> _rf_pulse_length `i -> 32 `i <= -> _rf_pulse_length `i -> 40 `i 497  ]
[e = F2928 -> -> 8 `i `uc ]
[e $U 498  ]
"41
[e :U 497 ]
[; ;doro.h: 41: else if ((rf_pulse_length >= 15)&&
[; ;doro.h: 42: (rf_pulse_length <= 21)) dorobit = 7;
"42
[e $ ! && >= -> _rf_pulse_length `i -> 15 `i <= -> _rf_pulse_length `i -> 21 `i 499  ]
[e = F2928 -> -> 7 `i `uc ]
[e $U 500  ]
"43
[e :U 499 ]
[; ;doro.h: 43: else dorobit = 2;
[e = F2928 -> -> 2 `i `uc ]
[e :U 500 ]
[e :U 498 ]
"44
}
[e :U 496 ]
[; ;doro.h: 44: }
[; ;doro.h: 47: if ((dorobit == 1)||(dorobit == 0)){
"47
[e $ ! || == -> F2928 `i -> 1 `i == -> F2928 `i -> 0 `i 501  ]
{
[; ;doro.h: 48: data <<= 1;
"48
[e =<< F2929 -> 1 `i ]
[; ;doro.h: 49: data |= dorobit;
"49
[e =| F2929 -> F2928 `ui ]
[; ;doro.h: 50: nrbits++;
"50
[e ++ F2930 -> -> 1 `i `uc ]
"51
}
[; ;doro.h: 51: }
[e $U 502  ]
"52
[e :U 501 ]
[; ;doro.h: 52: else if (dorobit == 2){
[e $ ! == -> F2928 `i -> 2 `i 503  ]
{
[; ;doro.h: 53: if (nrbits == 13) doroPrint(data);
"53
[e $ ! == -> F2930 `i -> 13 `i 504  ]
[e ( _doroPrint (1 F2929 ]
[e :U 504 ]
[; ;doro.h: 54: nrbits = 0;
"54
[e = F2930 -> -> 0 `i `uc ]
"55
}
[e :U 503 ]
"56
[e :U 502 ]
[; ;doro.h: 55: }
[; ;doro.h: 56: }
[e :UE 490 ]
}
"1 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\kangthai.h
[v _kangthaiTx `(v 1 ef2`*uc`uc ]
{
[; ;kangthai.h: 1: void kangthaiTx(char *s, char resends){
[e :U _kangthaiTx ]
[v _s `*uc 1 r1 ]
[v _resends `uc 1 r2 ]
[f ]
"4
[v _data `ul 1 a ]
[; ;kangthai.h: 4: unsigned long data = 0;
[e = _data -> -> -> 0 `i `l `ul ]
"5
[v _temp `ul 1 a ]
[; ;kangthai.h: 5: unsigned long temp;
[; ;kangthai.h: 7: for (char j=0; j<5; j++){
"7
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 5 `i 506  ]
[e $U 507  ]
[e :U 506 ]
{
[; ;kangthai.h: 8: data |= s[j] - '0';
"8
[e =| _data -> - -> *U + _s * -> _j `ux -> -> # *U _s `ui `ux `ui -> 48 `ui `ul ]
[; ;kangthai.h: 9: data <<= 1;
"9
[e =<< _data -> 1 `i ]
"10
}
"7
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 5 `i 506  ]
[e :U 507 ]
"10
}
[; ;kangthai.h: 10: }
[; ;kangthai.h: 11: for (char j=0; j<5; j++){
"11
{
[v _j `uc 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 5 `i 509  ]
[e $U 510  ]
[e :U 509 ]
{
[; ;kangthai.h: 12: if((s[5] - 'A') == j) data |= 1;
"12
[e $ ! == - -> *U + _s * -> -> 5 `i `x -> -> # *U _s `i `x `ui -> 65 `ui -> _j `ui 512  ]
[e =| _data -> -> -> 1 `i `l `ul ]
[e :U 512 ]
[; ;kangthai.h: 13: data <<= 1;
"13
[e =<< _data -> 1 `i ]
"14
}
"11
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 5 `i 509  ]
[e :U 510 ]
"14
}
[; ;kangthai.h: 14: }
[; ;kangthai.h: 15: data <<= 1;
"15
[e =<< _data -> 1 `i ]
[; ;kangthai.h: 16: if(s[6] == '1') data |= 0b10;
"16
[e $ ! == -> *U + _s * -> -> 6 `i `x -> -> # *U _s `i `x `ui -> 49 `ui 513  ]
[e =| _data -> -> -> 2 `i `l `ul ]
[e $U 514  ]
"17
[e :U 513 ]
[; ;kangthai.h: 17: else data |= 0b01;
[e =| _data -> -> -> 1 `i `l `ul ]
[e :U 514 ]
[; ;kangthai.h: 19: startTransmit();
"19
[e ( _startTransmit ..  ]
[; ;kangthai.h: 20: for (char resend = 0; resend < resends; resend++){
"20
{
[v _resend `uc 1 a ]
[e = _resend -> -> 0 `i `uc ]
[e $U 518  ]
[e :U 515 ]
{
[; ;kangthai.h: 21: temp = data;
"21
[e = _temp _data ]
[; ;kangthai.h: 22: LATB2 = 1;
"22
[e = _LATB2 -> -> 1 `i `b ]
[; ;kangthai.h: 23: waitTimer(357);
"23
[e ( _waitTimer (1 -> -> 357 `i `ui ]
[; ;kangthai.h: 24: LATB2 = 0;
"24
[e = _LATB2 -> -> 0 `i `b ]
[; ;kangthai.h: 25: waitTimer(357*3);
"25
[e ( _waitTimer (1 -> * -> 357 `i -> 3 `i `ui ]
[; ;kangthai.h: 26: for (char bitnr = 0; bitnr < 12; bitnr++){
"26
{
[v _bitnr `uc 1 a ]
[e = _bitnr -> -> 0 `i `uc ]
[e $ < -> _bitnr `i -> 12 `i 519  ]
[e $U 520  ]
[e :U 519 ]
{
[; ;kangthai.h: 27: LATB2 = 1;
"27
[e = _LATB2 -> -> 1 `i `b ]
[; ;kangthai.h: 28: if(temp & 0b100000000000) waitTimer(357);
"28
[e $ ! != & _temp -> -> -> 2048 `i `l `ul -> -> 0 `i `ul 522  ]
[e ( _waitTimer (1 -> -> 357 `i `ui ]
[e $U 523  ]
"29
[e :U 522 ]
[; ;kangthai.h: 29: else waitTimer(357*3);
[e ( _waitTimer (1 -> * -> 357 `i -> 3 `i `ui ]
[e :U 523 ]
[; ;kangthai.h: 30: LATB2 = 0;
"30
[e = _LATB2 -> -> 0 `i `b ]
[; ;kangthai.h: 31: if(temp & 0b100000000000) waitTimer(357*3);
"31
[e $ ! != & _temp -> -> -> 2048 `i `l `ul -> -> 0 `i `ul 524  ]
[e ( _waitTimer (1 -> * -> 357 `i -> 3 `i `ui ]
[e $U 525  ]
"32
[e :U 524 ]
[; ;kangthai.h: 32: else waitTimer(357);
[e ( _waitTimer (1 -> -> 357 `i `ui ]
[e :U 525 ]
[; ;kangthai.h: 33: LATB2 = 1;
"33
[e = _LATB2 -> -> 1 `i `b ]
[; ;kangthai.h: 34: waitTimer(357);
"34
[e ( _waitTimer (1 -> -> 357 `i `ui ]
[; ;kangthai.h: 35: LATB2 = 0;
"35
[e = _LATB2 -> -> 0 `i `b ]
[; ;kangthai.h: 36: waitTimer(357*3);
"36
[e ( _waitTimer (1 -> * -> 357 `i -> 3 `i `ui ]
[; ;kangthai.h: 37: temp <<= 1;
"37
[e =<< _temp -> 1 `i ]
"38
}
"26
[e ++ _bitnr -> -> 1 `i `uc ]
[e $ < -> _bitnr `i -> 12 `i 519  ]
[e :U 520 ]
"38
}
[; ;kangthai.h: 38: }
[; ;kangthai.h: 39: waitTimer(10000);
"39
[e ( _waitTimer (1 -> -> 10000 `i `ui ]
"40
}
"20
[e ++ _resend -> -> 1 `i `uc ]
[e :U 518 ]
[e $ < -> _resend `i -> _resends `i 515  ]
[e :U 516 ]
"40
}
[; ;kangthai.h: 40: }
[; ;kangthai.h: 41: stopTransmit();
"41
[e ( _stopTransmit ..  ]
[; ;kangthai.h: 42: }
"42
[e :UE 505 ]
}
"1 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\waveman.h
[v _wavemanTx `(v 1 ef2`*uc`uc ]
{
[; ;waveman.h: 1: void wavemanTx(char *s, char resends){
[e :U _wavemanTx ]
[v _s `*uc 1 r1 ]
[v _resends `uc 1 r2 ]
[f ]
"8
[v _data `ui 1 a ]
"9
[v _temp `ui 1 a ]
"10
[v _bitnr `uc 1 a ]
[; ;waveman.h: 8: unsigned int data;
[; ;waveman.h: 9: unsigned int temp;
[; ;waveman.h: 10: char bitnr;
[; ;waveman.h: 12: data = reverse(s[0] - 65);
"12
[e = _data -> ( _reverse (1 -> - -> *U + _s * -> -> 0 `i `x -> -> # *U _s `i `x `i -> 65 `i `uc `ui ]
[; ;waveman.h: 13: data <<= 8;
"13
[e =<< _data -> 8 `i ]
[; ;waveman.h: 14: temp = (s[1] - '0') * 10;
"14
[e = _temp * - -> *U + _s * -> -> 1 `i `x -> -> # *U _s `i `x `ui -> 48 `ui -> -> 10 `i `ui ]
[; ;waveman.h: 15: temp += (s[2] - '0');
"15
[e =+ _temp - -> *U + _s * -> -> 2 `i `x -> -> # *U _s `i `x `ui -> 48 `ui ]
[; ;waveman.h: 16: temp--;
"16
[e -- _temp -> -> 1 `i `ui ]
[; ;waveman.h: 17: temp = reverse(temp);
"17
[e = _temp -> ( _reverse (1 -> _temp `uc `ui ]
[; ;waveman.h: 18: temp <<= 4;
"18
[e =<< _temp -> 4 `i ]
[; ;waveman.h: 19: data += temp;
"19
[e =+ _data _temp ]
[; ;waveman.h: 20: if (s[3] - '0') data |= 0b0000000000000111;
"20
[e $ ! != - -> *U + _s * -> -> 3 `i `x -> -> # *U _s `i `x `ui -> 48 `ui -> -> 0 `i `ui 527  ]
[e =| _data -> -> 7 `i `ui ]
[e :U 527 ]
[; ;waveman.h: 22: startTransmit();
"22
[e ( _startTransmit ..  ]
[; ;waveman.h: 23: for (char resend = 0; resend < resends; resend++){
"23
{
[v _resend `uc 1 a ]
[e = _resend -> -> 0 `i `uc ]
[e $U 531  ]
[e :U 528 ]
{
[; ;waveman.h: 24: temp = data;
"24
[e = _temp _data ]
[; ;waveman.h: 25: LATB2 = 1;
"25
[e = _LATB2 -> -> 1 `i `b ]
[; ;waveman.h: 26: waitTimer(272);
"26
[e ( _waitTimer (1 -> -> 272 `i `ui ]
[; ;waveman.h: 27: LATB2 = 0;
"27
[e = _LATB2 -> -> 0 `i `b ]
[; ;waveman.h: 28: waitTimer((1714-272));
"28
[e ( _waitTimer (1 -> - -> 1714 `i -> 272 `i `ui ]
[; ;waveman.h: 29: for (bitnr = 0; bitnr < 12; bitnr++){
"29
{
[e = _bitnr -> -> 0 `i `uc ]
[e $ < -> _bitnr `i -> 12 `i 532  ]
[e $U 533  ]
[e :U 532 ]
{
[; ;waveman.h: 30: if(temp & 0b0000100000000000){
"30
[e $ ! != & _temp -> -> 2048 `i `ui -> -> 0 `i `ui 535  ]
{
[; ;waveman.h: 31: LATB2 = 1;
"31
[e = _LATB2 -> -> 1 `i `b ]
[; ;waveman.h: 32: waitTimer(1156);
"32
[e ( _waitTimer (1 -> -> 1156 `i `ui ]
[; ;waveman.h: 33: LATB2 = 0;
"33
[e = _LATB2 -> -> 0 `i `b ]
[; ;waveman.h: 34: waitTimer((1714-1156));
"34
[e ( _waitTimer (1 -> - -> 1714 `i -> 1156 `i `ui ]
"35
}
[; ;waveman.h: 35: }
[e $U 536  ]
"36
[e :U 535 ]
[; ;waveman.h: 36: else{
{
[; ;waveman.h: 37: LATB2 = 1;
"37
[e = _LATB2 -> -> 1 `i `b ]
[; ;waveman.h: 38: waitTimer(272);
"38
[e ( _waitTimer (1 -> -> 272 `i `ui ]
[; ;waveman.h: 39: LATB2 = 0;
"39
[e = _LATB2 -> -> 0 `i `b ]
[; ;waveman.h: 40: waitTimer((1714-272));
"40
[e ( _waitTimer (1 -> - -> 1714 `i -> 272 `i `ui ]
"41
}
[e :U 536 ]
[; ;waveman.h: 41: }
[; ;waveman.h: 42: LATB2 = 1;
"42
[e = _LATB2 -> -> 1 `i `b ]
[; ;waveman.h: 43: waitTimer(272);
"43
[e ( _waitTimer (1 -> -> 272 `i `ui ]
[; ;waveman.h: 44: LATB2 = 0;
"44
[e = _LATB2 -> -> 0 `i `b ]
[; ;waveman.h: 45: waitTimer((1714-272));
"45
[e ( _waitTimer (1 -> - -> 1714 `i -> 272 `i `ui ]
[; ;waveman.h: 46: temp <<= 1;
"46
[e =<< _temp -> 1 `i ]
"47
}
"29
[e ++ _bitnr -> -> 1 `i `uc ]
[e $ < -> _bitnr `i -> 12 `i 532  ]
[e :U 533 ]
"47
}
[; ;waveman.h: 47: }
[; ;waveman.h: 48: waitTimer(11500);
"48
[e ( _waitTimer (1 -> -> 11500 `i `ui ]
"49
}
"23
[e ++ _resend -> -> 1 `i `uc ]
[e :U 531 ]
[e $ < -> _resend `i -> _resends `i 528  ]
[e :U 529 ]
"49
}
[; ;waveman.h: 49: }
[; ;waveman.h: 50: stopTransmit();
"50
[e ( _stopTransmit ..  ]
[; ;waveman.h: 51: }
"51
[e :UE 526 ]
}
"135 D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1.2\batchpcb26k20.c
[v _parseSettings `(v 1 ef3`*uc`uc`*S241 ]
{
[; ;batchpcb26k20.c: 135: void parseSettings(char *linep, char line_len, settings_t *settingsp){
[e :U _parseSettings ]
[v _linep `*uc 1 r1 ]
[v _line_len `uc 1 r2 ]
[v _settingsp `*S241 1 r3 ]
[f ]
[; ;batchpcb26k20.c: 136: if(line_len == 1){
"136
[e $ ! == -> _line_len `i -> 1 `i 538  ]
{
[; ;batchpcb26k20.c: 137: sPut(10);
"137
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 138: sPuts("--------- Settings ----------"); sPut(10);
"138
[e ( _sPuts (1 :s 7C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 139: sPuts("BMC:"); sPut(10);
"139
[e ( _sPuts (1 :s 8C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 140: sPuts(" [B] En. RX = "); sPut('0' + settingsp->bmc_en_rx); sPut(10);
"140
[e ( _sPuts (1 :s 9C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 1 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 141: sPuts(" [M] Sends  = "); sPut('0' + settingsp->bmc_sends); sPut(10);
"141
[e ( _sPuts (1 :s 10C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 2 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 142: sPuts(" [C] In hex = "); sPut('0' + settingsp->bmc_en_hex); sPut(10);
"142
[e ( _sPuts (1 :s 11C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 3 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 143: sPuts(" [R] Repeat = "); sPut('0' + settingsp->bmc_repeat); sPut(10);
"143
[e ( _sPuts (1 :s 12C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 4 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 144: sPuts(" [H] Hops   = "); sPut('0' + settingsp->bmc_hops); sPut(10);
"144
[e ( _sPuts (1 :s 13C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 5 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 145: sPuts("Doro:"); sPut(10);
"145
[e ( _sPuts (1 :s 14C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 146: sPuts(" [D] En. RX = "); sPut('0' + settingsp->doro_en_rx); sPut(10);
"146
[e ( _sPuts (1 :s 15C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 6 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 147: sPuts("GAO:"); sPut(10);
"147
[e ( _sPuts (1 :s 16C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 148: sPuts(" [G] En. RX = "); sPut('0' + settingsp->gao_en_rx); sPut(10);
"148
[e ( _sPuts (1 :s 17C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 7 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 149: sPuts(" [A] Sends  = "); sPut('0' + settingsp->gao_sends); sPut(10);
"149
[e ( _sPuts (1 :s 18C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 8 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 150: sPuts("Esic:"); sPut(10);
"150
[e ( _sPuts (1 :s 19C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 151: sPuts(" [E] En. RX = "); sPut('0' + settingsp->esic_en_rx); sPut(10);
"151
[e ( _sPuts (1 :s 20C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 9 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 152: sPuts("Nexa:"); sPut(10);
"152
[e ( _sPuts (1 :s 21C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 153: sPuts(" [N] En. RX = "); sPut('0' + settingsp->nexa_en_rx); sPut(10);
"153
[e ( _sPuts (1 :s 22C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 10 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 154: sPuts(" [X] Sends  = "); sPut('0' + settingsp->nexa_sends); sPut(10);
"154
[e ( _sPuts (1 :s 23C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 11 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 155: sPuts("Waveman:"); sPut(10);
"155
[e ( _sPuts (1 :s 24C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 156: sPuts(" [W] Sends  = "); sPut('0' + settingsp->waveman_sends); sPut(10);
"156
[e ( _sPuts (1 :s 25C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 12 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 157: sPuts("Kangthai:"); sPut(10);
"157
[e ( _sPuts (1 :s 26C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 158: sPuts(" [K] Sends  = "); sPut('0' + settingsp->kangthai_sends); sPut(10);
"158
[e ( _sPuts (1 :s 27C ]
[e ( _sPut (1 -> + -> 48 `ui -> . *U _settingsp 13 `ui `uc ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 159: sPuts("Settings:"); sPut(10);
"159
[e ( _sPuts (1 :s 28C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 160: sPuts(" [S] EEPROM save"); sPut(10);
"160
[e ( _sPuts (1 :s 29C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 161: sPuts(" [L] EEPROM load"); sPut(10);
"161
[e ( _sPuts (1 :s 30C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 162: sPuts(" [F] Load defaults"); sPut(10);
"162
[e ( _sPuts (1 :s 31C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 163: sPuts("Other:"); sPut(10);
"163
[e ( _sPuts (1 :s 32C ]
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 164: sPuts(" Curr. RSSI = "); sPutint(readAd()); sPut(10);
"164
[e ( _sPuts (1 :s 33C ]
[e ( _sPutint (1 ( _readAd ..  ]
[e ( _sPut (1 -> -> 10 `i `uc ]
"165
}
[; ;batchpcb26k20.c: 165: }
[e $U 539  ]
"166
[e :U 538 ]
[; ;batchpcb26k20.c: 166: else{
{
[; ;batchpcb26k20.c: 167: switch (linep[0]){
"167
[e $U 541  ]
{
[; ;batchpcb26k20.c: 168: case 'B':
"168
[e :U 542 ]
[; ;batchpcb26k20.c: 169: settingsp->bmc_en_rx = linep[1] - '0';
"169
[e = . *U _settingsp 1 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 170: sPuts("$OK");
"170
[e ( _sPuts (1 :s 34C ]
[; ;batchpcb26k20.c: 171: sPut(10);
"171
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 172: break;
"172
[e $U 540  ]
[; ;batchpcb26k20.c: 173: case 'M':
"173
[e :U 543 ]
[; ;batchpcb26k20.c: 174: settingsp->bmc_sends = linep[1] - '0';
"174
[e = . *U _settingsp 2 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 175: sPuts("$OK");
"175
[e ( _sPuts (1 :s 35C ]
[; ;batchpcb26k20.c: 176: sPut(10);
"176
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 177: break;
"177
[e $U 540  ]
[; ;batchpcb26k20.c: 178: case 'C':
"178
[e :U 544 ]
[; ;batchpcb26k20.c: 179: settingsp->bmc_en_hex = linep[1] - '0';
"179
[e = . *U _settingsp 3 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 180: sPuts("$OK");
"180
[e ( _sPuts (1 :s 36C ]
[; ;batchpcb26k20.c: 181: sPut(10);
"181
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 182: break;
"182
[e $U 540  ]
[; ;batchpcb26k20.c: 183: case 'R':
"183
[e :U 545 ]
[; ;batchpcb26k20.c: 184: settingsp->bmc_repeat = linep[1] - '0';
"184
[e = . *U _settingsp 4 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 185: sPuts("$OK");
"185
[e ( _sPuts (1 :s 37C ]
[; ;batchpcb26k20.c: 186: sPut(10);
"186
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 187: break;
"187
[e $U 540  ]
[; ;batchpcb26k20.c: 188: case 'H':
"188
[e :U 546 ]
[; ;batchpcb26k20.c: 189: settingsp->bmc_hops = linep[1] - '0';
"189
[e = . *U _settingsp 5 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 190: sPuts("$OK");
"190
[e ( _sPuts (1 :s 38C ]
[; ;batchpcb26k20.c: 191: sPut(10);
"191
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 192: break;
"192
[e $U 540  ]
[; ;batchpcb26k20.c: 193: case 'D':
"193
[e :U 547 ]
[; ;batchpcb26k20.c: 194: settingsp->doro_en_rx = linep[1] - '0';
"194
[e = . *U _settingsp 6 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 195: sPuts("$OK");
"195
[e ( _sPuts (1 :s 39C ]
[; ;batchpcb26k20.c: 196: sPut(10);
"196
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 197: break;
"197
[e $U 540  ]
[; ;batchpcb26k20.c: 198: case 'G':
"198
[e :U 548 ]
[; ;batchpcb26k20.c: 199: settingsp->gao_en_rx = linep[1] - '0';
"199
[e = . *U _settingsp 7 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 200: sPuts("$OK");
"200
[e ( _sPuts (1 :s 40C ]
[; ;batchpcb26k20.c: 201: sPut(10);
"201
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 202: break;
"202
[e $U 540  ]
[; ;batchpcb26k20.c: 203: case 'A':
"203
[e :U 549 ]
[; ;batchpcb26k20.c: 204: settingsp->gao_sends = linep[1] - '0';
"204
[e = . *U _settingsp 8 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 205: sPuts("$OK");
"205
[e ( _sPuts (1 :s 41C ]
[; ;batchpcb26k20.c: 206: sPut(10);
"206
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 207: break;
"207
[e $U 540  ]
[; ;batchpcb26k20.c: 208: case 'E':
"208
[e :U 550 ]
[; ;batchpcb26k20.c: 209: settingsp->esic_en_rx = linep[1] - '0';
"209
[e = . *U _settingsp 9 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 210: sPuts("$OK");
"210
[e ( _sPuts (1 :s 42C ]
[; ;batchpcb26k20.c: 211: sPut(10);
"211
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 212: break;
"212
[e $U 540  ]
[; ;batchpcb26k20.c: 213: case 'N':
"213
[e :U 551 ]
[; ;batchpcb26k20.c: 214: settingsp->nexa_en_rx = linep[1] - '0';
"214
[e = . *U _settingsp 10 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 215: sPuts("$OK");
"215
[e ( _sPuts (1 :s 43C ]
[; ;batchpcb26k20.c: 216: sPut(10);
"216
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 217: break;
"217
[e $U 540  ]
[; ;batchpcb26k20.c: 218: case 'X':
"218
[e :U 552 ]
[; ;batchpcb26k20.c: 219: settingsp->nexa_sends = linep[1] - '0';
"219
[e = . *U _settingsp 11 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 220: sPuts("$OK");
"220
[e ( _sPuts (1 :s 44C ]
[; ;batchpcb26k20.c: 221: sPut(10);
"221
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 222: break;
"222
[e $U 540  ]
[; ;batchpcb26k20.c: 223: case 'W':
"223
[e :U 553 ]
[; ;batchpcb26k20.c: 224: settingsp->waveman_sends = linep[1] - '0';
"224
[e = . *U _settingsp 12 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 225: sPuts("$OK");
"225
[e ( _sPuts (1 :s 45C ]
[; ;batchpcb26k20.c: 226: sPut(10);
"226
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 227: break;
"227
[e $U 540  ]
[; ;batchpcb26k20.c: 228: case 'K':
"228
[e :U 554 ]
[; ;batchpcb26k20.c: 229: settingsp->kangthai_sends = linep[1] - '0';
"229
[e = . *U _settingsp 13 -> - -> *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x `ui -> 48 `ui `uc ]
[; ;batchpcb26k20.c: 230: sPuts("$OK");
"230
[e ( _sPuts (1 :s 46C ]
[; ;batchpcb26k20.c: 231: sPut(10);
"231
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 232: break;
"232
[e $U 540  ]
[; ;batchpcb26k20.c: 233: case 'S':
"233
[e :U 555 ]
[; ;batchpcb26k20.c: 234: saveEeprom(settingsp);
"234
[e ( _saveEeprom (1 -> _settingsp `*uc ]
[; ;batchpcb26k20.c: 235: sPuts("$OK");
"235
[e ( _sPuts (1 :s 47C ]
[; ;batchpcb26k20.c: 236: sPut(10);
"236
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 237: break;
"237
[e $U 540  ]
[; ;batchpcb26k20.c: 238: case 'L':
"238
[e :U 556 ]
[; ;batchpcb26k20.c: 239: loadEeprom(settingsp);
"239
[e ( _loadEeprom (1 -> _settingsp `*uc ]
[; ;batchpcb26k20.c: 240: sPuts("$OK");
"240
[e ( _sPuts (1 :s 48C ]
[; ;batchpcb26k20.c: 241: sPut(10);
"241
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 242: break;
"242
[e $U 540  ]
[; ;batchpcb26k20.c: 243: case 'F':
"243
[e :U 557 ]
[; ;batchpcb26k20.c: 244: loadDefaults(settingsp);
"244
[e ( _loadDefaults (1 _settingsp ]
[; ;batchpcb26k20.c: 245: sPuts("$OK");
"245
[e ( _sPuts (1 :s 49C ]
[; ;batchpcb26k20.c: 246: sPut(10);
"246
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 247: break;
"247
[e $U 540  ]
"248
}
[; ;batchpcb26k20.c: 248: }
[e $U 540  ]
"167
[e :U 541 ]
[e [\ *U + _linep * -> -> 0 `i `x -> -> # *U _linep `i `x , $ -> -> 66 `ui `uc 542
 , $ -> -> 77 `ui `uc 543
 , $ -> -> 67 `ui `uc 544
 , $ -> -> 82 `ui `uc 545
 , $ -> -> 72 `ui `uc 546
 , $ -> -> 68 `ui `uc 547
 , $ -> -> 71 `ui `uc 548
 , $ -> -> 65 `ui `uc 549
 , $ -> -> 69 `ui `uc 550
 , $ -> -> 78 `ui `uc 551
 , $ -> -> 88 `ui `uc 552
 , $ -> -> 87 `ui `uc 553
 , $ -> -> 75 `ui `uc 554
 , $ -> -> 83 `ui `uc 555
 , $ -> -> 76 `ui `uc 556
 , $ -> -> 70 `ui `uc 557
 540 ]
"248
[e :U 540 ]
"249
}
[e :U 539 ]
[; ;batchpcb26k20.c: 249: }
[; ;batchpcb26k20.c: 250: }
"250
[e :UE 537 ]
}
"252
[v _parseCmd `(v 1 ef3`*uc`uc`*S241 ]
{
[; ;batchpcb26k20.c: 252: void parseCmd(char *linep, char line_len, settings_t *settingsp){
[e :U _parseCmd ]
[v _linep `*uc 1 r1 ]
[v _line_len `uc 1 r2 ]
[v _settingsp `*S241 1 r3 ]
[f ]
[; ;batchpcb26k20.c: 253: switch(linep[1]){
"253
[e $U 560  ]
{
[; ;batchpcb26k20.c: 254: case 'G':
"254
[e :U 561 ]
[; ;batchpcb26k20.c: 255: if (line_len == 9) gaoTx(linep+2, settingsp->gao_sends);
"255
[e $ ! == -> _line_len `i -> 9 `i 562  ]
[e ( _gaoTx (2 , + _linep * -> -> 2 `i `x -> -> # *U _linep `i `x . *U _settingsp 8 ]
[e :U 562 ]
[; ;batchpcb26k20.c: 256: break;
"256
[e $U 559  ]
[; ;batchpcb26k20.c: 257: case 'W':
"257
[e :U 563 ]
[; ;batchpcb26k20.c: 258: if (line_len == 7) wavemanTx(linep+2, settingsp->waveman_sends);
"258
[e $ ! == -> _line_len `i -> 7 `i 564  ]
[e ( _wavemanTx (2 , + _linep * -> -> 2 `i `x -> -> # *U _linep `i `x . *U _settingsp 12 ]
[e :U 564 ]
[; ;batchpcb26k20.c: 259: break;
"259
[e $U 559  ]
[; ;batchpcb26k20.c: 260: case 'N':
"260
[e :U 565 ]
[; ;batchpcb26k20.c: 261: if ((line_len >= 13)&&(line_len <= 14)) nexaTx(linep+2, settingsp->nexa_sends);
"261
[e $ ! && >= -> _line_len `i -> 13 `i <= -> _line_len `i -> 14 `i 566  ]
[e ( _nexaTx (2 , + _linep * -> -> 2 `i `x -> -> # *U _linep `i `x . *U _settingsp 11 ]
[e :U 566 ]
[; ;batchpcb26k20.c: 262: break;
"262
[e $U 559  ]
[; ;batchpcb26k20.c: 263: case 'K':
"263
[e :U 567 ]
[; ;batchpcb26k20.c: 264: if (line_len == 10) kangthaiTx(linep+2, settingsp->kangthai_sends);
"264
[e $ ! == -> _line_len `i -> 10 `i 568  ]
[e ( _kangthaiTx (2 , + _linep * -> -> 2 `i `x -> -> # *U _linep `i `x . *U _settingsp 13 ]
[e :U 568 ]
[; ;batchpcb26k20.c: 265: break;
"265
[e $U 559  ]
[; ;batchpcb26k20.c: 266: case 'B':
"266
[e :U 569 ]
[; ;batchpcb26k20.c: 267: if (line_len >= 4){
"267
[e $ ! >= -> _line_len `i -> 4 `i 570  ]
{
[; ;batchpcb26k20.c: 268: line_len -= 3;
"268
[e =- _line_len -> -> 3 `i `uc ]
[; ;batchpcb26k20.c: 269: if(settingsp->bmc_en_hex) bmcConvertHex(linep+2, &line_len);
"269
[e $ ! != -> . *U _settingsp 3 `i -> -> -> 0 `i `uc `i 571  ]
[e ( _bmcConvertHex (2 , + _linep * -> -> 2 `i `x -> -> # *U _linep `i `x &U _line_len ]
[e :U 571 ]
[; ;batchpcb26k20.c: 270: bmcTx(linep+2, line_len, settingsp->bmc_hops, settingsp->bmc_sends);
"270
[e ( _bmcTx (4 , , , + _linep * -> -> 2 `i `x -> -> # *U _linep `i `x _line_len . *U _settingsp 5 . *U _settingsp 2 ]
"271
}
[e :U 570 ]
[; ;batchpcb26k20.c: 271: }
[; ;batchpcb26k20.c: 272: break;
"272
[e $U 559  ]
[; ;batchpcb26k20.c: 273: case 'P':
"273
[e :U 572 ]
[; ;batchpcb26k20.c: 274: sPuts("MultiTRX HWID 1.1, FWID 1.2 - skagmo.com");
"274
[e ( _sPuts (1 :s 50C ]
[; ;batchpcb26k20.c: 275: sPut(10);
"275
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 276: break;
"276
[e $U 559  ]
[; ;batchpcb26k20.c: 277: case 'S':
"277
[e :U 573 ]
[; ;batchpcb26k20.c: 278: parseSettings(linep+2, line_len-2, settingsp);
"278
[e ( _parseSettings (3 , , + _linep * -> -> 2 `i `x -> -> # *U _linep `i `x -> - -> _line_len `i -> 2 `i `uc _settingsp ]
[; ;batchpcb26k20.c: 279: break;
"279
[e $U 559  ]
[; ;batchpcb26k20.c: 280: case 'X':
"280
[e :U 574 ]
[; ;batchpcb26k20.c: 281: asm(" reset");
"281
[;  reset ;#
[; ;batchpcb26k20.c: 282: break;
"282
[e $U 559  ]
[; ;batchpcb26k20.c: 283: case '!':
"283
[e :U 575 ]
[; ;batchpcb26k20.c: 284: startTransmit();
"284
[e ( _startTransmit ..  ]
[; ;batchpcb26k20.c: 285: LATB2 = 1;
"285
[e = _LATB2 -> -> 1 `i `b ]
[; ;batchpcb26k20.c: 286: delayms(5000);
"286
[e ( _delayms (1 -> 5000 `i ]
[; ;batchpcb26k20.c: 287: stopTransmit();
"287
[e ( _stopTransmit ..  ]
[; ;batchpcb26k20.c: 288: break;
"288
[e $U 559  ]
"289
}
[; ;batchpcb26k20.c: 289: }
[e $U 559  ]
"253
[e :U 560 ]
[e [\ *U + _linep * -> -> 1 `i `x -> -> # *U _linep `i `x , $ -> -> 71 `ui `uc 561
 , $ -> -> 87 `ui `uc 563
 , $ -> -> 78 `ui `uc 565
 , $ -> -> 75 `ui `uc 567
 , $ -> -> 66 `ui `uc 569
 , $ -> -> 80 `ui `uc 572
 , $ -> -> 83 `ui `uc 573
 , $ -> -> 88 `ui `uc 574
 , $ -> -> 33 `ui `uc 575
 559 ]
"289
[e :U 559 ]
[; ;batchpcb26k20.c: 290: }
"290
[e :UE 558 ]
}
"292
[v _main `(v 1 ef ]
{
[; ;batchpcb26k20.c: 292: void main(){
[e :U _main ]
[f ]
[; ;batchpcb26k20.c: 293: init();
"293
[e ( _init ..  ]
[; ;batchpcb26k20.c: 294: sInit(9600);
"294
[e ( _sInit (1 -> -> -> 9600 `i `l `ul ]
[; ;batchpcb26k20.c: 295: startupBlinkLed();
"295
[e ( _startupBlinkLed ..  ]
[; ;batchpcb26k20.c: 296: sPuts("MultiTRX HWID 1.1, FWID 1.2 - skagmo.com");
"296
[e ( _sPuts (1 :s 51C ]
[; ;batchpcb26k20.c: 297: sPut(10);
"297
[e ( _sPut (1 -> -> 10 `i `uc ]
[; ;batchpcb26k20.c: 298: LATB3 = 1;
"298
[e = _LATB3 -> -> 1 `i `b ]
[; ;batchpcb26k20.c: 299: delayms(5);
"299
[e ( _delayms (1 -> 5 `i ]
[; ;batchpcb26k20.c: 300: LATB3 = 0;
"300
[e = _LATB3 -> -> 0 `i `b ]
"302
[v _rf_state `uc 1 a ]
[; ;batchpcb26k20.c: 302: char rf_state = 0;
[e = _rf_state -> -> 0 `i `uc ]
"303
[v _prev_rf_state `uc 1 a ]
[; ;batchpcb26k20.c: 303: char prev_rf_state = 0;
[e = _prev_rf_state -> -> 0 `i `uc ]
"304
[v _rf_pulse_length `uc 1 a ]
[; ;batchpcb26k20.c: 304: char rf_pulse_length = 0;
[e = _rf_pulse_length -> -> 0 `i `uc ]
"307
[v _line `uc -> 32 `i a ]
"308
[v _line_len `uc 1 a ]
[; ;batchpcb26k20.c: 307: char line[32];
[; ;batchpcb26k20.c: 308: char line_len = 0;
[e = _line_len -> -> 0 `i `uc ]
"309
[v _temp_c `uc 1 a ]
"311
[v _settings `S241 1 a ]
[; ;batchpcb26k20.c: 309: char temp_c;
[; ;batchpcb26k20.c: 311: settings_t settings;
[; ;batchpcb26k20.c: 312: loadEeprom(&settings);
"312
[e ( _loadEeprom (1 -> &U _settings `*uc ]
[; ;batchpcb26k20.c: 314: while(1){
"314
[e :U 578 ]
{
[; ;batchpcb26k20.c: 316: rf_state = (PORTB&0b100);
"316
[e = _rf_state -> & -> _PORTB `i -> 4 `i `uc ]
[; ;batchpcb26k20.c: 317: if (prev_rf_state != rf_state){
"317
[e $ ! != -> _prev_rf_state `i -> _rf_state `i 580  ]
{
[; ;batchpcb26k20.c: 318: rf_pulse_length = TMR0L;
"318
[e = _rf_pulse_length _TMR0L ]
[; ;batchpcb26k20.c: 319: if(TMR0IF){
"319
[e $ ! _TMR0IF 581  ]
{
[; ;batchpcb26k20.c: 320: rf_pulse_length = 0xFF;
"320
[e = _rf_pulse_length -> -> 255 `i `uc ]
[; ;batchpcb26k20.c: 321: TMR0IF = 0;
"321
[e = _TMR0IF -> -> 0 `i `b ]
"322
}
[e :U 581 ]
[; ;batchpcb26k20.c: 322: }
[; ;batchpcb26k20.c: 323: TMR0L = 0;
"323
[e = _TMR0L -> -> 0 `i `uc ]
[; ;batchpcb26k20.c: 324: if (settings.doro_en_rx) doroDecode(prev_rf_state, rf_pulse_length);
"324
[e $ ! != -> . _settings 6 `i -> -> -> 0 `i `uc `i 582  ]
[e ( _doroDecode (2 , _prev_rf_state _rf_pulse_length ]
[e :U 582 ]
[; ;batchpcb26k20.c: 325: if (settings.esic_en_rx) esicDecode(rf_pulse_length);
"325
[e $ ! != -> . _settings 9 `i -> -> -> 0 `i `uc `i 583  ]
[e ( _esicDecode (1 _rf_pulse_length ]
[e :U 583 ]
[; ;batchpcb26k20.c: 326: if (settings.gao_en_rx) gaoDecode (prev_rf_state, rf_pulse_length);
"326
[e $ ! != -> . _settings 7 `i -> -> -> 0 `i `uc `i 584  ]
[e ( _gaoDecode (2 , _prev_rf_state _rf_pulse_length ]
[e :U 584 ]
[; ;batchpcb26k20.c: 327: if (settings.nexa_en_rx) nexaDecode(prev_rf_state, rf_pulse_length);
"327
[e $ ! != -> . _settings 10 `i -> -> -> 0 `i `uc `i 585  ]
[e ( _nexaDecode (2 , _prev_rf_state _rf_pulse_length ]
[e :U 585 ]
[; ;batchpcb26k20.c: 328: if (settings.bmc_en_rx) bmcDecode (rf_pulse_length, &settings);
"328
[e $ ! != -> . _settings 1 `i -> -> -> 0 `i `uc `i 586  ]
[e ( _bmcDecode (2 , _rf_pulse_length &U _settings ]
[e :U 586 ]
"329
}
[e :U 580 ]
[; ;batchpcb26k20.c: 329: }
[; ;batchpcb26k20.c: 330: prev_rf_state = rf_state;
"330
[e = _prev_rf_state _rf_state ]
[; ;batchpcb26k20.c: 333: if(TMR3IF){
"333
[e $ ! _TMR3IF 587  ]
{
[; ;batchpcb26k20.c: 334: LATC5 = 0;
"334
[e = _LATC5 -> -> 0 `i `b ]
[; ;batchpcb26k20.c: 335: TMR3ON = 0;
"335
[e = _TMR3ON -> -> 0 `i `b ]
[; ;batchpcb26k20.c: 336: TMR3IF = 0;
"336
[e = _TMR3IF -> -> 0 `i `b ]
"337
}
[e :U 587 ]
[; ;batchpcb26k20.c: 337: }
[; ;batchpcb26k20.c: 340: while(sInWaiting()){
"340
[e $U 588  ]
[e :U 589 ]
{
[; ;batchpcb26k20.c: 341: temp_c = sGet();
"341
[e = _temp_c ( _sGet ..  ]
[; ;batchpcb26k20.c: 342: if(temp_c == '$') line_len = 0;
"342
[e $ ! == -> _temp_c `ui -> 36 `ui 591  ]
[e = _line_len -> -> 0 `i `uc ]
[e :U 591 ]
[; ;batchpcb26k20.c: 343: line[line_len++] = temp_c;
"343
[e = *U + &U _line * -> ++ _line_len -> -> 1 `i `uc `ux -> -> # *U &U _line `ui `ux _temp_c ]
[; ;batchpcb26k20.c: 344: if((temp_c == 10) || (temp_c == 13)){
"344
[e $ ! || == -> _temp_c `i -> 10 `i == -> _temp_c `i -> 13 `i 592  ]
{
[; ;batchpcb26k20.c: 345: if((line_len >= 3)&&(line[0]=='$')) parseCmd(&line, line_len, &settings);
"345
[e $ ! && >= -> _line_len `i -> 3 `i == -> *U + &U _line * -> -> -> 0 `i `ui `ux -> -> # *U &U _line `ui `ux `ui -> 36 `ui 593  ]
[e ( _parseCmd (3 , , &U _line _line_len &U _settings ]
[e :U 593 ]
[; ;batchpcb26k20.c: 346: line_len = 0;
"346
[e = _line_len -> -> 0 `i `uc ]
"347
}
[e :U 592 ]
"348
}
[e :U 588 ]
"340
[e $ != -> ( _sInWaiting ..  `i -> -> -> 0 `i `uc `i 589  ]
[e :U 590 ]
"349
}
[e :U 577 ]
"314
[e $U 578  ]
[e :U 579 ]
[; ;batchpcb26k20.c: 347: }
[; ;batchpcb26k20.c: 348: }
[; ;batchpcb26k20.c: 349: }
[; ;batchpcb26k20.c: 350: }
"350
[e :UE 576 ]
}
[a 31C 32 91 70 93 32 76 111 97 100 32 100 101 102 97 117 108 116 115 0 ]
[a 51C 77 117 108 116 105 84 82 88 32 72 87 73 68 32 49 46 49 44 32 70 87 73 68 32 49 46 50 32 45 32 115 107 97 103 109 111 46 99 111 109 0 ]
[a 50C 77 117 108 116 105 84 82 88 32 72 87 73 68 32 49 46 49 44 32 70 87 73 68 32 49 46 50 32 45 32 115 107 97 103 109 111 46 99 111 109 0 ]
[a 29C 32 91 83 93 32 69 69 80 82 79 77 32 115 97 118 101 0 ]
[a 30C 32 91 76 93 32 69 69 80 82 79 77 32 108 111 97 100 0 ]
[a 4C 36 78 0 ]
[a 40C 36 79 75 0 ]
[a 39C 36 79 75 0 ]
[a 41C 36 79 75 0 ]
[a 42C 36 79 75 0 ]
[a 38C 36 79 75 0 ]
[a 35C 36 79 75 0 ]
[a 34C 36 79 75 0 ]
[a 37C 36 79 75 0 ]
[a 36C 36 79 75 0 ]
[a 43C 36 79 75 0 ]
[a 48C 36 79 75 0 ]
[a 47C 36 79 75 0 ]
[a 1C 36 79 75 0 ]
[a 49C 36 79 75 0 ]
[a 44C 36 79 75 0 ]
[a 45C 36 79 75 0 ]
[a 46C 36 79 75 0 ]
[a 3C 36 71 0 ]
[a 5C 36 69 0 ]
[a 6C 36 68 0 ]
[a 2C 36 66 0 ]
[a 28C 83 101 116 116 105 110 103 115 58 0 ]
[a 32C 79 116 104 101 114 58 0 ]
[a 14C 68 111 114 111 58 0 ]
[a 24C 87 97 118 101 109 97 110 58 0 ]
[a 26C 75 97 110 103 116 104 97 105 58 0 ]
[a 19C 69 115 105 99 58 0 ]
[a 21C 78 101 120 97 58 0 ]
[a 16C 71 65 79 58 0 ]
[a 8C 66 77 67 58 0 ]
[a 7C 45 45 45 45 45 45 45 45 45 32 83 101 116 116 105 110 103 115 32 45 45 45 45 45 45 45 45 45 45 0 ]
[a 11C 32 91 67 93 32 73 110 32 104 101 120 32 61 32 0 ]
[a 12C 32 91 82 93 32 82 101 112 101 97 116 32 61 32 0 ]
[a 22C 32 91 78 93 32 69 110 46 32 82 88 32 61 32 0 ]
[a 17C 32 91 71 93 32 69 110 46 32 82 88 32 61 32 0 ]
[a 20C 32 91 69 93 32 69 110 46 32 82 88 32 61 32 0 ]
[a 15C 32 91 68 93 32 69 110 46 32 82 88 32 61 32 0 ]
[a 9C 32 91 66 93 32 69 110 46 32 82 88 32 61 32 0 ]
[a 33C 32 67 117 114 114 46 32 82 83 83 73 32 61 32 0 ]
[a 23C 32 91 88 93 32 83 101 110 100 115 32 32 61 32 0 ]
[a 25C 32 91 87 93 32 83 101 110 100 115 32 32 61 32 0 ]
[a 10C 32 91 77 93 32 83 101 110 100 115 32 32 61 32 0 ]
[a 27C 32 91 75 93 32 83 101 110 100 115 32 32 61 32 0 ]
[a 18C 32 91 65 93 32 83 101 110 100 115 32 32 61 32 0 ]
[a 13C 32 91 72 93 32 72 111 112 115 32 32 32 61 32 0 ]
