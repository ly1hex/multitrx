

HI-TECH Software LITE Macro Assembler (PIC18) V9.66 build 8870 
                                                       Tue Feb 07 19:51:17 2012

HI-TECH Software Omniscient Code Generator build 8870
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 8870"
     2                           
     3                           	processor	18F26K20
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	2
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	0
   109  000000                     main@rf_state	equ	??_main+0
   110                           	global	main@rf_state
   111  000000                     main@temp_c	equ	??_main+1
   112                           	global	main@temp_c
   113  000000                     main@prev_rf_state	equ	??_main+2
   114                           	global	main@prev_rf_state
   115  000000                     main@line_len	equ	??_main+3
   116                           	global	main@line_len
   117  000000                     main@rf_pulse_length	equ	??_main+4
   118                           	global	main@rf_pulse_length
   119  000000                     main@settings	equ	??_main+5
   120                           	global	main@settings
   121  000000                     main@line	equ	??_main+19
   122                           	global	main@line
   123  000000                     gaoDecode@rf_state	equ	?_gaoDecode+0
   124                           	global	gaoDecode@rf_state
   125  000000                     gaoDecode@rf_pulse_length	equ	?_gaoDecode+1
   126                           	global	gaoDecode@rf_pulse_length
   127  000000                     nexaDecode@rf_state	equ	?_nexaDecode+0
   128                           	global	nexaDecode@rf_state
   129  000000                     nexaDecode@rf_pulse_length	equ	?_nexaDecode+1
   130                           	global	nexaDecode@rf_pulse_length
   131  000000                     doroDecode@rf_state	equ	?_doroDecode+0
   132                           	global	doroDecode@rf_state
   133  000000                     doroDecode@rf_pulse_length	equ	?_doroDecode+1
   134                           	global	doroDecode@rf_pulse_length
   135  000000                     esicDecode@rf_pulse_length	equ	?_esicDecode+0
   136                           	global	esicDecode@rf_pulse_length
   137  000000                     parseCmd@linep	equ	?_parseCmd+0
   138                           	global	parseCmd@linep
   139  000000                     parseCmd@line_len	equ	?_parseCmd+2
   140                           	global	parseCmd@line_len
   141  000000                     parseCmd@settingsp	equ	?_parseCmd+3
   142                           	global	parseCmd@settingsp
   143  000000                     bmcDecode@checksum	equ	??_bmcDecode+0
   144                           	global	bmcDecode@checksum
   145  000000                     bmcDecode@j	equ	??_bmcDecode+1
   146                           	global	bmcDecode@j
   147  000000                     bmcDecode@rf_pulse_length	equ	?_bmcDecode+0
   148                           	global	bmcDecode@rf_pulse_length
   149  000000                     bmcDecode@settingsp	equ	?_bmcDecode+1
   150                           	global	bmcDecode@settingsp
   151  000000                     sGet@c	equ	??_sGet+0
   152                           	global	sGet@c
   153  000000                     startupBlinkLed@j	equ	??_startupBlinkLed+0
   154                           	global	startupBlinkLed@j
   155  000000                     sInit@spbrg_calc	equ	??_sInit+0
   156                           	global	sInit@spbrg_calc
   157  000000                     sInit@baud	equ	?_sInit+0
   158                           	global	sInit@baud
   159  000000                     bmcRepeat@payload_size	equ	??_bmcRepeat+0
   160                           	global	bmcRepeat@payload_size
   161  000000                     bmcRepeat@hops	equ	??_bmcRepeat+1
   162                           	global	bmcRepeat@hops
   163  000000                     bmcRepeat@datap	equ	?_bmcRepeat+0
   164                           	global	bmcRepeat@datap
   165  000000                     bmcRepeat@settingsp	equ	?_bmcRepeat+2
   166                           	global	bmcRepeat@settingsp
   167  000000                     ___lldiv@counter	equ	??___lldiv+0
   168                           	global	___lldiv@counter
   169  000000                     ___lldiv@quotient	equ	??___lldiv+1
   170                           	global	___lldiv@quotient
   171  000000                     ___lldiv@dividend	equ	?___lldiv+0
   172                           	global	___lldiv@dividend
   173  000000                     ___lldiv@divisor	equ	?___lldiv+4
   174                           	global	___lldiv@divisor
   175  000000                     nexaPrint@number	equ	??_nexaPrint+0
   176                           	global	nexaPrint@number
   177  000000                     nexaPrint@j	equ	??_nexaPrint+4
   178                           	global	nexaPrint@j
   179  000000                     nexaPrint@data	equ	?_nexaPrint+0
   180                           	global	nexaPrint@data
   181  000000                     gaoPrint@number	equ	??_gaoPrint+0
   182                           	global	gaoPrint@number
   183  000000                     gaoPrint@j	equ	??_gaoPrint+4
   184                           	global	gaoPrint@j
   185  000000                     gaoPrint@data	equ	?_gaoPrint+0
   186                           	global	gaoPrint@data
   187  000000                     bmcPrint@payload_size	equ	??_bmcPrint+0
   188                           	global	bmcPrint@payload_size
   189  000000                     bmcPrint@j	equ	??_bmcPrint+1
   190                           	global	bmcPrint@j
   191  000000                     bmcPrint@datap	equ	?_bmcPrint+0
   192                           	global	bmcPrint@datap
   193  000000                     bmcPrint@in_hex	equ	?_bmcPrint+2
   194                           	global	bmcPrint@in_hex
   195  000000                     kangthaiTx@temp	equ	??_kangthaiTx+0
   196                           	global	kangthaiTx@temp
   197  000000                     kangthaiTx@data	equ	??_kangthaiTx+4
   198                           	global	kangthaiTx@data
   199  000000                     kangthaiTx@j	equ	??_kangthaiTx+8
   200                           	global	kangthaiTx@j
   201  000000                     kangthaiTx@j_270	equ	??_kangthaiTx+9
   202                           	global	kangthaiTx@j_270
   203  000000                     kangthaiTx@resend	equ	??_kangthaiTx+10
   204                           	global	kangthaiTx@resend
   205  000000                     kangthaiTx@bitnr	equ	??_kangthaiTx+11
   206                           	global	kangthaiTx@bitnr
   207  000000                     kangthaiTx@s	equ	?_kangthaiTx+0
   208                           	global	kangthaiTx@s
   209  000000                     kangthaiTx@resends	equ	?_kangthaiTx+2
   210                           	global	kangthaiTx@resends
   211  000000                     bmcConvertHex@temp	equ	??_bmcConvertHex+0
   212                           	global	bmcConvertHex@temp
   213  000000                     bmcConvertHex@k	equ	??_bmcConvertHex+1
   214                           	global	bmcConvertHex@k
   215  000000                     bmcConvertHex@datap	equ	?_bmcConvertHex+0
   216                           	global	bmcConvertHex@datap
   217  000000                     bmcConvertHex@data_len	equ	?_bmcConvertHex+2
   218                           	global	bmcConvertHex@data_len
   219  000000                     parseSettings@linep	equ	?_parseSettings+0
   220                           	global	parseSettings@linep
   221  000000                     parseSettings@line_len	equ	?_parseSettings+2
   222                           	global	parseSettings@line_len
   223  000000                     parseSettings@settingsp	equ	?_parseSettings+3
   224                           	global	parseSettings@settingsp
   225  000000                     gaoTx@temp	equ	??_gaoTx+0
   226                           	global	gaoTx@temp
   227  000000                     gaoTx@data	equ	??_gaoTx+4
   228                           	global	gaoTx@data
   229  000000                     gaoTx@j	equ	??_gaoTx+8
   230                           	global	gaoTx@j
   231  000000                     gaoTx@resend	equ	??_gaoTx+9
   232                           	global	gaoTx@resend
   233  000000                     gaoTx@preamble	equ	??_gaoTx+10
   234                           	global	gaoTx@preamble
   235  000000                     gaoTx@bitnr	equ	??_gaoTx+11
   236                           	global	gaoTx@bitnr
   237  000000                     gaoTx@s	equ	?_gaoTx+0
   238                           	global	gaoTx@s
   239  000000                     gaoTx@resends	equ	?_gaoTx+2
   240                           	global	gaoTx@resends
   241  000000                     wavemanTx@bitnr	equ	??_wavemanTx+0
   242                           	global	wavemanTx@bitnr
   243  000000                     wavemanTx@data	equ	??_wavemanTx+1
   244                           	global	wavemanTx@data
   245  000000                     wavemanTx@temp	equ	??_wavemanTx+3
   246                           	global	wavemanTx@temp
   247  000000                     wavemanTx@resend	equ	??_wavemanTx+5
   248                           	global	wavemanTx@resend
   249  000000                     wavemanTx@s	equ	?_wavemanTx+0
   250                           	global	wavemanTx@s
   251  000000                     wavemanTx@resends	equ	?_wavemanTx+2
   252                           	global	wavemanTx@resends
   253  000000                     nexaTx@dimming	equ	??_nexaTx+0
   254                           	global	nexaTx@dimming
   255  000000                     nexaTx@bitnr	equ	??_nexaTx+1
   256                           	global	nexaTx@bitnr
   257  000000                     nexaTx@temp	equ	??_nexaTx+2
   258                           	global	nexaTx@temp
   259  000000                     nexaTx@data	equ	??_nexaTx+6
   260                           	global	nexaTx@data
   261  000000                     nexaTx@j	equ	??_nexaTx+10
   262                           	global	nexaTx@j
   263  000000                     nexaTx@resend	equ	??_nexaTx+11
   264                           	global	nexaTx@resend
   265  000000                     nexaTx@s	equ	?_nexaTx+0
   266                           	global	nexaTx@s
   267  000000                     nexaTx@resends	equ	?_nexaTx+2
   268                           	global	nexaTx@resends
   269  000000                     doroPrint@number	equ	??_doroPrint+0
   270                           	global	doroPrint@number
   271  000000                     doroPrint@j	equ	??_doroPrint+2
   272                           	global	doroPrint@j
   273  000000                     doroPrint@data	equ	?_doroPrint+0
   274                           	global	doroPrint@data
   275  000000                     esicPrint@constantcheck	equ	??_esicPrint+0
   276                           	global	esicPrint@constantcheck
   277  000000                     esicPrint@packetcount	equ	??_esicPrint+1
   278                           	global	esicPrint@packetcount
   279  000000                     esicPrint@channel	equ	??_esicPrint+2
   280                           	global	esicPrint@channel
   281  000000                     esicPrint@house	equ	??_esicPrint+3
   282                           	global	esicPrint@house
   283  000000                     esicPrint@humidity	equ	??_esicPrint+4
   284                           	global	esicPrint@humidity
   285  000000                     esicPrint@lowbatt	equ	??_esicPrint+5
   286                           	global	esicPrint@lowbatt
   287  000000                     esicPrint@parity	equ	??_esicPrint+6
   288                           	global	esicPrint@parity
   289  000000                     esicPrint@paritycalc	equ	??_esicPrint+7
   290                           	global	esicPrint@paritycalc
   291  000000                     esicPrint@temperature	equ	??_esicPrint+8
   292                           	global	esicPrint@temperature
   293  000000                     esicPrint@temp	equ	??_esicPrint+12
   294                           	global	esicPrint@temp
   295  000000                     esicPrint@counter	equ	??_esicPrint+16
   296                           	global	esicPrint@counter
   297  000000                     esicPrint@data	equ	?_esicPrint+0
   298                           	global	esicPrint@data
   299  000000                     reverse@output	equ	??_reverse+0
   300                           	global	reverse@output
   301  000000                     reverse@input	equ	?_reverse+0
   302                           	global	reverse@input
   303  000000                     bmcTx@temp	equ	??_bmcTx+0
   304                           	global	bmcTx@temp
   305  000000                     bmcTx@checksum	equ	??_bmcTx+1
   306+                          	global	bmcTx@checksum
   307+ 000000                     bmcTx@k	equ	??_bmcTx+2
   308                           	global	bmcTx@k
   309  000000                     bmcTx@j	equ	??_bmcTx+3
   310                           	global	bmcTx@j
   311  000000                     bmcTx@k_167	equ	??_bmcTx+4
   312                           	global	bmcTx@k_167
   313  000000                     bmcTx@k_168	equ	??_bmcTx+5
   314                           	global	bmcTx@k_168
   315  000000                     bmcTx@datap	equ	?_bmcTx+0
   316                           	global	bmcTx@datap
   317  000000                     bmcTx@data_len	equ	?_bmcTx+2
   318                           	global	bmcTx@data_len
   319  000000                     bmcTx@hops	equ	?_bmcTx+3
   320                           	global	bmcTx@hops
   321  000000                     bmcTx@sends	equ	?_bmcTx+4
   322                           	global	bmcTx@sends
   323  000000                     ___wmul@product	equ	??___wmul+0
   324                           	global	___wmul@product
   325  000000                     ___wmul@multiplier	equ	?___wmul+0
   326                           	global	___wmul@multiplier
   327  000000                     ___wmul@multiplicand	equ	?___wmul+2
   328                           	global	___wmul@multiplicand
   329  000000                     asciiToHex@input	equ	?_asciiToHex+0
   330                           	global	asciiToHex@input
   331  000000                     readAd@value	equ	??_readAd+0
   332                           	global	readAd@value
   333  000000                     readAd@temp	equ	??_readAd+1
   334                           	global	readAd@temp
   335  000000                     readAd@j	equ	??_readAd+3
   336                           	global	readAd@j
   337  000000                     saveEeprom@j	equ	??_saveEeprom+0
   338                           	global	saveEeprom@j
   339  000000                     saveEeprom@settingsp	equ	?_saveEeprom+0
   340                           	global	saveEeprom@settingsp
   341  000000                     ___aldiv@counter	equ	??___aldiv+0
   342                           	global	___aldiv@counter
   343  000000                     ___aldiv@sign	equ	??___aldiv+1
   344                           	global	___aldiv@sign
   345  000000                     ___aldiv@quotient	equ	??___aldiv+2
   346                           	global	___aldiv@quotient
   347  000000                     ___aldiv@dividend	equ	?___aldiv+0
   348                           	global	___aldiv@dividend
   349  000000                     ___aldiv@divisor	equ	?___aldiv+4
   350                           	global	___aldiv@divisor
   351  000000                     loadEeprom@j	equ	??_loadEeprom+0
   352                           	global	loadEeprom@j
   353  000000                     loadEeprom@settingsp	equ	?_loadEeprom+0
   354                           	global	loadEeprom@settingsp
   355  000000                     ___aslmul@mp	equ	?___aslmul+0
   356                           	global	___aslmul@mp
   357  000000                     ___aslmul@multiplicand	equ	?___aslmul+2
   358                           	global	___aslmul@multiplicand
   359  000000                     ___almod@sign	equ	??___almod+0
   360                           	global	___almod@sign
   361  000000                     ___almod@counter	equ	??___almod+1
   362                           	global	___almod@counter
   363  000000                     ___almod@dividend	equ	?___almod+0
   364                           	global	___almod@dividend
   365  000000                     ___almod@divisor	equ	?___almod+4
   366                           	global	___almod@divisor
   367  000000                     ___awdiv@counter	equ	??___awdiv+0
   368                           	global	___awdiv@counter
   369  000000                     ___awdiv@sign	equ	??___awdiv+1
   370                           	global	___awdiv@sign
   371  000000                     ___awdiv@quotient	equ	??___awdiv+2
   372                           	global	___awdiv@quotient
   373  000000                     ___awdiv@dividend	equ	?___awdiv+0
   374                           	global	___awdiv@dividend
   375  000000                     ___awdiv@divisor	equ	?___awdiv+2
   376                           	global	___awdiv@divisor
   377  000000                     sPutint@start	equ	??_sPutint+0
   378                           	global	sPutint@start
   379  000000                     sPutint@stop	equ	??_sPutint+1
   380                           	global	sPutint@stop
   381  000000                     sPutint@temp	equ	??_sPutint+2
   382                           	global	sPutint@temp
   383  000000                     sPutint@buffer	equ	??_sPutint+4
   384                           	global	sPutint@buffer
   385  000000                     sPutint@j	equ	??_sPutint+11
   386                           	global	sPutint@j
   387  000000                     sPutint@input	equ	?_sPutint+0
   388                           	global	sPutint@input
   389  000000                     sPuthex@input	equ	?_sPuthex+0
   390                           	global	sPuthex@input
   391  000000                     loadDefaults@settingsp	equ	?_loadDefaults+0
   392                           	global	loadDefaults@settingsp
   393  000000                     eeprom_read@addr	equ	?_eeprom_read+0
   394                           	global	eeprom_read@addr
   395  000000                     sPutonehex@data	equ	?_sPutonehex+0
   396                           	global	sPutonehex@data
   397  000000                     ___lwdiv@counter	equ	??___lwdiv+0
   398                           	global	___lwdiv@counter
   399  000000                     ___lwdiv@quotient	equ	??___lwdiv+1
   400                           	global	___lwdiv@quotient
   401  000000                     ___lwdiv@dividend	equ	?___lwdiv+0
   402                           	global	___lwdiv@dividend
   403  000000                     ___lwdiv@divisor	equ	?___lwdiv+2
   404                           	global	___lwdiv@divisor
   405  000000                     ___lwmod@counter	equ	??___lwmod+0
   406                           	global	___lwmod@counter
   407  000000                     ___lwmod@dividend	equ	?___lwmod+0
   408                           	global	___lwmod@dividend
   409  000000                     ___lwmod@divisor	equ	?___lwmod+2
   410                           	global	___lwmod@divisor
   411  000000                     eeprom_write@addr	equ	?_eeprom_write+0
   412                           	global	eeprom_write@addr
   413  000000                     eeprom_write@value	equ	?_eeprom_write+2
   414                           	global	eeprom_write@value
   415  000000                     ___lmul@product	equ	??___lmul+0
   416                           	global	___lmul@product
   417  000000                     ___lmul@multiplier	equ	?___lmul+0
   418                           	global	___lmul@multiplier
   419  000000                     ___lmul@multiplicand	equ	?___lmul+4
   420                           	global	___lmul@multiplicand
   421  000000                     bmcTxByte@j	equ	??_bmcTxByte+0
   422                           	global	bmcTxByte@j
   423  000000                     bmcTxByte@data	equ	?_bmcTxByte+0
   424                           	global	bmcTxByte@data
   425  000000                     waitTimer@value	equ	?_waitTimer+0
   426                           	global	waitTimer@value
   427  000000                     delayms@counter	equ	??_delayms+0
   428                           	global	delayms@counter
   429  000000                     delayms@ms	equ	?_delayms+0
   430                           	global	delayms@ms
   431  000000                     sPuts@s	equ	?_sPuts+0
   432                           	global	sPuts@s
   433  000000                     sPut@c	equ	?_sPut+0
   434                           	global	sPut@c
   435                           ;Data sizes: Strings 417, constant 0, data 0, bs
                                 s 0, persistent 0 stack 116
   436                           	global	_main
   437                           	global	??_main
   438                           	global	?_main
   439                           
   440                           ; *************** function _main ***************
                                 **
   441                           ; Defined at:
   442                           ;		line 292 in file "D:\Hobby\Prosjekter\MultiTR
                                 X\Firmware\FW1.2\batchpcb26k20.c"
   443                           ; Parameters:
   444                           ;		None
   445                           ; Auto variables:
   446                           ;		rf_state    	       	type: unsigned char 
   447                           ;		temp_c      	       	type: unsigned char 
   448                           ;		prev_rf_stat	       	type: unsigned char 
   449                           ;		line_len    	       	type: unsigned char 
   450                           ;		rf_pulse_len	       	type: unsigned char 
   451                           ;		settings    	       	type: struct .
   452                           ;		line        	       	type: unsigned char [32]
   453                           ; Return value:
   454                           ;		type: void 
   455                           ;		size: 0
   456                           ; Registers used:
   457                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, csta
                                 ck
   458                           ; Tracked objects:
   459                           ;		On entry : 0/0
   460                           ;		On exit  : 0/0
   461                           ;		Unchanged: 0/0
   462                           ; Data sizes:
   463                           ;		Autos:   51
   464                           ;		Params:   0
   465                           ;		Temp:     1
   466                           ;		Total:   52
   467                           ; This function calls:
   468                           ;		_init
   469                           ;		_sInit
   470                           ;		_startupBlinkLed
   471                           ;		_sPuts
   472                           ;		_sPut
   473                           ;		_delayms
   474                           ;		_loadEeprom
   475                           ;		_doroDecode
   476                           ;		_esicDecode
   477                           ;		_gaoDecode
   478                           ;		_nexaDecode
   479                           ;		_bmcDecode
   480                           ;		_sGet
   481                           ;		_parseCmd
   482                           ;		_sInWaiting
   483                           ; This function is called by:
   484                           ;		Startup code after reset
   485                           ; This function uses a non-reentrant model
   486                           ; 
   487                                   psect   text0,class=CODE,space=0,reloc=2
   488                           
   489                           	opt lm
   490                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\batchpcb26k20.c"
   491                           	line	292
   492  000000                     	__size_of_main	equ	__end_of_main-_main
   493                           ;batchpcb26k20.c: 292: void main(){
   494                           	
   495  002D48                     _main:		; BSR set to: ?
   496                           
   497                           	opt stack 30
   498                           	line	293
   499  002D48  ECD6  F028         	call	_init	;wreg free
   500                           	line	294
   501                           ;batchpcb26k20.c: 294: sInit(9600);
   502  002D4C  0E80               	movlw	low(02580h)
   503  002D4E  0102               	movlb	2	; () banked
   504  002D50  0102               	movlb	2	; () banked
   505  002D52  6F34               	movwf	((?_sInit))&0ffh
   506  002D54  0E25               	movlw	high(02580h)
   507  002D56  0102               	movlb	2	; () banked
   508  002D58  6F35               	movwf	((?_sInit+1))&0ffh
   509  002D5A  0E00               	movlw	low highword(02580h)
   510  002D5C  0102               	movlb	2	; () banked
   511  002D5E  6F36               	movwf	((?_sInit+2))&0ffh
   512  002D60  0E00               	movlw	high highword(02580h)
   513  002D62  0102               	movlb	2	; () banked
   514  002D64  6F37               	movwf	((?_sInit+3))&0ffh
   515  002D66  EC3B  F025         	call	_sInit	;wreg free
   516                           	line	295
   517                           ;batchpcb26k20.c: 295: startupBlinkLed();
   518  002D6A  EC45  F027         	call	_startupBlinkLed	;wreg free
   519                           	line	296
   520                           ;batchpcb26k20.c: 296: sPuts("MultiTRX HWID 1.1,
                                  FWID 1.2 - skagmo.com");
   521  002D6E  0E5E               	movlw	low(STR_51)
   522  002D70  0102               	movlb	2	; () banked
   523  002D72  0102               	movlb	2	; () banked
   524  002D74  6F5E               	movwf	((?_sPuts))&0ffh
   525  002D76  0E7E               	movlw	high(STR_51)
   526  002D78  0102               	movlb	2	; () banked
   527  002D7A  6F5F               	movwf	((?_sPuts+1))&0ffh
   528  002D7C  EC9E  F026         	call	_sPuts	;wreg free
   529                           	line	297
   530                           ;batchpcb26k20.c: 297: sPut(10);
   531  002D80  0102               	movlb	2	; () banked
   532  002D82  6F33               	movwf	(??_main+51+0)&0ffh
   533  002D84  0E0A               	movlw	low(0Ah)
   534  002D86  0102               	movlb	2	; () banked
   535  002D88  0102               	movlb	2	; () banked
   536  002D8A  6F60               	movwf	((?_sPut))&0ffh
   537  002D8C  0102               	movlb	2	; () banked
   538  002D8E  5133               	movf	(??_main+51+0)&0ffh,w
   539  002D90  ECDF  F025         	call	_sPut	;wreg free
   540                           	line	298
   541                           ;batchpcb26k20.c: 298: LATB3 = 1;
   542  002D94  868A               	bsf	c:(31827/8),(31827)&7	;volatile
   543                           	line	299
   544                           ;batchpcb26k20.c: 299: delayms(5);
   545  002D96  0E05               	movlw	low(05h)
   546  002D98  0102               	movlb	2	; () banked
   547  002D9A  0102               	movlb	2	; () banked
   548  002D9C  6F54               	movwf	((?_delayms))&0ffh
   549  002D9E  0E00               	movlw	high(05h)
   550  002DA0  0102               	movlb	2	; () banked
   551  002DA2  6F55               	movwf	((?_delayms+1))&0ffh
   552  002DA4  EC7A  F027         	call	_delayms	;wreg free
   553                           	line	300
   554                           ;batchpcb26k20.c: 300: LATB3 = 0;
   555  002DA8  968A               	bcf	c:(31827/8),(31827)&7	;volatile
   556                           	line	302
   557                           ;batchpcb26k20.c: 302: char rf_state = 0;
   558  002DAA  0102               	movlb	2	; () banked
   559  002DAC  6F33               	movwf	(??_main+51+0)&0ffh
   560  002DAE  0E00               	movlw	low(0)
   561  002DB0  0102               	movlb	2	; () banked
   562  002DB2  0102               	movlb	2	; () banked
   563  002DB4  6F00               	movwf	((main@rf_state))&0ffh
   564  002DB6  0102               	movlb	2	; () banked
   565  002DB8  5133               	movf	(??_main+51+0)&0ffh,w
   566                           	line	303
   567                           ;batchpcb26k20.c: 303: char prev_rf_state = 0;
   568  002DBA  0102               	movlb	2	; () banked
   569  002DBC  6F33               	movwf	(??_main+51+0)&0ffh
   570  002DBE  0E00               	movlw	low(0)
   571  002DC0  0102               	movlb	2	; () banked
   572  002DC2  0102               	movlb	2	; () banked
   573  002DC4  6F02               	movwf	((main@prev_rf_state))&0ffh
   574  002DC6  0102               	movlb	2	; () banked
   575  002DC8  5133               	movf	(??_main+51+0)&0ffh,w
   576                           	line	304
   577                           ;batchpcb26k20.c: 304: char rf_pulse_length = 0;
   578  002DCA  0102               	movlb	2	; () banked
   579  002DCC  6F33               	movwf	(??_main+51+0)&0ffh
   580  002DCE  0E00               	movlw	low(0)
   581  002DD0  0102               	movlb	2	; () banked
   582  002DD2  0102               	movlb	2	; () banked
   583  002DD4  6F04               	movwf	((main@rf_pulse_length))&0ffh
   584  002DD6  0102               	movlb	2	; () banked
   585  002DD8  5133               	movf	(??_main+51+0)&0ffh,w
   586                           	line	308
   587                           ;batchpcb26k20.c: 307: char line[32];
   588                           ;batchpcb26k20.c: 308: char line_len = 0;
   589  002DDA  0102               	movlb	2	; () banked
   590  002DDC  6F33               	movwf	(??_main+51+0)&0ffh
   591  002DDE  0E00               	movlw	low(0)
   592  002DE0  0102               	movlb	2	; () banked
   593  002DE2  0102               	movlb	2	; () banked
   594  002DE4  6F03               	movwf	((main@line_len))&0ffh
   595  002DE6  0102               	movlb	2	; () banked
   596  002DE8  5133               	movf	(??_main+51+0)&0ffh,w
   597                           	line	312
   598                           ;batchpcb26k20.c: 309: char temp_c;
   599                           ;batchpcb26k20.c: 311: settings_t settings;
   600                           ;batchpcb26k20.c: 312: loadEeprom(&settings);
   601  002DEA  0102               	movlb	2	; () banked
   602  002DEC  0E05               	movlw	low(main@settings)
   603  002DEE  0102               	movlb	2	; () banked
   604  002DF0  0102               	movlb	2	; () banked
   605  002DF2  6F40               	movwf	((?_loadEeprom))&0ffh
   606  002DF4  0102               	movlb	2	; () banked
   607  002DF6  0E02               	movlw	high(main@settings)
   608  002DF8  0102               	movlb	2	; () banked
   609  002DFA  6F41               	movwf	((?_loadEeprom+1))&0ffh
   610  002DFC  ECD6  F026         	call	_loadEeprom	;wreg free
   611                           	line	314
   612                           ;batchpcb26k20.c: 314: while(1){
   613                           	
   614  002E00                     l578:		; BSR set to: ?
   615                           
   616                           	line	316
   617                           ;batchpcb26k20.c: 316: rf_state = (PORTB&0b100);
   618  002E00  5081               	movf	((c:3969)),c,w	;volatile
   619  002E02  0B04               	andlw	low(04h)
   620  002E04  0102               	movlb	2	; () banked
   621  002E06  0102               	movlb	2	; () banked
   622  002E08  6F00               	movwf	((main@rf_state))&0ffh
   623                           	line	317
   624                           ;batchpcb26k20.c: 317: if (prev_rf_state != rf_s
                                 tate){
   625  002E0A  0102               	movlb	2	; () banked
   626  002E0C  0102               	movlb	2	; () banked
   627  002E0E  5102               	movf	((main@prev_rf_state))&0ffh,w
   628  002E10  0102               	movlb	2	; () banked
   629  002E12  0102               	movlb	2	; () banked
   630  002E14  1900               	xorwf	((main@rf_state))&0ffh,w
   631  002E16  B4D8               	btfsc	status,2
   632  002E18  EF10  F017         	goto	u6291
   633  002E1C  EF12  F017         	goto	u6290
   634  002E20                     u6291:
   635  002E20  EF76  F017         	goto	l580
   636  002E24                     u6290:
   637                           	line	318
   638                           ;batchpcb26k20.c: 318: rf_pulse_length = TMR0L;
   639  002E24  CFD6 F204          	movff	(c:4054),(main@rf_pulse_length)	;volatile
   640                           	line	319
   641                           ;batchpcb26k20.c: 319: if(TMR0IF){
   642  002E28  A4F2               	btfss	c:(32658/8),(32658)&7	;volatile
   643  002E2A  EF19  F017         	goto	u6301
   644  002E2E  EF1B  F017         	goto	u6300
   645  002E32                     u6301:
   646  002E32  EF1F  F017         	goto	l581
   647  002E36                     u6300:
   648                           	line	320
   649                           ;batchpcb26k20.c: 320: rf_pulse_length = 0xFF;
   650  002E36  0102               	movlb	2	; () banked
   651  002E38  0102               	movlb	2	; () banked
   652  002E3A  6904               	setf	((main@rf_pulse_length))&0ffh
   653                           	line	321
   654                           ;batchpcb26k20.c: 321: TMR0IF = 0;
   655  002E3C  94F2               	bcf	c:(32658/8),(32658)&7	;volatile
   656                           	line	322
   657                           	
   658  002E3E                     l581:		; BSR set to: ?
   659                           
   660                           	line	323
   661                           ;batchpcb26k20.c: 322: }
   662                           ;batchpcb26k20.c: 323: TMR0L = 0;
   663  002E3E  0E00               	movlw	low(0)
   664  002E40  6ED6               	movwf	((c:4054)),c	;volatile
   665                           	line	324
   666                           ;batchpcb26k20.c: 324: if (settings.doro_en_rx) 
                                 doroDecode(prev_rf_state, rf_pulse_length);
   667  002E42  0102               	movlb	2	; () banked
   668  002E44  0102               	movlb	2	; () banked
   669  002E46  510B               	movf	(0+(main@settings+06h))&0ffh,w
   670  002E48  B4D8               	btfsc	status,2
   671  002E4A  EF29  F017         	goto	u6311
   672  002E4E  EF2B  F017         	goto	u6310
   673  002E52                     u6311:
   674  002E52  EF31  F017         	goto	l582
   675  002E56                     u6310:
   676  002E56  C204  F235         	movff	(main@rf_pulse_length),0+(?_doroDecode+01
                                 h)
   677  002E5A  C202  F234         	movff	(main@prev_rf_state),(?_doroDecode)
   678  002E5E  EC13  F019         	call	_doroDecode	;wreg free
   679                           	
   680  002E62                     l582:		; BSR set to: ?
   681                           
   682                           	line	325
   683                           ;batchpcb26k20.c: 325: if (settings.esic_en_rx) 
                                 esicDecode(rf_pulse_length);
   684  002E62  0102               	movlb	2	; () banked
   685  002E64  0102               	movlb	2	; () banked
   686  002E66  510E               	movf	(0+(main@settings+09h))&0ffh,w
   687  002E68  B4D8               	btfsc	status,2
   688  002E6A  EF39  F017         	goto	u6321
   689  002E6E  EF3B  F017         	goto	u6320
   690  002E72                     u6321:
   691  002E72  EF3F  F017         	goto	l583
   692  002E76                     u6320:
   693  002E76  C204  F234         	movff	(main@rf_pulse_length),(?_esicDecode)
   694  002E7A  EC1A  F01A         	call	_esicDecode	;wreg free
   695                           	
   696  002E7E                     l583:		; BSR set to: ?
   697                           
   698                           	line	326
   699                           ;batchpcb26k20.c: 326: if (settings.gao_en_rx) g
                                 aoDecode (prev_rf_state, rf_pulse_length);
   700  002E7E  0102               	movlb	2	; () banked
   701  002E80  0102               	movlb	2	; () banked
   702  002E82  510C               	movf	(0+(main@settings+07h))&0ffh,w
   703  002E84  B4D8               	btfsc	status,2
   704  002E86  EF47  F017         	goto	u6331
   705  002E8A  EF49  F017         	goto	u6330
   706  002E8E                     u6331:
   707  002E8E  EF4F  F017         	goto	l584
   708  002E92                     u6330:
   709  002E92  C204  F235         	movff	(main@rf_pulse_length),0+(?_gaoDecode+01h
                                 )
   710  002E96  C202  F234         	movff	(main@prev_rf_state),(?_gaoDecode)
   711  002E9A  EC92  F00B         	call	_gaoDecode	;wreg free
   712                           	
   713  002E9E                     l584:		; BSR set to: ?
   714                           
   715                           	line	327
   716                           ;batchpcb26k20.c: 327: if (settings.nexa_en_rx) 
                                 nexaDecode(prev_rf_state, rf_pulse_length);
   717  002E9E  0102               	movlb	2	; () banked
   718  002EA0  0102               	movlb	2	; () banked
   719  002EA2  510F               	movf	(0+(main@settings+0Ah))&0ffh,w
   720  002EA4  B4D8               	btfsc	status,2
   721  002EA6  EF57  F017         	goto	u6341
   722  002EAA  EF59  F017         	goto	u6340
   723  002EAE                     u6341:
   724  002EAE  EF5F  F017         	goto	l585
   725  002EB2                     u6340:
   726  002EB2  C204  F235         	movff	(main@rf_pulse_length),0+(?_nexaDecode+01
                                 h)
   727  002EB6  C202  F234         	movff	(main@prev_rf_state),(?_nexaDecode)
   728  002EBA  EC43  F015         	call	_nexaDecode	;wreg free
   729                           	
   730  002EBE                     l585:		; BSR set to: ?
   731                           
   732                           	line	328
   733                           ;batchpcb26k20.c: 328: if (settings.bmc_en_rx) b
                                 mcDecode (rf_pulse_length, &settings);
   734  002EBE  0102               	movlb	2	; () banked
   735  002EC0  0102               	movlb	2	; () banked
   736  002EC2  5106               	movf	(0+(main@settings+01h))&0ffh,w
   737  002EC4  B4D8               	btfsc	status,2
   738  002EC6  EF67  F017         	goto	u6351
   739  002ECA  EF69  F017         	goto	u6350
   740  002ECE                     u6351:
   741  002ECE  EF76  F017         	goto	l580
   742  002ED2                     u6350:
   743  002ED2  0102               	movlb	2	; () banked
   744  002ED4  0E05               	movlw	low(main@settings)
   745  002ED6  0102               	movlb	2	; () banked
   746  002ED8  0102               	movlb	2	; () banked
   747  002EDA  6F35               	movwf	(0+(?_bmcDecode+01h))&0ffh
   748  002EDC  0102               	movlb	2	; () banked
   749  002EDE  0E02               	movlw	high(main@settings)
   750  002EE0  0102               	movlb	2	; () banked
   751  002EE2  6F36               	movwf	(1+(?_bmcDecode+01h))&0ffh
   752  002EE4  C204  F234         	movff	(main@rf_pulse_length),(?_bmcDecode)
   753  002EE8  EC5B  F00D         	call	_bmcDecode	;wreg free
   754                           	
   755  002EEC                     l586:		; BSR set to: ?
   756                           
   757                           	line	329
   758                           	
   759  002EEC                     l580:		; BSR set to: ?
   760                           
   761                           	line	330
   762                           ;batchpcb26k20.c: 329: }
   763                           ;batchpcb26k20.c: 330: prev_rf_state = rf_state;
   764  002EEC  C200  F202         	movff	(main@rf_state),(main@prev_rf_state)
   765                           	line	333
   766                           ;batchpcb26k20.c: 333: if(TMR3IF){
   767  002EF0  A2A1               	btfss	c:(32009/8),(32009)&7	;volatile
   768  002EF2  EF7D  F017         	goto	u6361
   769  002EF6  EF7F  F017         	goto	u6360
   770  002EFA                     u6361:
   771  002EFA  EF82  F017         	goto	l587
   772  002EFE                     u6360:
   773                           	line	334
   774                           ;batchpcb26k20.c: 334: LATC5 = 0;
   775  002EFE  9A8B               	bcf	c:(31837/8),(31837)&7	;volatile
   776                           	line	335
   777                           ;batchpcb26k20.c: 335: TMR3ON = 0;
   778  002F00  90B1               	bcf	c:(32136/8),(32136)&7	;volatile
   779                           	line	336
   780                           ;batchpcb26k20.c: 336: TMR3IF = 0;
   781  002F02  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
   782                           	line	337
   783                           	
   784  002F04                     l587:		; BSR set to: ?
   785                           
   786                           	line	340
   787                           ;batchpcb26k20.c: 337: }
   788                           ;batchpcb26k20.c: 340: while(sInWaiting()){
   789  002F04  EFF5  F017         	goto	l588
   790                           	
   791  002F08                     l589:		; BSR set to: ?
   792                           
   793                           	line	341
   794                           ;batchpcb26k20.c: 341: temp_c = sGet();
   795  002F08  EC6B  F028         	call	_sGet	;wreg free
   796  002F0C  0102               	movlb	2	; () banked
   797  002F0E  0102               	movlb	2	; () banked
   798  002F10  6F01               	movwf	((main@temp_c))&0ffh
   799                           	line	342
   800                           ;batchpcb26k20.c: 342: if(temp_c == '$') line_le
                                 n = 0;
   801  002F12  0102               	movlb	2	; () banked
   802  002F14  0102               	movlb	2	; () banked
   803  002F16  5101               	movf	((main@temp_c))&0ffh,w
   804  002F18  0A24               	xorlw	36
   805                           
   806  002F1A  A4D8               	btfss	status,2
   807  002F1C  EF92  F017         	goto	u6371
   808  002F20  EF94  F017         	goto	u6370
   809  002F24                     u6371:
   810  002F24  EF9C  F017         	goto	l591
   811  002F28                     u6370:
   812  002F28  0102               	movlb	2	; () banked
   813  002F2A  6F33               	movwf	(??_main+51+0)&0ffh
   814  002F2C  0E00               	movlw	low(0)
   815  002F2E  0102               	movlb	2	; () banked
   816  002F30  0102               	movlb	2	; () banked
   817  002F32  6F03               	movwf	((main@line_len))&0ffh
   818  002F34  0102               	movlb	2	; () banked
   819  002F36  5133               	movf	(??_main+51+0)&0ffh,w
   820                           	
   821  002F38                     l591:		; BSR set to: ?
   822                           
   823                           	line	343
   824  002F38  0102               	movlb	2	; () banked
   825  002F3A  0E13               	movlw	low(main@line)
   826  002F3C  0102               	movlb	2	; () banked
   827  002F3E  0102               	movlb	2	; () banked
   828  002F40  2503               	addwf	((main@line_len))&0ffh,w
   829  002F42  6EE9               	movwf	c:fsr0l
   830  002F44  6AEA               	clrf	1+c:fsr0l
   831  002F46  0102               	movlb	2	; () banked
   832  002F48  0E02               	movlw	high(main@line)
   833  002F4A  22EA               	addwfc	1+c:fsr0l
   834  002F4C  0102               	movlb	2	; () banked
   835  002F4E  C201  FFEF         	movff	(main@temp_c),indf0
   836                           
   837                           ;batchpcb26k20.c: 343: line[line_len++] = temp_c
                                 ;
   838  002F52  0102               	movlb	2	; () banked
   839  002F54  0102               	movlb	2	; () banked
   840  002F56  2B03               	incf	((main@line_len))&0ffh
   841                           	line	344
   842                           ;batchpcb26k20.c: 344: if((temp_c == 10) || (tem
                                 p_c == 13)){
   843  002F58  0102               	movlb	2	; () banked
   844  002F5A  0102               	movlb	2	; () banked
   845  002F5C  5101               	movf	((main@temp_c))&0ffh,w
   846  002F5E  0A0A               	xorlw	10
   847                           
   848  002F60  B4D8               	btfsc	status,2
   849  002F62  EFB5  F017         	goto	u6381
   850  002F66  EFB7  F017         	goto	u6380
   851  002F6A                     u6381:
   852  002F6A  EFC2  F017         	goto	l600000354
   853  002F6E                     u6380:
   854  002F6E  0102               	movlb	2	; () banked
   855  002F70  0102               	movlb	2	; () banked
   856  002F72  5101               	movf	((main@temp_c))&0ffh,w
   857  002F74  0A0D               	xorlw	13
   858                           
   859  002F76  A4D8               	btfss	status,2
   860  002F78  EFC0  F017         	goto	u6391
   861  002F7C  EFC2  F017         	goto	u6390
   862  002F80                     u6391:
   863  002F80  EFF5  F017         	goto	l588
   864  002F84                     u6390:
   865                           	
   866  002F84                     l600000354:		; BSR set to: ?
   867                           
   868                           	line	345
   869                           ;batchpcb26k20.c: 345: if((line_len >= 3)&&(line
                                 [0]=='$')) parseCmd(&line, line_len, &settings);
   870  002F84  0E02               	movlw	(03h-1)
   871  002F86  0102               	movlb	2	; () banked
   872  002F88  0102               	movlb	2	; () banked
   873  002F8A  6503               	cpfsgt	((main@line_len))&0ffh
   874  002F8C  EFCA  F017         	goto	u6401
   875  002F90  EFCC  F017         	goto	u6400
   876  002F94                     u6401:
   877  002F94  EFED  F017         	goto	l593
   878  002F98                     u6400:
   879  002F98  0102               	movlb	2	; () banked
   880  002F9A  0102               	movlb	2	; () banked
   881  002F9C  5113               	movf	((main@line))&0ffh,w
   882  002F9E  0A24               	xorlw	36
   883                           
   884  002FA0  A4D8               	btfss	status,2
   885  002FA2  EFD5  F017         	goto	u6411
   886  002FA6  EFD7  F017         	goto	u6410
   887  002FAA                     u6411:
   888  002FAA  EFED  F017         	goto	l593
   889  002FAE                     u6410:
   890  002FAE  0102               	movlb	2	; () banked
   891  002FB0  0E05               	movlw	low(main@settings)
   892  002FB2  0102               	movlb	2	; () banked
   893  002FB4  0102               	movlb	2	; () banked
   894  002FB6  6F37               	movwf	(0+(?_parseCmd+03h))&0ffh
   895  002FB8  0102               	movlb	2	; () banked
   896  002FBA  0E02               	movlw	high(main@settings)
   897  002FBC  0102               	movlb	2	; () banked
   898  002FBE  6F38               	movwf	(1+(?_parseCmd+03h))&0ffh
   899  002FC0  C203  F236         	movff	(main@line_len),0+(?_parseCmd+02h)
   900  002FC4  0102               	movlb	2	; () banked
   901  002FC6  0E13               	movlw	low(main@line)
   902  002FC8  0102               	movlb	2	; () banked
   903  002FCA  0102               	movlb	2	; () banked
   904  002FCC  6F34               	movwf	((?_parseCmd))&0ffh
   905  002FCE  0102               	movlb	2	; () banked
   906  002FD0  0E02               	movlw	high(main@line)
   907  002FD2  0102               	movlb	2	; () banked
   908  002FD4  6F35               	movwf	((?_parseCmd+1))&0ffh
   909  002FD6  EC5E  F012         	call	_parseCmd	;wreg free
   910                           	
   911  002FDA                     l593:		; BSR set to: ?
   912                           
   913                           	line	346
   914                           ;batchpcb26k20.c: 346: line_len = 0;
   915  002FDA  0102               	movlb	2	; () banked
   916  002FDC  6F33               	movwf	(??_main+51+0)&0ffh
   917  002FDE  0E00               	movlw	low(0)
   918  002FE0  0102               	movlb	2	; () banked
   919  002FE2  0102               	movlb	2	; () banked
   920  002FE4  6F03               	movwf	((main@line_len))&0ffh
   921  002FE6  0102               	movlb	2	; () banked
   922  002FE8  5133               	movf	(??_main+51+0)&0ffh,w
   923                           	line	347
   924                           	
   925  002FEA                     l592:		; BSR set to: ?
   926                           
   927                           	line	348
   928                           	
   929  002FEA                     l588:		; BSR set to: ?
   930                           
   931                           	line	340
   932  002FEA  EC88  F028         	call	_sInWaiting	;wreg free
   933  002FEE  0900               	iorlw	0
   934  002FF0  A4D8               	btfss	status,2
   935  002FF2  EFFD  F017         	goto	u6421
   936  002FF6  EFFF  F017         	goto	u6420
   937  002FFA                     u6421:
   938  002FFA  EF84  F017         	goto	l589
   939  002FFE                     u6420:
   940                           	
   941  002FFE                     l590:		; BSR set to: ?
   942                           
   943                           	line	349
   944                           	
   945  002FFE                     l577:		; BSR set to: ?
   946                           
   947                           	line	314
   948  002FFE  EF00  F017         	goto	l578
   949                           	global	start
   950  003002  EF0C  F000         	goto	start
   951                           	opt stack 0
   952                           GLOBAL __end_of_main
   953  003006                     	__end_of_main:
   954                           	FNSIZE	_main,52,0
   955                           ; =============== function _main ends ==========
                                 ==
   956                           
   957                                   psect   text1,class=CODE,space=0,reloc=2
   958                           	line	350
   959                           
   960                           	opt lm
   961                           	signat	_main,88
   962                           	global	_gaoDecode
   963                           	global	??_gaoDecode
   964                           	global	?_gaoDecode
   965                           
   966                           ; *************** function _gaoDecode **********
                                 *******
   967                           ; Defined at:
   968                           ;		line 60 in file "D:\Hobby\Prosjekter\MultiTRX
                                 \Firmware\FW1.2\gaomod.h"
   969                           ; Parameters:
   970                           ;		rf_state       size:   1offs:   0	type: unsig
                                 ned char 
   971                           ;		rf_pulse_len   size:   1offs:   1	type: unsig
                                 ned char 
   972                           ; Auto variables:
   973                           ;		None
   974                           ; Return value:
   975                           ;		type: void 
   976                           ;		size: 0
   977                           ; Registers used:
   978                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
   979                           ; Tracked objects:
   980                           ;		On entry : 0/0
   981                           ;		On exit  : 0/0
   982                           ;		Unchanged: 0/0
   983                           ; Data sizes:
   984                           ;		Autos:    0
   985                           ;		Params:   2
   986                           ;		Temp:     2
   987                           ;		Total:    4
   988                           ; This function calls:
   989                           ;		_sPutint
   990                           ;		_gaoPrint
   991                           ; This function is called by:
   992                           ;		_main
   993                           ; This function uses a non-reentrant model
   994                           ; 
   995                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\gaomod.h"
   996                           	line	60
   997  000000                     	__size_of_gaoDecode	equ	__end_of_gaoDecode-_gao
                                 Decode
   998                           ;gaomod.h: 60: void gaoDecode(char rf_state, cha
                                 r rf_pulse_length){
   999                           	
  1000  001724                     _gaoDecode:		; BSR set to: ?
  1001                           
  1002                           	opt stack 29
  1003                           	line	77
  1004  001724  0102               	movlb	2	; () banked
  1005  001726  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1006  001728  0E04               	movlw	low(04h)
  1007  00172A  0101               	movlb	1	; () banked
  1008  00172C  0101               	movlb	1	; () banked
  1009  00172E  6F21               	movwf	((289))&0ffh
  1010  001730  0102               	movlb	2	; () banked
  1011  001732  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1012                           	line	78
  1013                           ;gaomod.h: 78: if (rf_state){
  1014  001734  0102               	movlb	2	; () banked
  1015  001736  0102               	movlb	2	; () banked
  1016  001738  5134               	movf	((gaoDecode@rf_state))&0ffh,w
  1017  00173A  B4D8               	btfsc	status,2
  1018  00173C  EFA2  F00B         	goto	u6081
  1019  001740  EFA4  F00B         	goto	u6080
  1020  001744                     u6081:
  1021  001744  EFE5  F00B         	goto	l379
  1022  001748                     u6080:
  1023                           	line	79
  1024                           ;gaomod.h: 79: if ((rf_pulse_length > 20)&&(rf_p
                                 ulse_length < 55)){
  1025  001748  0E14               	movlw	(015h-1)
  1026  00174A  0102               	movlb	2	; () banked
  1027  00174C  0102               	movlb	2	; () banked
  1028  00174E  6535               	cpfsgt	((gaoDecode@rf_pulse_length))&0ffh
  1029  001750  EFAC  F00B         	goto	u6091
  1030  001754  EFAE  F00B         	goto	u6090
  1031  001758                     u6091:
  1032  001758  EFD3  F00B         	goto	l380
  1033  00175C                     u6090:
  1034  00175C  0E37               	movlw	(037h)&0ffh
  1035  00175E  0102               	movlb	2	; () banked
  1036  001760  0102               	movlb	2	; () banked
  1037  001762  6135               	cpfslt	((gaoDecode@rf_pulse_length))&0ffh
  1038  001764  EFB6  F00B         	goto	u6101
  1039  001768  EFB8  F00B         	goto	u6100
  1040  00176C                     u6101:
  1041  00176C  EFD3  F00B         	goto	l380
  1042  001770                     u6100:
  1043                           	line	80
  1044                           ;gaomod.h: 80: symbols &= (0xFF ^ (1 << nrsymbol
                                 s));
  1045  001770  C125 F236          	movff	(293),??_gaoDecode+0+0
  1046  001774  0E01               	movlw	(01h)&0ffh
  1047  001776  0102               	movlb	2	; () banked
  1048  001778  6F37               	movwf	(??_gaoDecode+1+0)&0ffh
  1049  00177A  0102               	movlb	2	; () banked
  1050  00177C  2B36               	incf	(??_gaoDecode+0+0)&0ffh
  1051  00177E  EFC4  F00B         	goto	u6114
  1052  001782                     u6115:
  1053  001782  90D8               	bcf	status,0
  1054  001784  0102               	movlb	2	; () banked
  1055  001786  3737               	rlcf	((??_gaoDecode+1+0))&0ffh
  1056  001788                     u6114:
  1057  001788  0102               	movlb	2	; () banked
  1058  00178A  2F36               	decfsz	(??_gaoDecode+0+0)&0ffh
  1059  00178C  EFC1  F00B         	goto	u6115
  1060  001790  0102               	movlb	2	; () banked
  1061  001792  5137               	movf	((??_gaoDecode+1+0))&0ffh,w
  1062  001794  0AFF               	xorlw	0ffh
  1063  001796  0101               	movlb	1	; () banked
  1064  001798  0101               	movlb	1	; () banked
  1065  00179A  1739               	andwf	((313))&0ffh
  1066                           	line	81
  1067                           ;gaomod.h: 81: nrsymbols++;
  1068  00179C  0101               	movlb	1	; () banked
  1069  00179E  0101               	movlb	1	; () banked
  1070  0017A0  2B25               	incf	((293))&0ffh
  1071                           	line	82
  1072                           ;gaomod.h: 82: }
  1073  0017A2  EFE3  F00B         	goto	l381
  1074                           	line	83
  1075                           	
  1076  0017A6                     l380:		; BSR set to: ?
  1077                           
  1078                           	line	84
  1079                           ;gaomod.h: 83: else{
  1080                           ;gaomod.h: 84: nrsymbols = 0;
  1081  0017A6  0102               	movlb	2	; () banked
  1082  0017A8  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1083  0017AA  0E00               	movlw	low(0)
  1084  0017AC  0101               	movlb	1	; () banked
  1085  0017AE  0101               	movlb	1	; () banked
  1086  0017B0  6F25               	movwf	((293))&0ffh
  1087  0017B2  0102               	movlb	2	; () banked
  1088  0017B4  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1089                           	line	85
  1090                           ;gaomod.h: 85: gaobit = 2;
  1091  0017B6  0102               	movlb	2	; () banked
  1092  0017B8  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1093  0017BA  0E02               	movlw	low(02h)
  1094  0017BC  0101               	movlb	1	; () banked
  1095  0017BE  0101               	movlb	1	; () banked
  1096  0017C0  6F21               	movwf	((289))&0ffh
  1097  0017C2  0102               	movlb	2	; () banked
  1098  0017C4  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1099                           	line	86
  1100                           	
  1101  0017C6                     l381:		; BSR set to: ?
  1102                           
  1103                           	line	87
  1104                           ;gaomod.h: 86: }
  1105                           ;gaomod.h: 87: }
  1106  0017C6  EF52  F00C         	goto	l382
  1107                           	line	88
  1108                           	
  1109  0017CA                     l379:		; BSR set to: ?
  1110                           
  1111                           	line	89
  1112                           ;gaomod.h: 88: else{
  1113                           ;gaomod.h: 89: if((rf_pulse_length > 20)&&(rf_pu
                                 lse_length < 55)){
  1114  0017CA  0E14               	movlw	(015h-1)
  1115  0017CC  0102               	movlb	2	; () banked
  1116  0017CE  0102               	movlb	2	; () banked
  1117  0017D0  6535               	cpfsgt	((gaoDecode@rf_pulse_length))&0ffh
  1118  0017D2  EFED  F00B         	goto	u6121
  1119  0017D6  EFEF  F00B         	goto	u6120
  1120  0017DA                     u6121:
  1121  0017DA  EF14  F00C         	goto	l383
  1122  0017DE                     u6120:
  1123  0017DE  0E37               	movlw	(037h)&0ffh
  1124  0017E0  0102               	movlb	2	; () banked
  1125  0017E2  0102               	movlb	2	; () banked
  1126  0017E4  6135               	cpfslt	((gaoDecode@rf_pulse_length))&0ffh
  1127  0017E6  EFF7  F00B         	goto	u6131
  1128  0017EA  EFF9  F00B         	goto	u6130
  1129  0017EE                     u6131:
  1130  0017EE  EF14  F00C         	goto	l383
  1131  0017F2                     u6130:
  1132                           	line	90
  1133                           ;gaomod.h: 90: symbols &= (0xFF ^ (1 << nrsymbol
                                 s));
  1134  0017F2  C125 F236          	movff	(293),??_gaoDecode+0+0
  1135  0017F6  0E01               	movlw	(01h)&0ffh
  1136  0017F8  0102               	movlb	2	; () banked
  1137  0017FA  6F37               	movwf	(??_gaoDecode+1+0)&0ffh
  1138  0017FC  0102               	movlb	2	; () banked
  1139  0017FE  2B36               	incf	(??_gaoDecode+0+0)&0ffh
  1140  001800  EF05  F00C         	goto	u6144
  1141  001804                     u6145:
  1142  001804  90D8               	bcf	status,0
  1143  001806  0102               	movlb	2	; () banked
  1144  001808  3737               	rlcf	((??_gaoDecode+1+0))&0ffh
  1145  00180A                     u6144:
  1146  00180A  0102               	movlb	2	; () banked
  1147  00180C  2F36               	decfsz	(??_gaoDecode+0+0)&0ffh
  1148  00180E  EF02  F00C         	goto	u6145
  1149  001812  0102               	movlb	2	; () banked
  1150  001814  5137               	movf	((??_gaoDecode+1+0))&0ffh,w
  1151  001816  0AFF               	xorlw	0ffh
  1152  001818  0101               	movlb	1	; () banked
  1153  00181A  0101               	movlb	1	; () banked
  1154  00181C  1739               	andwf	((313))&0ffh
  1155                           	line	91
  1156                           ;gaomod.h: 91: nrsymbols++;
  1157  00181E  0101               	movlb	1	; () banked
  1158  001820  0101               	movlb	1	; () banked
  1159  001822  2B25               	incf	((293))&0ffh
  1160                           	line	92
  1161                           ;gaomod.h: 92: }
  1162  001824  EF52  F00C         	goto	l382
  1163                           	line	93
  1164                           	
  1165  001828                     l383:		; BSR set to: ?
  1166                           
  1167                           ;gaomod.h: 93: else if((rf_pulse_length > 55)&&(
                                 rf_pulse_length < 90)){
  1168  001828  0E37               	movlw	(038h-1)
  1169  00182A  0102               	movlb	2	; () banked
  1170  00182C  0102               	movlb	2	; () banked
  1171  00182E  6535               	cpfsgt	((gaoDecode@rf_pulse_length))&0ffh
  1172  001830  EF1C  F00C         	goto	u6151
  1173  001834  EF1E  F00C         	goto	u6150
  1174  001838                     u6151:
  1175  001838  EF42  F00C         	goto	l385
  1176  00183C                     u6150:
  1177  00183C  0E5A               	movlw	(05Ah)&0ffh
  1178  00183E  0102               	movlb	2	; () banked
  1179  001840  0102               	movlb	2	; () banked
  1180  001842  6135               	cpfslt	((gaoDecode@rf_pulse_length))&0ffh
  1181  001844  EF26  F00C         	goto	u6161
  1182  001848  EF28  F00C         	goto	u6160
  1183  00184C                     u6161:
  1184  00184C  EF42  F00C         	goto	l385
  1185  001850                     u6160:
  1186                           	line	94
  1187                           ;gaomod.h: 94: symbols |= (1 << nrsymbols);
  1188  001850  C125 F236          	movff	(293),??_gaoDecode+0+0
  1189  001854  0E01               	movlw	(01h)&0ffh
  1190  001856  0102               	movlb	2	; () banked
  1191  001858  6F37               	movwf	(??_gaoDecode+1+0)&0ffh
  1192  00185A  0102               	movlb	2	; () banked
  1193  00185C  2B36               	incf	(??_gaoDecode+0+0)&0ffh
  1194  00185E  EF34  F00C         	goto	u6174
  1195  001862                     u6175:
  1196  001862  90D8               	bcf	status,0
  1197  001864  0102               	movlb	2	; () banked
  1198  001866  3737               	rlcf	((??_gaoDecode+1+0))&0ffh
  1199  001868                     u6174:
  1200  001868  0102               	movlb	2	; () banked
  1201  00186A  2F36               	decfsz	(??_gaoDecode+0+0)&0ffh
  1202  00186C  EF31  F00C         	goto	u6175
  1203  001870  0102               	movlb	2	; () banked
  1204  001872  5137               	movf	((??_gaoDecode+1+0))&0ffh,w
  1205  001874  0101               	movlb	1	; () banked
  1206  001876  0101               	movlb	1	; () banked
  1207  001878  1339               	iorwf	((313))&0ffh
  1208                           	line	95
  1209                           ;gaomod.h: 95: nrsymbols++;
  1210  00187A  0101               	movlb	1	; () banked
  1211  00187C  0101               	movlb	1	; () banked
  1212  00187E  2B25               	incf	((293))&0ffh
  1213                           	line	96
  1214                           ;gaomod.h: 96: }
  1215  001880  EF52  F00C         	goto	l382
  1216                           	line	97
  1217                           	
  1218  001884                     l385:		; BSR set to: ?
  1219                           
  1220                           	line	98
  1221                           ;gaomod.h: 97: else{
  1222                           ;gaomod.h: 98: nrsymbols = 0;
  1223  001884  0102               	movlb	2	; () banked
  1224  001886  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1225  001888  0E00               	movlw	low(0)
  1226  00188A  0101               	movlb	1	; () banked
  1227  00188C  0101               	movlb	1	; () banked
  1228  00188E  6F25               	movwf	((293))&0ffh
  1229  001890  0102               	movlb	2	; () banked
  1230  001892  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1231                           	line	99
  1232                           ;gaomod.h: 99: gaobit = 2;
  1233  001894  0102               	movlb	2	; () banked
  1234  001896  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1235  001898  0E02               	movlw	low(02h)
  1236  00189A  0101               	movlb	1	; () banked
  1237  00189C  0101               	movlb	1	; () banked
  1238  00189E  6F21               	movwf	((289))&0ffh
  1239  0018A0  0102               	movlb	2	; () banked
  1240  0018A2  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1241                           	line	100
  1242                           	
  1243  0018A4                     l386:		; BSR set to: ?
  1244                           
  1245                           	
  1246  0018A4                     l384:		; BSR set to: ?
  1247                           
  1248                           	line	101
  1249                           	
  1250  0018A4                     l382:		; BSR set to: ?
  1251                           
  1252                           	line	103
  1253                           ;gaomod.h: 100: }
  1254                           ;gaomod.h: 101: }
  1255                           ;gaomod.h: 103: if (nrsymbols >= 4){
  1256  0018A4  0E03               	movlw	(04h-1)
  1257  0018A6  0101               	movlb	1	; () banked
  1258  0018A8  0101               	movlb	1	; () banked
  1259  0018AA  6525               	cpfsgt	((293))&0ffh
  1260  0018AC  EF5A  F00C         	goto	u6181
  1261  0018B0  EF5C  F00C         	goto	u6180
  1262  0018B4                     u6181:
  1263  0018B4  EFA9  F00C         	goto	l387
  1264  0018B8                     u6180:
  1265                           	line	104
  1266                           ;gaomod.h: 104: if (symbols == 0) gaobit = 5;
  1267  0018B8  0101               	movlb	1	; () banked
  1268  0018BA  0101               	movlb	1	; () banked
  1269  0018BC  6739               	tstfsz	((313))&0ffh
  1270  0018BE  EF63  F00C         	goto	u6191
  1271  0018C2  EF65  F00C         	goto	u6190
  1272  0018C6                     u6191:
  1273  0018C6  EF6F  F00C         	goto	l388
  1274  0018CA                     u6190:
  1275  0018CA  0102               	movlb	2	; () banked
  1276  0018CC  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1277  0018CE  0E05               	movlw	low(05h)
  1278  0018D0  0101               	movlb	1	; () banked
  1279  0018D2  0101               	movlb	1	; () banked
  1280  0018D4  6F21               	movwf	((289))&0ffh
  1281  0018D6  0102               	movlb	2	; () banked
  1282  0018D8  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1283  0018DA  EFA1  F00C         	goto	l389
  1284                           	line	105
  1285                           	
  1286  0018DE                     l388:		; BSR set to: ?
  1287                           
  1288                           ;gaomod.h: 105: else if (symbols == 0b1000) gaob
                                 it = 0;
  1289  0018DE  0101               	movlb	1	; () banked
  1290  0018E0  0101               	movlb	1	; () banked
  1291  0018E2  5139               	movf	((313))&0ffh,w
  1292  0018E4  0A08               	xorlw	8
  1293                           
  1294  0018E6  A4D8               	btfss	status,2
  1295  0018E8  EF78  F00C         	goto	u6201
  1296  0018EC  EF7A  F00C         	goto	u6200
  1297  0018F0                     u6201:
  1298  0018F0  EF84  F00C         	goto	l390
  1299  0018F4                     u6200:
  1300  0018F4  0102               	movlb	2	; () banked
  1301  0018F6  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1302  0018F8  0E00               	movlw	low(0)
  1303  0018FA  0101               	movlb	1	; () banked
  1304  0018FC  0101               	movlb	1	; () banked
  1305  0018FE  6F21               	movwf	((289))&0ffh
  1306  001900  0102               	movlb	2	; () banked
  1307  001902  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1308  001904  EFA1  F00C         	goto	l389
  1309                           	line	106
  1310                           	
  1311  001908                     l390:		; BSR set to: ?
  1312                           
  1313                           ;gaomod.h: 106: else if (symbols == 0b0010) gaob
                                 it = 1;
  1314  001908  0101               	movlb	1	; () banked
  1315  00190A  0101               	movlb	1	; () banked
  1316  00190C  5139               	movf	((313))&0ffh,w
  1317  00190E  0A02               	xorlw	2
  1318                           
  1319  001910  A4D8               	btfss	status,2
  1320  001912  EF8D  F00C         	goto	u6211
  1321  001916  EF8F  F00C         	goto	u6210
  1322  00191A                     u6211:
  1323  00191A  EF99  F00C         	goto	l392
  1324  00191E                     u6210:
  1325  00191E  0102               	movlb	2	; () banked
  1326  001920  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1327  001922  0E01               	movlw	low(01h)
  1328  001924  0101               	movlb	1	; () banked
  1329  001926  0101               	movlb	1	; () banked
  1330  001928  6F21               	movwf	((289))&0ffh
  1331  00192A  0102               	movlb	2	; () banked
  1332  00192C  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1333  00192E  EFA1  F00C         	goto	l389
  1334                           	line	107
  1335                           	
  1336  001932                     l392:		; BSR set to: ?
  1337                           
  1338                           ;gaomod.h: 107: else gaobit = 2;
  1339  001932  0102               	movlb	2	; () banked
  1340  001934  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1341  001936  0E02               	movlw	low(02h)
  1342  001938  0101               	movlb	1	; () banked
  1343  00193A  0101               	movlb	1	; () banked
  1344  00193C  6F21               	movwf	((289))&0ffh
  1345  00193E  0102               	movlb	2	; () banked
  1346  001940  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1347                           	
  1348  001942                     l393:		; BSR set to: ?
  1349                           
  1350                           	
  1351  001942                     l391:		; BSR set to: ?
  1352                           
  1353                           	
  1354  001942                     l389:		; BSR set to: ?
  1355                           
  1356                           	line	108
  1357                           ;gaomod.h: 108: nrsymbols = 0;
  1358  001942  0102               	movlb	2	; () banked
  1359  001944  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1360  001946  0E00               	movlw	low(0)
  1361  001948  0101               	movlb	1	; () banked
  1362  00194A  0101               	movlb	1	; () banked
  1363  00194C  6F25               	movwf	((293))&0ffh
  1364  00194E  0102               	movlb	2	; () banked
  1365  001950  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1366                           	line	109
  1367                           	
  1368  001952                     l387:		; BSR set to: ?
  1369                           
  1370                           	line	112
  1371                           ;gaomod.h: 109: }
  1372                           ;gaomod.h: 112: if(gaobit == 4) return;
  1373  001952  0101               	movlb	1	; () banked
  1374  001954  0101               	movlb	1	; () banked
  1375  001956  5121               	movf	((289))&0ffh,w
  1376  001958  0A04               	xorlw	4
  1377                           
  1378  00195A  A4D8               	btfss	status,2
  1379  00195C  EFB2  F00C         	goto	u6221
  1380  001960  EFB4  F00C         	goto	u6220
  1381  001964                     u6221:
  1382  001964  EFB6  F00C         	goto	l394
  1383  001968                     u6220:
  1384  001968  EF5A  F00D         	goto	l378
  1385                           	
  1386  00196C                     l394:		; BSR set to: ?
  1387                           
  1388                           	line	113
  1389                           ;gaomod.h: 113: if (gaobit!=2) sPutint(gaobit);
  1390  00196C  0101               	movlb	1	; () banked
  1391  00196E  0101               	movlb	1	; () banked
  1392  001970  5121               	movf	((289))&0ffh,w
  1393  001972  0A02               	xorlw	2
  1394                           
  1395  001974  B4D8               	btfsc	status,2
  1396  001976  EFBF  F00C         	goto	u6231
  1397  00197A  EFC1  F00C         	goto	u6230
  1398  00197E                     u6231:
  1399  00197E  EFCA  F00C         	goto	l395
  1400  001982                     u6230:
  1401  001982  0101               	movlb	1	; () banked
  1402  001984  0102               	movlb	2	; () banked
  1403  001986  C121 F24F          	movff	(289),(?_sPutint)
  1404  00198A  0102               	movlb	2	; () banked
  1405  00198C  0102               	movlb	2	; () banked
  1406  00198E  6B50               	clrf	((?_sPutint+1))&0ffh
  1407  001990  ECB8  F01E         	call	_sPutint	;wreg free
  1408                           	
  1409  001994                     l395:		; BSR set to: ?
  1410                           
  1411                           	line	114
  1412                           ;gaomod.h: 114: switch (state){
  1413  001994  EF50  F00D         	goto	l397
  1414                           	line	115
  1415                           ;gaomod.h: 115: case 0:
  1416                           	
  1417  001998                     l398:		; BSR set to: ?
  1418                           
  1419                           	line	116
  1420                           ;gaomod.h: 116: if ((gaobit == 5)&&(preamble_dat
                                 a == 5)) state = 1;
  1421  001998  0101               	movlb	1	; () banked
  1422  00199A  0101               	movlb	1	; () banked
  1423  00199C  5121               	movf	((289))&0ffh,w
  1424  00199E  0A05               	xorlw	5
  1425                           
  1426  0019A0  A4D8               	btfss	status,2
  1427  0019A2  EFD5  F00C         	goto	u6241
  1428  0019A6  EFD7  F00C         	goto	u6240
  1429  0019AA                     u6241:
  1430  0019AA  EFEA  F00C         	goto	l399
  1431  0019AE                     u6240:
  1432  0019AE  0101               	movlb	1	; () banked
  1433  0019B0  0101               	movlb	1	; () banked
  1434  0019B2  5142               	movf	((322))&0ffh,w
  1435  0019B4  0A05               	xorlw	5
  1436                           
  1437  0019B6  A4D8               	btfss	status,2
  1438  0019B8  EFE0  F00C         	goto	u6251
  1439  0019BC  EFE2  F00C         	goto	u6250
  1440  0019C0                     u6251:
  1441  0019C0  EFEA  F00C         	goto	l399
  1442  0019C4                     u6250:
  1443  0019C4  0102               	movlb	2	; () banked
  1444  0019C6  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1445  0019C8  0E01               	movlw	low(01h)
  1446  0019CA  0101               	movlb	1	; () banked
  1447  0019CC  0101               	movlb	1	; () banked
  1448  0019CE  6F45               	movwf	((325))&0ffh
  1449  0019D0  0102               	movlb	2	; () banked
  1450  0019D2  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1451                           	
  1452  0019D4                     l399:		; BSR set to: ?
  1453                           
  1454                           	line	117
  1455                           ;gaomod.h: 117: preamble_data = gaobit;
  1456  0019D4  C121 F142          	movff	(289),(322)
  1457                           	line	118
  1458                           ;gaomod.h: 118: break;
  1459  0019D8  EF5A  F00D         	goto	l396
  1460                           	line	119
  1461                           ;gaomod.h: 119: case 1:
  1462                           	
  1463  0019DC                     l400:		; BSR set to: ?
  1464                           
  1465                           	line	120
  1466                           ;gaomod.h: 120: if ((gaobit == 2)||(gaobit == 5)
                                 ){
  1467  0019DC  0101               	movlb	1	; () banked
  1468  0019DE  0101               	movlb	1	; () banked
  1469  0019E0  5121               	movf	((289))&0ffh,w
  1470  0019E2  0A02               	xorlw	2
  1471                           
  1472  0019E4  B4D8               	btfsc	status,2
  1473  0019E6  EFF7  F00C         	goto	u6261
  1474  0019EA  EFF9  F00C         	goto	u6260
  1475  0019EE                     u6261:
  1476  0019EE  EF04  F00D         	goto	l600000353
  1477  0019F2                     u6260:
  1478  0019F2  0101               	movlb	1	; () banked
  1479  0019F4  0101               	movlb	1	; () banked
  1480  0019F6  5121               	movf	((289))&0ffh,w
  1481  0019F8  0A05               	xorlw	5
  1482                           
  1483  0019FA  A4D8               	btfss	status,2
  1484  0019FC  EF02  F00D         	goto	u6271
  1485  001A00  EF04  F00D         	goto	u6270
  1486  001A04                     u6271:
  1487  001A04  EF3B  F00D         	goto	l401
  1488  001A08                     u6270:
  1489                           	
  1490  001A08                     l600000353:		; BSR set to: ?
  1491                           
  1492                           	line	121
  1493                           ;gaomod.h: 121: if (nrbits >= 24){
  1494  001A08  0E17               	movlw	(018h-1)
  1495  001A0A  0101               	movlb	1	; () banked
  1496  001A0C  0101               	movlb	1	; () banked
  1497  001A0E  6543               	cpfsgt	((323))&0ffh
  1498  001A10  EF0C  F00D         	goto	u6281
  1499  001A14  EF0E  F00D         	goto	u6280
  1500  001A18                     u6281:
  1501  001A18  EF27  F00D         	goto	l402
  1502  001A1C                     u6280:
  1503                           	line	122
  1504                           ;gaomod.h: 122: data <<= 8;
  1505  001A1C  0101               	movlb	1	; () banked
  1506  001A1E  0101               	movlb	1	; () banked
  1507  001A20  C128 F129          	movff	(294+2),(294+3)
  1508  001A24  0101               	movlb	1	; () banked
  1509  001A26  0101               	movlb	1	; () banked
  1510  001A28  C127 F128          	movff	(294+1),(294+2)
  1511  001A2C  0101               	movlb	1	; () banked
  1512  001A2E  0101               	movlb	1	; () banked
  1513  001A30  C126 F127          	movff	(294),(294+1)
  1514  001A34  0101               	movlb	1	; () banked
  1515  001A36  0101               	movlb	1	; () banked
  1516  001A38  6B26               	clrf	((294))&0ffh
  1517                           	line	123
  1518                           ;gaomod.h: 123: gaoPrint(data);
  1519  001A3A  C126 F238          	movff	(294),(?_gaoPrint)
  1520  001A3E  C127 F239          	movff	(294+1),(?_gaoPrint+1)
  1521  001A42  C128 F23A          	movff	(294+2),(?_gaoPrint+2)
  1522  001A46  C129 F23B          	movff	(294+3),(?_gaoPrint+3)
  1523  001A4A  EC00  F01D         	call	_gaoPrint	;wreg free
  1524                           	line	124
  1525                           	
  1526  001A4E                     l402:		; BSR set to: ?
  1527                           
  1528                           	line	125
  1529                           ;gaomod.h: 124: }
  1530                           ;gaomod.h: 125: preamble_data = gaobit;
  1531  001A4E  C121 F142          	movff	(289),(322)
  1532                           	line	126
  1533                           ;gaomod.h: 126: nrbits = 0;
  1534  001A52  0102               	movlb	2	; () banked
  1535  001A54  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1536  001A56  0E00               	movlw	low(0)
  1537  001A58  0101               	movlb	1	; () banked
  1538  001A5A  0101               	movlb	1	; () banked
  1539  001A5C  6F43               	movwf	((323))&0ffh
  1540  001A5E  0102               	movlb	2	; () banked
  1541  001A60  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1542                           	line	127
  1543                           ;gaomod.h: 127: state = 0;
  1544  001A62  0102               	movlb	2	; () banked
  1545  001A64  6F36               	movwf	(??_gaoDecode+0+0)&0ffh
  1546  001A66  0E00               	movlw	low(0)
  1547  001A68  0101               	movlb	1	; () banked
  1548  001A6A  0101               	movlb	1	; () banked
  1549  001A6C  6F45               	movwf	((325))&0ffh
  1550  001A6E  0102               	movlb	2	; () banked
  1551  001A70  5136               	movf	(??_gaoDecode+0+0)&0ffh,w
  1552                           	line	128
  1553                           ;gaomod.h: 128: }
  1554  001A72  EF4E  F00D         	goto	l403
  1555                           	line	129
  1556                           	
  1557  001A76                     l401:		; BSR set to: ?
  1558                           
  1559                           	line	130
  1560                           ;gaomod.h: 129: else{
  1561                           ;gaomod.h: 130: data <<= 1;
  1562  001A76  0101               	movlb	1	; () banked
  1563  001A78  90D8               	bcf	status,0
  1564  001A7A  0101               	movlb	1	; () banked
  1565  001A7C  3726               	rlcf	((294))&0ffh
  1566  001A7E  0101               	movlb	1	; () banked
  1567  001A80  3727               	rlcf	((294+1))&0ffh
  1568  001A82  0101               	movlb	1	; () banked
  1569  001A84  3728               	rlcf	((294+2))&0ffh
  1570  001A86  0101               	movlb	1	; () banked
  1571  001A88  3729               	rlcf	((294+3))&0ffh
  1572                           	line	131
  1573                           ;gaomod.h: 131: data |= gaobit;
  1574  001A8A  0101               	movlb	1	; () banked
  1575  001A8C  0101               	movlb	1	; () banked
  1576  001A8E  5121               	movf	((289))&0ffh,w
  1577  001A90  0101               	movlb	1	; () banked
  1578  001A92  0101               	movlb	1	; () banked
  1579  001A94  1326               	iorwf	((294))&0ffh
  1580                           	line	132
  1581                           ;gaomod.h: 132: nrbits++;
  1582  001A96  0101               	movlb	1	; () banked
  1583  001A98  0101               	movlb	1	; () banked
  1584  001A9A  2B43               	incf	((323))&0ffh
  1585                           	line	133
  1586                           	
  1587  001A9C                     l403:		; BSR set to: ?
  1588                           
  1589                           	line	134
  1590                           ;gaomod.h: 133: }
  1591                           ;gaomod.h: 134: break;
  1592  001A9C  EF5A  F00D         	goto	l396
  1593                           	line	114
  1594                           	
  1595  001AA0                     l397:		; BSR set to: ?
  1596                           
  1597  001AA0  0101               	movlb	1	; () banked
  1598  001AA2  0101               	movlb	1	; () banked
  1599  001AA4  5145               	movf	((325))&0ffh,w
  1600  001AA6  0A00               	xorlw	0 ^ 0
  1601  001AA8  E101 D776          	bz	l398
  1602  001AAC  0A01               	xorlw	1 ^ 0
  1603  001AAE  E096               	bz	l400
  1604  001AB0  EF5A  F00D         	goto	l396
  1605                           
  1606                           	line	135
  1607                           	
  1608  001AB4                     l396:		; BSR set to: ?
  1609                           
  1610                           	line	136
  1611                           ;gaomod.h: 136: }
  1612  001AB4                     l378:
  1613                           			; BSR set to: ?
  1614                           
  1615  001AB4  0012               	return
  1616                           	opt stack 0
  1617                           GLOBAL __end_of_gaoDecode
  1618  001AB6                     	__end_of_gaoDecode:
  1619                           	FNSIZE	_gaoDecode,2,2
  1620                           ; =============== function _gaoDecode ends =====
                                 =======
  1621                           
  1622                           	signat	_gaoDecode,8312
  1623                           	global	_nexaDecode
  1624                           	global	??_nexaDecode
  1625                           	global	?_nexaDecode
  1626                           
  1627                           ; *************** function _nexaDecode *********
                                 ********
  1628                           ; Defined at:
  1629                           ;		line 91 in file "D:\Hobby\Prosjekter\MultiTRX
                                 \Firmware\FW1.2\nexa.h"
  1630                           ; Parameters:
  1631                           ;		rf_state       size:   1offs:   0	type: unsig
                                 ned char 
  1632                           ;		rf_pulse_len   size:   1offs:   1	type: unsig
                                 ned char 
  1633                           ; Auto variables:
  1634                           ;		None
  1635                           ; Return value:
  1636                           ;		type: void 
  1637                           ;		size: 0
  1638                           ; Registers used:
  1639                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  1640                           ; Tracked objects:
  1641                           ;		On entry : 0/0
  1642                           ;		On exit  : 0/0
  1643                           ;		Unchanged: 0/0
  1644                           ; Data sizes:
  1645                           ;		Autos:    0
  1646                           ;		Params:   2
  1647                           ;		Temp:     2
  1648                           ;		Total:    4
  1649                           ; This function calls:
  1650                           ;		_nexaPrint
  1651                           ; This function is called by:
  1652                           ;		_main
  1653                           ; This function uses a non-reentrant model
  1654                           ; 
  1655                                   psect   text2,class=CODE,space=0,reloc=2
  1656                           
  1657                           	opt lm
  1658                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\nexa.h"
  1659                           	line	91
  1660  000000                     	__size_of_nexaDecode	equ	__end_of_nexaDecode-_n
                                 exaDecode
  1661                           ;nexa.h: 91: void nexaDecode(char rf_state, char
                                  rf_pulse_length){
  1662                           	
  1663  002A86                     _nexaDecode:		; BSR set to: ?
  1664                           
  1665                           	opt stack 29
  1666                           	line	106
  1667  002A86  0102               	movlb	2	; () banked
  1668  002A88  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  1669  002A8A  0E04               	movlw	low(04h)
  1670  002A8C  0101               	movlb	1	; () banked
  1671  002A8E  0101               	movlb	1	; () banked
  1672  002A90  6F37               	movwf	((311))&0ffh
  1673  002A92  0102               	movlb	2	; () banked
  1674  002A94  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  1675                           	line	107
  1676                           ;nexa.h: 107: if (rf_state){
  1677  002A96  0102               	movlb	2	; () banked
  1678  002A98  0102               	movlb	2	; () banked
  1679  002A9A  5134               	movf	((nexaDecode@rf_state))&0ffh,w
  1680  002A9C  B4D8               	btfsc	status,2
  1681  002A9E  EF53  F015         	goto	u7681
  1682  002AA2  EF55  F015         	goto	u7680
  1683  002AA6                     u7681:
  1684  002AA6  EF96  F015         	goto	l444
  1685  002AAA                     u7680:
  1686                           	line	108
  1687                           ;nexa.h: 108: if ((rf_pulse_length > 5)&&(rf_pul
                                 se_length < 20)){
  1688  002AAA  0E05               	movlw	(06h-1)
  1689  002AAC  0102               	movlb	2	; () banked
  1690  002AAE  0102               	movlb	2	; () banked
  1691  002AB0  6535               	cpfsgt	((nexaDecode@rf_pulse_length))&0ffh
  1692  002AB2  EF5D  F015         	goto	u7691
  1693  002AB6  EF5F  F015         	goto	u7690
  1694  002ABA                     u7691:
  1695  002ABA  EF84  F015         	goto	l445
  1696  002ABE                     u7690:
  1697  002ABE  0E14               	movlw	(014h)&0ffh
  1698  002AC0  0102               	movlb	2	; () banked
  1699  002AC2  0102               	movlb	2	; () banked
  1700  002AC4  6135               	cpfslt	((nexaDecode@rf_pulse_length))&0ffh
  1701  002AC6  EF67  F015         	goto	u7701
  1702  002ACA  EF69  F015         	goto	u7700
  1703  002ACE                     u7701:
  1704  002ACE  EF84  F015         	goto	l445
  1705  002AD2                     u7700:
  1706                           	line	109
  1707                           ;nexa.h: 109: symbols &= 0xFF ^ (1 << nrsymbols)
                                 ;
  1708  002AD2  C12A F236          	movff	(298),??_nexaDecode+0+0
  1709  002AD6  0E01               	movlw	(01h)&0ffh
  1710  002AD8  0102               	movlb	2	; () banked
  1711  002ADA  6F37               	movwf	(??_nexaDecode+1+0)&0ffh
  1712  002ADC  0102               	movlb	2	; () banked
  1713  002ADE  2B36               	incf	(??_nexaDecode+0+0)&0ffh
  1714  002AE0  EF75  F015         	goto	u7714
  1715  002AE4                     u7715:
  1716  002AE4  90D8               	bcf	status,0
  1717  002AE6  0102               	movlb	2	; () banked
  1718  002AE8  3737               	rlcf	((??_nexaDecode+1+0))&0ffh
  1719  002AEA                     u7714:
  1720  002AEA  0102               	movlb	2	; () banked
  1721  002AEC  2F36               	decfsz	(??_nexaDecode+0+0)&0ffh
  1722  002AEE  EF72  F015         	goto	u7715
  1723  002AF2  0102               	movlb	2	; () banked
  1724  002AF4  5137               	movf	((??_nexaDecode+1+0))&0ffh,w
  1725  002AF6  0AFF               	xorlw	0ffh
  1726  002AF8  0101               	movlb	1	; () banked
  1727  002AFA  0101               	movlb	1	; () banked
  1728  002AFC  1736               	andwf	((310))&0ffh
  1729                           	line	110
  1730                           ;nexa.h: 110: nrsymbols++;
  1731  002AFE  0101               	movlb	1	; () banked
  1732  002B00  0101               	movlb	1	; () banked
  1733  002B02  2B2A               	incf	((298))&0ffh
  1734                           	line	111
  1735                           ;nexa.h: 111: }
  1736  002B04  EF94  F015         	goto	l446
  1737                           	line	112
  1738                           	
  1739  002B08                     l445:		; BSR set to: ?
  1740                           
  1741                           	line	113
  1742                           ;nexa.h: 112: else{
  1743                           ;nexa.h: 113: nrsymbols = 0;
  1744  002B08  0102               	movlb	2	; () banked
  1745  002B0A  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  1746  002B0C  0E00               	movlw	low(0)
  1747  002B0E  0101               	movlb	1	; () banked
  1748  002B10  0101               	movlb	1	; () banked
  1749  002B12  6F2A               	movwf	((298))&0ffh
  1750  002B14  0102               	movlb	2	; () banked
  1751  002B16  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  1752                           	line	114
  1753                           ;nexa.h: 114: nexabit = 2;
  1754  002B18  0102               	movlb	2	; () banked
  1755  002B1A  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  1756  002B1C  0E02               	movlw	low(02h)
  1757  002B1E  0101               	movlb	1	; () banked
  1758  002B20  0101               	movlb	1	; () banked
  1759  002B22  6F37               	movwf	((311))&0ffh
  1760  002B24  0102               	movlb	2	; () banked
  1761  002B26  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  1762                           	line	115
  1763                           	
  1764  002B28                     l446:		; BSR set to: ?
  1765                           
  1766                           	line	116
  1767                           ;nexa.h: 115: }
  1768                           ;nexa.h: 116: }
  1769  002B28  EF03  F016         	goto	l447
  1770                           	line	117
  1771                           	
  1772  002B2C                     l444:		; BSR set to: ?
  1773                           
  1774                           	line	118
  1775                           ;nexa.h: 117: else{
  1776                           ;nexa.h: 118: if((rf_pulse_length > 12)&&(rf_pul
                                 se_length < 23)){
  1777  002B2C  0E0C               	movlw	(0Dh-1)
  1778  002B2E  0102               	movlb	2	; () banked
  1779  002B30  0102               	movlb	2	; () banked
  1780  002B32  6535               	cpfsgt	((nexaDecode@rf_pulse_length))&0ffh
  1781  002B34  EF9E  F015         	goto	u7721
  1782  002B38  EFA0  F015         	goto	u7720
  1783  002B3C                     u7721:
  1784  002B3C  EFC5  F015         	goto	l448
  1785  002B40                     u7720:
  1786  002B40  0E17               	movlw	(017h)&0ffh
  1787  002B42  0102               	movlb	2	; () banked
  1788  002B44  0102               	movlb	2	; () banked
  1789  002B46  6135               	cpfslt	((nexaDecode@rf_pulse_length))&0ffh
  1790  002B48  EFA8  F015         	goto	u7731
  1791  002B4C  EFAA  F015         	goto	u7730
  1792  002B50                     u7731:
  1793  002B50  EFC5  F015         	goto	l448
  1794  002B54                     u7730:
  1795                           	line	119
  1796                           ;nexa.h: 119: symbols &= 0xFF ^ (1 << nrsymbols)
                                 ;
  1797  002B54  C12A F236          	movff	(298),??_nexaDecode+0+0
  1798  002B58  0E01               	movlw	(01h)&0ffh
  1799  002B5A  0102               	movlb	2	; () banked
  1800  002B5C  6F37               	movwf	(??_nexaDecode+1+0)&0ffh
  1801  002B5E  0102               	movlb	2	; () banked
  1802  002B60  2B36               	incf	(??_nexaDecode+0+0)&0ffh
  1803  002B62  EFB6  F015         	goto	u7744
  1804  002B66                     u7745:
  1805  002B66  90D8               	bcf	status,0
  1806  002B68  0102               	movlb	2	; () banked
  1807  002B6A  3737               	rlcf	((??_nexaDecode+1+0))&0ffh
  1808  002B6C                     u7744:
  1809  002B6C  0102               	movlb	2	; () banked
  1810  002B6E  2F36               	decfsz	(??_nexaDecode+0+0)&0ffh
  1811  002B70  EFB3  F015         	goto	u7745
  1812  002B74  0102               	movlb	2	; () banked
  1813  002B76  5137               	movf	((??_nexaDecode+1+0))&0ffh,w
  1814  002B78  0AFF               	xorlw	0ffh
  1815  002B7A  0101               	movlb	1	; () banked
  1816  002B7C  0101               	movlb	1	; () banked
  1817  002B7E  1736               	andwf	((310))&0ffh
  1818                           	line	120
  1819                           ;nexa.h: 120: nrsymbols++;
  1820  002B80  0101               	movlb	1	; () banked
  1821  002B82  0101               	movlb	1	; () banked
  1822  002B84  2B2A               	incf	((298))&0ffh
  1823                           	line	121
  1824                           ;nexa.h: 121: }
  1825  002B86  EF03  F016         	goto	l447
  1826                           	line	122
  1827                           	
  1828  002B8A                     l448:		; BSR set to: ?
  1829                           
  1830                           ;nexa.h: 122: else if((rf_pulse_length > 60)&&(r
                                 f_pulse_length < 100)){
  1831  002B8A  0E3C               	movlw	(03Dh-1)
  1832  002B8C  0102               	movlb	2	; () banked
  1833  002B8E  0102               	movlb	2	; () banked
  1834  002B90  6535               	cpfsgt	((nexaDecode@rf_pulse_length))&0ffh
  1835  002B92  EFCD  F015         	goto	u7751
  1836  002B96  EFCF  F015         	goto	u7750
  1837  002B9A                     u7751:
  1838  002B9A  EFF3  F015         	goto	l450
  1839  002B9E                     u7750:
  1840  002B9E  0E64               	movlw	(064h)&0ffh
  1841  002BA0  0102               	movlb	2	; () banked
  1842  002BA2  0102               	movlb	2	; () banked
  1843  002BA4  6135               	cpfslt	((nexaDecode@rf_pulse_length))&0ffh
  1844  002BA6  EFD7  F015         	goto	u7761
  1845  002BAA  EFD9  F015         	goto	u7760
  1846  002BAE                     u7761:
  1847  002BAE  EFF3  F015         	goto	l450
  1848  002BB2                     u7760:
  1849                           	line	123
  1850                           ;nexa.h: 123: symbols |= 1 << nrsymbols;
  1851  002BB2  C12A F236          	movff	(298),??_nexaDecode+0+0
  1852  002BB6  0E01               	movlw	(01h)&0ffh
  1853  002BB8  0102               	movlb	2	; () banked
  1854  002BBA  6F37               	movwf	(??_nexaDecode+1+0)&0ffh
  1855  002BBC  0102               	movlb	2	; () banked
  1856  002BBE  2B36               	incf	(??_nexaDecode+0+0)&0ffh
  1857  002BC0  EFE5  F015         	goto	u7774
  1858  002BC4                     u7775:
  1859  002BC4  90D8               	bcf	status,0
  1860  002BC6  0102               	movlb	2	; () banked
  1861  002BC8  3737               	rlcf	((??_nexaDecode+1+0))&0ffh
  1862  002BCA                     u7774:
  1863  002BCA  0102               	movlb	2	; () banked
  1864  002BCC  2F36               	decfsz	(??_nexaDecode+0+0)&0ffh
  1865  002BCE  EFE2  F015         	goto	u7775
  1866  002BD2  0102               	movlb	2	; () banked
  1867  002BD4  5137               	movf	((??_nexaDecode+1+0))&0ffh,w
  1868  002BD6  0101               	movlb	1	; () banked
  1869  002BD8  0101               	movlb	1	; () banked
  1870  002BDA  1336               	iorwf	((310))&0ffh
  1871                           	line	124
  1872                           ;nexa.h: 124: nrsymbols++;
  1873  002BDC  0101               	movlb	1	; () banked
  1874  002BDE  0101               	movlb	1	; () banked
  1875  002BE0  2B2A               	incf	((298))&0ffh
  1876                           	line	125
  1877                           ;nexa.h: 125: }
  1878  002BE2  EF03  F016         	goto	l447
  1879                           	line	126
  1880                           	
  1881  002BE6                     l450:		; BSR set to: ?
  1882                           
  1883                           	line	127
  1884                           ;nexa.h: 126: else{
  1885                           ;nexa.h: 127: nrsymbols = 0;
  1886  002BE6  0102               	movlb	2	; () banked
  1887  002BE8  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  1888  002BEA  0E00               	movlw	low(0)
  1889  002BEC  0101               	movlb	1	; () banked
  1890  002BEE  0101               	movlb	1	; () banked
  1891  002BF0  6F2A               	movwf	((298))&0ffh
  1892  002BF2  0102               	movlb	2	; () banked
  1893  002BF4  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  1894                           	line	128
  1895                           ;nexa.h: 128: nexabit = 2;
  1896  002BF6  0102               	movlb	2	; () banked
  1897  002BF8  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  1898  002BFA  0E02               	movlw	low(02h)
  1899  002BFC  0101               	movlb	1	; () banked
  1900  002BFE  0101               	movlb	1	; () banked
  1901  002C00  6F37               	movwf	((311))&0ffh
  1902  002C02  0102               	movlb	2	; () banked
  1903  002C04  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  1904                           	line	129
  1905                           	
  1906  002C06                     l451:		; BSR set to: ?
  1907                           
  1908                           	
  1909  002C06                     l449:		; BSR set to: ?
  1910                           
  1911                           	line	130
  1912                           	
  1913  002C06                     l447:		; BSR set to: ?
  1914                           
  1915                           	line	131
  1916                           ;nexa.h: 129: }
  1917                           ;nexa.h: 130: }
  1918                           ;nexa.h: 131: if (nrsymbols >= 4){
  1919  002C06  0E03               	movlw	(04h-1)
  1920  002C08  0101               	movlb	1	; () banked
  1921  002C0A  0101               	movlb	1	; () banked
  1922  002C0C  652A               	cpfsgt	((298))&0ffh
  1923  002C0E  EF0B  F016         	goto	u7781
  1924  002C12  EF0D  F016         	goto	u7780
  1925  002C16                     u7781:
  1926  002C16  EF5A  F016         	goto	l452
  1927  002C1A                     u7780:
  1928                           	line	132
  1929                           ;nexa.h: 132: if (symbols == 0) nexabit = 6;
  1930  002C1A  0101               	movlb	1	; () banked
  1931  002C1C  0101               	movlb	1	; () banked
  1932  002C1E  6736               	tstfsz	((310))&0ffh
  1933  002C20  EF14  F016         	goto	u7791
  1934  002C24  EF16  F016         	goto	u7790
  1935  002C28                     u7791:
  1936  002C28  EF20  F016         	goto	l453
  1937  002C2C                     u7790:
  1938  002C2C  0102               	movlb	2	; () banked
  1939  002C2E  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  1940  002C30  0E06               	movlw	low(06h)
  1941  002C32  0101               	movlb	1	; () banked
  1942  002C34  0101               	movlb	1	; () banked
  1943  002C36  6F37               	movwf	((311))&0ffh
  1944  002C38  0102               	movlb	2	; () banked
  1945  002C3A  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  1946  002C3C  EF52  F016         	goto	l454
  1947                           	line	133
  1948                           	
  1949  002C40                     l453:		; BSR set to: ?
  1950                           
  1951                           ;nexa.h: 133: else if (symbols == 0b1000) nexabi
                                 t = 0;
  1952  002C40  0101               	movlb	1	; () banked
  1953  002C42  0101               	movlb	1	; () banked
  1954  002C44  5136               	movf	((310))&0ffh,w
  1955  002C46  0A08               	xorlw	8
  1956                           
  1957  002C48  A4D8               	btfss	status,2
  1958  002C4A  EF29  F016         	goto	u7801
  1959  002C4E  EF2B  F016         	goto	u7800
  1960  002C52                     u7801:
  1961  002C52  EF35  F016         	goto	l455
  1962  002C56                     u7800:
  1963  002C56  0102               	movlb	2	; () banked
  1964  002C58  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  1965  002C5A  0E00               	movlw	low(0)
  1966  002C5C  0101               	movlb	1	; () banked
  1967  002C5E  0101               	movlb	1	; () banked
  1968  002C60  6F37               	movwf	((311))&0ffh
  1969  002C62  0102               	movlb	2	; () banked
  1970  002C64  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  1971  002C66  EF52  F016         	goto	l454
  1972                           	line	134
  1973                           	
  1974  002C6A                     l455:		; BSR set to: ?
  1975                           
  1976                           ;nexa.h: 134: else if (symbols == 0b0010) nexabi
                                 t = 1;
  1977  002C6A  0101               	movlb	1	; () banked
  1978  002C6C  0101               	movlb	1	; () banked
  1979  002C6E  5136               	movf	((310))&0ffh,w
  1980  002C70  0A02               	xorlw	2
  1981                           
  1982  002C72  A4D8               	btfss	status,2
  1983  002C74  EF3E  F016         	goto	u7811
  1984  002C78  EF40  F016         	goto	u7810
  1985  002C7C                     u7811:
  1986  002C7C  EF4A  F016         	goto	l457
  1987  002C80                     u7810:
  1988  002C80  0102               	movlb	2	; () banked
  1989  002C82  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  1990  002C84  0E01               	movlw	low(01h)
  1991  002C86  0101               	movlb	1	; () banked
  1992  002C88  0101               	movlb	1	; () banked
  1993  002C8A  6F37               	movwf	((311))&0ffh
  1994  002C8C  0102               	movlb	2	; () banked
  1995  002C8E  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  1996  002C90  EF52  F016         	goto	l454
  1997                           	line	135
  1998                           	
  1999  002C94                     l457:		; BSR set to: ?
  2000                           
  2001                           ;nexa.h: 135: else nexabit = 2;
  2002  002C94  0102               	movlb	2	; () banked
  2003  002C96  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  2004  002C98  0E02               	movlw	low(02h)
  2005  002C9A  0101               	movlb	1	; () banked
  2006  002C9C  0101               	movlb	1	; () banked
  2007  002C9E  6F37               	movwf	((311))&0ffh
  2008  002CA0  0102               	movlb	2	; () banked
  2009  002CA2  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  2010                           	
  2011  002CA4                     l458:		; BSR set to: ?
  2012                           
  2013                           	
  2014  002CA4                     l456:		; BSR set to: ?
  2015                           
  2016                           	
  2017  002CA4                     l454:		; BSR set to: ?
  2018                           
  2019                           	line	136
  2020                           ;nexa.h: 136: nrsymbols = 0;
  2021  002CA4  0102               	movlb	2	; () banked
  2022  002CA6  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  2023  002CA8  0E00               	movlw	low(0)
  2024  002CAA  0101               	movlb	1	; () banked
  2025  002CAC  0101               	movlb	1	; () banked
  2026  002CAE  6F2A               	movwf	((298))&0ffh
  2027  002CB0  0102               	movlb	2	; () banked
  2028  002CB2  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  2029                           	line	137
  2030                           	
  2031  002CB4                     l452:		; BSR set to: ?
  2032                           
  2033                           	line	140
  2034                           ;nexa.h: 137: }
  2035                           ;nexa.h: 140: if(nexabit == 4) return;
  2036  002CB4  0101               	movlb	1	; () banked
  2037  002CB6  0101               	movlb	1	; () banked
  2038  002CB8  5137               	movf	((311))&0ffh,w
  2039  002CBA  0A04               	xorlw	4
  2040                           
  2041  002CBC  A4D8               	btfss	status,2
  2042  002CBE  EF63  F016         	goto	u7821
  2043  002CC2  EF65  F016         	goto	u7820
  2044  002CC6                     u7821:
  2045  002CC6  EF67  F016         	goto	l459
  2046  002CCA                     u7820:
  2047  002CCA  EFA3  F016         	goto	l443
  2048                           	
  2049  002CCE                     l459:		; BSR set to: ?
  2050                           
  2051                           	line	141
  2052                           ;nexa.h: 141: if (nexabit == 2){
  2053  002CCE  0101               	movlb	1	; () banked
  2054  002CD0  0101               	movlb	1	; () banked
  2055  002CD2  5137               	movf	((311))&0ffh,w
  2056  002CD4  0A02               	xorlw	2
  2057                           
  2058  002CD6  A4D8               	btfss	status,2
  2059  002CD8  EF70  F016         	goto	u7831
  2060  002CDC  EF72  F016         	goto	u7830
  2061  002CE0                     u7831:
  2062  002CE0  EF90  F016         	goto	l460
  2063  002CE4                     u7830:
  2064                           	line	142
  2065                           ;nexa.h: 142: if (nrbits >= 32) nexaPrint(data);
  2066  002CE4  0E1F               	movlw	(020h-1)
  2067  002CE6  0101               	movlb	1	; () banked
  2068  002CE8  0101               	movlb	1	; () banked
  2069  002CEA  6547               	cpfsgt	((327))&0ffh
  2070  002CEC  EF7A  F016         	goto	u7841
  2071  002CF0  EF7C  F016         	goto	u7840
  2072  002CF4                     u7841:
  2073  002CF4  EF86  F016         	goto	l461
  2074  002CF8                     u7840:
  2075  002CF8  C132 F238          	movff	(306),(?_nexaPrint)
  2076  002CFC  C133 F239          	movff	(306+1),(?_nexaPrint+1)
  2077  002D00  C134 F23A          	movff	(306+2),(?_nexaPrint+2)
  2078  002D04  C135 F23B          	movff	(306+3),(?_nexaPrint+3)
  2079  002D08  EC03  F018         	call	_nexaPrint	;wreg free
  2080                           	
  2081  002D0C                     l461:		; BSR set to: ?
  2082                           
  2083                           	line	143
  2084                           ;nexa.h: 143: nrbits = 0;
  2085  002D0C  0102               	movlb	2	; () banked
  2086  002D0E  6F36               	movwf	(??_nexaDecode+0+0)&0ffh
  2087  002D10  0E00               	movlw	low(0)
  2088  002D12  0101               	movlb	1	; () banked
  2089  002D14  0101               	movlb	1	; () banked
  2090  002D16  6F47               	movwf	((327))&0ffh
  2091  002D18  0102               	movlb	2	; () banked
  2092  002D1A  5136               	movf	(??_nexaDecode+0+0)&0ffh,w
  2093                           	line	144
  2094                           ;nexa.h: 144: return;
  2095  002D1C  EFA3  F016         	goto	l443
  2096                           	line	145
  2097                           	
  2098  002D20                     l460:		; BSR set to: ?
  2099                           
  2100                           	line	146
  2101                           ;nexa.h: 145: }
  2102                           ;nexa.h: 146: data <<= 1;
  2103  002D20  0101               	movlb	1	; () banked
  2104  002D22  90D8               	bcf	status,0
  2105  002D24  0101               	movlb	1	; () banked
  2106  002D26  3732               	rlcf	((306))&0ffh
  2107  002D28  0101               	movlb	1	; () banked
  2108  002D2A  3733               	rlcf	((306+1))&0ffh
  2109  002D2C  0101               	movlb	1	; () banked
  2110  002D2E  3734               	rlcf	((306+2))&0ffh
  2111  002D30  0101               	movlb	1	; () banked
  2112  002D32  3735               	rlcf	((306+3))&0ffh
  2113                           	line	147
  2114                           ;nexa.h: 147: data |= nexabit;
  2115  002D34  0101               	movlb	1	; () banked
  2116  002D36  0101               	movlb	1	; () banked
  2117  002D38  5137               	movf	((311))&0ffh,w
  2118  002D3A  0101               	movlb	1	; () banked
  2119  002D3C  0101               	movlb	1	; () banked
  2120  002D3E  1332               	iorwf	((306))&0ffh
  2121                           	line	148
  2122                           ;nexa.h: 148: nrbits++;
  2123  002D40  0101               	movlb	1	; () banked
  2124  002D42  0101               	movlb	1	; () banked
  2125  002D44  2B47               	incf	((327))&0ffh
  2126                           	line	149
  2127                           ;nexa.h: 149: }
  2128  002D46                     l443:
  2129                           			; BSR set to: ?
  2130                           
  2131  002D46  0012               	return
  2132                           	opt stack 0
  2133                           GLOBAL __end_of_nexaDecode
  2134  002D48                     	__end_of_nexaDecode:
  2135                           	FNSIZE	_nexaDecode,2,2
  2136                           ; =============== function _nexaDecode ends ====
                                 ========
  2137                           
  2138                           	signat	_nexaDecode,8312
  2139                           	global	_doroDecode
  2140                           	global	??_doroDecode
  2141                           	global	?_doroDecode
  2142                           
  2143                           ; *************** function _doroDecode *********
                                 ********
  2144                           ; Defined at:
  2145                           ;		line 14 in file "D:\Hobby\Prosjekter\MultiTRX
                                 \Firmware\FW1.2\doro.h"
  2146                           ; Parameters:
  2147                           ;		rf_state       size:   1offs:   0	type: unsig
                                 ned char 
  2148                           ;		rf_pulse_len   size:   1offs:   1	type: unsig
                                 ned char 
  2149                           ; Auto variables:
  2150                           ;		None
  2151                           ; Return value:
  2152                           ;		type: void 
  2153                           ;		size: 0
  2154                           ; Registers used:
  2155                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  2156                           ; Tracked objects:
  2157                           ;		On entry : 0/0
  2158                           ;		On exit  : 0/0
  2159                           ;		Unchanged: 0/0
  2160                           ; Data sizes:
  2161                           ;		Autos:    0
  2162                           ;		Params:   2
  2163                           ;		Temp:     1
  2164                           ;		Total:    3
  2165                           ; This function calls:
  2166                           ;		_doroPrint
  2167                           ; This function is called by:
  2168                           ;		_main
  2169                           ; This function uses a non-reentrant model
  2170                           ; 
  2171                                   psect   text3,class=CODE,space=0,reloc=2
  2172                           
  2173                           	opt lm
  2174                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\doro.h"
  2175                           	line	14
  2176  000000                     	__size_of_doroDecode	equ	__end_of_doroDecode-_d
                                 oroDecode
  2177                           ;doro.h: 14: void doroDecode(char rf_state, char
                                  rf_pulse_length){
  2178                           	
  2179  003226                     _doroDecode:		; BSR set to: ?
  2180                           
  2181                           	opt stack 29
  2182                           	line	29
  2183  003226  0102               	movlb	2	; () banked
  2184  003228  0102               	movlb	2	; () banked
  2185  00322A  5134               	movf	((doroDecode@rf_state))&0ffh,w
  2186  00322C  B4D8               	btfsc	status,2
  2187  00322E  EF1B  F019         	goto	u7871
  2188  003232  EF1D  F019         	goto	u7870
  2189  003236                     u7871:
  2190  003236  EF8D  F019         	goto	l491
  2191  00323A                     u7870:
  2192                           	line	32
  2193                           ;doro.h: 30: if ((rf_pulse_length >= 32)&&
  2194                           ;doro.h: 31: (rf_pulse_length <= 40)&&
  2195                           ;doro.h: 32: ((nrbits==0)||(dorobit==7))) dorobi
                                 t = 1;
  2196  00323A  0E1F               	movlw	(020h-1)
  2197  00323C  0102               	movlb	2	; () banked
  2198  00323E  0102               	movlb	2	; () banked
  2199  003240  6535               	cpfsgt	((doroDecode@rf_pulse_length))&0ffh
  2200  003242  EF25  F019         	goto	u7881
  2201  003246  EF27  F019         	goto	u7880
  2202  00324A                     u7881:
  2203  00324A  EF50  F019         	goto	l492
  2204  00324E                     u7880:
  2205  00324E  0E29               	movlw	(029h)&0ffh
  2206  003250  0102               	movlb	2	; () banked
  2207  003252  0102               	movlb	2	; () banked
  2208  003254  6135               	cpfslt	((doroDecode@rf_pulse_length))&0ffh
  2209  003256  EF2F  F019         	goto	u7891
  2210  00325A  EF31  F019         	goto	u7890
  2211  00325E                     u7891:
  2212  00325E  EF50  F019         	goto	l492
  2213  003262                     u7890:
  2214  003262  0101               	movlb	1	; () banked
  2215  003264  0101               	movlb	1	; () banked
  2216  003266  5138               	movf	((312))&0ffh,w
  2217  003268  B4D8               	btfsc	status,2
  2218  00326A  EF39  F019         	goto	u7901
  2219  00326E  EF3B  F019         	goto	u7900
  2220  003272                     u7901:
  2221  003272  EF46  F019         	goto	l600000364
  2222  003276                     u7900:
  2223  003276  0101               	movlb	1	; () banked
  2224  003278  0101               	movlb	1	; () banked
  2225  00327A  5123               	movf	((291))&0ffh,w
  2226  00327C  0A07               	xorlw	7
  2227                           
  2228  00327E  A4D8               	btfss	status,2
  2229  003280  EF44  F019         	goto	u7911
  2230  003284  EF46  F019         	goto	u7910
  2231  003288                     u7911:
  2232  003288  EF50  F019         	goto	l492
  2233  00328C                     u7910:
  2234                           	
  2235  00328C                     l600000364:		; BSR set to: ?
  2236                           
  2237  00328C  0102               	movlb	2	; () banked
  2238  00328E  6F36               	movwf	(??_doroDecode+0+0)&0ffh
  2239  003290  0E01               	movlw	low(01h)
  2240  003292  0101               	movlb	1	; () banked
  2241  003294  0101               	movlb	1	; () banked
  2242  003296  6F23               	movwf	((291))&0ffh
  2243  003298  0102               	movlb	2	; () banked
  2244  00329A  5136               	movf	(??_doroDecode+0+0)&0ffh,w
  2245  00329C  EF8B  F019         	goto	l493
  2246                           	line	33
  2247                           	
  2248  0032A0                     l492:		; BSR set to: ?
  2249                           
  2250                           	line	35
  2251                           ;doro.h: 33: else if ((rf_pulse_length >= 15)&&
  2252                           ;doro.h: 34: (rf_pulse_length <= 21)&&
  2253                           ;doro.h: 35: ((nrbits==0)||(dorobit==8))) dorobi
                                 t = 0;
  2254  0032A0  0E0E               	movlw	(0Fh-1)
  2255  0032A2  0102               	movlb	2	; () banked
  2256  0032A4  0102               	movlb	2	; () banked
  2257  0032A6  6535               	cpfsgt	((doroDecode@rf_pulse_length))&0ffh
  2258  0032A8  EF58  F019         	goto	u7921
  2259  0032AC  EF5A  F019         	goto	u7920
  2260  0032B0                     u7921:
  2261  0032B0  EF83  F019         	goto	l494
  2262  0032B4                     u7920:
  2263  0032B4  0E16               	movlw	(016h)&0ffh
  2264  0032B6  0102               	movlb	2	; () banked
  2265  0032B8  0102               	movlb	2	; () banked
  2266  0032BA  6135               	cpfslt	((doroDecode@rf_pulse_length))&0ffh
  2267  0032BC  EF62  F019         	goto	u7931
  2268  0032C0  EF64  F019         	goto	u7930
  2269  0032C4                     u7931:
  2270  0032C4  EF83  F019         	goto	l494
  2271  0032C8                     u7930:
  2272  0032C8  0101               	movlb	1	; () banked
  2273  0032CA  0101               	movlb	1	; () banked
  2274  0032CC  5138               	movf	((312))&0ffh,w
  2275  0032CE  B4D8               	btfsc	status,2
  2276  0032D0  EF6C  F019         	goto	u7941
  2277  0032D4  EF6E  F019         	goto	u7940
  2278  0032D8                     u7941:
  2279  0032D8  EF79  F019         	goto	l600000365
  2280  0032DC                     u7940:
  2281  0032DC  0101               	movlb	1	; () banked
  2282  0032DE  0101               	movlb	1	; () banked
  2283  0032E0  5123               	movf	((291))&0ffh,w
  2284  0032E2  0A08               	xorlw	8
  2285                           
  2286  0032E4  A4D8               	btfss	status,2
  2287  0032E6  EF77  F019         	goto	u7951
  2288  0032EA  EF79  F019         	goto	u7950
  2289  0032EE                     u7951:
  2290  0032EE  EF83  F019         	goto	l494
  2291  0032F2                     u7950:
  2292                           	
  2293  0032F2                     l600000365:		; BSR set to: ?
  2294                           
  2295  0032F2  0102               	movlb	2	; () banked
  2296  0032F4  6F36               	movwf	(??_doroDecode+0+0)&0ffh
  2297  0032F6  0E00               	movlw	low(0)
  2298  0032F8  0101               	movlb	1	; () banked
  2299  0032FA  0101               	movlb	1	; () banked
  2300  0032FC  6F23               	movwf	((291))&0ffh
  2301  0032FE  0102               	movlb	2	; () banked
  2302  003300  5136               	movf	(??_doroDecode+0+0)&0ffh,w
  2303  003302  EF8B  F019         	goto	l493
  2304                           	line	36
  2305                           	
  2306  003306                     l494:		; BSR set to: ?
  2307                           
  2308                           ;doro.h: 36: else dorobit = 2;
  2309  003306  0102               	movlb	2	; () banked
  2310  003308  6F36               	movwf	(??_doroDecode+0+0)&0ffh
  2311  00330A  0E02               	movlw	low(02h)
  2312  00330C  0101               	movlb	1	; () banked
  2313  00330E  0101               	movlb	1	; () banked
  2314  003310  6F23               	movwf	((291))&0ffh
  2315  003312  0102               	movlb	2	; () banked
  2316  003314  5136               	movf	(??_doroDecode+0+0)&0ffh,w
  2317                           	
  2318  003316                     l495:		; BSR set to: ?
  2319                           
  2320                           	
  2321  003316                     l493:		; BSR set to: ?
  2322                           
  2323                           	line	37
  2324                           ;doro.h: 37: }
  2325  003316  EFD1  F019         	goto	l496
  2326                           	line	38
  2327                           	
  2328  00331A                     l491:		; BSR set to: ?
  2329                           
  2330                           	line	40
  2331                           ;doro.h: 38: else{
  2332                           ;doro.h: 39: if ((rf_pulse_length >= 32)&&
  2333                           ;doro.h: 40: (rf_pulse_length <= 40)) dorobit = 
                                 8;
  2334  00331A  0E1F               	movlw	(020h-1)
  2335  00331C  0102               	movlb	2	; () banked
  2336  00331E  0102               	movlb	2	; () banked
  2337  003320  6535               	cpfsgt	((doroDecode@rf_pulse_length))&0ffh
  2338  003322  EF95  F019         	goto	u7961
  2339  003326  EF97  F019         	goto	u7960
  2340  00332A                     u7961:
  2341+ 00332A  EFAB  F019         	goto	l497
  2342+ 00332E                     u7960:
  2343+ 00332E  0E29               	movlw	(029h)&0ffh
  2344+ 003330  0102               	movlb	2	; () banked
  2345+ 003332  0102               	movlb	2	; () banked
  2346+ 003334  6135               	cpfslt	((doroDecode@rf_pulse_length))&0ffh
  2347+ 003336  EF9F  F019         	goto	u7971
  2348+ 00333A  EFA1  F019         	goto	u7970
  2349+ 00333E                     u7971:
  2350+ 00333E  EFAB  F019         	goto	l497
  2351+ 003342                     u7970:
  2352+ 003342  0102               	movlb	2	; () banked
  2353+ 003344  6F36               	movwf	(??_doroDecode+0+0)&0ffh
  2354+ 003346  0E08               	movlw	low(08h)
  2355+ 003348  0101               	movlb	1	; () banked
  2356+ 00334A  0101               	movlb	1	; () banked
  2357+ 00334C  6F23               	movwf	((291))&0ffh
  2358+ 00334E  0102               	movlb	2	; () banked
  2359+ 003350  5136               	movf	(??_doroDecode+0+0)&0ffh,w
  2360+ 003352  EFD1  F019         	goto	l496
  2361+                          	line	41
  2362+                          	
  2363+ 003356                     l497:		; BSR set to: ?
  2364+                          
  2365+                          	line	42
  2366+                          ;doro.h: 41: else if ((rf_pulse_length >= 15)&&
  2367+                          ;doro.h: 42: (rf_pulse_length <= 21)) dorobit = 
      +                          7;
  2368+ 003356  0E0E               	movlw	(0Fh-1)
  2369+ 003358  0102               	movlb	2	; () banked
  2370+ 00335A  0102               	movlb	2	; () banked
  2371+ 00335C  6535               	cpfsgt	((doroDecode@rf_pulse_length))&0ffh
  2372+ 00335E  EFB3  F019         	goto	u7981
  2373+ 003362  EFB5  F019         	goto	u7980
  2374+ 003366                     u7981:
  2375+ 003366  EFC9  F019         	goto	l499
  2376+ 00336A                     u7980:
  2377+ 00336A  0E16               	movlw	(016h)&0ffh
  2378+ 00336C  0102               	movlb	2	; () banked
  2379+ 00336E  0102               	movlb	2	; () banked
  2380+ 003370  6135               	cpfslt	((doroDecode@rf_pulse_length))&0ffh
  2381+ 003372  EFBD  F019         	goto	u7991
  2382+ 003376  EFBF  F019         	goto	u7990
  2383+ 00337A                     u7991:
  2384+ 00337A  EFC9  F019         	goto	l499
  2385+ 00337E                     u7990:
  2386+ 00337E  0102               	movlb	2	; () banked
  2387+ 003380  6F36               	movwf	(??_doroDecode+0+0)&0ffh
  2388+ 003382  0E07               	movlw	low(07h)
  2389+ 003384  0101               	movlb	1	; () banked
  2390+ 003386  0101               	movlb	1	; () banked
  2391+ 003388  6F23               	movwf	((291))&0ffh
  2392+ 00338A  0102               	movlb	2	; () banked
  2393+ 00338C  5136               	movf	(??_doroDecode+0+0)&0ffh,w
  2394+ 00338E  EFD1  F019         	goto	l496
  2395+                          	line	43
  2396+                          	
  2397+ 003392                     l499:		; BSR set to: ?
  2398+                          
  2399+                          ;doro.h: 43: else dorobit = 2;
  2400+ 003392  0102               	movlb	2	; () banked
  2401+ 003394  6F36               	movwf	(??_doroDecode+0+0)&0ffh
  2402+ 003396  0E02               	movlw	low(02h)
  2403+ 003398  0101               	movlb	1	; () banked
  2404+ 00339A  0101               	movlb	1	; () banked
  2405+ 00339C  6F23               	movwf	((291))&0ffh
  2406+ 00339E  0102               	movlb	2	; () banked
  2407+ 0033A0  5136               	movf	(??_doroDecode+0+0)&0ffh,w
  2408+                          	
  2409+ 0033A2                     l500:		; BSR set to: ?
  2410+                          
  2411+                          	
  2412+ 0033A2                     l498:		; BSR set to: ?
  2413+                          
  2414+                          	line	44
  2415+                          	
  2416+ 0033A2                     l496:		; BSR set to: ?
  2417+                          
  2418+                          	line	47
  2419+                          ;doro.h: 44: }
  2420+                          ;doro.h: 47: if ((dorobit == 1)||(dorobit == 0))
      +                          {
  2421+ 0033A2  0101               	movlb	1	; () banked
  2422+ 0033A4  0101               	movlb	1	; () banked
  2423+ 0033A6  0523               	decf	((291))&0ffh,w
  2424+                          
  2425+ 0033A8  B4D8               	btfsc	status,2
  2426+ 0033AA  EFD9  F019         	goto	u8001
  2427+ 0033AE  EFDB  F019         	goto	u8000
  2428+ 0033B2                     u8001:
  2429+ 0033B2  EFE4  F019         	goto	l600000366
  2430+ 0033B6                     u8000:
  2431+ 0033B6  0101               	movlb	1	; () banked
  2432+ 0033B8  0101               	movlb	1	; () banked
  2433+ 0033BA  6723               	tstfsz	((291))&0ffh
  2434+ 0033BC  EFE2  F019         	goto	u8011
  2435+ 0033C0  EFE4  F019         	goto	u8010
  2436+ 0033C4                     u8011:
  2437+ 0033C4  EFF5  F019         	goto	l501
  2438+ 0033C8                     u8010:
  2439+                          	
  2440+ 0033C8                     l600000366:		; BSR set to: ?
  2441+                          
  2442+                          	line	48
  2443+                          ;doro.h: 48: data <<= 1;
  2444+ 0033C8  0101               	movlb	1	; () banked
  2445+ 0033CA  90D8               	bcf	status,0
  2446+ 0033CC  0101               	movlb	1	; () banked
  2447+ 0033CE  373D               	rlcf	((317))&0ffh
  2448+ 0033D0  0101               	movlb	1	; () banked
  2449+ 0033D2  373E               	rlcf	((317+1))&0ffh
  2450+                          	line	49
  2451+                          ;doro.h: 49: data |= dorobit;
  2452+ 0033D4  0101               	movlb	1	; () banked
  2453+ 0033D6  0101               	movlb	1	; () banked
  2454+ 0033D8  5123               	movf	((291))&0ffh,w
  2455+ 0033DA  0101               	movlb	1	; () banked
  2456+ 0033DC  0101               	movlb	1	; () banked
  2457+ 0033DE  133D               	iorwf	((317))&0ffh
  2458+                          	line	50
  2459+                          ;doro.h: 50: nrbits++;
  2460+ 0033E0  0101               	movlb	1	; () banked
  2461+ 0033E2  0101               	movlb	1	; () banked
  2462+ 0033E4  2B38               	incf	((312))&0ffh
  2463+                          	line	51
  2464+                          ;doro.h: 51: }
  2465+ 0033E6  EF19  F01A         	goto	l502
  2466+                          	line	52
  2467+                          	
  2468+ 0033EA                     l501:		; BSR set to: ?
  2469+                          
  2470+                          ;doro.h: 52: else if (dorobit == 2){
  2471+ 0033EA  0101               	movlb	1	; () banked
  2472+ 0033EC  0101               	movlb	1	; () banked
  2473+ 0033EE  5123               	movf	((291))&0ffh,w
  2474+ 0033F0  0A02               	xorlw	2
  2475+                          
  2476+ 0033F2  A4D8               	btfss	status,2
  2477+ 0033F4  EFFE  F019         	goto	u8021
  2478+ 0033F8  EF00  F01A         	goto	u8020
  2479+ 0033FC                     u8021:
  2480+ 0033FC  EF19  F01A         	goto	l502
  2481+ 003400                     u8020:
  2482+                          	line	53
  2483+                          ;doro.h: 53: if (nrbits == 13) doroPrint(data);
  2484+ 003400  0101               	movlb	1	; () banked
  2485+ 003402  0101               	movlb	1	; () banked
  2486+ 003404  5138               	movf	((312))&0ffh,w
  2487+ 003406  0A0D               	xorlw	13
  2488+                          
  2489+ 003408  A4D8               	btfss	status,2
  2490+ 00340A  EF09  F01A         	goto	u8031
  2491+ 00340E  EF0B  F01A         	goto	u8030
  2492+ 003412                     u8031:
  2493+ 003412  EF11  F01A         	goto	l504
  2494+ 003416                     u8030:
  2495+ 003416  C13D F237          	movff	(317),(?_doroPrint)
  2496+ 00341A  C13E F238          	movff	(317+1),(?_doroPrint+1)
  2497+ 00341E  ECD3  F023         	call	_doroPrint	;wreg free
  2498+                          	
  2499+ 003422                     l504:		; BSR set to: ?
  2500+                          
  2501+                          	line	54
  2502+                          ;doro.h: 54: nrbits = 0;
  2503+ 003422  0102               	movlb	2	; () banked
  2504+ 003424  6F36               	movwf	(??_doroDecode+0+0)&0ffh
  2505+ 003426  0E00               	movlw	low(0)
  2506+ 003428  0101               	movlb	1	; () banked
  2507+ 00342A  0101               	movlb	1	; () banked
  2508+ 00342C  6F38               	movwf	((312))&0ffh
  2509+ 00342E  0102               	movlb	2	; () banked
  2510+ 003430  5136               	movf	(??_doroDecode+0+0)&0ffh,w
  2511+                          	line	55
  2512+                          	
  2513+ 003432                     l503:		; BSR set to: ?
  2514+                          
  2515+                          	line	56
  2516+                          	
  2517+ 003432                     l502:		; BSR set to: ?
  2518+                          
  2519+                          ;doro.h: 55: }
  2520+                          ;doro.h: 56: }
  2521+ 003432                     l490:
  2522+                          			; BSR set to: ?
  2523+                          
  2524+ 003432  0012               	return
  2525+                          	opt stack 0
  2526+                          GLOBAL __end_of_doroDecode
  2527+ 003434                     	__end_of_doroDecode:
  2528+                          	FNSIZE	_doroDecode,1,2
  2529+                          ; =============== function _doroDecode ends ====
      +                          ========
  2530+                          
  2531+                          	signat	_doroDecode,8312
  2532+                          	global	_esicDecode
  2533+                          	global	??_esicDecode
  2534+                          	global	?_esicDecode
  2535+                          
  2536+                          ; *************** function _esicDecode *********
      +                          ********
  2537+                          ; Defined at:
  2538+                          ;		line 64 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\esic.h"
  2539+                          ; Parameters:
  2540+                          ;		rf_pulse_len   size:   1offs:   0	type: unsig
      +                          ned char 
  2541+                          ; Auto variables:
  2542+                          ;		None
  2543+                          ; Return value:
  2544+                          ;		type: void 
  2545+                          ;		size: 0
  2546+                          ; Registers used:
  2547+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
  2548+                          ; Tracked objects:
  2549+                          ;		On entry : 0/0
  2550+                          ;		On exit  : 0/0
  2551+                          ;		Unchanged: 0/0
  2552+                          ; Data sizes:
  2553+                          ;		Autos:    0
  2554+                          ;		Params:   1
  2555+                          ;		Temp:     1
  2556+                          ;		Total:    2
  2557+                          ; This function calls:
  2558+                          ;		_esicPrint
  2559+                          ; This function is called by:
  2560+                          ;		_main
  2561+                          ; This function uses a non-reentrant model
  2562+                          ; 
  2563+                                  psect   text4,class=CODE,space=0,reloc=2
  2564+                          
  2565+                          	opt lm
  2566+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\esic.h"
  2567+                          	line	64
  2568+ 000000                     	__size_of_esicDecode	equ	__end_of_esicDecode-_e
      +                          sicDecode
  2569+                          ;esic.h: 64: void esicDecode(char rf_pulse_lengt
      +                          h){
  2570+                          	
  2571+ 003434                     _esicDecode:		; BSR set to: ?
  2572+                          
  2573+                          	opt stack 29
  2574+                          	line	82
  2575+ 003434  0E28               	movlw	(029h-1)
  2576+ 003436  0102               	movlb	2	; () banked
  2577+ 003438  0102               	movlb	2	; () banked
  2578+ 00343A  6534               	cpfsgt	((esicDecode@rf_pulse_length))&0ffh
  2579+ 00343C  EF22  F01A         	goto	u6551
  2580+ 003440  EF24  F01A         	goto	u6550
  2581+ 003444                     u6551:
  2582+ 003444  EF4D  F01A         	goto	l469
  2583+ 003448                     u6550:
  2584+ 003448  0E50               	movlw	(050h)&0ffh
  2585+ 00344A  0102               	movlb	2	; () banked
  2586+ 00344C  0102               	movlb	2	; () banked
  2587+ 00344E  6134               	cpfslt	((esicDecode@rf_pulse_length))&0ffh
  2588+ 003450  EF2C  F01A         	goto	u6561
  2589+ 003454  EF2E  F01A         	goto	u6560
  2590+ 003458                     u6561:
  2591+ 003458  EF4D  F01A         	goto	l469
  2592+ 00345C                     u6560:
  2593+                          	line	83
  2594+                          ;esic.h: 83: if(esicbit == 4) esicbit = 1;
  2595+ 00345C  0101               	movlb	1	; () banked
  2596+ 00345E  0101               	movlb	1	; () banked
  2597+ 003460  5122               	movf	((290))&0ffh,w
  2598+ 003462  0A04               	xorlw	4
  2599+                          
  2600+ 003464  A4D8               	btfss	status,2
  2601+ 003466  EF37  F01A         	goto	u6571
  2602+ 00346A  EF39  F01A         	goto	u6570
  2603+ 00346E                     u6571:
  2604+ 00346E  EF43  F01A         	goto	l470
  2605+ 003472                     u6570:
  2606+ 003472  0102               	movlb	2	; () banked
  2607+ 003474  6F35               	movwf	(??_esicDecode+0+0)&0ffh
  2608+ 003476  0E01               	movlw	low(01h)
  2609+ 003478  0101               	movlb	1	; () banked
  2610+ 00347A  0101               	movlb	1	; () banked
  2611+ 00347C  6F22               	movwf	((290))&0ffh
  2612+ 00347E  0102               	movlb	2	; () banked
  2613+ 003480  5135               	movf	(??_esicDecode+0+0)&0ffh,w
  2614+ 003482  EF4B  F01A         	goto	l471
  2615+                          	line	84
  2616+                          	
  2617+ 003486                     l470:		; BSR set to: ?
  2618+                          
  2619+                          ;esic.h: 84: else esicbit = 4;
  2620+ 003486  0102               	movlb	2	; () banked
  2621+ 003488  6F35               	movwf	(??_esicDecode+0+0)&0ffh
  2622+ 00348A  0E04               	movlw	low(04h)
  2623+ 00348C  0101               	movlb	1	; () banked
  2624+ 00348E  0101               	movlb	1	; () banked
  2625+ 003490  6F22               	movwf	((290))&0ffh
  2626+ 003492  0102               	movlb	2	; () banked
  2627+ 003494  5135               	movf	(??_esicDecode+0+0)&0ffh,w
  2628+                          	
  2629+ 003496                     l471:		; BSR set to: ?
  2630+                          
  2631+                          	line	85
  2632+                          ;esic.h: 85: }
  2633+ 003496  EF87  F01A         	goto	l472
  2634+                          	line	86
  2635+                          	
  2636+ 00349A                     l469:		; BSR set to: ?
  2637+                          
  2638+                          	line	87
  2639+                          ;esic.h: 86: else if((rf_pulse_length > 100)&&(r
      +                          f_pulse_length < 140)&&
  2640+                          ;esic.h: 87: !((esicbit == 4)&&(nrbits > 0))) es
      +                          icbit = 0;
  2641+ 00349A  0E64               	movlw	(065h-1)
  2642+ 00349C  0102               	movlb	2	; () banked
  2643+ 00349E  0102               	movlb	2	; () banked
  2644+ 0034A0  6534               	cpfsgt	((esicDecode@rf_pulse_length))&0ffh
  2645+ 0034A2  EF55  F01A         	goto	u6581
  2646+ 0034A6  EF57  F01A         	goto	u6580
  2647+ 0034AA                     u6581:
  2648+ 0034AA  EF7F  F01A         	goto	l473
  2649+ 0034AE                     u6580:
  2650+ 0034AE  0E8C               	movlw	(08Ch)&0ffh
  2651+ 0034B0  0102               	movlb	2	; () banked
  2652+ 0034B2  0102               	movlb	2	; () banked
  2653+ 0034B4  6134               	cpfslt	((esicDecode@rf_pulse_length))&0ffh
  2654+ 0034B6  EF5F  F01A         	goto	u6591
  2655+ 0034BA  EF61  F01A         	goto	u6590
  2656+ 0034BE                     u6591:
  2657+ 0034BE  EF7F  F01A         	goto	l473
  2658+ 0034C2                     u6590:
  2659+ 0034C2  0101               	movlb	1	; () banked
  2660+ 0034C4  0101               	movlb	1	; () banked
  2661+ 0034C6  5122               	movf	((290))&0ffh,w
  2662+ 0034C8  0A04               	xorlw	4
  2663+                          
  2664+ 0034CA  A4D8               	btfss	status,2
  2665+ 0034CC  EF6A  F01A         	goto	u6601
  2666+ 0034D0  EF6C  F01A         	goto	u6600
  2667+ 0034D4                     u6601:
  2668+ 0034D4  EF75  F01A         	goto	l600000361
  2669+ 0034D8                     u6600:
  2670+ 0034D8  0101               	movlb	1	; () banked
  2671+ 0034DA  0101               	movlb	1	; () banked
  2672+ 0034DC  673F               	tstfsz	((319))&0ffh
  2673+ 0034DE  EF73  F01A         	goto	u6611
  2674+ 0034E2  EF75  F01A         	goto	u6610
  2675+ 0034E6                     u6611:
  2676+ 0034E6  EF7F  F01A         	goto	l473
  2677+ 0034EA                     u6610:
  2678+                          	
  2679+ 0034EA                     l600000361:		; BSR set to: ?
  2680+                          
  2681+ 0034EA  0102               	movlb	2	; () banked
  2682+ 0034EC  6F35               	movwf	(??_esicDecode+0+0)&0ffh
  2683+ 0034EE  0E00               	movlw	low(0)
  2684+ 0034F0  0101               	movlb	1	; () banked
  2685+ 0034F2  0101               	movlb	1	; () banked
  2686+ 0034F4  6F22               	movwf	((290))&0ffh
  2687+ 0034F6  0102               	movlb	2	; () banked
  2688+ 0034F8  5135               	movf	(??_esicDecode+0+0)&0ffh,w
  2689+ 0034FA  EF87  F01A         	goto	l472
  2690+                          	line	88
  2691+                          	
  2692+ 0034FE                     l473:		; BSR set to: ?
  2693+                          
  2694+                          ;esic.h: 88: else esicbit = 2;
  2695+ 0034FE  0102               	movlb	2	; () banked
  2696+ 003500  6F35               	movwf	(??_esicDecode+0+0)&0ffh
  2697+ 003502  0E02               	movlw	low(02h)
  2698+ 003504  0101               	movlb	1	; () banked
  2699+ 003506  0101               	movlb	1	; () banked
  2700+ 003508  6F22               	movwf	((290))&0ffh
  2701+ 00350A  0102               	movlb	2	; () banked
  2702+ 00350C  5135               	movf	(??_esicDecode+0+0)&0ffh,w
  2703+                          	
  2704+ 00350E                     l474:		; BSR set to: ?
  2705+                          
  2706+                          	
  2707+ 00350E                     l472:		; BSR set to: ?
  2708+                          
  2709+                          	line	91
  2710+                          ;esic.h: 91: if(esicbit != 4){
  2711+ 00350E  0101               	movlb	1	; () banked
  2712+ 003510  0101               	movlb	1	; () banked
  2713+ 003512  5122               	movf	((290))&0ffh,w
  2714+ 003514  0A04               	xorlw	4
  2715+                          
  2716+ 003516  B4D8               	btfsc	status,2
  2717+ 003518  EF90  F01A         	goto	u6621
  2718+ 00351C  EF92  F01A         	goto	u6620
  2719+ 003520                     u6621:
  2720+ 003520  EF18  F01B         	goto	l475
  2721+ 003524                     u6620:
  2722+                          	line	92
  2723+                          ;esic.h: 92: switch (state){
  2724+ 003524  EF0F  F01B         	goto	l477
  2725+                          	line	93
  2726+                          ;esic.h: 93: case 0:
  2727+                          	
  2728+ 003528                     l478:		; BSR set to: ?
  2729+                          
  2730+                          	line	94
  2731+                          ;esic.h: 94: if(esicbit != 2){
  2732+ 003528  0101               	movlb	1	; () banked
  2733+ 00352A  0101               	movlb	1	; () banked
  2734+ 00352C  5122               	movf	((290))&0ffh,w
  2735+ 00352E  0A02               	xorlw	2
  2736+                          
  2737+ 003530  B4D8               	btfsc	status,2
  2738+ 003532  EF9D  F01A         	goto	u6631
  2739+ 003536  EF9F  F01A         	goto	u6630
  2740+ 00353A                     u6631:
  2741+ 00353A  EFBE  F01A         	goto	l479
  2742+ 00353E                     u6630:
  2743+                          	line	95
  2744+                          ;esic.h: 95: preamble_data <<= 1;
  2745+ 00353E  0101               	movlb	1	; () banked
  2746+ 003540  90D8               	bcf status,0
  2747+ 003542  3746               	rlcf	((326))&0ffh
  2748+                          
  2749+                          	line	96
  2750+                          ;esic.h: 96: preamble_data |= esicbit;
  2751+ 003544  0101               	movlb	1	; () banked
  2752+ 003546  0101               	movlb	1	; () banked
  2753+ 003548  5122               	movf	((290))&0ffh,w
  2754+ 00354A  0101               	movlb	1	; () banked
  2755+ 00354C  0101               	movlb	1	; () banked
  2756+ 00354E  1346               	iorwf	((326))&0ffh
  2757+                          	line	97
  2758+                          ;esic.h: 97: if ((preamble_data & 0b00001111) ==
      +                           0b00001100) state = 1;
  2759+ 003550  0101               	movlb	1	; () banked
  2760+ 003552  0101               	movlb	1	; () banked
  2761+ 003554  5146               	movf	((326))&0ffh,w
  2762+ 003556  0B0F               	andlw	low(0Fh)
  2763+ 003558  0A0C               	xorlw	0Ch
  2764+ 00355A  A4D8               	btfss	status,2
  2765+ 00355C  EFB2  F01A         	goto	u6641
  2766+ 003560  EFB4  F01A         	goto	u6640
  2767+ 003564                     u6641:
  2768+ 003564  EFBC  F01A         	goto	l480
  2769+ 003568                     u6640:
  2770+ 003568  0102               	movlb	2	; () banked
  2771+ 00356A  6F35               	movwf	(??_esicDecode+0+0)&0ffh
  2772+ 00356C  0E01               	movlw	low(01h)
  2773+ 00356E  0101               	movlb	1	; () banked
  2774+ 003570  0101               	movlb	1	; () banked
  2775+ 003572  6F41               	movwf	((321))&0ffh
  2776+ 003574  0102               	movlb	2	; () banked
  2777+ 003576  5135               	movf	(??_esicDecode+0+0)&0ffh,w
  2778+                          	
  2779+ 003578                     l480:		; BSR set to: ?
  2780+                          
  2781+                          	line	98
  2782+                          ;esic.h: 98: }
  2783+ 003578  EFC6  F01A         	goto	l481
  2784+                          	line	99
  2785+                          	
  2786+ 00357C                     l479:		; BSR set to: ?
  2787+                          
  2788+                          ;esic.h: 99: else preamble_data = 0;
  2789+ 00357C  0102               	movlb	2	; () banked
  2790+ 00357E  6F35               	movwf	(??_esicDecode+0+0)&0ffh
  2791+ 003580  0E00               	movlw	low(0)
  2792+ 003582  0101               	movlb	1	; () banked
  2793+ 003584  0101               	movlb	1	; () banked
  2794+ 003586  6F46               	movwf	((326))&0ffh
  2795+ 003588  0102               	movlb	2	; () banked
  2796+ 00358A  5135               	movf	(??_esicDecode+0+0)&0ffh,w
  2797+                          	
  2798+ 00358C                     l481:		; BSR set to: ?
  2799+                          
  2800+                          	line	100
  2801+                          ;esic.h: 100: break;
  2802+ 00358C  EF18  F01B         	goto	l475
  2803+                          	line	101
  2804+                          ;esic.h: 101: case 1:
  2805+                          	
  2806+ 003590                     l482:		; BSR set to: ?
  2807+                          
  2808+                          	line	102
  2809+                          ;esic.h: 102: if (esicbit == 2){
  2810+ 003590  0101               	movlb	1	; () banked
  2811+ 003592  0101               	movlb	1	; () banked
  2812+ 003594  5122               	movf	((290))&0ffh,w
  2813+ 003596  0A02               	xorlw	2
  2814+                          
  2815+ 003598  A4D8               	btfss	status,2
  2816+ 00359A  EFD1  F01A         	goto	u6651
  2817+ 00359E  EFD3  F01A         	goto	u6650
  2818+ 0035A2                     u6651:
  2819+ 0035A2  EFFA  F01A         	goto	l483
  2820+ 0035A6                     u6650:
  2821+                          	line	103
  2822+                          ;esic.h: 103: if (nrbits == 32) esicPrint(data);
  2823+ 0035A6  0101               	movlb	1	; () banked
  2824+ 0035A8  0101               	movlb	1	; () banked
  2825+ 0035AA  513F               	movf	((319))&0ffh,w
  2826+ 0035AC  0A20               	xorlw	32
  2827+                          
  2828+ 0035AE  A4D8               	btfss	status,2
  2829+ 0035B0  EFDC  F01A         	goto	u6661
  2830+ 0035B4  EFDE  F01A         	goto	u6660
  2831+ 0035B8                     u6661:
  2832+ 0035B8  EFE8  F01A         	goto	l484
  2833+ 0035BC                     u6660:
  2834+ 0035BC  C12E F236          	movff	(302),(?_esicPrint)
  2835+ 0035C0  C12F F237          	movff	(302+1),(?_esicPrint+1)
  2836+ 0035C4  C130 F238          	movff	(302+2),(?_esicPrint+2)
  2837+ 0035C8  C131 F239          	movff	(302+3),(?_esicPrint+3)
  2838+ 0035CC  ECDD  F005         	call	_esicPrint	;wreg free
  2839+                          	
  2840+ 0035D0                     l484:		; BSR set to: ?
  2841+                          
  2842+                          	line	104
  2843+                          ;esic.h: 104: nrbits = 0;
  2844+ 0035D0  0102               	movlb	2	; () banked
  2845+ 0035D2  6F35               	movwf	(??_esicDecode+0+0)&0ffh
  2846+ 0035D4  0E00               	movlw	low(0)
  2847+ 0035D6  0101               	movlb	1	; () banked
  2848+ 0035D8  0101               	movlb	1	; () banked
  2849+ 0035DA  6F3F               	movwf	((319))&0ffh
  2850+ 0035DC  0102               	movlb	2	; () banked
  2851+ 0035DE  5135               	movf	(??_esicDecode+0+0)&0ffh,w
  2852+                          	line	105
  2853+                          ;esic.h: 105: state = 0;
  2854+ 0035E0  0102               	movlb	2	; () banked
  2855+ 0035E2  6F35               	movwf	(??_esicDecode+0+0)&0ffh
  2856+ 0035E4  0E00               	movlw	low(0)
  2857+ 0035E6  0101               	movlb	1	; () banked
  2858+ 0035E8  0101               	movlb	1	; () banked
  2859+ 0035EA  6F41               	movwf	((321))&0ffh
  2860+ 0035EC  0102               	movlb	2	; () banked
  2861+ 0035EE  5135               	movf	(??_esicDecode+0+0)&0ffh,w
  2862+                          	line	106
  2863+                          ;esic.h: 106: }
  2864+ 0035F0  EFC6  F01A         	goto	l481
  2865+                          	line	107
  2866+                          	
  2867+ 0035F4                     l483:		; BSR set to: ?
  2868+                          
  2869+                          	line	108
  2870+                          ;esic.h: 107: else{
  2871+                          ;esic.h: 108: data <<= 1;
  2872+ 0035F4  0101               	movlb	1	; () banked
  2873+ 0035F6  90D8               	bcf	status,0
  2874+ 0035F8  0101               	movlb	1	; () banked
  2875+ 0035FA  372E               	rlcf	((302))&0ffh
  2876+ 0035FC  0101               	movlb	1	; () banked
  2877+ 0035FE  372F               	rlcf	((302+1))&0ffh
  2878+ 003600  0101               	movlb	1	; () banked
  2879+ 003602  3730               	rlcf	((302+2))&0ffh
  2880+ 003604  0101               	movlb	1	; () banked
  2881+ 003606  3731               	rlcf	((302+3))&0ffh
  2882+                          	line	109
  2883+                          ;esic.h: 109: data |= esicbit;
  2884+ 003608  0101               	movlb	1	; () banked
  2885+ 00360A  0101               	movlb	1	; () banked
  2886+ 00360C  5122               	movf	((290))&0ffh,w
  2887+ 00360E  0101               	movlb	1	; () banked
  2888+ 003610  0101               	movlb	1	; () banked
  2889+ 003612  132E               	iorwf	((302))&0ffh
  2890+                          	line	110
  2891+                          ;esic.h: 110: nrbits++;
  2892+ 003614  0101               	movlb	1	; () banked
  2893+ 003616  0101               	movlb	1	; () banked
  2894+ 003618  2B3F               	incf	((319))&0ffh
  2895+                          	line	111
  2896+                          	
  2897+ 00361A                     l485:		; BSR set to: ?
  2898+                          
  2899+                          	line	112
  2900+                          ;esic.h: 111: }
  2901+                          ;esic.h: 112: break;
  2902+ 00361A  EF18  F01B         	goto	l475
  2903+                          	line	92
  2904+                          	
  2905+ 00361E                     l477:		; BSR set to: ?
  2906+                          
  2907+ 00361E  0101               	movlb	1	; () banked
  2908+ 003620  0101               	movlb	1	; () banked
  2909+ 003622  5141               	movf	((321))&0ffh,w
  2910+ 003624  0A00               	xorlw	0 ^ 0
  2911+ 003626  E080               	bz	l478
  2912+ 003628  0A01               	xorlw	1 ^ 0
  2913+ 00362A  E0B2               	bz	l482
  2914+ 00362C  EF18  F01B         	goto	l475
  2915+                          
  2916+                          	line	114
  2917+                          	
  2918+ 003630                     l475:		; BSR set to: ?
  2919+                          
  2920+                          	line	115
  2921+                          ;esic.h: 114: }
  2922+                          ;esic.h: 115: }
  2923+ 003630                     l468:
  2924+                          			; BSR set to: ?
  2925+                          
  2926+ 003630  0012               	return
  2927+                          	opt stack 0
  2928+                          GLOBAL __end_of_esicDecode
  2929+ 003632                     	__end_of_esicDecode:
  2930+                          	FNSIZE	_esicDecode,1,1
  2931+                          ; =============== function _esicDecode ends ====
      +                          ========
  2932+                          
  2933+                          	signat	_esicDecode,4216
  2934+                          	global	_parseCmd
  2935+                          	global	??_parseCmd
  2936+                          	global	?_parseCmd
  2937+                          
  2938+                          ; *************** function _parseCmd ***********
      +                          ******
  2939+                          ; Defined at:
  2940+                          ;		line 252 in file "D:\Hobby\Prosjekter\MultiTR
      +                          X\Firmware\FW1.2\batchpcb26k20.c"
  2941+                          ; Parameters:
  2942+                          ;		linep          size:   2offs:   0	type: PTR u
      +                          nsigned char ; Largest target is 32
  2943+                          ;		 -> main@line(32), 
  2944+                          ;		line_len       size:   1offs:   2	type: unsig
      +                          ned char 
  2945+                          ;		settingsp      size:   2offs:   3	type: PTR s
      +                          truct .; Largest target is 14
  2946+                          ;		 -> main@settings(14), 
  2947+                          ; Auto variables:
  2948+                          ;		None
  2949+                          ; Return value:
  2950+                          ;		type: void 
  2951+                          ;		size: 0
  2952+                          ; Registers used:
  2953+                          ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, csta
      +                          ck
  2954+                          ; Tracked objects:
  2955+                          ;		On entry : 0/0
  2956+                          ;		On exit  : 0/0
  2957+                          ;		Unchanged: 0/0
  2958+                          ; Data sizes:
  2959+                          ;		Autos:    0
  2960+                          ;		Params:   5
  2961+                          ;		Temp:     1
  2962+                          ;		Total:    6
  2963+                          ; This function calls:
  2964+                          ;		_gaoTx
  2965+                          ;		_wavemanTx
  2966+                          ;		_nexaTx
  2967+                          ;		_kangthaiTx
  2968+                          ;		_bmcConvertHex
  2969+                          ;		_bmcTx
  2970+                          ;		_sPuts
  2971+                          ;		_sPut
  2972+                          ;		_parseSettings
  2973+                          ;		_startTransmit
  2974+                          ;		_delayms
  2975+                          ;		_stopTransmit
  2976+                          ; This function is called by:
  2977+                          ;		_main
  2978+                          ; This function uses a non-reentrant model
  2979+                          ; 
  2980+                                  psect   text5,class=CODE,space=0,reloc=2
  2981+                          
  2982+                          	opt lm
  2983+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
  2984+                          	line	252
  2985+ 000000                     	__size_of_parseCmd	equ	__end_of_parseCmd-_parse
      +                          Cmd
  2986+                          ;batchpcb26k20.c: 252: void parseCmd(char *linep
      +                          , char line_len, settings_t *settingsp){
  2987+                          	
  2988+ 0024BC                     _parseCmd:		; BSR set to: ?
  2989+                          
  2990+                          	opt stack 29
  2991+                          	line	253
  2992+ 0024BC  EFBC  F013         	goto	l560
  2993+                          	line	254
  2994+                          ;batchpcb26k20.c: 254: case 'G':
  2995+                          	
  2996+ 0024C0                     l561:		; BSR set to: ?
  2997+                          
  2998+                          	line	255
  2999+                          ;batchpcb26k20.c: 255: if (line_len == 9) gaoTx(
      +                          linep+2, settingsp->gao_sends);
  3000+ 0024C0  0102               	movlb	2	; () banked
  3001+ 0024C2  0102               	movlb	2	; () banked
  3002+ 0024C4  5136               	movf	((parseCmd@line_len))&0ffh,w
  3003+ 0024C6  0A09               	xorlw	9
  3004+                          
  3005+ 0024C8  A4D8               	btfss	status,2
  3006+ 0024CA  EF69  F012         	goto	u6681
  3007+ 0024CE  EF6B  F012         	goto	u6680
  3008+ 0024D2                     u6681:
  3009+ 0024D2  EF88  F012         	goto	l562
  3010+ 0024D6                     u6680:
  3011+ 0024D6  0E08               	movlw	low(08h)
  3012+ 0024D8  0102               	movlb	2	; () banked
  3013+ 0024DA  0102               	movlb	2	; () banked
  3014+ 0024DC  2537               	addwf	((parseCmd@settingsp))&0ffh,w
  3015+ 0024DE  6EE9               	movwf	c:fsr0l
  3016+ 0024E0  0E00               	movlw	high(08h)
  3017+ 0024E2  0102               	movlb	2	; () banked
  3018+ 0024E4  0102               	movlb	2	; () banked
  3019+ 0024E6  2138               	addwfc	((parseCmd@settingsp+1))&0ffh,w
  3020+ 0024E8  6EEA               	movwf	1+c:fsr0l
  3021+ 0024EA  50EF               	movf	indf0,w
  3022+ 0024EC  0102               	movlb	2	; () banked
  3023+ 0024EE  0102               	movlb	2	; () banked
  3024+ 0024F0  6F3C               	movwf	(0+(?_gaoTx+02h))&0ffh
  3025+ 0024F2  0E02               	movlw	low(02h)
  3026+ 0024F4  0102               	movlb	2	; () banked
  3027+ 0024F6  0102               	movlb	2	; () banked
  3028+ 0024F8  2534               	addwf	((parseCmd@linep))&0ffh,w
  3029+ 0024FA  0102               	movlb	2	; () banked
  3030+                          	
  3031+ 0024FC  0102               	movlb	2	; () banked
  3032+ 0024FE  6F3A               	movwf	((?_gaoTx))&0ffh
  3033+ 002500  0E00               	movlw	high(02h)
  3034+ 002502  0102               	movlb	2	; () banked
  3035+ 002504  0102               	movlb	2	; () banked
  3036+ 002506  2135               	addwfc	((parseCmd@linep+1))&0ffh,w
  3037+ 002508  0102               	movlb	2	; () banked
  3038+ 00250A  6F3B               	movwf	1+((?_gaoTx))&0ffh
  3039+ 00250C  ECC0  F010         	call	_gaoTx	;wreg free
  3040+                          	
  3041+ 002510                     l562:		; BSR set to: ?
  3042+                          
  3043+                          	line	256
  3044+                          ;batchpcb26k20.c: 256: break;
  3045+ 002510  EFE0  F013         	goto	l559
  3046+                          	line	257
  3047+                          ;batchpcb26k20.c: 257: case 'W':
  3048+                          	
  3049+ 002514                     l563:		; BSR set to: ?
  3050+                          
  3051+                          	line	258
  3052+                          ;batchpcb26k20.c: 258: if (line_len == 7) wavema
      +                          nTx(linep+2, settingsp->waveman_sends);
  3053+ 002514  0102               	movlb	2	; () banked
  3054+ 002516  0102               	movlb	2	; () banked
  3055+ 002518  5136               	movf	((parseCmd@line_len))&0ffh,w
  3056+ 00251A  0A07               	xorlw	7
  3057+                          
  3058+ 00251C  A4D8               	btfss	status,2
  3059+ 00251E  EF93  F012         	goto	u6691
  3060+ 002522  EF95  F012         	goto	u6690
  3061+ 002526                     u6691:
  3062+ 002526  EF88  F012         	goto	l562
  3063+ 00252A                     u6690:
  3064+ 00252A  0E0C               	movlw	low(0Ch)
  3065+ 00252C  0102               	movlb	2	; () banked
  3066+ 00252E  0102               	movlb	2	; () banked
  3067+ 002530  2537               	addwf	((parseCmd@settingsp))&0ffh,w
  3068+ 002532  6EE9               	movwf	c:fsr0l
  3069+ 002534  0E00               	movlw	high(0Ch)
  3070+ 002536  0102               	movlb	2	; () banked
  3071+ 002538  0102               	movlb	2	; () banked
  3072+ 00253A  2138               	addwfc	((parseCmd@settingsp+1))&0ffh,w
  3073+ 00253C  6EEA               	movwf	1+c:fsr0l
  3074+ 00253E  50EF               	movf	indf0,w
  3075+ 002540  0102               	movlb	2	; () banked
  3076+ 002542  0102               	movlb	2	; () banked
  3077+ 002544  6F3C               	movwf	(0+(?_wavemanTx+02h))&0ffh
  3078+ 002546  0E02               	movlw	low(02h)
  3079+ 002548  0102               	movlb	2	; () banked
  3080+ 00254A  0102               	movlb	2	; () banked
  3081+ 00254C  2534               	addwf	((parseCmd@linep))&0ffh,w
  3082+ 00254E  0102               	movlb	2	; () banked
  3083+                          	
  3084+ 002550  0102               	movlb	2	; () banked
  3085+ 002552  6F3A               	movwf	((?_wavemanTx))&0ffh
  3086+ 002554  0E00               	movlw	high(02h)
  3087+ 002556  0102               	movlb	2	; () banked
  3088+ 002558  0102               	movlb	2	; () banked
  3089+ 00255A  2135               	addwfc	((parseCmd@linep+1))&0ffh,w
  3090+ 00255C  0102               	movlb	2	; () banked
  3091+ 00255E  6F3B               	movwf	1+((?_wavemanTx))&0ffh
  3092+ 002560  ECE1  F013         	call	_wavemanTx	;wreg free
  3093+                          	
  3094+ 002564                     l564:		; BSR set to: ?
  3095+                          
  3096+                          	line	259
  3097+                          ;batchpcb26k20.c: 259: break;
  3098+ 002564  EFE0  F013         	goto	l559
  3099+                          	line	260
  3100+                          ;batchpcb26k20.c: 260: case 'N':
  3101+                          	
  3102+ 002568                     l565:		; BSR set to: ?
  3103+                          
  3104+                          	line	261
  3105+                          ;batchpcb26k20.c: 261: if ((line_len >= 13)&&(li
      +                          ne_len <= 14)) nexaTx(linep+2, settingsp->nexa_s
      +                          ends);
  3106+ 002568  0E0C               	movlw	(0Dh-1)
  3107+ 00256A  0102               	movlb	2	; () banked
  3108+ 00256C  0102               	movlb	2	; () banked
  3109+ 00256E  6536               	cpfsgt	((parseCmd@line_len))&0ffh
  3110+ 002570  EFBC  F012         	goto	u6701
  3111+ 002574  EFBE  F012         	goto	u6700
  3112+ 002578                     u6701:
  3113+ 002578  EF88  F012         	goto	l562
  3114+ 00257C                     u6700:
  3115+ 00257C  0E0F               	movlw	(0Fh)&0ffh
  3116+ 00257E  0102               	movlb	2	; () banked
  3117+ 002580  0102               	movlb	2	; () banked
  3118+ 002582  6136               	cpfslt	((parseCmd@line_len))&0ffh
  3119+ 002584  EFC6  F012         	goto	u6711
  3120+ 002588  EFC8  F012         	goto	u6710
  3121+ 00258C                     u6711:
  3122+ 00258C  EF88  F012         	goto	l562
  3123+ 002590                     u6710:
  3124+ 002590  0E0B               	movlw	low(0Bh)
  3125+ 002592  0102               	movlb	2	; () banked
  3126+ 002594  0102               	movlb	2	; () banked
  3127+ 002596  2537               	addwf	((parseCmd@settingsp))&0ffh,w
  3128+ 002598  6EE9               	movwf	c:fsr0l
  3129+ 00259A  0E00               	movlw	high(0Bh)
  3130+ 00259C  0102               	movlb	2	; () banked
  3131+ 00259E  0102               	movlb	2	; () banked
  3132+ 0025A0  2138               	addwfc	((parseCmd@settingsp+1))&0ffh,w
  3133+ 0025A2  6EEA               	movwf	1+c:fsr0l
  3134+ 0025A4  50EF               	movf	indf0,w
  3135+ 0025A6  0102               	movlb	2	; () banked
  3136+ 0025A8  0102               	movlb	2	; () banked
  3137+ 0025AA  6F3C               	movwf	(0+(?_nexaTx+02h))&0ffh
  3138  0025AC  0E02               	movlw	low(02h)
  3139  0025AE  0102               	movlb	2	; () banked
  3140  0025B0  0102               	movlb	2	; () banked
  3141  0025B2  2534               	addwf	((parseCmd@linep))&0ffh,w
  3142  0025B4  0102               	movlb	2	; () banked
  3143                           	
  3144  0025B6  0102               	movlb	2	; () banked
  3145  0025B8  6F3A               	movwf	((?_nexaTx))&0ffh
  3146  0025BA  0E00               	movlw	high(02h)
  3147  0025BC  0102               	movlb	2	; () banked
  3148  0025BE  0102               	movlb	2	; () banked
  3149  0025C0  2135               	addwfc	((parseCmd@linep+1))&0ffh,w
  3150  0025C2  0102               	movlb	2	; () banked
  3151  0025C4  6F3B               	movwf	1+((?_nexaTx))&0ffh
  3152  0025C6  ECD9  F008         	call	_nexaTx	;wreg free
  3153                           	
  3154  0025CA                     l566:		; BSR set to: ?
  3155                           
  3156                           	line	262
  3157                           ;batchpcb26k20.c: 262: break;
  3158  0025CA  EFE0  F013         	goto	l559
  3159                           	line	263
  3160                           ;batchpcb26k20.c: 263: case 'K':
  3161                           	
  3162  0025CE                     l567:		; BSR set to: ?
  3163                           
  3164                           	line	264
  3165                           ;batchpcb26k20.c: 264: if (line_len == 10) kangt
                                 haiTx(linep+2, settingsp->kangthai_sends);
  3166  0025CE  0102               	movlb	2	; () banked
  3167  0025D0  0102               	movlb	2	; () banked
  3168  0025D2  5136               	movf	((parseCmd@line_len))&0ffh,w
  3169  0025D4  0A0A               	xorlw	10
  3170                           
  3171  0025D6  A4D8               	btfss	status,2
  3172  0025D8  EFF0  F012         	goto	u6721
  3173  0025DC  EFF2  F012         	goto	u6720
  3174  0025E0                     u6721:
  3175  0025E0  EF88  F012         	goto	l562
  3176  0025E4                     u6720:
  3177  0025E4  0E0D               	movlw	low(0Dh)
  3178  0025E6  0102               	movlb	2	; () banked
  3179  0025E8  0102               	movlb	2	; () banked
  3180  0025EA  2537               	addwf	((parseCmd@settingsp))&0ffh,w
  3181  0025EC  6EE9               	movwf	c:fsr0l
  3182  0025EE  0E00               	movlw	high(0Dh)
  3183  0025F0  0102               	movlb	2	; () banked
  3184  0025F2  0102               	movlb	2	; () banked
  3185  0025F4  2138               	addwfc	((parseCmd@settingsp+1))&0ffh,w
  3186  0025F6  6EEA               	movwf	1+c:fsr0l
  3187  0025F8  50EF               	movf	indf0,w
  3188  0025FA  0102               	movlb	2	; () banked
  3189  0025FC  0102               	movlb	2	; () banked
  3190  0025FE  6F3C               	movwf	(0+(?_kangthaiTx+02h))&0ffh
  3191  002600  0E02               	movlw	low(02h)
  3192  002602  0102               	movlb	2	; () banked
  3193  002604  0102               	movlb	2	; () banked
  3194  002606  2534               	addwf	((parseCmd@linep))&0ffh,w
  3195  002608  0102               	movlb	2	; () banked
  3196                           	
  3197  00260A  0102               	movlb	2	; () banked
  3198  00260C  6F3A               	movwf	((?_kangthaiTx))&0ffh
  3199  00260E  0E00               	movlw	high(02h)
  3200  002610  0102               	movlb	2	; () banked
  3201  002612  0102               	movlb	2	; () banked
  3202  002614  2135               	addwfc	((parseCmd@linep+1))&0ffh,w
  3203  002616  0102               	movlb	2	; () banked
  3204  002618  6F3B               	movwf	1+((?_kangthaiTx))&0ffh
  3205  00261A  EC21  F00F         	call	_kangthaiTx	;wreg free
  3206                           	
  3207  00261E                     l568:		; BSR set to: ?
  3208                           
  3209                           	line	265
  3210                           ;batchpcb26k20.c: 265: break;
  3211  00261E  EFE0  F013         	goto	l559
  3212                           	line	266
  3213                           ;batchpcb26k20.c: 266: case 'B':
  3214                           	
  3215  002622                     l569:		; BSR set to: ?
  3216                           
  3217                           	line	267
  3218                           ;batchpcb26k20.c: 267: if (line_len >= 4){
  3219  002622  0E03               	movlw	(04h-1)
  3220  002624  0102               	movlb	2	; () banked
  3221  002626  0102               	movlb	2	; () banked
  3222  002628  6536               	cpfsgt	((parseCmd@line_len))&0ffh
  3223  00262A  EF19  F013         	goto	u6731
  3224  00262E  EF1B  F013         	goto	u6730
  3225  002632                     u6731:
  3226  002632  EF88  F012         	goto	l562
  3227  002636                     u6730:
  3228                           	line	268
  3229                           ;batchpcb26k20.c: 268: line_len -= 3;
  3230  002636  0E03               	movlw	(03h)&0ffh
  3231  002638  0102               	movlb	2	; () banked
  3232  00263A  0102               	movlb	2	; () banked
  3233  00263C  5F36               	subwf	((parseCmd@line_len))&0ffh
  3234                           	line	269
  3235                           ;batchpcb26k20.c: 269: if(settingsp->bmc_en_hex)
                                  bmcConvertHex(linep+2, &line_len);
  3236  00263E  0E03               	movlw	low(03h)
  3237  002640  0102               	movlb	2	; () banked
  3238  002642  0102               	movlb	2	; () banked
  3239  002644  2537               	addwf	((parseCmd@settingsp))&0ffh,w
  3240  002646  6EE9               	movwf	c:fsr0l
  3241  002648  0E00               	movlw	high(03h)
  3242  00264A  0102               	movlb	2	; () banked
  3243  00264C  0102               	movlb	2	; () banked
  3244  00264E  2138               	addwfc	((parseCmd@settingsp+1))&0ffh,w
  3245  002650  6EEA               	movwf	1+c:fsr0l
  3246  002652  50EF               	movf	indf0,w
  3247  002654  B4D8               	btfsc	status,2
  3248  002656  EF2F  F013         	goto	u6741
  3249  00265A  EF31  F013         	goto	u6740
  3250  00265E                     u6741:
  3251  00265E  EF49  F013         	goto	l571
  3252  002662                     u6740:
  3253  002662  0102               	movlb	2	; () banked
  3254  002664  0E36               	movlw	low(parseCmd@line_len)
  3255  002666  0102               	movlb	2	; () banked
  3256  002668  0102               	movlb	2	; () banked
  3257  00266A  6F3C               	movwf	(0+(?_bmcConvertHex+02h))&0ffh
  3258  00266C  0102               	movlb	2	; () banked
  3259  00266E  0E02               	movlw	high(parseCmd@line_len)
  3260  002670  0102               	movlb	2	; () banked
  3261  002672  6F3D               	movwf	(1+(?_bmcConvertHex+02h))&0ffh
  3262  002674  0E02               	movlw	low(02h)
  3263  002676  0102               	movlb	2	; () banked
  3264  002678  0102               	movlb	2	; () banked
  3265  00267A  2534               	addwf	((parseCmd@linep))&0ffh,w
  3266  00267C  0102               	movlb	2	; () banked
  3267                           	
  3268  00267E  0102               	movlb	2	; () banked
  3269  002680  6F3A               	movwf	((?_bmcConvertHex))&0ffh
  3270  002682  0E00               	movlw	high(02h)
  3271  002684  0102               	movlb	2	; () banked
  3272  002686  0102               	movlb	2	; () banked
  3273  002688  2135               	addwfc	((parseCmd@linep+1))&0ffh,w
  3274  00268A  0102               	movlb	2	; () banked
  3275  00268C  6F3B               	movwf	1+((?_bmcConvertHex))&0ffh
  3276  00268E  EC73  F022         	call	_bmcConvertHex	;wreg free
  3277                           	
  3278  002692                     l571:		; BSR set to: ?
  3279                           
  3280                           	line	270
  3281                           ;batchpcb26k20.c: 270: bmcTx(linep+2, line_len, 
                                 settingsp->bmc_hops, settingsp->bmc_sends);
  3282  002692  0E02               	movlw	low(02h)
  3283  002694  0102               	movlb	2	; () banked
  3284  002696  0102               	movlb	2	; () banked
  3285  002698  2537               	addwf	((parseCmd@settingsp))&0ffh,w
  3286  00269A  6EE9               	movwf	c:fsr0l
  3287  00269C  0E00               	movlw	high(02h)
  3288  00269E  0102               	movlb	2	; () banked
  3289  0026A0  0102               	movlb	2	; () banked
  3290  0026A2  2138               	addwfc	((parseCmd@settingsp+1))&0ffh,w
  3291  0026A4  6EEA               	movwf	1+c:fsr0l
  3292  0026A6  50EF               	movf	indf0,w
  3293  0026A8  0102               	movlb	2	; () banked
  3294  0026AA  0102               	movlb	2	; () banked
  3295  0026AC  6F4A               	movwf	(0+(?_bmcTx+04h))&0ffh
  3296  0026AE  0E05               	movlw	low(05h)
  3297  0026B0  0102               	movlb	2	; () banked
  3298  0026B2  0102               	movlb	2	; () banked
  3299  0026B4  2537               	addwf	((parseCmd@settingsp))&0ffh,w
  3300  0026B6  6EE9               	movwf	c:fsr0l
  3301  0026B8  0E00               	movlw	high(05h)
  3302  0026BA  0102               	movlb	2	; () banked
  3303  0026BC  0102               	movlb	2	; () banked
  3304  0026BE  2138               	addwfc	((parseCmd@settingsp+1))&0ffh,w
  3305  0026C0  6EEA               	movwf	1+c:fsr0l
  3306  0026C2  50EF               	movf	indf0,w
  3307  0026C4  0102               	movlb	2	; () banked
  3308  0026C6  0102               	movlb	2	; () banked
  3309  0026C8  6F49               	movwf	(0+(?_bmcTx+03h))&0ffh
  3310  0026CA  C236  F248         	movff	(parseCmd@line_len),0+(?_bmcTx+02h)
  3311  0026CE  0E02               	movlw	low(02h)
  3312  0026D0  0102               	movlb	2	; () banked
  3313  0026D2  0102               	movlb	2	; () banked
  3314  0026D4  2534               	addwf	((parseCmd@linep))&0ffh,w
  3315  0026D6  0102               	movlb	2	; () banked
  3316                           	
  3317  0026D8  0102               	movlb	2	; () banked
  3318  0026DA  6F46               	movwf	((?_bmcTx))&0ffh
  3319  0026DC  0E00               	movlw	high(02h)
  3320  0026DE  0102               	movlb	2	; () banked
  3321  0026E0  0102               	movlb	2	; () banked
  3322  0026E2  2135               	addwfc	((parseCmd@linep+1))&0ffh,w
  3323  0026E4  0102               	movlb	2	; () banked
  3324  0026E6  6F47               	movwf	1+((?_bmcTx))&0ffh
  3325  0026E8  EC10  F01C         	call	_bmcTx	;wreg free
  3326                           	line	271
  3327                           	
  3328  0026EC                     l570:		; BSR set to: ?
  3329                           
  3330                           	line	272
  3331                           ;batchpcb26k20.c: 271: }
  3332                           ;batchpcb26k20.c: 272: break;
  3333  0026EC  EFE0  F013         	goto	l559
  3334                           	line	273
  3335                           ;batchpcb26k20.c: 273: case 'P':
  3336                           	
  3337  0026F0                     l572:		; BSR set to: ?
  3338                           
  3339                           	line	274
  3340                           ;batchpcb26k20.c: 274: sPuts("MultiTRX HWID 1.1,
                                  FWID 1.2 - skagmo.com");
  3341  0026F0  0E5E               	movlw	low(STR_50)
  3342  0026F2  0102               	movlb	2	; () banked
  3343  0026F4  0102               	movlb	2	; () banked
  3344  0026F6  6F5E               	movwf	((?_sPuts))&0ffh
  3345  0026F8  0E7E               	movlw	high(STR_50)
  3346  0026FA  0102               	movlb	2	; () banked
  3347  0026FC  6F5F               	movwf	((?_sPuts+1))&0ffh
  3348  0026FE  EC9E  F026         	call	_sPuts	;wreg free
  3349                           	line	275
  3350                           ;batchpcb26k20.c: 275: sPut(10);
  3351  002702  0102               	movlb	2	; () banked
  3352  002704  6F39               	movwf	(??_parseCmd+0+0)&0ffh
  3353  002706  0E0A               	movlw	low(0Ah)
  3354  002708  0102               	movlb	2	; () banked
  3355  00270A  0102               	movlb	2	; () banked
  3356  00270C  6F60               	movwf	((?_sPut))&0ffh
  3357  00270E  0102               	movlb	2	; () banked
  3358  002710  5139               	movf	(??_parseCmd+0+0)&0ffh,w
  3359  002712  ECDF  F025         	call	_sPut	;wreg free
  3360                           	line	276
  3361                           ;batchpcb26k20.c: 276: break;
  3362  002716  EFE0  F013         	goto	l559
  3363                           	line	277
  3364                           ;batchpcb26k20.c: 277: case 'S':
  3365                           	
  3366  00271A                     l573:		; BSR set to: ?
  3367                           
  3368                           	line	278
  3369                           ;batchpcb26k20.c: 278: parseSettings(linep+2, li
                                 ne_len-2, settingsp);
  3370  00271A  C237  F23D         	movff	(parseCmd@settingsp),0+(?_parseSettings+0
                                 3h)
  3371  00271E  C238  F23E         	movff	(parseCmd@settingsp+1),1+(?_parseSettings
                                 +03h)
  3372  002722  0102               	movlb	2	; () banked
  3373  002724  0102               	movlb	2	; () banked
  3374  002726  5136               	movf	((parseCmd@line_len))&0ffh,w
  3375  002728  0FFE               	addlw	low(0FEh)
  3376  00272A  0102               	movlb	2	; () banked
  3377  00272C  0102               	movlb	2	; () banked
  3378  00272E  6F3C               	movwf	(0+(?_parseSettings+02h))&0ffh
  3379  002730  0E02               	movlw	low(02h)
  3380  002732  0102               	movlb	2	; () banked
  3381  002734  0102               	movlb	2	; () banked
  3382  002736  2534               	addwf	((parseCmd@linep))&0ffh,w
  3383  002738  0102               	movlb	2	; () banked
  3384                           	
  3385  00273A  0102               	movlb	2	; () banked
  3386  00273C  6F3A               	movwf	((?_parseSettings))&0ffh
  3387  00273E  0E00               	movlw	high(02h)
  3388  002740  0102               	movlb	2	; () banked
  3389  002742  0102               	movlb	2	; () banked
  3390  002744  2135               	addwfc	((parseCmd@linep+1))&0ffh,w
  3391  002746  0102               	movlb	2	; () banked
  3392  002748  6F3B               	movwf	1+((?_parseSettings))&0ffh
  3393  00274A  EC1D  F000         	call	_parseSettings	;wreg free
  3394                           	line	279
  3395                           ;batchpcb26k20.c: 279: break;
  3396  00274E  EFE0  F013         	goto	l559
  3397                           	line	280
  3398                           ;batchpcb26k20.c: 280: case 'X':
  3399                           	
  3400  002752                     l574:		; BSR set to: ?
  3401                           
  3402                           	line	281
  3403                           # 281 "D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\batchpcb26k20.c"
  3404  002752  00FF                reset ;#
  3405                                   psect   text5
  3406                           	line	282
  3407                           ;batchpcb26k20.c: 281: asm(" reset");
  3408                           ;batchpcb26k20.c: 282: break;
  3409  002754  EFE0  F013         	goto	l559
  3410                           	line	283
  3411                           ;batchpcb26k20.c: 283: case '!':
  3412                           	
  3413  002758                     l575:		; BSR set to: ?
  3414                           
  3415                           	line	284
  3416                           ;batchpcb26k20.c: 284: startTransmit();
  3417  002758  ECFF  F028         	call	_startTransmit	;wreg free
  3418                           	line	285
  3419                           ;batchpcb26k20.c: 285: LATB2 = 1;
  3420  00275C  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  3421                           	line	286
  3422                           ;batchpcb26k20.c: 286: delayms(5000);
  3423  00275E  0E88               	movlw	low(01388h)
  3424  002760  0102               	movlb	2	; () banked
  3425  002762  0102               	movlb	2	; () banked
  3426  002764  6F54               	movwf	((?_delayms))&0ffh
  3427  002766  0E13               	movlw	high(01388h)
  3428  002768  0102               	movlb	2	; () banked
  3429  00276A  6F55               	movwf	((?_delayms+1))&0ffh
  3430  00276C  EC7A  F027         	call	_delayms	;wreg free
  3431                           	line	287
  3432                           ;batchpcb26k20.c: 287: stopTransmit();
  3433  002770  EC2B  F028         	call	_stopTransmit	;wreg free
  3434                           	line	288
  3435                           ;batchpcb26k20.c: 288: break;
  3436  002774  EFE0  F013         	goto	l559
  3437                           	line	253
  3438                           	
  3439  002778                     l560:		; BSR set to: ?
  3440                           
  3441  002778  0E01               	movlw	low(01h)
  3442  00277A  0102               	movlb	2	; () banked
  3443  00277C  0102               	movlb	2	; () banked
  3444  00277E  2534               	addwf	((parseCmd@linep))&0ffh,w
  3445  002780  6EE9               	movwf	c:fsr0l
  3446  002782  0E00               	movlw	high(01h)
  3447  002784  0102               	movlb	2	; () banked
  3448  002786  0102               	movlb	2	; () banked
  3449  002788  2135               	addwfc	((parseCmd@linep+1))&0ffh,w
  3450  00278A  6EEA               	movwf	1+c:fsr0l
  3451  00278C  50EF               	movf	indf0,w
  3452  00278E  0A21               	xorlw	33 ^ 0
  3453  002790  E0E3               	bz	l575
  3454  002792  0A63               	xorlw	66 ^ 33
  3455  002794  E101 D745          	bz	l569
  3456  002798  0A05               	xorlw	71 ^ 66
  3457  00279A  E101 D691          	bz	l561
  3458  00279E  0A0C               	xorlw	75 ^ 71
  3459  0027A0  E101 D715          	bz	l567
  3460  0027A4  0A05               	xorlw	78 ^ 75
  3461  0027A6  E101 D6DF          	bz	l565
  3462  0027AA  0A1E               	xorlw	80 ^ 78
  3463  0027AC  E0A1               	bz	l572
  3464  0027AE  0A03               	xorlw	83 ^ 80
  3465  0027B0  E0B4               	bz	l573
  3466  0027B2  0A04               	xorlw	87 ^ 83
  3467  0027B4  E101 D6AE          	bz	l563
  3468  0027B8  0A0F               	xorlw	88 ^ 87
  3469  0027BA  E0CB               	bz	l574
  3470  0027BC  EFE0  F013         	goto	l559
  3471                           
  3472                           	line	289
  3473                           	
  3474  0027C0                     l559:		; BSR set to: ?
  3475                           
  3476                           	line	290
  3477                           ;batchpcb26k20.c: 290: }
  3478  0027C0                     l558:
  3479                           			; BSR set to: ?
  3480                           
  3481  0027C0  0012               	return
  3482                           	opt stack 0
  3483                           GLOBAL __end_of_parseCmd
  3484  0027C2                     	__end_of_parseCmd:
  3485                           	FNSIZE	_parseCmd,1,5
  3486                           ; =============== function _parseCmd ends ======
                                 ======
  3487                           
  3488                           	signat	_parseCmd,12408
  3489                           	global	_sInWaiting
  3490                           	global	??_sInWaiting
  3491                           	global	?_sInWaiting
  3492                           
  3493                           ; *************** function _sInWaiting *********
                                 ********
  3494                           ; Defined at:
  3495                           ;		line 19 in file "D:\Hobby\Prosjekter\MultiTRX
                                 \Firmware\FW1.2\uartring.c"
  3496                           ; Parameters:
  3497                           ;		None
  3498                           ; Auto variables:
  3499                           ;		None
  3500                           ; Return value:
  3501                           ;		type: unsigned char 
  3502                           ;		size: 1
  3503                           ; Registers used:
  3504                           ;		wreg, status,2
  3505                           ; Tracked objects:
  3506                           ;		On entry : 0/0
  3507                           ;		On exit  : 0/0
  3508                           ;		Unchanged: 0/0
  3509                           ; Data sizes:
  3510                           ;		Autos:    0
  3511                           ;		Params:   0
  3512                           ;		Temp:     0
  3513                           ;		Total:    0
  3514                           ; This function calls:
  3515                           ;		Nothing
  3516                           ; This function is called by:
  3517                           ;		_main
  3518                           ; This function uses a non-reentrant model
  3519                           ; 
  3520                                   psect   text6,class=CODE,space=0,reloc=2
  3521                           
  3522                           	opt lm
  3523                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\uartring.c"
  3524                           	line	19
  3525  000000                     	__size_of_sInWaiting	equ	__end_of_sInWaiting-_s
                                 InWaiting
  3526                           ;uartring.c: 19: char sInWaiting(void){
  3527                           	
  3528  005110                     _sInWaiting:		; BSR set to: ?
  3529                           
  3530                           	opt stack 29
  3531                           	line	20
  3532  005110  A2AB               	btfss	c:(32089/8),(32089)&7	;volatile
  3533  005112  EF8D  F028         	goto	u8441
  3534  005116  EF8F  F028         	goto	u8440
  3535  00511A                     u8441:
  3536  00511A  EF94  F028         	goto	l217
  3537  00511E                     u8440:
  3538                           	line	21
  3539                           ;uartring.c: 21: CREN = 0;
  3540  00511E  98AB               	bcf	c:(32092/8),(32092)&7	;volatile
  3541                           	line	22
  3542                           ;uartring.c: 22: CREN = 1;
  3543  005120  88AB               	bsf	c:(32092/8),(32092)&7	;volatile
  3544                           	line	23
  3545                           ;uartring.c: 23: return 0;
  3546  005122  0E00               	movlw	(0)&0ffh
  3547  005124  EFA4  F028         	goto	l216
  3548                           	line	24
  3549                           	
  3550  005128                     l217:		; BSR set to: ?
  3551                           
  3552                           	line	25
  3553                           ;uartring.c: 24: }
  3554                           ;uartring.c: 25: return (rxip!=rxop);
  3555  005128  0101               	movlb	1	; () banked
  3556  00512A  0101               	movlb	1	; () banked
  3557  00512C  513C               	movf	((316))&0ffh,w	;volatile
  3558  00512E  0101               	movlb	1	; () banked
  3559  005130  0101               	movlb	1	; () banked
  3560  005132  633B               	cpfseq	((315))&0ffh	;volatile
  3561  005134  EF9E  F028         	goto	u8451
  3562  005138  EFA1  F028         	goto	u8450
  3563  00513C                     u8451:
  3564  00513C  0E01               	movlw	1
  3565  00513E  EFA2  F028         	goto	u8456
  3566  005142                     u8450:
  3567  005142  0E00               	movlw	0
  3568  005144                     u8456:
  3569  005144  EFA4  F028         	goto	l216
  3570                           	line	26
  3571                           ;uartring.c: 26: }
  3572  005148                     l216:
  3573                           			; BSR set to: ?
  3574                           
  3575  005148  0012               	return
  3576                           	opt stack 0
  3577                           GLOBAL __end_of_sInWaiting
  3578  00514A                     	__end_of_sInWaiting:
  3579                           	FNSIZE	_sInWaiting,0,0
  3580                           ; =============== function _sInWaiting ends ====
                                 ========
  3581                           
  3582                           	signat	_sInWaiting,89
  3583                           	global	_bmcDecode
  3584                           	global	??_bmcDecode
  3585                           	global	?_bmcDecode
  3586                           
  3587                           ; *************** function _bmcDecode **********
                                 *******
  3588                           ; Defined at:
  3589                           ;		line 71 in file "D:\Hobby\Prosjekter\MultiTRX
                                 \Firmware\FW1.2\bmc.h"
  3590                           ; Parameters:
  3591                           ;		rf_pulse_len   size:   1offs:   0	type: unsig
                                 ned char 
  3592                           ;		settingsp      size:   2offs:   1	type: PTR s
                                 truct .; Largest target is 14
  3593                           ;		 -> main@settings(14), 
  3594                           ; Auto variables:
  3595                           ;		checksum    	       	type: unsigned char 
  3596                           ;		j           	       	type: unsigned char 
  3597                           ; Return value:
  3598                           ;		type: void 
  3599                           ;		size: 0
  3600                           ; Registers used:
  3601                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  3602                           ; Tracked objects:
  3603                           ;		On entry : 0/0
  3604                           ;		On exit  : 0/0
  3605                           ;		Unchanged: 0/0
  3606                           ; Data sizes:
  3607                           ;		Autos:    2
  3608                           ;		Params:   3
  3609                           ;		Temp:     5
  3610                           ;		Total:   10
  3611                           ; This function calls:
  3612                           ;		_bmcPrint
  3613                           ;		_bmcRepeat
  3614                           ; This function is called by:
  3615                           ;		_main
  3616                           ; This function uses a non-reentrant model
  3617                           ; 
  3618                                   psect   text7,class=CODE,space=0,reloc=2
  3619                           
  3620                           	opt lm
  3621                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\bmc.h"
  3622                           	line	71
  3623  000000                     	__size_of_bmcDecode	equ	__end_of_bmcDecode-_bmc
                                 Decode
  3624                           ;bmc.h: 71: void bmcDecode(char rf_pulse_length,
                                  settings_t* settingsp){
  3625                           	
  3626  001AB6                     _bmcDecode:		; BSR set to: ?
  3627                           
  3628                           	opt stack 29
  3629                           	line	91
  3630  001AB6  0E14               	movlw	(015h-1)
  3631  001AB8  0102               	movlb	2	; () banked
  3632  001ABA  0102               	movlb	2	; () banked
  3633  001ABC  6534               	cpfsgt	((bmcDecode@rf_pulse_length))&0ffh
  3634  001ABE  EF63  F00D         	goto	u6851
  3635  001AC2  EF65  F00D         	goto	u6850
  3636  001AC6                     u6851:
  3637  001AC6  EF8E  F00D         	goto	l328
  3638  001ACA                     u6850:
  3639  001ACA  0E28               	movlw	(028h)&0ffh
  3640  001ACC  0102               	movlb	2	; () banked
  3641  001ACE  0102               	movlb	2	; () banked
  3642  001AD0  6134               	cpfslt	((bmcDecode@rf_pulse_length))&0ffh
  3643  001AD2  EF6D  F00D         	goto	u6861
  3644  001AD6  EF6F  F00D         	goto	u6860
  3645  001ADA                     u6861:
  3646  001ADA  EF8E  F00D         	goto	l328
  3647  001ADE                     u6860:
  3648                           	line	92
  3649                           ;bmc.h: 92: if(thebit == 4) thebit = 1;
  3650  001ADE  0101               	movlb	1	; () banked
  3651  001AE0  0101               	movlb	1	; () banked
  3652  001AE2  512D               	movf	((301))&0ffh,w
  3653  001AE4  0A04               	xorlw	4
  3654                           
  3655  001AE6  A4D8               	btfss	status,2
  3656  001AE8  EF78  F00D         	goto	u6871
  3657  001AEC  EF7A  F00D         	goto	u6870
  3658  001AF0                     u6871:
  3659  001AF0  EF84  F00D         	goto	l329
  3660  001AF4                     u6870:
  3661  001AF4  0102               	movlb	2	; () banked
  3662  001AF6  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3663  001AF8  0E01               	movlw	low(01h)
  3664  001AFA  0101               	movlb	1	; () banked
  3665  001AFC  0101               	movlb	1	; () banked
  3666  001AFE  6F2D               	movwf	((301))&0ffh
  3667  001B00  0102               	movlb	2	; () banked
  3668  001B02  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3669  001B04  EF8C  F00D         	goto	l330
  3670                           	line	93
  3671                           	
  3672  001B08                     l329:		; BSR set to: ?
  3673                           
  3674                           ;bmc.h: 93: else thebit = 4;
  3675  001B08  0102               	movlb	2	; () banked
  3676  001B0A  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3677  001B0C  0E04               	movlw	low(04h)
  3678  001B0E  0101               	movlb	1	; () banked
  3679  001B10  0101               	movlb	1	; () banked
  3680  001B12  6F2D               	movwf	((301))&0ffh
  3681  001B14  0102               	movlb	2	; () banked
  3682  001B16  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3683                           	
  3684  001B18                     l330:		; BSR set to: ?
  3685                           
  3686                           	line	94
  3687                           ;bmc.h: 94: }
  3688  001B18  EFB4  F00D         	goto	l331
  3689                           	line	95
  3690                           	
  3691  001B1C                     l328:		; BSR set to: ?
  3692                           
  3693                           ;bmc.h: 95: else if((rf_pulse_length > 50)&&(rf_
                                 pulse_length < 70)) thebit = 0;
  3694  001B1C  0E32               	movlw	(033h-1)
  3695  001B1E  0102               	movlb	2	; () banked
  3696  001B20  0102               	movlb	2	; () banked
  3697  001B22  6534               	cpfsgt	((bmcDecode@rf_pulse_length))&0ffh
  3698  001B24  EF96  F00D         	goto	u6881
  3699  001B28  EF98  F00D         	goto	u6880
  3700  001B2C                     u6881:
  3701  001B2C  EFAC  F00D         	goto	l332
  3702  001B30                     u6880:
  3703  001B30  0E46               	movlw	(046h)&0ffh
  3704  001B32  0102               	movlb	2	; () banked
  3705  001B34  0102               	movlb	2	; () banked
  3706  001B36  6134               	cpfslt	((bmcDecode@rf_pulse_length))&0ffh
  3707  001B38  EFA0  F00D         	goto	u6891
  3708  001B3C  EFA2  F00D         	goto	u6890
  3709  001B40                     u6891:
  3710  001B40  EFAC  F00D         	goto	l332
  3711  001B44                     u6890:
  3712  001B44  0102               	movlb	2	; () banked
  3713  001B46  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3714  001B48  0E00               	movlw	low(0)
  3715  001B4A  0101               	movlb	1	; () banked
  3716  001B4C  0101               	movlb	1	; () banked
  3717  001B4E  6F2D               	movwf	((301))&0ffh
  3718  001B50  0102               	movlb	2	; () banked
  3719  001B52  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3720  001B54  EFB4  F00D         	goto	l331
  3721                           	line	96
  3722                           	
  3723  001B58                     l332:		; BSR set to: ?
  3724                           
  3725                           ;bmc.h: 96: else thebit = 2;
  3726  001B58  0102               	movlb	2	; () banked
  3727  001B5A  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3728  001B5C  0E02               	movlw	low(02h)
  3729  001B5E  0101               	movlb	1	; () banked
  3730  001B60  0101               	movlb	1	; () banked
  3731  001B62  6F2D               	movwf	((301))&0ffh
  3732  001B64  0102               	movlb	2	; () banked
  3733  001B66  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3734                           	
  3735  001B68                     l333:		; BSR set to: ?
  3736                           
  3737                           	
  3738  001B68                     l331:		; BSR set to: ?
  3739                           
  3740                           	line	98
  3741                           ;bmc.h: 98: if(thebit == 4) return;
  3742  001B68  0101               	movlb	1	; () banked
  3743  001B6A  0101               	movlb	1	; () banked
  3744  001B6C  512D               	movf	((301))&0ffh,w
  3745  001B6E  0A04               	xorlw	4
  3746                           
  3747  001B70  A4D8               	btfss	status,2
  3748  001B72  EFBD  F00D         	goto	u6901
  3749  001B76  EFBF  F00D         	goto	u6900
  3750  001B7A                     u6901:
  3751  001B7A  EFC1  F00D         	goto	l334
  3752  001B7E                     u6900:
  3753  001B7E  EF20  F00F         	goto	l327
  3754                           	
  3755  001B82                     l334:		; BSR set to: ?
  3756                           
  3757                           	line	99
  3758                           ;bmc.h: 99: if (thebit == 2){
  3759  001B82  0101               	movlb	1	; () banked
  3760  001B84  0101               	movlb	1	; () banked
  3761  001B86  512D               	movf	((301))&0ffh,w
  3762  001B88  0A02               	xorlw	2
  3763                           
  3764  001B8A  A4D8               	btfss	status,2
  3765  001B8C  EFCA  F00D         	goto	u6911
  3766  001B90  EFCC  F00D         	goto	u6910
  3767  001B94                     u6911:
  3768  001B94  EFDE  F00D         	goto	l335
  3769  001B98                     u6910:
  3770                           	line	100
  3771                           ;bmc.h: 100: nrbits = 0;
  3772  001B98  0102               	movlb	2	; () banked
  3773  001B9A  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3774  001B9C  0E00               	movlw	low(0)
  3775  001B9E  0101               	movlb	1	; () banked
  3776  001BA0  0101               	movlb	1	; () banked
  3777  001BA2  6F40               	movwf	((320))&0ffh
  3778  001BA4  0102               	movlb	2	; () banked
  3779  001BA6  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3780                           	line	101
  3781                           ;bmc.h: 101: state = 0;
  3782  001BA8  0102               	movlb	2	; () banked
  3783  001BAA  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3784  001BAC  0E00               	movlw	low(0)
  3785  001BAE  0101               	movlb	1	; () banked
  3786  001BB0  0101               	movlb	1	; () banked
  3787  001BB2  6F44               	movwf	((324))&0ffh
  3788  001BB4  0102               	movlb	2	; () banked
  3789  001BB6  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3790                           	line	102
  3791                           ;bmc.h: 102: return;
  3792  001BB8  EF20  F00F         	goto	l327
  3793                           	line	103
  3794                           	
  3795  001BBC                     l335:		; BSR set to: ?
  3796                           
  3797                           	line	104
  3798                           ;bmc.h: 103: }
  3799                           ;bmc.h: 104: bits <<= 1;
  3800  001BBC  0101               	movlb	1	; () banked
  3801  001BBE  90D8               	bcf status,0
  3802  001BC0  373A               	rlcf	((314))&0ffh
  3803                           
  3804                           	line	105
  3805                           ;bmc.h: 105: bits |= thebit;
  3806  001BC2  0101               	movlb	1	; () banked
  3807  001BC4  0101               	movlb	1	; () banked
  3808  001BC6  512D               	movf	((301))&0ffh,w
  3809  001BC8  0101               	movlb	1	; () banked
  3810  001BCA  0101               	movlb	1	; () banked
  3811  001BCC  133A               	iorwf	((314))&0ffh
  3812                           	line	106
  3813                           ;bmc.h: 106: nrbits++;
  3814  001BCE  0101               	movlb	1	; () banked
  3815  001BD0  0101               	movlb	1	; () banked
  3816  001BD2  2B40               	incf	((320))&0ffh
  3817                           	line	107
  3818                           ;bmc.h: 107: switch(state){
  3819  001BD4  EF15  F00F         	goto	l337
  3820                           	line	108
  3821                           ;bmc.h: 108: case 0:
  3822                           	
  3823  001BD8                     l338:		; BSR set to: ?
  3824                           
  3825                           	line	109
  3826                           ;bmc.h: 109: if ((bits == 'S')&&(nrbits >= 8)){
  3827  001BD8  0101               	movlb	1	; () banked
  3828  001BDA  0101               	movlb	1	; () banked
  3829  001BDC  513A               	movf	((314))&0ffh,w
  3830  001BDE  0A53               	xorlw	83
  3831                           
  3832  001BE0  A4D8               	btfss	status,2
  3833  001BE2  EFF5  F00D         	goto	u6921
  3834  001BE6  EFF7  F00D         	goto	u6920
  3835  001BEA                     u6921:
  3836  001BEA  EF13  F00E         	goto	l339
  3837  001BEE                     u6920:
  3838  001BEE  0E07               	movlw	(08h-1)
  3839  001BF0  0101               	movlb	1	; () banked
  3840  001BF2  0101               	movlb	1	; () banked
  3841  001BF4  6540               	cpfsgt	((320))&0ffh
  3842  001BF6  EFFF  F00D         	goto	u6931
  3843  001BFA  EF01  F00E         	goto	u6930
  3844  001BFE                     u6931:
  3845  001BFE  EF13  F00E         	goto	l339
  3846  001C02                     u6930:
  3847                           	line	110
  3848                           ;bmc.h: 110: nrbytes = nrbits = 0;
  3849  001C02  0102               	movlb	2	; () banked
  3850  001C04  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3851  001C06  0E00               	movlw	low(0)
  3852  001C08  0101               	movlb	1	; () banked
  3853  001C0A  0101               	movlb	1	; () banked
  3854  001C0C  6F40               	movwf	((320))&0ffh
  3855  001C0E  0102               	movlb	2	; () banked
  3856  001C10  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3857  001C12  C140 F124          	movff	(320),(292)
  3858                           	line	111
  3859                           ;bmc.h: 111: state = 1;
  3860  001C16  0102               	movlb	2	; () banked
  3861  001C18  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3862  001C1A  0E01               	movlw	low(01h)
  3863  001C1C  0101               	movlb	1	; () banked
  3864  001C1E  0101               	movlb	1	; () banked
  3865  001C20  6F44               	movwf	((324))&0ffh
  3866  001C22  0102               	movlb	2	; () banked
  3867  001C24  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3868                           	line	112
  3869                           	
  3870  001C26                     l339:		; BSR set to: ?
  3871                           
  3872                           	line	113
  3873                           ;bmc.h: 112: }
  3874                           ;bmc.h: 113: break;
  3875  001C26  EF20  F00F         	goto	l336
  3876                           	line	114
  3877                           ;bmc.h: 114: case 1:
  3878                           	
  3879  001C2A                     l340:		; BSR set to: ?
  3880                           
  3881                           	line	115
  3882                           ;bmc.h: 115: if(nrbits == 8){
  3883  001C2A  0101               	movlb	1	; () banked
  3884  001C2C  0101               	movlb	1	; () banked
  3885  001C2E  5140               	movf	((320))&0ffh,w
  3886  001C30  0A08               	xorlw	8
  3887                           
  3888  001C32  A4D8               	btfss	status,2
  3889  001C34  EF1E  F00E         	goto	u6941
  3890  001C38  EF20  F00E         	goto	u6940
  3891  001C3C                     u6941:
  3892  001C3C  EF13  F00E         	goto	l339
  3893  001C40                     u6940:
  3894                           	line	116
  3895                           ;bmc.h: 116: if ((nrbytes != 0)||(bits != 'S')){
  3896  001C40  0101               	movlb	1	; () banked
  3897  001C42  0101               	movlb	1	; () banked
  3898  001C44  6724               	tstfsz	((292))&0ffh
  3899  001C46  EF27  F00E         	goto	u6951
  3900  001C4A  EF29  F00E         	goto	u6950
  3901  001C4E                     u6951:
  3902  001C4E  EF34  F00E         	goto	l600000362
  3903  001C52                     u6950:
  3904  001C52  0101               	movlb	1	; () banked
  3905  001C54  0101               	movlb	1	; () banked
  3906  001C56  513A               	movf	((314))&0ffh,w
  3907  001C58  0A53               	xorlw	83
  3908                           
  3909  001C5A  B4D8               	btfsc	status,2
  3910  001C5C  EF32  F00E         	goto	u6961
  3911  001C60  EF34  F00E         	goto	u6960
  3912  001C64                     u6961:
  3913  001C64  EF0B  F00F         	goto	l342
  3914  001C68                     u6960:
  3915                           	
  3916  001C68                     l600000362:		; BSR set to: ?
  3917                           
  3918                           	line	117
  3919  001C68  0101               	movlb	1	; () banked
  3920  001C6A  0E00               	movlw	low(256)
  3921  001C6C  0101               	movlb	1	; () banked
  3922  001C6E  0101               	movlb	1	; () banked
  3923  001C70  2524               	addwf	((292))&0ffh,w
  3924  001C72  6EE9               	movwf	c:fsr0l
  3925  001C74  6AEA               	clrf	1+c:fsr0l
  3926  001C76  0101               	movlb	1	; () banked
  3927  001C78  0E01               	movlw	high(256)
  3928  001C7A  22EA               	addwfc	1+c:fsr0l
  3929  001C7C  0101               	movlb	1	; () banked
  3930  001C7E  C13A FFEF          	movff	(314),indf0
  3931                           
  3932                           ;bmc.h: 117: bytes[nrbytes++] = bits;
  3933  001C82  0101               	movlb	1	; () banked
  3934  001C84  0101               	movlb	1	; () banked
  3935  001C86  2B24               	incf	((292))&0ffh
  3936                           	line	118
  3937                           ;bmc.h: 118: if ((nrbytes >= 3)&&((nrbytes-2) ==
                                  (bytes[0]&0b11111))){
  3938  001C88  0E02               	movlw	(03h-1)
  3939  001C8A  0101               	movlb	1	; () banked
  3940  001C8C  0101               	movlb	1	; () banked
  3941  001C8E  6524               	cpfsgt	((292))&0ffh
  3942  001C90  EF4C  F00E         	goto	u6971
  3943  001C94  EF4E  F00E         	goto	u6970
  3944  001C98                     u6971:
  3945  001C98  EF0B  F00F         	goto	l342
  3946  001C9C                     u6970:
  3947  001C9C  0EFE               	movlw	low(-2)
  3948  001C9E  0101               	movlb	1	; () banked
  3949  001CA0  0101               	movlb	1	; () banked
  3950  001CA2  2524               	addwf	((292))&0ffh,w
  3951  001CA4  0102               	movlb	2	; () banked
  3952  001CA6  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3953  001CA8  0102               	movlb	2	; () banked
  3954  001CAA  6B3A               	clrf	1+(??_bmcDecode+2+0)&0ffh
  3955  001CAC  0EFF               	movlw	high(-2)
  3956  001CAE  0102               	movlb	2	; () banked
  3957  001CB0  233A               	addwfc	1+(??_bmcDecode+2+0)&0ffh
  3958  001CB2  C100 F23B          	movff	(256),??_bmcDecode+4+0
  3959  001CB6  0E1F               	movlw	01Fh
  3960  001CB8  0102               	movlb	2	; () banked
  3961  001CBA  173B               	andwf	(??_bmcDecode+4+0)&0ffh
  3962  001CBC  0102               	movlb	2	; () banked
  3963  001CBE  513B               	movf	(??_bmcDecode+4+0)&0ffh,w
  3964  001CC0  0102               	movlb	2	; () banked
  3965  001CC2  1939               	xorwf	(??_bmcDecode+2+0)&0ffh,w
  3966  001CC4  113A               	iorwf	(??_bmcDecode+2+1)&0ffh,w
  3967                           
  3968  001CC6  A4D8               	btfss	status,2
  3969  001CC8  EF68  F00E         	goto	u6981
  3970  001CCC  EF6A  F00E         	goto	u6980
  3971  001CD0                     u6981:
  3972  001CD0  EF0B  F00F         	goto	l342
  3973  001CD4                     u6980:
  3974                           	line	119
  3975                           ;bmc.h: 119: char checksum = 0;
  3976  001CD4  0102               	movlb	2	; () banked
  3977  001CD6  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3978  001CD8  0E00               	movlw	low(0)
  3979  001CDA  0102               	movlb	2	; () banked
  3980  001CDC  0102               	movlb	2	; () banked
  3981  001CDE  6F37               	movwf	((bmcDecode@checksum))&0ffh
  3982  001CE0  0102               	movlb	2	; () banked
  3983  001CE2  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3984                           	line	120
  3985                           ;bmc.h: 120: for (char j=0; j<(nrbytes-1); j++) 
                                 checksum += bytes[j];
  3986  001CE4  0102               	movlb	2	; () banked
  3987  001CE6  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  3988  001CE8  0E00               	movlw	low(0)
  3989  001CEA  0102               	movlb	2	; () banked
  3990  001CEC  0102               	movlb	2	; () banked
  3991  001CEE  6F38               	movwf	((bmcDecode@j))&0ffh
  3992  001CF0  0102               	movlb	2	; () banked
  3993  001CF2  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  3994  001CF4  EF8D  F00E         	goto	l347
  3995                           	
  3996  001CF8                     l344:		; BSR set to: ?
  3997                           
  3998  001CF8  0101               	movlb	1	; () banked
  3999  001CFA  0E00               	movlw	low(256)
  4000  001CFC  0102               	movlb	2	; () banked
  4001  001CFE  0102               	movlb	2	; () banked
  4002  001D00  2538               	addwf	((bmcDecode@j))&0ffh,w
  4003  001D02  6EE9               	movwf	c:fsr0l
  4004  001D04  6AEA               	clrf	1+c:fsr0l
  4005  001D06  0101               	movlb	1	; () banked
  4006  001D08  0E01               	movlw	high(256)
  4007  001D0A  22EA               	addwfc	1+c:fsr0l
  4008  001D0C  50EF               	movf	indf0,w
  4009  001D0E  0102               	movlb	2	; () banked
  4010  001D10  0102               	movlb	2	; () banked
  4011  001D12  2737               	addwf	((bmcDecode@checksum))&0ffh
  4012  001D14  0102               	movlb	2	; () banked
  4013  001D16  0102               	movlb	2	; () banked
  4014  001D18  2B38               	incf	((bmcDecode@j))&0ffh
  4015                           	
  4016  001D1A                     l347:		; BSR set to: ?
  4017                           
  4018  001D1A  0EFF               	movlw	low(-1)
  4019  001D1C  0101               	movlb	1	; () banked
  4020  001D1E  0101               	movlb	1	; () banked
  4021  001D20  2524               	addwf	((292))&0ffh,w
  4022  001D22  0102               	movlb	2	; () banked
  4023  001D24  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  4024  001D26  0102               	movlb	2	; () banked
  4025  001D28  6B3A               	clrf	1+(??_bmcDecode+2+0)&0ffh
  4026  001D2A  0EFF               	movlw	high(-1)
  4027  001D2C  0102               	movlb	2	; () banked
  4028  001D2E  233A               	addwfc	1+(??_bmcDecode+2+0)&0ffh
  4029  001D30  0102               	movlb	2	; () banked
  4030  001D32  C238  F23B         	movff	(bmcDecode@j),??_bmcDecode+4+0
  4031  001D36  0102               	movlb	2	; () banked
  4032  001D38  6B3C               	clrf	(??_bmcDecode+4+0+1)&0ffh
  4033  001D3A  0102               	movlb	2	; () banked
  4034  001D3C  513C               	movf	(??_bmcDecode+4+1)&0ffh,w
  4035  001D3E  0A80               	xorlw	80h
  4036  001D40  0102               	movlb	2	; () banked
  4037  001D42  6F3D               	movwf	(??_bmcDecode+6+0)&0ffh
  4038+ 001D44  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  4039+ 001D46  0102               	movlb	2	; () banked
  4040+ 001D48  5D3B               	subwf	(??_bmcDecode+4+0)&0ffh,w
  4041+ 001D4A  0102               	movlb	2	; () banked
  4042+ 001D4C  513A               	movf	(??_bmcDecode+2+1)&0ffh,w
  4043+ 001D4E  0A80               	xorlw	80h
  4044+ 001D50  0102               	movlb	2	; () banked
  4045+ 001D52  593D               	subwfb	(??_bmcDecode+6+0)&0ffh,w
  4046+ 001D54  A0D8               	btfss	status,0
  4047+ 001D56  EFAF  F00E         	goto	u6991
  4048+ 001D5A  EFB1  F00E         	goto	u6990
  4049+ 001D5E                     u6991:
  4050+ 001D5E  EF7C  F00E         	goto	l344
  4051+ 001D62                     u6990:
  4052+                          	
  4053+ 001D62                     l345:		; BSR set to: ?
  4054+                          
  4055+                          	line	121
  4056+                          ;bmc.h: 121: if (checksum == bytes[nrbytes-1]){
  4057+ 001D62  C124 F239          	movff	(292),??_bmcDecode+2+0
  4058+ 001D66  0EFF               	movlw	-1
  4059+ 001D68  0102               	movlb	2	; () banked
  4060+ 001D6A  2739               	addwf	(??_bmcDecode+2+0)&0ffh
  4061+ 001D6C  0101               	movlb	1	; () banked
  4062+ 001D6E  0E00               	movlw	low(256)
  4063+ 001D70  0102               	movlb	2	; () banked
  4064+ 001D72  2539               	addwf	(??_bmcDecode+2+0)&0ffh,w
  4065+ 001D74  6EE9               	movwf	c:fsr0l
  4066+ 001D76  6AEA               	clrf	1+c:fsr0l
  4067+ 001D78  0101               	movlb	1	; () banked
  4068+ 001D7A  0E01               	movlw	high(256)
  4069+ 001D7C  22EA               	addwfc	1+c:fsr0l
  4070+ 001D7E  0102               	movlb	2	; () banked
  4071+ 001D80  0102               	movlb	2	; () banked
  4072+ 001D82  5137               	movf	((bmcDecode@checksum))&0ffh,w
  4073+ 001D84  62EF               	cpfseq	indf0
  4074+ 001D86  EFC7  F00E         	goto	u7001
  4075+ 001D8A  EFC9  F00E         	goto	u7000
  4076+ 001D8E                     u7001:
  4077+ 001D8E  EF03  F00F         	goto	l348
  4078+ 001D92                     u7000:
  4079+                          	line	122
  4080+                          ;bmc.h: 122: bmcPrint(&bytes, settingsp->bmc_en_
      +                          hex);
  4081+ 001D92  0E03               	movlw	low(03h)
  4082+ 001D94  0102               	movlb	2	; () banked
  4083+ 001D96  0102               	movlb	2	; () banked
  4084+ 001D98  2535               	addwf	((bmcDecode@settingsp))&0ffh,w
  4085+ 001D9A  6EE9               	movwf	c:fsr0l
  4086+ 001D9C  0E00               	movlw	high(03h)
  4087+ 001D9E  0102               	movlb	2	; () banked
  4088+ 001DA0  0102               	movlb	2	; () banked
  4089+ 001DA2  2136               	addwfc	((bmcDecode@settingsp+1))&0ffh,w
  4090+ 001DA4  6EEA               	movwf	1+c:fsr0l
  4091+ 001DA6  50EF               	movf	indf0,w
  4092+ 001DA8  0102               	movlb	2	; () banked
  4093+ 001DAA  0102               	movlb	2	; () banked
  4094+ 001DAC  6F40               	movwf	(0+(?_bmcPrint+02h))&0ffh
  4095+ 001DAE  0101               	movlb	1	; () banked
  4096+ 001DB0  0E00               	movlw	low(256)
  4097+ 001DB2  0102               	movlb	2	; () banked
  4098+ 001DB4  0102               	movlb	2	; () banked
  4099+ 001DB6  6F3E               	movwf	((?_bmcPrint))&0ffh
  4100+ 001DB8  0101               	movlb	1	; () banked
  4101+ 001DBA  0E01               	movlw	high(256)
  4102+ 001DBC  0102               	movlb	2	; () banked
  4103+ 001DBE  6F3F               	movwf	((?_bmcPrint+1))&0ffh
  4104+ 001DC0  ECF2  F021         	call	_bmcPrint	;wreg free
  4105+                          	line	123
  4106+                          ;bmc.h: 123: if(settingsp->bmc_repeat) bmcRepeat
      +                          (&bytes, settingsp);
  4107+ 001DC4  0E04               	movlw	low(04h)
  4108+ 001DC6  0102               	movlb	2	; () banked
  4109+ 001DC8  0102               	movlb	2	; () banked
  4110+ 001DCA  2535               	addwf	((bmcDecode@settingsp))&0ffh,w
  4111+ 001DCC  6EE9               	movwf	c:fsr0l
  4112+ 001DCE  0E00               	movlw	high(04h)
  4113+ 001DD0  0102               	movlb	2	; () banked
  4114+ 001DD2  0102               	movlb	2	; () banked
  4115+ 001DD4  2136               	addwfc	((bmcDecode@settingsp+1))&0ffh,w
  4116+ 001DD6  6EEA               	movwf	1+c:fsr0l
  4117+ 001DD8  50EF               	movf	indf0,w
  4118+ 001DDA  B4D8               	btfsc	status,2
  4119+ 001DDC  EFF2  F00E         	goto	u7011
  4120+ 001DE0  EFF4  F00E         	goto	u7010
  4121+ 001DE4                     u7011:
  4122+ 001DE4  EF03  F00F         	goto	l348
  4123+ 001DE8                     u7010:
  4124+ 001DE8  C235  F240         	movff	(bmcDecode@settingsp),0+(?_bmcRepeat+02h)
  4125+ 001DEC  C236  F241         	movff	(bmcDecode@settingsp+1),1+(?_bmcRepeat+02
      +                          h)
  4126+ 001DF0  0101               	movlb	1	; () banked
  4127+ 001DF2  0E00               	movlw	low(256)
  4128+ 001DF4  0102               	movlb	2	; () banked
  4129+ 001DF6  0102               	movlb	2	; () banked
  4130+ 001DF8  6F3E               	movwf	((?_bmcRepeat))&0ffh
  4131+ 001DFA  0101               	movlb	1	; () banked
  4132+ 001DFC  0E01               	movlw	high(256)
  4133+ 001DFE  0102               	movlb	2	; () banked
  4134+ 001E00  6F3F               	movwf	((?_bmcRepeat+1))&0ffh
  4135+ 001E02  EC8B  F024         	call	_bmcRepeat	;wreg free
  4136+                          	
  4137+ 001E06                     l349:		; BSR set to: ?
  4138+                          
  4139+                          	line	124
  4140+                          	
  4141+ 001E06                     l348:		; BSR set to: ?
  4142+                          
  4143+                          	line	125
  4144+                          ;bmc.h: 124: }
  4145+                          ;bmc.h: 125: state = 0;
  4146+ 001E06  0102               	movlb	2	; () banked
  4147+ 001E08  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  4148+ 001E0A  0E00               	movlw	low(0)
  4149+ 001E0C  0101               	movlb	1	; () banked
  4150+ 001E0E  0101               	movlb	1	; () banked
  4151+ 001E10  6F44               	movwf	((324))&0ffh
  4152+ 001E12  0102               	movlb	2	; () banked
  4153+ 001E14  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  4154+                          	line	126
  4155+                          	
  4156+ 001E16                     l343:		; BSR set to: ?
  4157+                          
  4158+                          	line	127
  4159+                          	
  4160+ 001E16                     l342:		; BSR set to: ?
  4161+                          
  4162+                          	line	128
  4163+                          ;bmc.h: 126: }
  4164+                          ;bmc.h: 127: }
  4165+                          ;bmc.h: 128: nrbits = 0;
  4166+ 001E16  0102               	movlb	2	; () banked
  4167+ 001E18  6F39               	movwf	(??_bmcDecode+2+0)&0ffh
  4168+ 001E1A  0E00               	movlw	low(0)
  4169+ 001E1C  0101               	movlb	1	; () banked
  4170+ 001E1E  0101               	movlb	1	; () banked
  4171+ 001E20  6F40               	movwf	((320))&0ffh
  4172+ 001E22  0102               	movlb	2	; () banked
  4173+ 001E24  5139               	movf	(??_bmcDecode+2+0)&0ffh,w
  4174+                          	line	129
  4175+                          	
  4176+ 001E26                     l341:		; BSR set to: ?
  4177+                          
  4178+                          	line	130
  4179+                          ;bmc.h: 129: }
  4180+                          ;bmc.h: 130: break;
  4181+ 001E26  EF20  F00F         	goto	l336
  4182+                          	line	107
  4183+                          	
  4184+ 001E2A                     l337:		; BSR set to: ?
  4185+                          
  4186+ 001E2A  0101               	movlb	1	; () banked
  4187+ 001E2C  0101               	movlb	1	; () banked
  4188+ 001E2E  5144               	movf	((324))&0ffh,w
  4189+ 001E30  0A00               	xorlw	0 ^ 0
  4190+ 001E32  E101 D6D1          	bz	l338
  4191+ 001E36  0A01               	xorlw	1 ^ 0
  4192+ 001E38  E101 D6F7          	bz	l340
  4193+ 001E3C  EF20  F00F         	goto	l336
  4194+                          
  4195+                          	line	131
  4196+                          	
  4197+ 001E40                     l336:		; BSR set to: ?
  4198+                          
  4199+                          	line	132
  4200+                          ;bmc.h: 132: }
  4201+ 001E40                     l327:
  4202+                          			; BSR set to: ?
  4203+                          
  4204+ 001E40  0012               	return
  4205+                          	opt stack 0
  4206+                          GLOBAL __end_of_bmcDecode
  4207+ 001E42                     	__end_of_bmcDecode:
  4208+                          	FNSIZE	_bmcDecode,7,3
  4209+                          ; =============== function _bmcDecode ends =====
      +                          =======
  4210+                          
  4211+                          	signat	_bmcDecode,8312
  4212+                          	global	_sGet
  4213+                          	global	??_sGet
  4214+                          	global	?_sGet
  4215+                          
  4216+                          ; *************** function _sGet ***************
      +                          **
  4217+                          ; Defined at:
  4218+                          ;		line 28 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\uartring.c"
  4219+                          ; Parameters:
  4220+                          ;		None
  4221+                          ; Auto variables:
  4222+                          ;		c           	       	type: unsigned char 
  4223+                          ; Return value:
  4224+                          ;		type: unsigned char 
  4225+                          ;		size: 1
  4226+                          ; Registers used:
  4227+                          ;		wreg, fsr0l, fsr0h, status,2, status,0
  4228+                          ; Tracked objects:
  4229+                          ;		On entry : 0/0
  4230+                          ;		On exit  : 0/0
  4231+                          ;		Unchanged: 0/0
  4232+                          ; Data sizes:
  4233+                          ;		Autos:    1
  4234+                          ;		Params:   0
  4235+                          ;		Temp:     0
  4236+                          ;		Total:    1
  4237+                          ; This function calls:
  4238+                          ;		Nothing
  4239+                          ; This function is called by:
  4240+                          ;		_main
  4241+                          ; This function uses a non-reentrant model
  4242+                          ; 
  4243+                                  psect   text8,class=CODE,space=0,reloc=2
  4244+                          
  4245+                          	opt lm
  4246+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\uartring.c"
  4247+                          	line	28
  4248+ 000000                     	__size_of_sGet	equ	__end_of_sGet-_sGet
  4249+                          ;uartring.c: 28: char sGet(void){
  4250+                          	
  4251+ 0050D6                     _sGet:		; BSR set to: ?
  4252+                          
  4253+                          	opt stack 29
  4254+                          	line	30
  4255+                          ;uartring.c: 29: char c;
  4256+                          ;uartring.c: 30: GIE = 0;
  4257+ 0050D6  9EF2               	bcf	c:(32663/8),(32663)&7	;volatile
  4258+                          	line	31
  4259+                          ;uartring.c: 31: c = rxbuffer[rxop];
  4260+ 0050D8  0100               	movlb	0	; () banked
  4261+ 0050DA  0E80               	movlw	low(128)	;volatile
  4262+ 0050DC  0101               	movlb	1	; () banked
  4263+ 0050DE  0101               	movlb	1	; () banked
  4264+ 0050E0  253C               	addwf	((316))&0ffh,w	;volatile
  4265+ 0050E2  6EE9               	movwf	c:fsr0l
  4266+ 0050E4  6AEA               	clrf	1+c:fsr0l
  4267+ 0050E6  0100               	movlb	0	; () banked
  4268+ 0050E8  0E00               	movlw	high(128)	;volatile
  4269+ 0050EA  22EA               	addwfc	1+c:fsr0l
  4270+ 0050EC  50EF               	movf	indf0,w
  4271+ 0050EE  0102               	movlb	2	; () banked
  4272+ 0050F0  0102               	movlb	2	; () banked
  4273+ 0050F2  6F34               	movwf	((sGet@c))&0ffh
  4274+                          	line	32
  4275+                          ;uartring.c: 32: rxop = (rxop+1) & (128 - 1);
  4276+ 0050F4  0101               	movlb	1	; () banked
  4277+ 0050F6  0101               	movlb	1	; () banked
  4278+ 0050F8  293C               	incf	((316))&0ffh,w	;volatile
  4279+ 0050FA  0B7F               	andlw	low(07Fh)
  4280+ 0050FC  0101               	movlb	1	; () banked
  4281+ 0050FE  0101               	movlb	1	; () banked
  4282+ 005100  6F3C               	movwf	((316))&0ffh	;volatile
  4283+                          	line	33
  4284+                          ;uartring.c: 33: GIE = 1;
  4285+ 005102  8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
  4286+                          	line	34
  4287+                          ;uartring.c: 34: return c;
  4288+ 005104  0102               	movlb	2	; () banked
  4289+ 005106  0102               	movlb	2	; () banked
  4290+ 005108  5134               	movf	((sGet@c))&0ffh,w
  4291+ 00510A  EF87  F028         	goto	l218
  4292+                          	line	35
  4293+                          ;uartring.c: 35: }
  4294+ 00510E                     l218:
  4295+                          			; BSR set to: ?
  4296+                          
  4297+ 00510E  0012               	return
  4298+                          	opt stack 0
  4299+                          GLOBAL __end_of_sGet
  4300+ 005110                     	__end_of_sGet:
  4301+                          	FNSIZE	_sGet,1,0
  4302+                          ; =============== function _sGet ends ==========
      +                          ==
  4303+                          
  4304+                          	signat	_sGet,89
  4305+                          	global	_startupBlinkLed
  4306+                          	global	??_startupBlinkLed
  4307+                          	global	?_startupBlinkLed
  4308+                          
  4309+                          ; *************** function _startupBlinkLed ****
      +                          *************
  4310+                          ; Defined at:
  4311+                          ;		line 100 in file "D:\Hobby\Prosjekter\MultiTR
      +                          X\Firmware\FW1.2\batchpcb26k20.c"
  4312+                          ; Parameters:
  4313+                          ;		None
  4314+                          ; Auto variables:
  4315+                          ;		j           	       	type: unsigned char 
  4316+                          ; Return value:
  4317+                          ;		type: void 
  4318+                          ;		size: 0
  4319+                          ; Registers used:
  4320+                          ;		wreg, status,2, status,0, cstack
  4321+                          ; Tracked objects:
  4322+                          ;		On entry : 0/0
  4323+                          ;		On exit  : 0/0
  4324+                          ;		Unchanged: 0/0
  4325+                          ; Data sizes:
  4326+                          ;		Autos:    1
  4327+                          ;		Params:   0
  4328+                          ;		Temp:     1
  4329+                          ;		Total:    2
  4330+                          ; This function calls:
  4331+                          ;		_delayms
  4332+                          ; This function is called by:
  4333+                          ;		_main
  4334+                          ; This function uses a non-reentrant model
  4335+                          ; 
  4336+                                  psect   text9,class=CODE,space=0,reloc=2
  4337+                          
  4338+                          	opt lm
  4339+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
  4340+                          	line	100
  4341+ 000000                     	__size_of_startupBlinkLed	equ	__end_of_startupB
      +                          linkLed-_startupBlinkLed
  4342+                          ;batchpcb26k20.c: 100: void startupBlinkLed(){
  4343+                          	
  4344+ 004E8A                     _startupBlinkLed:		; BSR set to: ?
  4345+                          
  4346+                          	opt stack 29
  4347+                          	line	102
  4348+ 004E8A  0102               	movlb	2	; () banked
  4349+ 004E8C  6F35               	movwf	(??_startupBlinkLed+1+0)&0ffh
  4350+ 004E8E  0E00               	movlw	low(0)
  4351+ 004E90  0102               	movlb	2	; () banked
  4352+ 004E92  0102               	movlb	2	; () banked
  4353+ 004E94  6F34               	movwf	((startupBlinkLed@j))&0ffh
  4354+ 004E96  0102               	movlb	2	; () banked
  4355+ 004E98  5135               	movf	(??_startupBlinkLed+1+0)&0ffh,w
  4356+ 004E9A  0E04               	movlw	(05h-1)
  4357+ 004E9C  0102               	movlb	2	; () banked
  4358+ 004E9E  0102               	movlb	2	; () banked
  4359+ 004EA0  6534               	cpfsgt	((startupBlinkLed@j))&0ffh
  4360+ 004EA2  EF55  F027         	goto	u8141
  4361+ 004EA6  EF57  F027         	goto	u8140
  4362+ 004EAA                     u8141:
  4363+ 004EAA  EF59  F027         	goto	l277
  4364+ 004EAE                     u8140:
  4365+ 004EAE  EF79  F027         	goto	l278
  4366+                          	
  4367+ 004EB2                     l277:		; BSR set to: ?
  4368+                          
  4369+                          	line	103
  4370+                          ;batchpcb26k20.c: 103: LATC4 = LATC5 ^= 1;
  4371+ 004EB2  7A8B               	btg	c:(31837/8),(31837)&7	;volatile
  4372+ 004EB4  BA8B               	btfsc	c:(31837/8),(31837)&7	;volatile
  4373+ 004EB6  EF5F  F027         	goto	u8151
  4374+ 004EBA  EF62  F027         	goto	u8150
  4375+ 004EBE                     u8151:
  4376+ 004EBE  888B               	bsf	c:(31836/8),(31836)&7	;volatile
  4377+ 004EC0  EF63  F027         	goto	u8165
  4378+ 004EC4                     u8150:
  4379+ 004EC4  988B               	bcf	c:(31836/8),(31836)&7	;volatile
  4380+ 004EC6                     u8165:
  4381+                          	line	104
  4382+                          ;batchpcb26k20.c: 104: delayms(100);
  4383+ 004EC6  0E64               	movlw	low(064h)
  4384+ 004EC8  0102               	movlb	2	; () banked
  4385+ 004ECA  0102               	movlb	2	; () banked
  4386+ 004ECC  6F54               	movwf	((?_delayms))&0ffh
  4387+ 004ECE  0E00               	movlw	high(064h)
  4388+ 004ED0  0102               	movlb	2	; () banked
  4389+ 004ED2  6F55               	movwf	((?_delayms+1))&0ffh
  4390+ 004ED4  EC7A  F027         	call	_delayms	;wreg free
  4391+                          	line	102
  4392+ 004ED8  0102               	movlb	2	; () banked
  4393+ 004EDA  0102               	movlb	2	; () banked
  4394+ 004EDC  2B34               	incf	((startupBlinkLed@j))&0ffh
  4395+ 004EDE  0E04               	movlw	(05h-1)
  4396+ 004EE0  0102               	movlb	2	; () banked
  4397+ 004EE2  0102               	movlb	2	; () banked
  4398+ 004EE4  6534               	cpfsgt	((startupBlinkLed@j))&0ffh
  4399+ 004EE6  EF77  F027         	goto	u8171
  4400+ 004EEA  EF79  F027         	goto	u8170
  4401+ 004EEE                     u8171:
  4402+ 004EEE  EF59  F027         	goto	l277
  4403+ 004EF2                     u8170:
  4404+                          	
  4405+ 004EF2                     l278:		; BSR set to: ?
  4406+                          
  4407+                          	line	106
  4408+                          ;batchpcb26k20.c: 105: }
  4409+                          ;batchpcb26k20.c: 106: }
  4410+ 004EF2                     l276:
  4411+                          			; BSR set to: ?
  4412+                          
  4413+ 004EF2  0012               	return
  4414+                          	opt stack 0
  4415+                          GLOBAL __end_of_startupBlinkLed
  4416+ 004EF4                     	__end_of_startupBlinkLed:
  4417+                          	FNSIZE	_startupBlinkLed,2,0
  4418+                          ; =============== function _startupBlinkLed ends
      +                           ============
  4419+                          
  4420+                          	signat	_startupBlinkLed,88
  4421+                          	global	_sInit
  4422+                          	global	??_sInit
  4423+                          	global	?_sInit
  4424+                          
  4425+                          ; *************** function _sInit **************
      +                          ***
  4426+                          ; Defined at:
  4427+                          ;		line 8 in file "D:\Hobby\Prosjekter\MultiTRX\
      +                          Firmware\FW1.2\uartring.c"
  4428+                          ; Parameters:
  4429+                          ;		baud           size:   4offs:   0	type: unsig
      +                          ned long 
  4430+                          ; Auto variables:
  4431+                          ;		spbrg_calc  	       	type: unsigned long 
  4432+                          ; Return value:
  4433+                          ;		type: void 
  4434+                          ;		size: 0
  4435+                          ; Registers used:
  4436+                          ;		wreg, status,2, status,0, cstack
  4437+                          ; Tracked objects:
  4438+                          ;		On entry : 0/0
  4439+                          ;		On exit  : 0/0
  4440+                          ;		Unchanged: 0/0
  4441+                          ; Data sizes:
  4442+                          ;		Autos:    4
  4443+                          ;		Params:   4
  4444+                          ;		Temp:     0
  4445+                          ;		Total:    8
  4446+                          ; This function calls:
  4447+                          ;		___lldiv
  4448+                          ; This function is called by:
  4449+                          ;		_main
  4450+                          ; This function uses a non-reentrant model
  4451+                          ; 
  4452+                                  psect   text10,class=CODE,space=0,reloc=
      +                          2
  4453+                          
  4454+                          	opt lm
  4455+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\uartring.c"
  4456+                          	line	8
  4457+ 000000                     	__size_of_sInit	equ	__end_of_sInit-_sInit
  4458+                          ;uartring.c: 8: void sInit(unsigned long baud){
  4459+                          	
  4460+ 004A76                     _sInit:		; BSR set to: ?
  4461+                          
  4462+                          	opt stack 29
  4463+                          	line	9
  4464+ 004A76  C234  F240         	movff	(sInit@baud),0+(?___lldiv+04h)
  4465+ 004A7A  C235  F241         	movff	(sInit@baud+1),1+(?___lldiv+04h)
  4466+ 004A7E  C236  F242         	movff	(sInit@baud+2),2+(?___lldiv+04h)
  4467+ 004A82  C237  F243         	movff	(sInit@baud+3),3+(?___lldiv+04h)
  4468+ 004A86  0E00               	movlw	low(01E84800h)
  4469+ 004A88  0102               	movlb	2	; () banked
  4470+ 004A8A  0102               	movlb	2	; () banked
  4471+ 004A8C  6F3C               	movwf	((?___lldiv))&0ffh
  4472+ 004A8E  0E48               	movlw	high(01E84800h)
  4473+ 004A90  0102               	movlb	2	; () banked
  4474+ 004A92  6F3D               	movwf	((?___lldiv+1))&0ffh
  4475+ 004A94  0EE8               	movlw	low highword(01E84800h)
  4476+ 004A96  0102               	movlb	2	; () banked
  4477+ 004A98  6F3E               	movwf	((?___lldiv+2))&0ffh
  4478+ 004A9A  0E01               	movlw	high highword(01E84800h)
  4479+ 004A9C  0102               	movlb	2	; () banked
  4480+ 004A9E  6F3F               	movwf	((?___lldiv+3))&0ffh
  4481+ 004AA0  ECCE  F020         	call	___lldiv	;wreg free
  4482+ 004AA4  0E05               	movlw	04h+1
  4483+ 004AA6  EF5F  F025         	goto	u2690
  4484+ 004AAA                     u2695:
  4485+ 004AAA  90D8               	bcf	status,0
  4486+ 004AAC  0102               	movlb	2	; () banked
  4487+ 004AAE  0102               	movlb	2	; () banked
  4488+ 004AB0  333F               	rrcf	(3+?___lldiv)&0ffh
  4489+ 004AB2  0102               	movlb	2	; () banked
  4490+ 004AB4  333E               	rrcf	(2+?___lldiv)&0ffh
  4491+ 004AB6  0102               	movlb	2	; () banked
  4492+ 004AB8  333D               	rrcf	(1+?___lldiv)&0ffh
  4493+ 004ABA  0102               	movlb	2	; () banked
  4494+ 004ABC  333C               	rrcf	(0+?___lldiv)&0ffh
  4495+ 004ABE                     u2690:
  4496+ 004ABE  2EE8               	decfsz	wreg
  4497+ 004AC0  EF55  F025         	goto	u2695
  4498+ 004AC4  0EFF               	movlw	0FFh
  4499+ 004AC6  0102               	movlb	2	; () banked
  4500+ 004AC8  0102               	movlb	2	; () banked
  4501+ 004ACA  253C               	addwf	(0+?___lldiv)&0ffh,w
  4502+ 004ACC  0102               	movlb	2	; () banked
  4503+ 004ACE  0102               	movlb	2	; () banked
  4504+ 004AD0  6F38               	movwf	((sInit@spbrg_calc))&0ffh
  4505+ 004AD2  0EFF               	movlw	0FFh
  4506+ 004AD4  0102               	movlb	2	; () banked
  4507+ 004AD6  0102               	movlb	2	; () banked
  4508+ 004AD8  213D               	addwfc	(1+?___lldiv)&0ffh,w
  4509+ 004ADA  0102               	movlb	2	; () banked
  4510+ 004ADC  6F39               	movwf	1+((sInit@spbrg_calc))&0ffh
  4511+ 004ADE  0EFF               	movlw	0FFh
  4512+ 004AE0  0102               	movlb	2	; () banked
  4513+ 004AE2  0102               	movlb	2	; () banked
  4514+ 004AE4  213E               	addwfc	(2+?___lldiv)&0ffh,w
  4515+ 004AE6  0102               	movlb	2	; () banked
  4516+ 004AE8  6F3A               	movwf	2+((sInit@spbrg_calc))&0ffh
  4517+ 004AEA  0EFF               	movlw	0FFh
  4518+ 004AEC  0102               	movlb	2	; () banked
  4519+ 004AEE  0102               	movlb	2	; () banked
  4520+ 004AF0  213F               	addwfc	(3+?___lldiv)&0ffh,w
  4521+ 004AF2  0102               	movlb	2	; () banked
  4522+ 004AF4  6F3B               	movwf	3+((sInit@spbrg_calc))&0ffh
  4523+                          	line	10
  4524+                          ;uartring.c: 10: TXSTA = 0b00100100;
  4525+ 004AF6  0E24               	movlw	low(024h)
  4526+ 004AF8  6EAC               	movwf	((c:4012)),c	;volatile
  4527+                          	line	11
  4528+                          ;uartring.c: 11: RCSTA = 0b10010000;
  4529+ 004AFA  0E90               	movlw	low(090h)
  4530+ 004AFC  6EAB               	movwf	((c:4011)),c	;volatile
  4531+                          	line	12
  4532+                          ;uartring.c: 12: BAUDCON = 0;
  4533+ 004AFE  0E00               	movlw	low(0)
  4534+ 004B00  6EB8               	movwf	((c:4024)),c	;volatile
  4535+                          	line	13
  4536+                          ;uartring.c: 13: SPBRG = spbrg_calc;
  4537+ 004B02  C238  FFAF         	movff	(sInit@spbrg_calc),(c:4015)	;volatile
  4538+                          	line	14
  4539+                          ;uartring.c: 14: INTCON |= 0b01000000;
  4540+ 004B06  8CF2               	bsf	(0+(6/8)+(c:4082)),c,(6)&7	;volatile
  4541+                          	line	15
  4542+                          ;uartring.c: 15: PIE1 |= 0b00110000;
  4543+ 004B08  0E30               	movlw	(030h)&0ffh
  4544+ 004B0A  129D               	iorwf	((c:3997)),c	;volatile
  4545+                          	line	16
  4546+                          ;uartring.c: 16: txip = txop = rxip = rxop = 0;
  4547+ 004B0C  0E00               	movlw	low(0)
  4548+ 004B0E  0101               	movlb	1	; () banked
  4549+ 004B10  0101               	movlb	1	; () banked
  4550+ 004B12  6F3C               	movwf	((316))&0ffh	;volatile
  4551+ 004B14  C13C F13B          	movff	(316),(315)	;volatile
  4552+ 004B18  C13B F12C          	movff	(315),(300)	;volatile
  4553+ 004B1C  C12C F12B          	movff	(300),(299)	;volatile
  4554+                          	line	17
  4555+                          ;uartring.c: 17: }
  4556+ 004B20                     l215:
  4557+                          			; BSR set to: ?
  4558+                          
  4559+ 004B20  0012               	return
  4560+                          	opt stack 0
  4561+                          GLOBAL __end_of_sInit
  4562+ 004B22                     	__end_of_sInit:
  4563+                          	FNSIZE	_sInit,4,4
  4564+                          ; =============== function _sInit ends =========
      +                          ===
  4565+                          
  4566+                          	signat	_sInit,4216
  4567+                          	global	_init
  4568+                          	global	??_init
  4569+                          	global	?_init
  4570+                          
  4571+                          ; *************** function _init ***************
      +                          **
  4572+                          ; Defined at:
  4573+                          ;		line 13 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\hardware_config_11.h"
  4574+                          ; Parameters:
  4575+                          ;		None
  4576+                          ; Auto variables:
  4577+                          ;		None
  4578+                          ; Return value:
  4579+                          ;		type: int 
  4580+                          ;		size: 2
  4581+                          ; Registers used:
  4582+                          ;		wreg, status,2
  4583+                          ; Tracked objects:
  4584+                          ;		On entry : 0/0
  4585+                          ;		On exit  : 0/0
  4586+                          ;		Unchanged: 0/0
  4587+                          ; Data sizes:
  4588+                          ;		Autos:    0
  4589+                          ;		Params:   0
  4590+                          ;		Temp:     0
  4591+                          ;		Total:    0
  4592+                          ; This function calls:
  4593+                          ;		Nothing
  4594+                          ; This function is called by:
  4595+                          ;		_main
  4596+                          ; This function uses a non-reentrant model
  4597+                          ; 
  4598+                                  psect   text11,class=CODE,space=0,reloc=
      +                          2
  4599+                          
  4600+                          	opt lm
  4601+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\hardware_config_11.h"
  4602+                          	line	13
  4603+ 000000                     	__size_of_init	equ	__end_of_init-_init
  4604+                          ;hardware_config_11.h: 13: init(){
  4605+                          	
  4606+ 0051AC                     _init:		; BSR set to: ?
  4607+                          
  4608+                          	opt stack 29
  4609+                          	line	14
  4610+ 0051AC  0E80               	movlw	low(080h)
  4611+ 0051AE  6E94               	movwf	((c:3988)),c	;volatile
  4612+                          	line	15
  4613+                          ;hardware_config_11.h: 15: TRISB = 0b00000110;
  4614+ 0051B0  0E06               	movlw	low(06h)
  4615+ 0051B2  6E93               	movwf	((c:3987)),c	;volatile
  4616+                          	line	16
  4617+                          ;hardware_config_11.h: 16: TRISA = 0b00000000;
  4618+ 0051B4  0E00               	movlw	low(0)
  4619+ 0051B6  6E92               	movwf	((c:3986)),c	;volatile
  4620+                          	line	24
  4621+                          ;hardware_config_11.h: 24: T1CON = 0b01111001;
  4622+ 0051B8  0E79               	movlw	low(079h)
  4623+ 0051BA  6ECD               	movwf	((c:4045)),c	;volatile
  4624+                          	line	26
  4625+                          ;hardware_config_11.h: 26: WDTCON = 0;
  4626+ 0051BC  0E00               	movlw	low(0)
  4627+ 0051BE  6ED1               	movwf	((c:4049)),c	;volatile
  4628+                          	line	29
  4629+                          ;hardware_config_11.h: 29: ANSEL = 0b00000000;
  4630+ 0051C0  0E00               	movlw	low(0)
  4631+ 0051C2  6E7E               	movwf	((c:3966)),c	;volatile
  4632+                          	line	30
  4633+                          ;hardware_config_11.h: 30: ANSELH = 0b00000100;
  4634+ 0051C4  0E04               	movlw	low(04h)
  4635+ 0051C6  6E7F               	movwf	((c:3967)),c	;volatile
  4636+                          	line	31
  4637+                          ;hardware_config_11.h: 31: ADCON0 = 0b00101001;
  4638+ 0051C8  0E29               	movlw	low(029h)
  4639+ 0051CA  6EC2               	movwf	((c:4034)),c	;volatile
  4640+                          	line	32
  4641+                          ;hardware_config_11.h: 32: ADCON1 = 0b00000000;
  4642+ 0051CC  0E00               	movlw	low(0)
  4643+ 0051CE  6EC1               	movwf	((c:4033)),c	;volatile
  4644+                          	line	33
  4645+                          ;hardware_config_11.h: 33: ADCON2 = 0b10111110;
  4646+ 0051D0  0EBE               	movlw	low(0BEh)
  4647+ 0051D2  6EC0               	movwf	((c:4032)),c	;volatile
  4648+                          	line	34
  4649+                          ;hardware_config_11.h: 34: }
  4650+ 0051D4                     l212:
  4651+                          			; BSR set to: ?
  4652+                          
  4653+ 0051D4  0012               	return
  4654+                          	opt stack 0
  4655+                          GLOBAL __end_of_init
  4656+ 0051D6                     	__end_of_init:
  4657+                          	FNSIZE	_init,0,0
  4658+                          ; =============== function _init ends ==========
      +                          ==
  4659+                          
  4660+                          	signat	_init,90
  4661+                          	global	_bmcRepeat
  4662+                          	global	??_bmcRepeat
  4663+                          	global	?_bmcRepeat
  4664+                          
  4665+                          ; *************** function _bmcRepeat **********
      +                          *******
  4666+                          ; Defined at:
  4667+                          ;		line 62 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\bmc.h"
  4668+                          ; Parameters:
  4669+                          ;		datap          size:   2offs:   0	type: PTR u
      +                          nsigned char ; Largest target is 33
  4670+                          ;		 -> F2852(33), 
  4671+                          ;		settingsp      size:   2offs:   2	type: PTR s
      +                          truct .; Largest target is 14
  4672+                          ;		 -> main@settings(14), 
  4673+                          ; Auto variables:
  4674+                          ;		payload_size	       	type: unsigned char 
  4675+                          ;		hops        	       	type: unsigned char 
  4676+                          ; Return value:
  4677+                          ;		type: void 
  4678+                          ;		size: 0
  4679+                          ; Registers used:
  4680+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
  4681+                          ; Tracked objects:
  4682+                          ;		On entry : 0/0
  4683+                          ;		On exit  : 0/0
  4684+                          ;		Unchanged: 0/0
  4685+                          ; Data sizes:
  4686+                          ;		Autos:    2
  4687+                          ;		Params:   4
  4688+                          ;		Temp:     2
  4689+                          ;		Total:    8
  4690+                          ; This function calls:
  4691+                          ;		_bmcTx
  4692+                          ; This function is called by:
  4693+                          ;		_bmcDecode
  4694+                          ; This function uses a non-reentrant model
  4695+                          ; 
  4696+                                  psect   text12,class=CODE,space=0,reloc=
      +                          2
  4697+                          
  4698+                          	opt lm
  4699+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\bmc.h"
  4700+                          	line	62
  4701+ 000000                     	__size_of_bmcRepeat	equ	__end_of_bmcRepeat-_bmc
      +                          Repeat
  4702+                          ;bmc.h: 62: void bmcRepeat(char *datap, settings
      +                          _t* settingsp){
  4703+                          	
  4704+ 004916                     _bmcRepeat:		; BSR set to: ?
  4705+                          
  4706+                          	opt stack 28
  4707+                          	line	63
  4708+                          ;bmc.h: 63: char payload_size = datap[0]&0b11111
      +                          ;
  4709+ 004916  C23E  FFE9         	movff	(bmcRepeat@datap),fsr0l
  4710+ 00491A  C23F  FFEA         	movff	(bmcRepeat@datap+1),fsr0h
  4711+ 00491E  50EF               	movf	indf0,w
  4712+ 004920  0B1F               	andlw	low(01Fh)
  4713+ 004922  0102               	movlb	2	; () banked
  4714+ 004924  0102               	movlb	2	; () banked
  4715+ 004926  6F42               	movwf	((bmcRepeat@payload_size))&0ffh
  4716+                          	line	64
  4717+                          ;bmc.h: 64: char hops = datap[0]>>5;
  4718+ 004928  C23E  FFE9         	movff	(bmcRepeat@datap),fsr0l
  4719+ 00492C  C23F  FFEA         	movff	(bmcRepeat@datap+1),fsr0h
  4720+ 004930  50EF               	movf	indf0,w
  4721+ 004932  0102               	movlb	2	; () banked
  4722+ 004934  6F44               	movwf	(??_bmcRepeat+2+0)&0ffh
  4723+ 004936  0E05               	movlw	05h
  4724+ 004938  0102               	movlb	2	; () banked
  4725+ 00493A  6F45               	movwf	(??_bmcRepeat+3+0)&0ffh
  4726+ 00493C                     u6825:
  4727+ 00493C  90D8               	bcf	status,0
  4728+ 00493E  0102               	movlb	2	; () banked
  4729+ 004940  3344               	rrcf	((??_bmcRepeat+2+0))&0ffh
  4730+ 004942  0102               	movlb	2	; () banked
  4731+ 004944  2F45               	decfsz	(??_bmcRepeat+3+0)&0ffh
  4732+ 004946  EF9E  F024         	goto	u6825
  4733+ 00494A  0102               	movlb	2	; () banked
  4734+ 00494C  5144               	movf	((??_bmcRepeat+2+0))&0ffh,w
  4735+ 00494E  0102               	movlb	2	; () banked
  4736+ 004950  0102               	movlb	2	; () banked
  4737+ 004952  6F43               	movwf	((bmcRepeat@hops))&0ffh
  4738+                          	line	65
  4739+                          ;bmc.h: 65: if (hops > 0){
  4740+ 004954  0102               	movlb	2	; () banked
  4741+ 004956  0102               	movlb	2	; () banked
  4742+ 004958  5143               	movf	((bmcRepeat@hops))&0ffh,w
  4743+ 00495A  B4D8               	btfsc	status,2
  4744+ 00495C  EFB2  F024         	goto	u6831
  4745+ 004960  EFB4  F024         	goto	u6830
  4746+ 004964                     u6831:
  4747+ 004964  EFE2  F024         	goto	l325
  4748+ 004968                     u6830:
  4749+                          	line	66
  4750+                          ;bmc.h: 66: if (hops < 7) hops--;
  4751+ 004968  0E07               	movlw	(07h)&0ffh
  4752+ 00496A  0102               	movlb	2	; () banked
  4753+ 00496C  0102               	movlb	2	; () banked
  4754+ 00496E  6143               	cpfslt	((bmcRepeat@hops))&0ffh
  4755+ 004970  EFBC  F024         	goto	u6841
  4756+ 004974  EFBE  F024         	goto	u6840
  4757+ 004978                     u6841:
  4758+ 004978  EFC1  F024         	goto	l326
  4759+ 00497C                     u6840:
  4760+ 00497C  0102               	movlb	2	; () banked
  4761+ 00497E  0102               	movlb	2	; () banked
  4762+ 004980  0743               	decf	((bmcRepeat@hops))&0ffh
  4763+                          	
  4764+ 004982                     l326:		; BSR set to: ?
  4765+                          
  4766+                          	line	67
  4767+                          ;bmc.h: 67: bmcTx(datap+1, payload_size, hops, s
      +                          ettingsp->bmc_sends);
  4768+ 004982  0E02               	movlw	low(02h)
  4769+ 004984  0102               	movlb	2	; () banked
  4770+ 004986  0102               	movlb	2	; () banked
  4771+ 004988  2540               	addwf	((bmcRepeat@settingsp))&0ffh,w
  4772+ 00498A  6EE9               	movwf	c:fsr0l
  4773+ 00498C  0E00               	movlw	high(02h)
  4774+ 00498E  0102               	movlb	2	; () banked
  4775+ 004990  0102               	movlb	2	; () banked
  4776+ 004992  2141               	addwfc	((bmcRepeat@settingsp+1))&0ffh,w
  4777+ 004994  6EEA               	movwf	1+c:fsr0l
  4778+ 004996  50EF               	movf	indf0,w
  4779+ 004998  0102               	movlb	2	; () banked
  4780+ 00499A  0102               	movlb	2	; () banked
  4781+ 00499C  6F4A               	movwf	(0+(?_bmcTx+04h))&0ffh
  4782+ 00499E  C243  F249         	movff	(bmcRepeat@hops),0+(?_bmcTx+03h)
  4783+ 0049A2  C242  F248         	movff	(bmcRepeat@payload_size),0+(?_bmcTx+02h)
  4784+ 0049A6  0E01               	movlw	low(01h)
  4785+ 0049A8  0102               	movlb	2	; () banked
  4786+ 0049AA  0102               	movlb	2	; () banked
  4787+ 0049AC  253E               	addwf	((bmcRepeat@datap))&0ffh,w
  4788+ 0049AE  0102               	movlb	2	; () banked
  4789+                          	
  4790+ 0049B0  0102               	movlb	2	; () banked
  4791+ 0049B2  6F46               	movwf	((?_bmcTx))&0ffh
  4792+ 0049B4  0E00               	movlw	high(01h)
  4793+ 0049B6  0102               	movlb	2	; () banked
  4794+ 0049B8  0102               	movlb	2	; () banked
  4795+ 0049BA  213F               	addwfc	((bmcRepeat@datap+1))&0ffh,w
  4796+ 0049BC  0102               	movlb	2	; () banked
  4797+ 0049BE  6F47               	movwf	1+((?_bmcTx))&0ffh
  4798+ 0049C0  EC10  F01C         	call	_bmcTx	;wreg free
  4799+                          	line	68
  4800+                          	
  4801+ 0049C4                     l325:		; BSR set to: ?
  4802+                          
  4803+                          	line	69
  4804+                          ;bmc.h: 68: }
  4805+                          ;bmc.h: 69: }
  4806+ 0049C4                     l324:
  4807+                          			; BSR set to: ?
  4808+                          
  4809+ 0049C4  0012               	return
  4810+                          	opt stack 0
  4811+                          GLOBAL __end_of_bmcRepeat
  4812+ 0049C6                     	__end_of_bmcRepeat:
  4813+                          	FNSIZE	_bmcRepeat,4,4
  4814+                          ; =============== function _bmcRepeat ends =====
      +                          =======
  4815+                          
  4816+                          	signat	_bmcRepeat,8312
  4817+                          	global	___lldiv
  4818+                          	global	??___lldiv
  4819+                          	global	?___lldiv
  4820+                          
  4821+                          ; *************** function ___lldiv ************
      +                          *****
  4822+                          ; Defined at:
  4823+                          ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lldiv.c"
  4824+                          ; Parameters:
  4825+                          ;		dividend       size:   4offs:   0	type: unsig
      +                          ned long 
  4826+                          ;		divisor        size:   4offs:   4	type: unsig
      +                          ned long 
  4827+                          ; Auto variables:
  4828+                          ;		counter     	       	type: unsigned char 
  4829+                          ;		quotient    	       	type: unsigned long 
  4830+                          ; Return value:
  4831+                          ;		type: unsigned long 
  4832+                          ;		size: 4
  4833+                          ; Registers used:
  4834+                          ;		wreg, status,2, status,0
  4835+                          ; Tracked objects:
  4836+                          ;		On entry : 0/0
  4837+                          ;		On exit  : 0/0
  4838+                          ;		Unchanged: 0/0
  4839+                          ; Data sizes:
  4840+                          ;		Autos:    5
  4841+                          ;		Params:   8
  4842+                          ;		Temp:     1
  4843+                          ;		Total:   14
  4844+                          ; This function calls:
  4845+                          ;		Nothing
  4846+                          ; This function is called by:
  4847+                          ;		_sInit
  4848+                          ; This function uses a non-reentrant model
  4849+                          ; 
  4850+                                  psect   text13,class=CODE,space=0,reloc=
      +                          2
  4851+                          
  4852+                          	opt lm
  4853+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\lldiv.c"
  4854+                          	line	5
  4855+ 000000                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4856+                          	
  4857+ 00419C                     ___lldiv:		; BSR set to: ?
  4858+                          
  4859+                          	opt stack 28
  4860+                          	line	9
  4861+ 00419C  0E00               	movlw	low(0)
  4862+ 00419E  0102               	movlb	2	; () banked
  4863+ 0041A0  0102               	movlb	2	; () banked
  4864+ 0041A2  6F45               	movwf	((___lldiv@quotient))&0ffh
  4865+ 0041A4  0E00               	movlw	high(0)
  4866+ 0041A6  0102               	movlb	2	; () banked
  4867+ 0041A8  6F46               	movwf	((___lldiv@quotient+1))&0ffh
  4868+ 0041AA  0E00               	movlw	low highword(0)
  4869+ 0041AC  0102               	movlb	2	; () banked
  4870+ 0041AE  6F47               	movwf	((___lldiv@quotient+2))&0ffh
  4871+ 0041B0  0E00               	movlw	high highword(0)
  4872+ 0041B2  0102               	movlb	2	; () banked
  4873+ 0041B4  6F48               	movwf	((___lldiv@quotient+3))&0ffh
  4874+                          	line	10
  4875+ 0041B6  0102               	movlb	2	; () banked
  4876+ 0041B8  5143               	movf	((___lldiv@divisor+3))&0ffh,w
  4877+ 0041BA  1140               	iorwf ((___lldiv@divisor))&0ffh,w
  4878+ 0041BC  1141               	iorwf ((___lldiv@divisor+1))&0ffh,w
  4879+ 0041BE  1142               	iorwf ((___lldiv@divisor+2))&0ffh,w
  4880+                          
  4881+ 0041C0  B4D8               	btfsc	status,2
  4882+ 0041C2  EFE5  F020         	goto	u5861
  4883+ 0041C6  EFE7  F020         	goto	u5860
  4884+ 0041CA                     u5861:
  4885+ 0041CA  EF5A  F021         	goto	l1285
  4886+ 0041CE                     u5860:
  4887+                          	line	11
  4888+ 0041CE  0102               	movlb	2	; () banked
  4889+ 0041D0  6F49               	movwf	(??___lldiv+5+0)&0ffh
  4890+ 0041D2  0E01               	movlw	low(01h)
  4891+ 0041D4  0102               	movlb	2	; () banked
  4892+ 0041D6  0102               	movlb	2	; () banked
  4893+ 0041D8  6F44               	movwf	((___lldiv@counter))&0ffh
  4894+ 0041DA  0102               	movlb	2	; () banked
  4895+ 0041DC  5149               	movf	(??___lldiv+5+0)&0ffh,w
  4896+                          	line	12
  4897+ 0041DE  EFFE  F020         	goto	l1286
  4898+                          	
  4899+ 0041E2                     l1287:		; BSR set to: ?
  4900+                          
  4901+                          	line	13
  4902+ 0041E2  0102               	movlb	2	; () banked
  4903+ 0041E4  90D8               	bcf	status,0
  4904+ 0041E6  0102               	movlb	2	; () banked
  4905+ 0041E8  3740               	rlcf	((___lldiv@divisor))&0ffh
  4906+ 0041EA  0102               	movlb	2	; () banked
  4907+ 0041EC  3741               	rlcf	((___lldiv@divisor+1))&0ffh
  4908+ 0041EE  0102               	movlb	2	; () banked
  4909+ 0041F0  3742               	rlcf	((___lldiv@divisor+2))&0ffh
  4910+ 0041F2  0102               	movlb	2	; () banked
  4911+ 0041F4  3743               	rlcf	((___lldiv@divisor+3))&0ffh
  4912+                          	line	14
  4913+ 0041F6  0102               	movlb	2	; () banked
  4914+ 0041F8  0102               	movlb	2	; () banked
  4915+ 0041FA  2B44               	incf	((___lldiv@counter))&0ffh
  4916+                          	line	15
  4917+                          	
  4918+ 0041FC                     l1286:		; BSR set to: ?
  4919+                          
  4920+                          	line	12
  4921+ 0041FC  0102               	movlb	2	; () banked
  4922+                          	
  4923+ 0041FE  0102               	movlb	2	; () banked
  4924+ 004200  AF43               	btfss	((___lldiv@divisor+3))&0ffh,(31)&7
  4925+ 004202  EF05  F021         	goto	u5871
  4926+ 004206  EF07  F021         	goto	u5870
  4927+ 00420A                     u5871:
  4928+ 00420A  EFF1  F020         	goto	l1287
  4929+ 00420E                     u5870:
  4930+                          	
  4931+ 00420E                     l1288:		; BSR set to: ?
  4932+                          
  4933+                          	line	16
  4934+                          	
  4935+ 00420E                     l1291:		; BSR set to: ?
  4936+                          
  4937+                          	line	17
  4938+ 00420E  0102               	movlb	2	; () banked
  4939+ 004210  90D8               	bcf	status,0
  4940+ 004212  0102               	movlb	2	; () banked
  4941+ 004214  3745               	rlcf	((___lldiv@quotient))&0ffh
  4942+ 004216  0102               	movlb	2	; () banked
  4943+ 004218  3746               	rlcf	((___lldiv@quotient+1))&0ffh
  4944+ 00421A  0102               	movlb	2	; () banked
  4945+ 00421C  3747               	rlcf	((___lldiv@quotient+2))&0ffh
  4946+ 00421E  0102               	movlb	2	; () banked
  4947+ 004220  3748               	rlcf	((___lldiv@quotient+3))&0ffh
  4948+                          	line	18
  4949+ 004222  0102               	movlb	2	; () banked
  4950+ 004224  0102               	movlb	2	; () banked
  4951+ 004226  5140               	movf	((___lldiv@divisor))&0ffh,w
  4952+ 004228  0102               	movlb	2	; () banked
  4953+ 00422A  0102               	movlb	2	; () banked
  4954+ 00422C  5D3C               	subwf	((___lldiv@dividend))&0ffh,w
  4955+ 00422E  0102               	movlb	2	; () banked
  4956+ 004230  0102               	movlb	2	; () banked
  4957+ 004232  5141               	movf	((___lldiv@divisor+1))&0ffh,w
  4958+ 004234  0102               	movlb	2	; () banked
  4959+ 004236  0102               	movlb	2	; () banked
  4960+ 004238  593D               	subwfb	((___lldiv@dividend+1))&0ffh,w
  4961+ 00423A  0102               	movlb	2	; () banked
  4962+ 00423C  0102               	movlb	2	; () banked
  4963+ 00423E  5142               	movf	((___lldiv@divisor+2))&0ffh,w
  4964+ 004240  0102               	movlb	2	; () banked
  4965+ 004242  0102               	movlb	2	; () banked
  4966+ 004244  593E               	subwfb	((___lldiv@dividend+2))&0ffh,w
  4967+ 004246  0102               	movlb	2	; () banked
  4968+ 004248  0102               	movlb	2	; () banked
  4969+ 00424A  5143               	movf	((___lldiv@divisor+3))&0ffh,w
  4970+ 00424C  0102               	movlb	2	; () banked
  4971+ 00424E  0102               	movlb	2	; () banked
  4972+ 004250  593F               	subwfb	((___lldiv@dividend+3))&0ffh,w
  4973+ 004252  A0D8               	btfss	status,0
  4974+ 004254  EF2E  F021         	goto	u5881
  4975+ 004258  EF30  F021         	goto	u5880
  4976+ 00425C                     u5881:
  4977+ 00425C  EF4B  F021         	goto	l1292
  4978+ 004260                     u5880:
  4979+                          	line	19
  4980+ 004260  0102               	movlb	2	; () banked
  4981+ 004262  0102               	movlb	2	; () banked
  4982+ 004264  5140               	movf	((___lldiv@divisor))&0ffh,w
  4983+ 004266  0102               	movlb	2	; () banked
  4984+ 004268  0102               	movlb	2	; () banked
  4985+ 00426A  5F3C               	subwf	((___lldiv@dividend))&0ffh
  4986+ 00426C  0102               	movlb	2	; () banked
  4987+ 00426E  0102               	movlb	2	; () banked
  4988+ 004270  5141               	movf	((___lldiv@divisor+1))&0ffh,w
  4989+ 004272  0102               	movlb	2	; () banked
  4990+ 004274  0102               	movlb	2	; () banked
  4991+ 004276  5B3D               	subwfb	((___lldiv@dividend+1))&0ffh
  4992+ 004278  0102               	movlb	2	; () banked
  4993+ 00427A  0102               	movlb	2	; () banked
  4994+ 00427C  5142               	movf	((___lldiv@divisor+2))&0ffh,w
  4995+ 00427E  0102               	movlb	2	; () banked
  4996+ 004280  0102               	movlb	2	; () banked
  4997+ 004282  5B3E               	subwfb	((___lldiv@dividend+2))&0ffh
  4998+ 004284  0102               	movlb	2	; () banked
  4999+ 004286  0102               	movlb	2	; () banked
  5000+ 004288  5143               	movf	((___lldiv@divisor+3))&0ffh,w
  5001+ 00428A  0102               	movlb	2	; () banked
  5002+ 00428C  0102               	movlb	2	; () banked
  5003+ 00428E  5B3F               	subwfb	((___lldiv@dividend+3))&0ffh
  5004+                          	line	20
  5005+ 004290  0102               	movlb	2	; () banked
  5006+ 004292  0102               	movlb	2	; () banked
  5007+ 004294  8145               	bsf	(0+(0/8)+(___lldiv@quotient))&0ffh,(0)&7
  5008+                          	line	21
  5009+                          	
  5010+ 004296                     l1292:		; BSR set to: ?
  5011+                          
  5012+                          	line	22
  5013+ 004296  0102               	movlb	2	; () banked
  5014+ 004298  90D8               	bcf	status,0
  5015+ 00429A  0102               	movlb	2	; () banked
  5016+ 00429C  3343               	rrcf	((___lldiv@divisor+3))&0ffh
  5017+ 00429E  0102               	movlb	2	; () banked
  5018+ 0042A0  3342               	rrcf	((___lldiv@divisor+2))&0ffh
  5019+ 0042A2  0102               	movlb	2	; () banked
  5020+ 0042A4  3341               	rrcf	((___lldiv@divisor+1))&0ffh
  5021+ 0042A6  0102               	movlb	2	; () banked
  5022+ 0042A8  3340               	rrcf	((___lldiv@divisor))&0ffh
  5023+                          	line	23
  5024+ 0042AA  0102               	movlb	2	; () banked
  5025+ 0042AC  0102               	movlb	2	; () banked
  5026+ 0042AE  2F44               	decfsz	((___lldiv@counter))&0ffh
  5027+                          	
  5028+ 0042B0  EF07  F021         	goto	l1291
  5029+                          	
  5030+ 0042B4                     l1290:		; BSR set to: ?
  5031+                          
  5032+                          	line	24
  5033+                          	
  5034+ 0042B4                     l1285:		; BSR set to: ?
  5035+                          
  5036+                          	line	25
  5037+ 0042B4  C245  F23C         	movff	(___lldiv@quotient),(?___lldiv)
  5038+ 0042B8  C246  F23D         	movff	(___lldiv@quotient+1),(?___lldiv+1)
  5039+ 0042BC  C247  F23E         	movff	(___lldiv@quotient+2),(?___lldiv+2)
  5040+ 0042C0  C248  F23F         	movff	(___lldiv@quotient+3),(?___lldiv+3)
  5041+ 0042C4  EF64  F021         	goto	l1284
  5042+                          	line	26
  5043+ 0042C8                     l1284:
  5044+                          			; BSR set to: ?
  5045+                          
  5046+ 0042C8  0012               	return
  5047+                          	opt stack 0
  5048+                          GLOBAL __end_of___lldiv
  5049+ 0042CA                     	__end_of___lldiv:
  5050+                          	FNSIZE	___lldiv,6,8
  5051+                          ; =============== function ___lldiv ends =======
      +                          =====
  5052+                          
  5053+                          	signat	___lldiv,8316
  5054+                          	global	_nexaPrint
  5055+                          	global	??_nexaPrint
  5056+                          	global	?_nexaPrint
  5057+                          
  5058+                          ; *************** function _nexaPrint **********
      +                          *******
  5059+                          ; Defined at:
  5060+                          ;		line 70 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\nexa.h"
  5061+                          ; Parameters:
  5062+                          ;		data           size:   4offs:   0	type: unsig
      +                          ned long 
  5063+                          ; Auto variables:
  5064+                          ;		number      	       	type: unsigned long 
  5065+                          ;		j           	       	type: unsigned char 
  5066+                          ; Return value:
  5067+                          ;		type: void 
  5068+                          ;		size: 0
  5069+                          ; Registers used:
  5070+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
  5071+                          ; Tracked objects:
  5072+                          ;		On entry : 0/0
  5073+                          ;		On exit  : 0/0
  5074+                          ;		Unchanged: 0/0
  5075+                          ; Data sizes:
  5076+                          ;		Autos:    5
  5077+                          ;		Params:   4
  5078+                          ;		Temp:     4
  5079+                          ;		Total:   13
  5080+                          ; This function calls:
  5081+                          ;		_sPuts
  5082+                          ;		_sPutonehex
  5083+                          ;		_sPut
  5084+                          ;		_blinkRxLed
  5085+                          ; This function is called by:
  5086+                          ;		_nexaDecode
  5087+                          ; This function uses a non-reentrant model
  5088+                          ; 
  5089+                                  psect   text14,class=CODE,space=0,reloc=
      +                          2
  5090+                          
  5091+                          	opt lm
  5092+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\nexa.h"
  5093+                          	line	70
  5094+ 000000                     	__size_of_nexaPrint	equ	__end_of_nexaPrint-_nex
      +                          aPrint
  5095+                          ;nexa.h: 70: void nexaPrint(unsigned long data){
  5096+                          	
  5097+ 003006                     _nexaPrint:		; BSR set to: ?
  5098+                          
  5099+                          	opt stack 28
  5100+                          	line	72
  5101+ 003006  0EFC               	movlw	low(STR_4)
  5102+ 003008  0102               	movlb	2	; () banked
  5103+ 00300A  0102               	movlb	2	; () banked
  5104+ 00300C  6F5E               	movwf	((?_sPuts))&0ffh
  5105+ 00300E  0E7F               	movlw	high(STR_4)
  5106+ 003010  0102               	movlb	2	; () banked
  5107+ 003012  6F5F               	movwf	((?_sPuts+1))&0ffh
  5108+ 003014  EC9E  F026         	call	_sPuts	;wreg free
  5109+                          	line	73
  5110+                          ;nexa.h: 73: for (char j = 0; j < 6; j++){
  5111+ 003018  0102               	movlb	2	; () banked
  5112+ 00301A  6F41               	movwf	(??_nexaPrint+5+0)&0ffh
  5113+ 00301C  0E00               	movlw	low(0)
  5114+ 00301E  0102               	movlb	2	; () banked
  5115+ 003020  0102               	movlb	2	; () banked
  5116+ 003022  6F40               	movwf	((nexaPrint@j))&0ffh
  5117+ 003024  0102               	movlb	2	; () banked
  5118+ 003026  5141               	movf	(??_nexaPrint+5+0)&0ffh,w
  5119+ 003028  0E05               	movlw	(06h-1)
  5120+ 00302A  0102               	movlb	2	; () banked
  5121+ 00302C  0102               	movlb	2	; () banked
  5122+ 00302E  6540               	cpfsgt	((nexaPrint@j))&0ffh
  5123+ 003030  EF1C  F018         	goto	u7601
  5124+ 003034  EF1E  F018         	goto	u7600
  5125+ 003038                     u7601:
  5126+ 003038  EF20  F018         	goto	l436
  5127+ 00303C                     u7600:
  5128+ 00303C  EF69  F018         	goto	l437
  5129+                          	
  5130+ 003040                     l436:		; BSR set to: ?
  5131+                          
  5132+                          	line	74
  5133+                          ;nexa.h: 74: number = data & 0xF0000000;
  5134+ 003040  0E00               	movlw	0
  5135+ 003042  0102               	movlb	2	; () banked
  5136+ 003044  0102               	movlb	2	; () banked
  5137+ 003046  1538               	andwf	((nexaPrint@data))&0ffh,w
  5138+ 003048  0102               	movlb	2	; () banked
  5139+ 00304A  0102               	movlb	2	; () banked
  5140+ 00304C  6F3C               	movwf	((nexaPrint@number))&0ffh
  5141+ 00304E  0E00               	movlw	0
  5142+ 003050  0102               	movlb	2	; () banked
  5143+ 003052  0102               	movlb	2	; () banked
  5144+ 003054  1539               	andwf	((nexaPrint@data+1))&0ffh,w
  5145+ 003056  0102               	movlb	2	; () banked
  5146+ 003058  6F3D               	movwf	1+((nexaPrint@number))&0ffh
  5147+ 00305A  0E00               	movlw	0
  5148+ 00305C  0102               	movlb	2	; () banked
  5149+ 00305E  0102               	movlb	2	; () banked
  5150  003060  153A               	andwf	((nexaPrint@data+2))&0ffh,w
  5151  003062  0102               	movlb	2	; () banked
  5152  003064  6F3E               	movwf	2+((nexaPrint@number))&0ffh
  5153  003066  0EF0               	movlw	0F0h
  5154  003068  0102               	movlb	2	; () banked
  5155  00306A  0102               	movlb	2	; () banked
  5156  00306C  153B               	andwf	((nexaPrint@data+3))&0ffh,w
  5157  00306E  0102               	movlb	2	; () banked
  5158  003070  6F3F               	movwf	3+((nexaPrint@number))&0ffh
  5159                           	line	75
  5160                           ;nexa.h: 75: data <<= 4;
  5161  003072  0102               	movlb	2	; () banked
  5162  003074  0E04               	movlw	04h
  5163  003076                     u7615:
  5164  003076  90D8               	bcf	status,0
  5165  003078  0102               	movlb	2	; () banked
  5166  00307A  3738               	rlcf	((nexaPrint@data))&0ffh
  5167  00307C  0102               	movlb	2	; () banked
  5168  00307E  3739               	rlcf	((nexaPrint@data+1))&0ffh
  5169  003080  0102               	movlb	2	; () banked
  5170  003082  373A               	rlcf	((nexaPrint@data+2))&0ffh
  5171  003084  0102               	movlb	2	; () banked
  5172  003086  373B               	rlcf	((nexaPrint@data+3))&0ffh
  5173  003088  2EE8               	decfsz	wreg
  5174  00308A  EF3B  F018         	goto	u7615
  5175                           	line	76
  5176                           ;nexa.h: 76: number >>= 28;
  5177  00308E  0E1C               	movlw	01Ch
  5178  003090  0102               	movlb	2	; () banked
  5179  003092  6F41               	movwf	(??_nexaPrint+5+0)&0ffh
  5180  003094                     u7625:
  5181  003094  90D8               	bcf	status,0
  5182  003096  0102               	movlb	2	; () banked
  5183  003098  0102               	movlb	2	; () banked
  5184  00309A  333F               	rrcf	((nexaPrint@number+3))&0ffh
  5185  00309C  0102               	movlb	2	; () banked
  5186  00309E  333E               	rrcf	((nexaPrint@number+2))&0ffh
  5187  0030A0  0102               	movlb	2	; () banked
  5188  0030A2  333D               	rrcf	((nexaPrint@number+1))&0ffh
  5189  0030A4  0102               	movlb	2	; () banked
  5190  0030A6  333C               	rrcf	((nexaPrint@number))&0ffh
  5191  0030A8  0102               	movlb	2	; () banked
  5192  0030AA  2F41               	decfsz	(??_nexaPrint+5+0)&0ffh
  5193  0030AC  EF4A  F018         	goto	u7625
  5194                           
  5195                           	line	77
  5196                           ;nexa.h: 77: sPutonehex(number);
  5197  0030B0  C23C  F24A         	movff	(nexaPrint@number),(?_sPutonehex)
  5198  0030B4  EC4C  F028         	call	_sPutonehex	;wreg free
  5199                           	line	73
  5200  0030B8  0102               	movlb	2	; () banked
  5201  0030BA  0102               	movlb	2	; () banked
  5202  0030BC  2B40               	incf	((nexaPrint@j))&0ffh
  5203  0030BE  0E05               	movlw	(06h-1)
  5204  0030C0  0102               	movlb	2	; () banked
  5205  0030C2  0102               	movlb	2	; () banked
  5206  0030C4  6540               	cpfsgt	((nexaPrint@j))&0ffh
  5207  0030C6  EF67  F018         	goto	u7631
  5208  0030CA  EF69  F018         	goto	u7630
  5209  0030CE                     u7631:
  5210  0030CE  EF20  F018         	goto	l436
  5211  0030D2                     u7630:
  5212                           	
  5213  0030D2                     l437:		; BSR set to: ?
  5214                           
  5215                           	line	79
  5216                           ;nexa.h: 78: }
  5217                           ;nexa.h: 79: number = data & 0xFF000000;
  5218  0030D2  0E00               	movlw	0
  5219  0030D4  0102               	movlb	2	; () banked
  5220  0030D6  0102               	movlb	2	; () banked
  5221  0030D8  1538               	andwf	((nexaPrint@data))&0ffh,w
  5222  0030DA  0102               	movlb	2	; () banked
  5223  0030DC  0102               	movlb	2	; () banked
  5224  0030DE  6F3C               	movwf	((nexaPrint@number))&0ffh
  5225  0030E0  0E00               	movlw	0
  5226  0030E2  0102               	movlb	2	; () banked
  5227  0030E4  0102               	movlb	2	; () banked
  5228  0030E6  1539               	andwf	((nexaPrint@data+1))&0ffh,w
  5229  0030E8  0102               	movlb	2	; () banked
  5230  0030EA  6F3D               	movwf	1+((nexaPrint@number))&0ffh
  5231  0030EC  0E00               	movlw	0
  5232  0030EE  0102               	movlb	2	; () banked
  5233  0030F0  0102               	movlb	2	; () banked
  5234  0030F2  153A               	andwf	((nexaPrint@data+2))&0ffh,w
  5235  0030F4  0102               	movlb	2	; () banked
  5236  0030F6  6F3E               	movwf	2+((nexaPrint@number))&0ffh
  5237  0030F8  0EFF               	movlw	0FFh
  5238  0030FA  0102               	movlb	2	; () banked
  5239  0030FC  0102               	movlb	2	; () banked
  5240  0030FE  153B               	andwf	((nexaPrint@data+3))&0ffh,w
  5241  003100  0102               	movlb	2	; () banked
  5242  003102  6F3F               	movwf	3+((nexaPrint@number))&0ffh
  5243                           	line	80
  5244                           ;nexa.h: 80: number >>= 24;
  5245  003104  0E18               	movlw	018h
  5246  003106  0102               	movlb	2	; () banked
  5247  003108  6F41               	movwf	(??_nexaPrint+5+0)&0ffh
  5248  00310A                     u7645:
  5249  00310A  90D8               	bcf	status,0
  5250  00310C  0102               	movlb	2	; () banked
  5251  00310E  0102               	movlb	2	; () banked
  5252  003110  333F               	rrcf	((nexaPrint@number+3))&0ffh
  5253  003112  0102               	movlb	2	; () banked
  5254  003114  333E               	rrcf	((nexaPrint@number+2))&0ffh
  5255  003116  0102               	movlb	2	; () banked
  5256  003118  333D               	rrcf	((nexaPrint@number+1))&0ffh
  5257  00311A  0102               	movlb	2	; () banked
  5258  00311C  333C               	rrcf	((nexaPrint@number))&0ffh
  5259  00311E  0102               	movlb	2	; () banked
  5260  003120  2F41               	decfsz	(??_nexaPrint+5+0)&0ffh
  5261  003122  EF85  F018         	goto	u7645
  5262                           
  5263                           	line	81
  5264                           ;nexa.h: 81: sPut('0' + ((number & 0b11000000) >
                                 > 6));
  5265  003126  0EC0               	movlw	0C0h
  5266  003128  0102               	movlb	2	; () banked
  5267  00312A  0102               	movlb	2	; () banked
  5268  00312C  153C               	andwf	((nexaPrint@number))&0ffh,w
  5269  00312E  0102               	movlb	2	; () banked
  5270  003130  6F41               	movwf	(??_nexaPrint+5+0)&0ffh
  5271  003132  0E00               	movlw	0
  5272  003134  0102               	movlb	2	; () banked
  5273  003136  0102               	movlb	2	; () banked
  5274  003138  153D               	andwf	((nexaPrint@number+1))&0ffh,w
  5275  00313A  0102               	movlb	2	; () banked
  5276  00313C  6F42               	movwf	1+(??_nexaPrint+5+0)&0ffh
  5277  00313E  0E00               	movlw	0
  5278  003140  0102               	movlb	2	; () banked
  5279  003142  0102               	movlb	2	; () banked
  5280  003144  153E               	andwf	((nexaPrint@number+2))&0ffh,w
  5281  003146  0102               	movlb	2	; () banked
  5282  003148  6F43               	movwf	2+(??_nexaPrint+5+0)&0ffh
  5283  00314A  0E00               	movlw	0
  5284  00314C  0102               	movlb	2	; () banked
  5285  00314E  0102               	movlb	2	; () banked
  5286  003150  153F               	andwf	((nexaPrint@number+3))&0ffh,w
  5287  003152  0102               	movlb	2	; () banked
  5288  003154  6F44               	movwf	3+(??_nexaPrint+5+0)&0ffh
  5289  003156  0E07               	movlw	06h+1
  5290  003158  EFB4  F018         	goto	u7650
  5291  00315C                     u7655:
  5292  00315C  90D8               	bcf	status,0
  5293  00315E  0102               	movlb	2	; () banked
  5294  003160  3344               	rrcf	(??_nexaPrint+5+3)&0ffh
  5295  003162  3343               	rrcf	(??_nexaPrint+5+2)&0ffh
  5296  003164  3342               	rrcf	(??_nexaPrint+5+1)&0ffh
  5297  003166  3341               	rrcf	(??_nexaPrint+5+0)&0ffh
  5298  003168                     u7650:
  5299  003168  2EE8               	decfsz	wreg
  5300  00316A  EFAE  F018         	goto	u7655
  5301  00316E  0102               	movlb	2	; () banked
  5302  003170  5141               	movf	(??_nexaPrint+5+0)&0ffh,w
  5303  003172  0F30               	addlw	low(030h)
  5304  003174  0102               	movlb	2	; () banked
  5305  003176  0102               	movlb	2	; () banked
  5306  003178  6F60               	movwf	((?_sPut))&0ffh
  5307  00317A  ECDF  F025         	call	_sPut	;wreg free
  5308                           	line	82
  5309                           ;nexa.h: 82: if (number & 0b00100000) sPut('1');
  5310  00317E  0102               	movlb	2	; () banked
  5311                           	
  5312  003180  0102               	movlb	2	; () banked
  5313  003182  AB3C               	btfss	((nexaPrint@number))&0ffh,(5)&7
  5314  003184  EFC6  F018         	goto	u7661
  5315  003188  EFC8  F018         	goto	u7660
  5316  00318C                     u7661:
  5317  00318C  EFD4  F018         	goto	l439
  5318  003190                     u7660:
  5319  003190  0102               	movlb	2	; () banked
  5320  003192  6F41               	movwf	(??_nexaPrint+5+0)&0ffh
  5321  003194  0E31               	movlw	low(031h)
  5322  003196  0102               	movlb	2	; () banked
  5323  003198  0102               	movlb	2	; () banked
  5324  00319A  6F60               	movwf	((?_sPut))&0ffh
  5325  00319C  0102               	movlb	2	; () banked
  5326  00319E  5141               	movf	(??_nexaPrint+5+0)&0ffh,w
  5327  0031A0  ECDF  F025         	call	_sPut	;wreg free
  5328  0031A4  EFDE  F018         	goto	l440
  5329                           	line	83
  5330                           	
  5331  0031A8                     l439:		; BSR set to: ?
  5332                           
  5333                           ;nexa.h: 83: else sPut('0');
  5334  0031A8  0102               	movlb	2	; () banked
  5335  0031AA  6F41               	movwf	(??_nexaPrint+5+0)&0ffh
  5336  0031AC  0E30               	movlw	low(030h)
  5337  0031AE  0102               	movlb	2	; () banked
  5338  0031B0  0102               	movlb	2	; () banked
  5339  0031B2  6F60               	movwf	((?_sPut))&0ffh
  5340  0031B4  0102               	movlb	2	; () banked
  5341  0031B6  5141               	movf	(??_nexaPrint+5+0)&0ffh,w
  5342  0031B8  ECDF  F025         	call	_sPut	;wreg free
  5343                           	
  5344  0031BC                     l440:		; BSR set to: ?
  5345                           
  5346                           	line	84
  5347                           ;nexa.h: 84: sPutonehex(number & 0b00001111);
  5348  0031BC  0102               	movlb	2	; () banked
  5349  0031BE  0102               	movlb	2	; () banked
  5350  0031C0  513C               	movf	((nexaPrint@number))&0ffh,w
  5351  0031C2  0B0F               	andlw	low(0Fh)
  5352  0031C4  0102               	movlb	2	; () banked
  5353  0031C6  0102               	movlb	2	; () banked
  5354  0031C8  6F4A               	movwf	((?_sPutonehex))&0ffh
  5355  0031CA  EC4C  F028         	call	_sPutonehex	;wreg free
  5356                           	line	85
  5357                           ;nexa.h: 85: if (number & 0b00010000) sPut('1');
  5358  0031CE  0102               	movlb	2	; () banked
  5359                           	
  5360  0031D0  0102               	movlb	2	; () banked
  5361  0031D2  A93C               	btfss	((nexaPrint@number))&0ffh,(4)&7
  5362  0031D4  EFEE  F018         	goto	u7671
  5363  0031D8  EFF0  F018         	goto	u7670
  5364  0031DC                     u7671:
  5365  0031DC  EFFC  F018         	goto	l441
  5366  0031E0                     u7670:
  5367  0031E0  0102               	movlb	2	; () banked
  5368  0031E2  6F41               	movwf	(??_nexaPrint+5+0)&0ffh
  5369  0031E4  0E31               	movlw	low(031h)
  5370  0031E6  0102               	movlb	2	; () banked
  5371  0031E8  0102               	movlb	2	; () banked
  5372  0031EA  6F60               	movwf	((?_sPut))&0ffh
  5373  0031EC  0102               	movlb	2	; () banked
  5374  0031EE  5141               	movf	(??_nexaPrint+5+0)&0ffh,w
  5375  0031F0  ECDF  F025         	call	_sPut	;wreg free
  5376  0031F4  EF06  F019         	goto	l442
  5377                           	line	86
  5378                           	
  5379  0031F8                     l441:		; BSR set to: ?
  5380                           
  5381                           ;nexa.h: 86: else sPut('0');
  5382  0031F8  0102               	movlb	2	; () banked
  5383  0031FA  6F41               	movwf	(??_nexaPrint+5+0)&0ffh
  5384  0031FC  0E30               	movlw	low(030h)
  5385  0031FE  0102               	movlb	2	; () banked
  5386  003200  0102               	movlb	2	; () banked
  5387  003202  6F60               	movwf	((?_sPut))&0ffh
  5388  003204  0102               	movlb	2	; () banked
  5389  003206  5141               	movf	(??_nexaPrint+5+0)&0ffh,w
  5390  003208  ECDF  F025         	call	_sPut	;wreg free
  5391                           	
  5392  00320C                     l442:		; BSR set to: ?
  5393                           
  5394                           	line	87
  5395                           ;nexa.h: 87: sPut(10);
  5396  00320C  0102               	movlb	2	; () banked
  5397  00320E  6F41               	movwf	(??_nexaPrint+5+0)&0ffh
  5398  003210  0E0A               	movlw	low(0Ah)
  5399  003212  0102               	movlb	2	; () banked
  5400  003214  0102               	movlb	2	; () banked
  5401  003216  6F60               	movwf	((?_sPut))&0ffh
  5402  003218  0102               	movlb	2	; () banked
  5403  00321A  5141               	movf	(??_nexaPrint+5+0)&0ffh,w
  5404  00321C  ECDF  F025         	call	_sPut	;wreg free
  5405                           	line	88
  5406                           ;nexa.h: 88: blinkRxLed();
  5407  003220  EC0D  F029         	call	_blinkRxLed	;wreg free
  5408                           	line	89
  5409                           ;nexa.h: 89: }
  5410  003224                     l435:
  5411                           			; BSR set to: ?
  5412                           
  5413  003224  0012               	return
  5414                           	opt stack 0
  5415                           GLOBAL __end_of_nexaPrint
  5416  003226                     	__end_of_nexaPrint:
  5417                           	FNSIZE	_nexaPrint,9,4
  5418                           ; =============== function _nexaPrint ends =====
                                 =======
  5419                           
  5420                           	signat	_nexaPrint,4216
  5421                           	global	_gaoPrint
  5422                           	global	??_gaoPrint
  5423                           	global	?_gaoPrint
  5424                           
  5425                           ; *************** function _gaoPrint ***********
                                 ******
  5426                           ; Defined at:
  5427                           ;		line 44 in file "D:\Hobby\Prosjekter\MultiTRX
                                 \Firmware\FW1.2\gaomod.h"
  5428                           ; Parameters:
  5429                           ;		data           size:   4offs:   0	type: unsig
                                 ned long 
  5430                           ; Auto variables:
  5431                           ;		number      	       	type: unsigned long 
  5432                           ;		j           	       	type: unsigned char 
  5433                           ; Return value:
  5434                           ;		type: void 
  5435                           ;		size: 0
  5436                           ; Registers used:
  5437                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  5438                           ; Tracked objects:
  5439                           ;		On entry : 0/0
  5440                           ;		On exit  : 0/0
  5441                           ;		Unchanged: 0/0
  5442                           ; Data sizes:
  5443                           ;		Autos:    5
  5444                           ;		Params:   4
  5445                           ;		Temp:     4
  5446                           ;		Total:   13
  5447                           ; This function calls:
  5448                           ;		_sPuts
  5449                           ;		_sPutonehex
  5450                           ;		_sPut
  5451                           ;		_blinkRxLed
  5452                           ; This function is called by:
  5453                           ;		_gaoDecode
  5454                           ; This function uses a non-reentrant model
  5455                           ; 
  5456                                   psect   text15,class=CODE,space=0,reloc=
                                 2
  5457                           
  5458                           	opt lm
  5459                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\gaomod.h"
  5460                           	line	44
  5461  000000                     	__size_of_gaoPrint	equ	__end_of_gaoPrint-_gaoPr
                                 int
  5462                           ;gaomod.h: 44: void gaoPrint(unsigned long data)
                                 {
  5463                           	
  5464  003A00                     _gaoPrint:		; BSR set to: ?
  5465                           
  5466                           	opt stack 28
  5467                           	line	46
  5468  003A00  0EF9               	movlw	low(STR_3)
  5469  003A02  0102               	movlb	2	; () banked
  5470  003A04  0102               	movlb	2	; () banked
  5471  003A06  6F5E               	movwf	((?_sPuts))&0ffh
  5472  003A08  0E7F               	movlw	high(STR_3)
  5473  003A0A  0102               	movlb	2	; () banked
  5474  003A0C  6F5F               	movwf	((?_sPuts+1))&0ffh
  5475  003A0E  EC9E  F026         	call	_sPuts	;wreg free
  5476                           	line	47
  5477                           ;gaomod.h: 47: for (char j = 0; j < 5; j++){
  5478  003A12  0102               	movlb	2	; () banked
  5479  003A14  6F41               	movwf	(??_gaoPrint+5+0)&0ffh
  5480  003A16  0E00               	movlw	low(0)
  5481  003A18  0102               	movlb	2	; () banked
  5482  003A1A  0102               	movlb	2	; () banked
  5483  003A1C  6F40               	movwf	((gaoPrint@j))&0ffh
  5484  003A1E  0102               	movlb	2	; () banked
  5485  003A20  5141               	movf	(??_gaoPrint+5+0)&0ffh,w
  5486  003A22  0E04               	movlw	(05h-1)
  5487  003A24  0102               	movlb	2	; () banked
  5488  003A26  0102               	movlb	2	; () banked
  5489  003A28  6540               	cpfsgt	((gaoPrint@j))&0ffh
  5490  003A2A  EF19  F01D         	goto	u7541
  5491  003A2E  EF1B  F01D         	goto	u7540
  5492  003A32                     u7541:
  5493  003A32  EF1D  F01D         	goto	l371
  5494  003A36                     u7540:
  5495  003A36  EF66  F01D         	goto	l372
  5496                           	
  5497  003A3A                     l371:		; BSR set to: ?
  5498                           
  5499                           	line	48
  5500                           ;gaomod.h: 48: number = data & 0xF0000000;
  5501  003A3A  0E00               	movlw	0
  5502  003A3C  0102               	movlb	2	; () banked
  5503  003A3E  0102               	movlb	2	; () banked
  5504  003A40  1538               	andwf	((gaoPrint@data))&0ffh,w
  5505  003A42  0102               	movlb	2	; () banked
  5506  003A44  0102               	movlb	2	; () banked
  5507  003A46  6F3C               	movwf	((gaoPrint@number))&0ffh
  5508  003A48  0E00               	movlw	0
  5509  003A4A  0102               	movlb	2	; () banked
  5510  003A4C  0102               	movlb	2	; () banked
  5511  003A4E  1539               	andwf	((gaoPrint@data+1))&0ffh,w
  5512  003A50  0102               	movlb	2	; () banked
  5513  003A52  6F3D               	movwf	1+((gaoPrint@number))&0ffh
  5514  003A54  0E00               	movlw	0
  5515  003A56  0102               	movlb	2	; () banked
  5516  003A58  0102               	movlb	2	; () banked
  5517  003A5A  153A               	andwf	((gaoPrint@data+2))&0ffh,w
  5518  003A5C  0102               	movlb	2	; () banked
  5519  003A5E  6F3E               	movwf	2+((gaoPrint@number))&0ffh
  5520  003A60  0EF0               	movlw	0F0h
  5521  003A62  0102               	movlb	2	; () banked
  5522  003A64  0102               	movlb	2	; () banked
  5523  003A66  153B               	andwf	((gaoPrint@data+3))&0ffh,w
  5524  003A68  0102               	movlb	2	; () banked
  5525  003A6A  6F3F               	movwf	3+((gaoPrint@number))&0ffh
  5526                           	line	49
  5527                           ;gaomod.h: 49: data <<= 4;
  5528  003A6C  0102               	movlb	2	; () banked
  5529  003A6E  0E04               	movlw	04h
  5530  003A70                     u7555:
  5531  003A70  90D8               	bcf	status,0
  5532  003A72  0102               	movlb	2	; () banked
  5533  003A74  3738               	rlcf	((gaoPrint@data))&0ffh
  5534  003A76  0102               	movlb	2	; () banked
  5535  003A78  3739               	rlcf	((gaoPrint@data+1))&0ffh
  5536  003A7A  0102               	movlb	2	; () banked
  5537  003A7C  373A               	rlcf	((gaoPrint@data+2))&0ffh
  5538  003A7E  0102               	movlb	2	; () banked
  5539  003A80  373B               	rlcf	((gaoPrint@data+3))&0ffh
  5540  003A82  2EE8               	decfsz	wreg
  5541  003A84  EF38  F01D         	goto	u7555
  5542                           	line	50
  5543                           ;gaomod.h: 50: number >>= 28;
  5544  003A88  0E1C               	movlw	01Ch
  5545  003A8A  0102               	movlb	2	; () banked
  5546  003A8C  6F41               	movwf	(??_gaoPrint+5+0)&0ffh
  5547  003A8E                     u7565:
  5548  003A8E  90D8               	bcf	status,0
  5549  003A90  0102               	movlb	2	; () banked
  5550  003A92  0102               	movlb	2	; () banked
  5551  003A94  333F               	rrcf	((gaoPrint@number+3))&0ffh
  5552  003A96  0102               	movlb	2	; () banked
  5553  003A98  333E               	rrcf	((gaoPrint@number+2))&0ffh
  5554  003A9A  0102               	movlb	2	; () banked
  5555  003A9C  333D               	rrcf	((gaoPrint@number+1))&0ffh
  5556  003A9E  0102               	movlb	2	; () banked
  5557  003AA0  333C               	rrcf	((gaoPrint@number))&0ffh
  5558  003AA2  0102               	movlb	2	; () banked
  5559  003AA4  2F41               	decfsz	(??_gaoPrint+5+0)&0ffh
  5560  003AA6  EF47  F01D         	goto	u7565
  5561                           
  5562                           	line	51
  5563                           ;gaomod.h: 51: sPutonehex(number);
  5564  003AAA  C23C  F24A         	movff	(gaoPrint@number),(?_sPutonehex)
  5565  003AAE  EC4C  F028         	call	_sPutonehex	;wreg free
  5566                           	line	47
  5567  003AB2  0102               	movlb	2	; () banked
  5568  003AB4  0102               	movlb	2	; () banked
  5569  003AB6  2B40               	incf	((gaoPrint@j))&0ffh
  5570  003AB8  0E04               	movlw	(05h-1)
  5571  003ABA  0102               	movlb	2	; () banked
  5572  003ABC  0102               	movlb	2	; () banked
  5573  003ABE  6540               	cpfsgt	((gaoPrint@j))&0ffh
  5574  003AC0  EF64  F01D         	goto	u7571
  5575  003AC4  EF66  F01D         	goto	u7570
  5576  003AC8                     u7571:
  5577  003AC8  EF1D  F01D         	goto	l371
  5578  003ACC                     u7570:
  5579                           	
  5580  003ACC                     l372:		; BSR set to: ?
  5581                           
  5582                           	line	53
  5583                           ;gaomod.h: 52: }
  5584                           ;gaomod.h: 53: if ((data & 0xF0000000) == 0xF000
                                 0000) sPut('1');
  5585  003ACC  0E00               	movlw	0
  5586  003ACE  0102               	movlb	2	; () banked
  5587  003AD0  0102               	movlb	2	; () banked
  5588  003AD2  1538               	andwf	((gaoPrint@data))&0ffh,w
  5589  003AD4  0102               	movlb	2	; () banked
  5590  003AD6  6F41               	movwf	(??_gaoPrint+5+0)&0ffh
  5591  003AD8  0E00               	movlw	0
  5592  003ADA  0102               	movlb	2	; () banked
  5593  003ADC  0102               	movlb	2	; () banked
  5594  003ADE  1539               	andwf	((gaoPrint@data+1))&0ffh,w
  5595  003AE0  0102               	movlb	2	; () banked
  5596  003AE2  6F42               	movwf	1+(??_gaoPrint+5+0)&0ffh
  5597  003AE4  0E00               	movlw	0
  5598  003AE6  0102               	movlb	2	; () banked
  5599  003AE8  0102               	movlb	2	; () banked
  5600  003AEA  153A               	andwf	((gaoPrint@data+2))&0ffh,w
  5601  003AEC  0102               	movlb	2	; () banked
  5602  003AEE  6F43               	movwf	2+(??_gaoPrint+5+0)&0ffh
  5603  003AF0  0EF0               	movlw	0F0h
  5604  003AF2  0102               	movlb	2	; () banked
  5605  003AF4  0102               	movlb	2	; () banked
  5606  003AF6  153B               	andwf	((gaoPrint@data+3))&0ffh,w
  5607  003AF8  0102               	movlb	2	; () banked
  5608  003AFA  6F44               	movwf	3+(??_gaoPrint+5+0)&0ffh
  5609  003AFC  0102               	movlb	2	; () banked
  5610  003AFE  5144               	movf	(??_gaoPrint+5+3)&0ffh,w
  5611  003B00  0AF0               	xorlw	240
  5612  003B02  1141               	iorwf (??_gaoPrint+5+0)&0ffh,w
  5613  003B04  1142               	iorwf (??_gaoPrint+5+1)&0ffh,w
  5614  003B06  1143               	iorwf (??_gaoPrint+5+2)&0ffh,w
  5615                           
  5616  003B08  A4D8               	btfss	status,2
  5617  003B0A  EF89  F01D         	goto	u7581
  5618  003B0E  EF8B  F01D         	goto	u7580
  5619  003B12                     u7581:
  5620  003B12  EF97  F01D         	goto	l374
  5621  003B16                     u7580:
  5622  003B16  0102               	movlb	2	; () banked
  5623  003B18  6F41               	movwf	(??_gaoPrint+5+0)&0ffh
  5624  003B1A  0E31               	movlw	low(031h)
  5625  003B1C  0102               	movlb	2	; () banked
  5626  003B1E  0102               	movlb	2	; () banked
  5627  003B20  6F60               	movwf	((?_sPut))&0ffh
  5628  003B22  0102               	movlb	2	; () banked
  5629  003B24  5141               	movf	(??_gaoPrint+5+0)&0ffh,w
  5630  003B26  ECDF  F025         	call	_sPut	;wreg free
  5631  003B2A  EFD2  F01D         	goto	l375
  5632                           	line	54
  5633                           	
  5634  003B2E                     l374:		; BSR set to: ?
  5635                           
  5636                           ;gaomod.h: 54: else if ((data & 0xF0000000) == 0
                                 xA0000000) sPut('2');
  5637  003B2E  0E00               	movlw	0
  5638  003B30  0102               	movlb	2	; () banked
  5639  003B32  0102               	movlb	2	; () banked
  5640  003B34  1538               	andwf	((gaoPrint@data))&0ffh,w
  5641  003B36  0102               	movlb	2	; () banked
  5642  003B38  6F41               	movwf	(??_gaoPrint+5+0)&0ffh
  5643  003B3A  0E00               	movlw	0
  5644  003B3C  0102               	movlb	2	; () banked
  5645  003B3E  0102               	movlb	2	; () banked
  5646  003B40  1539               	andwf	((gaoPrint@data+1))&0ffh,w
  5647  003B42  0102               	movlb	2	; () banked
  5648  003B44  6F42               	movwf	1+(??_gaoPrint+5+0)&0ffh
  5649  003B46  0E00               	movlw	0
  5650  003B48  0102               	movlb	2	; () banked
  5651  003B4A  0102               	movlb	2	; () banked
  5652  003B4C  153A               	andwf	((gaoPrint@data+2))&0ffh,w
  5653  003B4E  0102               	movlb	2	; () banked
  5654  003B50  6F43               	movwf	2+(??_gaoPrint+5+0)&0ffh
  5655  003B52  0EF0               	movlw	0F0h
  5656  003B54  0102               	movlb	2	; () banked
  5657  003B56  0102               	movlb	2	; () banked
  5658  003B58  153B               	andwf	((gaoPrint@data+3))&0ffh,w
  5659  003B5A  0102               	movlb	2	; () banked
  5660  003B5C  6F44               	movwf	3+(??_gaoPrint+5+0)&0ffh
  5661  003B5E  0102               	movlb	2	; () banked
  5662  003B60  5144               	movf	(??_gaoPrint+5+3)&0ffh,w
  5663  003B62  0AA0               	xorlw	160
  5664  003B64  1141               	iorwf (??_gaoPrint+5+0)&0ffh,w
  5665  003B66  1142               	iorwf (??_gaoPrint+5+1)&0ffh,w
  5666  003B68  1143               	iorwf (??_gaoPrint+5+2)&0ffh,w
  5667                           
  5668  003B6A  A4D8               	btfss	status,2
  5669  003B6C  EFBA  F01D         	goto	u7591
  5670  003B70  EFBC  F01D         	goto	u7590
  5671  003B74                     u7591:
  5672  003B74  EFC8  F01D         	goto	l376
  5673  003B78                     u7590:
  5674  003B78  0102               	movlb	2	; () banked
  5675  003B7A  6F41               	movwf	(??_gaoPrint+5+0)&0ffh
  5676  003B7C  0E32               	movlw	low(032h)
  5677  003B7E  0102               	movlb	2	; () banked
  5678  003B80  0102               	movlb	2	; () banked
  5679  003B82  6F60               	movwf	((?_sPut))&0ffh
  5680  003B84  0102               	movlb	2	; () banked
  5681  003B86  5141               	movf	(??_gaoPrint+5+0)&0ffh,w
  5682  003B88  ECDF  F025         	call	_sPut	;wreg free
  5683  003B8C  EFD2  F01D         	goto	l375
  5684                           	line	55
  5685                           	
  5686  003B90                     l376:		; BSR set to: ?
  5687                           
  5688                           ;gaomod.h: 55: else sPut('0');
  5689  003B90  0102               	movlb	2	; () banked
  5690  003B92  6F41               	movwf	(??_gaoPrint+5+0)&0ffh
  5691  003B94  0E30               	movlw	low(030h)
  5692  003B96  0102               	movlb	2	; () banked
  5693  003B98  0102               	movlb	2	; () banked
  5694  003B9A  6F60               	movwf	((?_sPut))&0ffh
  5695  003B9C  0102               	movlb	2	; () banked
  5696  003B9E  5141               	movf	(??_gaoPrint+5+0)&0ffh,w
  5697  003BA0  ECDF  F025         	call	_sPut	;wreg free
  5698                           	
  5699  003BA4                     l377:		; BSR set to: ?
  5700                           
  5701                           	
  5702  003BA4                     l375:		; BSR set to: ?
  5703                           
  5704                           	line	56
  5705                           ;gaomod.h: 56: sPut(10);
  5706  003BA4  0102               	movlb	2	; () banked
  5707  003BA6  6F41               	movwf	(??_gaoPrint+5+0)&0ffh
  5708  003BA8  0E0A               	movlw	low(0Ah)
  5709  003BAA  0102               	movlb	2	; () banked
  5710  003BAC  0102               	movlb	2	; () banked
  5711  003BAE  6F60               	movwf	((?_sPut))&0ffh
  5712  003BB0  0102               	movlb	2	; () banked
  5713  003BB2  5141               	movf	(??_gaoPrint+5+0)&0ffh,w
  5714  003BB4  ECDF  F025         	call	_sPut	;wreg free
  5715                           	line	57
  5716                           ;gaomod.h: 57: blinkRxLed();
  5717  003BB8  EC0D  F029         	call	_blinkRxLed	;wreg free
  5718                           	line	58
  5719                           ;gaomod.h: 58: }
  5720  003BBC                     l370:
  5721                           			; BSR set to: ?
  5722                           
  5723  003BBC  0012               	return
  5724                           	opt stack 0
  5725                           GLOBAL __end_of_gaoPrint
  5726  003BBE                     	__end_of_gaoPrint:
  5727                           	FNSIZE	_gaoPrint,9,4
  5728                           ; =============== function _gaoPrint ends ======
                                 ======
  5729                           
  5730                           	signat	_gaoPrint,4216
  5731                           	global	_bmcPrint
  5732                           	global	??_bmcPrint
  5733                           	global	?_bmcPrint
  5734                           
  5735                           ; *************** function _bmcPrint ***********
                                 ******
  5736                           ; Defined at:
  5737                           ;		line 51 in file "D:\Hobby\Prosjekter\MultiTRX
                                 \Firmware\FW1.2\bmc.h"
  5738                           ; Parameters:
  5739                           ;		datap          size:   2offs:   0	type: PTR u
                                 nsigned char ; Largest target is 33
  5740                           ;		 -> F2852(33), 
  5741                           ;		in_hex         size:   1offs:   2	type: unsig
                                 ned char 
  5742                           ; Auto variables:
  5743                           ;		payload_size	       	type: unsigned char 
  5744                           ;		j           	       	type: unsigned char 
  5745                           ; Return value:
  5746                           ;		type: void 
  5747                           ;		size: 0
  5748                           ; Registers used:
  5749                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  5750                           ; Tracked objects:
  5751                           ;		On entry : 0/0
  5752                           ;		On exit  : 0/0
  5753                           ;		Unchanged: 0/0
  5754                           ; Data sizes:
  5755                           ;		Autos:    2
  5756                           ;		Params:   3
  5757                           ;		Temp:     5
  5758                           ;		Total:   10
  5759                           ; This function calls:
  5760                           ;		_sPuts
  5761                           ;		_sPuthex
  5762                           ;		_sPut
  5763                           ;		_blinkRxLed
  5764                           ; This function is called by:
  5765                           ;		_bmcDecode
  5766                           ; This function uses a non-reentrant model
  5767                           ; 
  5768                                   psect   text16,class=CODE,space=0,reloc=
                                 2
  5769                           
  5770                           	opt lm
  5771                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\bmc.h"
  5772                           	line	51
  5773  000000                     	__size_of_bmcPrint	equ	__end_of_bmcPrint-_bmcPr
                                 int
  5774                           ;bmc.h: 51: void bmcPrint(char *datap, char in_h
                                 ex){
  5775                           	
  5776  0043E4                     _bmcPrint:		; BSR set to: ?
  5777                           
  5778                           	opt stack 28
  5779                           	line	52
  5780  0043E4  C23E  FFE9         	movff	(bmcPrint@datap),fsr0l
  5781  0043E8  C23F  FFEA         	movff	(bmcPrint@datap+1),fsr0h
  5782  0043EC  50EF               	movf	indf0,w
  5783  0043EE  0B1F               	andlw	low(01Fh)
  5784  0043F0  0102               	movlb	2	; () banked
  5785  0043F2  0102               	movlb	2	; () banked
  5786  0043F4  6F41               	movwf	((bmcPrint@payload_size))&0ffh
  5787                           	line	53
  5788                           ;bmc.h: 53: sPuts("$B");
  5789  0043F6  0EF6               	movlw	low(STR_2)
  5790  0043F8  0102               	movlb	2	; () banked
  5791  0043FA  0102               	movlb	2	; () banked
  5792  0043FC  6F5E               	movwf	((?_sPuts))&0ffh
  5793  0043FE  0E7F               	movlw	high(STR_2)
  5794  004400  0102               	movlb	2	; () banked
  5795  004402  6F5F               	movwf	((?_sPuts+1))&0ffh
  5796  004404  EC9E  F026         	call	_sPuts	;wreg free
  5797                           	line	54
  5798                           ;bmc.h: 54: for(char j=1; j<(payload_size+1); j+
                                 +){
  5799  004408  0102               	movlb	2	; () banked
  5800  00440A  6F43               	movwf	(??_bmcPrint+2+0)&0ffh
  5801  00440C  0E01               	movlw	low(01h)
  5802  00440E  0102               	movlb	2	; () banked
  5803  004410  0102               	movlb	2	; () banked
  5804  004412  6F42               	movwf	((bmcPrint@j))&0ffh
  5805  004414  0102               	movlb	2	; () banked
  5806  004416  5143               	movf	(??_bmcPrint+2+0)&0ffh,w
  5807  004418  EF43  F022         	goto	l321
  5808                           	
  5809  00441C                     l318:		; BSR set to: ?
  5810                           
  5811                           	line	55
  5812                           ;bmc.h: 55: if(in_hex) sPuthex(datap[j]);
  5813  00441C  0102               	movlb	2	; () banked
  5814  00441E  0102               	movlb	2	; () banked
  5815  004420  5140               	movf	((bmcPrint@in_hex))&0ffh,w
  5816  004422  B4D8               	btfsc	status,2
  5817  004424  EF16  F022         	goto	u7521
  5818  004428  EF18  F022         	goto	u7520
  5819  00442C                     u7521:
  5820  00442C  EF2D  F022         	goto	l322
  5821  004430                     u7520:
  5822  004430  0102               	movlb	2	; () banked
  5823  004432  0102               	movlb	2	; () banked
  5824  004434  5142               	movf	((bmcPrint@j))&0ffh,w
  5825  004436  0102               	movlb	2	; () banked
  5826  004438  0102               	movlb	2	; () banked
  5827  00443A  253E               	addwf	((bmcPrint@datap))&0ffh,w
  5828  00443C  6EE9               	movwf	c:fsr0l
  5829  00443E  0102               	movlb	2	; () banked
  5830  004440  0E00               	movlw	0
  5831  004442  0102               	movlb	2	; () banked
  5832  004444  0102               	movlb	2	; () banked
  5833  004446  213F               	addwfc	((bmcPrint@datap+1))&0ffh,w
  5834  004448  6EEA               	movwf	1+c:fsr0l
  5835  00444A  50EF               	movf	indf0,w
  5836  00444C  0102               	movlb	2	; () banked
  5837  00444E  0102               	movlb	2	; () banked
  5838  004450  6F48               	movwf	((?_sPuthex))&0ffh
  5839  004452  ECBF  F028         	call	_sPuthex	;wreg free
  5840  004456  EF40  F022         	goto	l323
  5841                           	line	56
  5842                           	
  5843  00445A                     l322:		; BSR set to: ?
  5844                           
  5845                           ;bmc.h: 56: else sPut(datap[j]);
  5846  00445A  0102               	movlb	2	; () banked
  5847  00445C  0102               	movlb	2	; () banked
  5848  00445E  5142               	movf	((bmcPrint@j))&0ffh,w
  5849  004460  0102               	movlb	2	; () banked
  5850  004462  0102               	movlb	2	; () banked
  5851  004464  253E               	addwf	((bmcPrint@datap))&0ffh,w
  5852  004466  6EE9               	movwf	c:fsr0l
  5853  004468  0102               	movlb	2	; () banked
  5854  00446A  0E00               	movlw	0
  5855  00446C  0102               	movlb	2	; () banked
  5856  00446E  0102               	movlb	2	; () banked
  5857  004470  213F               	addwfc	((bmcPrint@datap+1))&0ffh,w
  5858  004472  6EEA               	movwf	1+c:fsr0l
  5859  004474  50EF               	movf	indf0,w
  5860  004476  0102               	movlb	2	; () banked
  5861  004478  0102               	movlb	2	; () banked
  5862  00447A  6F60               	movwf	((?_sPut))&0ffh
  5863  00447C  ECDF  F025         	call	_sPut	;wreg free
  5864                           	
  5865  004480                     l323:		; BSR set to: ?
  5866                           
  5867                           	line	54
  5868  004480  0102               	movlb	2	; () banked
  5869  004482  0102               	movlb	2	; () banked
  5870  004484  2B42               	incf	((bmcPrint@j))&0ffh
  5871                           	
  5872  004486                     l321:		; BSR set to: ?
  5873                           
  5874  004486  0102               	movlb	2	; () banked
  5875  004488  C241  F243         	movff	(bmcPrint@payload_size),??_bmcPrint+2+0
  5876  00448C  0102               	movlb	2	; () banked
  5877  00448E  6B44               	clrf	(??_bmcPrint+2+0+1)&0ffh
  5878  004490  0E01               	movlw	01h
  5879  004492  0102               	movlb	2	; () banked
  5880  004494  2743               	addwf	(??_bmcPrint+2+0)&0ffh
  5881  004496  0E00               	movlw	0
  5882  004498  2344               	addwfc	(??_bmcPrint+2+1)&0ffh
  5883  00449A  0102               	movlb	2	; () banked
  5884  00449C  C242  F245         	movff	(bmcPrint@j),??_bmcPrint+4+0
  5885  0044A0  0102               	movlb	2	; () banked
  5886  0044A2  6B46               	clrf	(??_bmcPrint+4+0+1)&0ffh
  5887  0044A4  0102               	movlb	2	; () banked
  5888  0044A6  5146               	movf	(??_bmcPrint+4+1)&0ffh,w
  5889  0044A8  0A80               	xorlw	80h
  5890  0044AA  0102               	movlb	2	; () banked
  5891  0044AC  6F47               	movwf	(??_bmcPrint+6+0)&0ffh
  5892  0044AE  5143               	movf	(??_bmcPrint+2+0)&0ffh,w
  5893  0044B0  0102               	movlb	2	; () banked
  5894  0044B2  5D45               	subwf	(??_bmcPrint+4+0)&0ffh,w
  5895  0044B4  0102               	movlb	2	; () banked
  5896  0044B6  5144               	movf	(??_bmcPrint+2+1)&0ffh,w
  5897  0044B8  0A80               	xorlw	80h
  5898  0044BA  0102               	movlb	2	; () banked
  5899  0044BC  5947               	subwfb	(??_bmcPrint+6+0)&0ffh,w
  5900  0044BE  A0D8               	btfss	status,0
  5901  0044C0  EF64  F022         	goto	u7531
  5902  0044C4  EF66  F022         	goto	u7530
  5903  0044C8                     u7531:
  5904  0044C8  EF0E  F022         	goto	l318
  5905  0044CC                     u7530:
  5906                           	
  5907  0044CC                     l319:		; BSR set to: ?
  5908                           
  5909                           	line	58
  5910                           ;bmc.h: 57: }
  5911                           ;bmc.h: 58: sPut(10);
  5912  0044CC  0102               	movlb	2	; () banked
  5913  0044CE  6F43               	movwf	(??_bmcPrint+2+0)&0ffh
  5914  0044D0  0E0A               	movlw	low(0Ah)
  5915  0044D2  0102               	movlb	2	; () banked
  5916  0044D4  0102               	movlb	2	; () banked
  5917  0044D6  6F60               	movwf	((?_sPut))&0ffh
  5918  0044D8  0102               	movlb	2	; () banked
  5919  0044DA  5143               	movf	(??_bmcPrint+2+0)&0ffh,w
  5920  0044DC  ECDF  F025         	call	_sPut	;wreg free
  5921                           	line	59
  5922                           ;bmc.h: 59: blinkRxLed();
  5923  0044E0  EC0D  F029         	call	_blinkRxLed	;wreg free
  5924                           	line	60
  5925                           ;bmc.h: 60: }
  5926  0044E4                     l317:
  5927                           			; BSR set to: ?
  5928                           
  5929  0044E4  0012               	return
  5930                           	opt stack 0
  5931                           GLOBAL __end_of_bmcPrint
  5932  0044E6                     	__end_of_bmcPrint:
  5933                           	FNSIZE	_bmcPrint,7,3
  5934                           ; =============== function _bmcPrint ends ======
                                 ======
  5935                           
  5936                           	signat	_bmcPrint,8312
  5937                           	global	_kangthaiTx
  5938                           	global	??_kangthaiTx
  5939                           	global	?_kangthaiTx
  5940                           
  5941                           ; *************** function _kangthaiTx *********
                                 ********
  5942                           ; Defined at:
  5943                           ;		line 1 in file "D:\Hobby\Prosjekter\MultiTRX\
                                 Firmware\FW1.2\kangthai.h"
  5944                           ; Parameters:
  5945                           ;		s              size:   2offs:   0	type: PTR u
                                 nsigned char ; Largest target is 32
  5946                           ;		 -> main@line(32), 
  5947                           ;		resends        size:   1offs:   2	type: unsig
                                 ned char 
  5948                           ; Auto variables:
  5949                           ;		temp        	       	type: unsigned long 
  5950                           ;		data        	       	type: unsigned long 
  5951                           ;		j           	       	type: unsigned char 
  5952                           ;		j           	       	type: unsigned char 
  5953                           ;		resend      	       	type: unsigned char 
  5954                           ;		bitnr       	       	type: unsigned char 
  5955                           ; Return value:
  5956                           ;		type: void 
  5957                           ;		size: 0
  5958                           ; Registers used:
  5959                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  5960                           ; Tracked objects:
  5961                           ;		On entry : 0/0
  5962                           ;		On exit  : 0/0
  5963                           ;		Unchanged: 0/0
  5964                           ; Data sizes:
  5965                           ;		Autos:   12
  5966                           ;		Params:   3
  5967                           ;		Temp:     5
  5968                           ;		Total:   20
  5969                           ; This function calls:
  5970                           ;		_startTransmit
  5971                           ;		_waitTimer
  5972                           ;		_stopTransmit
  5973                           ; This function is called by:
  5974                           ;		_parseCmd
  5975                           ; This function uses a non-reentrant model
  5976                           ; 
  5977                                   psect   text17,class=CODE,space=0,reloc=
                                 2
  5978                           
  5979                           	opt lm
  5980                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\kangthai.h"
  5981                           	line	1
  5982  000000                     	__size_of_kangthaiTx	equ	__end_of_kangthaiTx-_k
                                 angthaiTx
  5983                           ;kangthai.h: 1: void kangthaiTx(char *s, char re
                                 sends){
  5984                           	
  5985  001E42                     _kangthaiTx:		; BSR set to: ?
  5986                           
  5987                           	opt stack 28
  5988                           	line	4
  5989  001E42  0E00               	movlw	low(0)
  5990  001E44  0102               	movlb	2	; () banked
  5991  001E46  0102               	movlb	2	; () banked
  5992  001E48  6F41               	movwf	((kangthaiTx@data))&0ffh
  5993  001E4A  0E00               	movlw	high(0)
  5994  001E4C  0102               	movlb	2	; () banked
  5995  001E4E  6F42               	movwf	((kangthaiTx@data+1))&0ffh
  5996  001E50  0E00               	movlw	low highword(0)
  5997  001E52  0102               	movlb	2	; () banked
  5998  001E54  6F43               	movwf	((kangthaiTx@data+2))&0ffh
  5999  001E56  0E00               	movlw	high highword(0)
  6000  001E58  0102               	movlb	2	; () banked
  6001  001E5A  6F44               	movwf	((kangthaiTx@data+3))&0ffh
  6002                           	line	7
  6003                           ;kangthai.h: 5: unsigned long temp;
  6004                           ;kangthai.h: 7: for (char j=0; j<5; j++){
  6005  001E5C  0102               	movlb	2	; () banked
  6006  001E5E  6F49               	movwf	(??_kangthaiTx+12+0)&0ffh
  6007  001E60  0E00               	movlw	low(0)
  6008  001E62  0102               	movlb	2	; () banked
  6009  001E64  0102               	movlb	2	; () banked
  6010  001E66  6F45               	movwf	((kangthaiTx@j))&0ffh
  6011  001E68  0102               	movlb	2	; () banked
  6012  001E6A  5149               	movf	(??_kangthaiTx+12+0)&0ffh,w
  6013  001E6C  0E04               	movlw	(05h-1)
  6014  001E6E  0102               	movlb	2	; () banked
  6015  001E70  0102               	movlb	2	; () banked
  6016  001E72  6545               	cpfsgt	((kangthaiTx@j))&0ffh
  6017  001E74  EF3E  F00F         	goto	u7361
  6018  001E78  EF40  F00F         	goto	u7360
  6019  001E7C                     u7361:
  6020  001E7C  EF42  F00F         	goto	l506
  6021  001E80                     u7360:
  6022  001E80  EF8B  F00F         	goto	l507
  6023                           	
  6024  001E84                     l506:		; BSR set to: ?
  6025                           
  6026                           	line	8
  6027                           ;kangthai.h: 8: data |= s[j] - '0';
  6028  001E84  0102               	movlb	2	; () banked
  6029  001E86  0102               	movlb	2	; () banked
  6030  001E88  5145               	movf	((kangthaiTx@j))&0ffh,w
  6031  001E8A  0102               	movlb	2	; () banked
  6032  001E8C  0102               	movlb	2	; () banked
  6033  001E8E  253A               	addwf	((kangthaiTx@s))&0ffh,w
  6034  001E90  6EE9               	movwf	c:fsr0l
  6035  001E92  0102               	movlb	2	; () banked
  6036  001E94  0E00               	movlw	0
  6037  001E96  0102               	movlb	2	; () banked
  6038  001E98  0102               	movlb	2	; () banked
  6039  001E9A  213B               	addwfc	((kangthaiTx@s+1))&0ffh,w
  6040  001E9C  6EEA               	movwf	1+c:fsr0l
  6041  001E9E  50EF               	movf	indf0,w
  6042  001EA0  0102               	movlb	2	; () banked
  6043  001EA2  6F49               	movwf	(??_kangthaiTx+12+0)&0ffh
  6044  001EA4  0ED0               	movlw	low(0FFD0h)
  6045  001EA6  0102               	movlb	2	; () banked
  6046  001EA8  2549               	addwf	((??_kangthaiTx+12+0))&0ffh,w
  6047  001EAA  0102               	movlb	2	; () banked
  6048  001EAC  6F4A               	movwf	(??_kangthaiTx+13+0)&0ffh
  6049  001EAE  0102               	movlb	2	; () banked
  6050  001EB0  6B4B               	clrf	1+(??_kangthaiTx+13+0)&0ffh
  6051  001EB2  0EFF               	movlw	high(0FFD0h)
  6052  001EB4  0102               	movlb	2	; () banked
  6053  001EB6  234B               	addwfc	1+(??_kangthaiTx+13+0)&0ffh
  6054                           	
  6055  001EB8  0102               	movlb	2	; () banked
  6056  001EBA  6B4C               	clrf	2+(??_kangthaiTx+13+0)&0ffh
  6057                           	
  6058  001EBC  0102               	movlb	2	; () banked
  6059  001EBE  6B4D               	clrf	3+(??_kangthaiTx+13+0)&0ffh
  6060  001EC0  0102               	movlb	2	; () banked
  6061  001EC2  514A               	movf	(??_kangthaiTx+13+0)&0ffh,w
  6062  001EC4  0102               	movlb	2	; () banked
  6063  001EC6  0102               	movlb	2	; () banked
  6064  001EC8  1341               	iorwf	((kangthaiTx@data))&0ffh
  6065  001ECA  0102               	movlb	2	; () banked
  6066  001ECC  514B               	movf	(??_kangthaiTx+13+1)&0ffh,w
  6067  001ECE  0102               	movlb	2	; () banked
  6068  001ED0  0102               	movlb	2	; () banked
  6069  001ED2  1342               	iorwf	((kangthaiTx@data+1))&0ffh
  6070  001ED4  0102               	movlb	2	; () banked
  6071  001ED6  514C               	movf	(??_kangthaiTx+13+2)&0ffh,w
  6072  001ED8  0102               	movlb	2	; () banked
  6073  001EDA  0102               	movlb	2	; () banked
  6074  001EDC  1343               	iorwf	((kangthaiTx@data+2))&0ffh
  6075  001EDE  0102               	movlb	2	; () banked
  6076  001EE0  514D               	movf	(??_kangthaiTx+13+3)&0ffh,w
  6077  001EE2  0102               	movlb	2	; () banked
  6078  001EE4  0102               	movlb	2	; () banked
  6079  001EE6  1344               	iorwf	((kangthaiTx@data+3))&0ffh
  6080                           
  6081                           	line	9
  6082                           ;kangthai.h: 9: data <<= 1;
  6083  001EE8  0102               	movlb	2	; () banked
  6084  001EEA  90D8               	bcf	status,0
  6085  001EEC  0102               	movlb	2	; () banked
  6086  001EEE  3741               	rlcf	((kangthaiTx@data))&0ffh
  6087  001EF0  0102               	movlb	2	; () banked
  6088  001EF2  3742               	rlcf	((kangthaiTx@data+1))&0ffh
  6089  001EF4  0102               	movlb	2	; () banked
  6090  001EF6  3743               	rlcf	((kangthaiTx@data+2))&0ffh
  6091  001EF8  0102               	movlb	2	; () banked
  6092  001EFA  3744               	rlcf	((kangthaiTx@data+3))&0ffh
  6093                           	line	7
  6094  001EFC  0102               	movlb	2	; () banked
  6095  001EFE  0102               	movlb	2	; () banked
  6096  001F00  2B45               	incf	((kangthaiTx@j))&0ffh
  6097  001F02  0E04               	movlw	(05h-1)
  6098  001F04  0102               	movlb	2	; () banked
  6099  001F06  0102               	movlb	2	; () banked
  6100  001F08  6545               	cpfsgt	((kangthaiTx@j))&0ffh
  6101  001F0A  EF89  F00F         	goto	u7371
  6102  001F0E  EF8B  F00F         	goto	u7370
  6103  001F12                     u7371:
  6104  001F12  EF42  F00F         	goto	l506
  6105  001F16                     u7370:
  6106                           	
  6107  001F16                     l507:		; BSR set to: ?
  6108                           
  6109                           	line	11
  6110                           ;kangthai.h: 10: }
  6111                           ;kangthai.h: 11: for (char j=0; j<5; j++){
  6112  001F16  0102               	movlb	2	; () banked
  6113  001F18  6F49               	movwf	(??_kangthaiTx+12+0)&0ffh
  6114  001F1A  0E00               	movlw	low(0)
  6115  001F1C  0102               	movlb	2	; () banked
  6116  001F1E  0102               	movlb	2	; () banked
  6117  001F20  6F46               	movwf	((kangthaiTx@j_270))&0ffh
  6118  001F22  0102               	movlb	2	; () banked
  6119  001F24  5149               	movf	(??_kangthaiTx+12+0)&0ffh,w
  6120  001F26  0E04               	movlw	(05h-1)
  6121  001F28  0102               	movlb	2	; () banked
  6122  001F2A  0102               	movlb	2	; () banked
  6123  001F2C  6546               	cpfsgt	((kangthaiTx@j_270))&0ffh
  6124  001F2E  EF9B  F00F         	goto	u7381
  6125  001F32  EF9D  F00F         	goto	u7380
  6126  001F36                     u7381:
  6127  001F36  EF9F  F00F         	goto	l509
  6128  001F3A                     u7380:
  6129  001F3A  EFDD  F00F         	goto	l510
  6130                           	
  6131  001F3E                     l509:		; BSR set to: ?
  6132                           
  6133                           	line	12
  6134                           ;kangthai.h: 12: if((s[5] - 'A') == j) data |= 1
                                 ;
  6135  001F3E  0E05               	movlw	low(05h)
  6136  001F40  0102               	movlb	2	; () banked
  6137  001F42  0102               	movlb	2	; () banked
  6138  001F44  253A               	addwf	((kangthaiTx@s))&0ffh,w
  6139  001F46  6EE9               	movwf	c:fsr0l
  6140  001F48  0E00               	movlw	high(05h)
  6141  001F4A  0102               	movlb	2	; () banked
  6142  001F4C  0102               	movlb	2	; () banked
  6143  001F4E  213B               	addwfc	((kangthaiTx@s+1))&0ffh,w
  6144  001F50  6EEA               	movwf	1+c:fsr0l
  6145  001F52  50EF               	movf	indf0,w
  6146  001F54  0102               	movlb	2	; () banked
  6147  001F56  6F49               	movwf	(??_kangthaiTx+12+0)&0ffh
  6148  001F58  0EBF               	movlw	low(0FFBFh)
  6149  001F5A  0102               	movlb	2	; () banked
  6150  001F5C  2549               	addwf	((??_kangthaiTx+12+0))&0ffh,w
  6151  001F5E  0102               	movlb	2	; () banked
  6152  001F60  6F4A               	movwf	(??_kangthaiTx+13+0)&0ffh
  6153  001F62  0102               	movlb	2	; () banked
  6154  001F64  6B4B               	clrf	1+(??_kangthaiTx+13+0)&0ffh
  6155  001F66  0EFF               	movlw	high(0FFBFh)
  6156  001F68  0102               	movlb	2	; () banked
  6157  001F6A  234B               	addwfc	1+(??_kangthaiTx+13+0)&0ffh
  6158  001F6C  0102               	movlb	2	; () banked
  6159  001F6E  0102               	movlb	2	; () banked
  6160  001F70  5146               	movf	((kangthaiTx@j_270))&0ffh,w
  6161  001F72  0102               	movlb	2	; () banked
  6162  001F74  194A               	xorwf	(??_kangthaiTx+13+0)&0ffh,w
  6163  001F76  114B               	iorwf	(??_kangthaiTx+13+1)&0ffh,w
  6164                           
  6165  001F78  A4D8               	btfss	status,2
  6166  001F7A  EFC1  F00F         	goto	u7391
  6167  001F7E  EFC3  F00F         	goto	u7390
  6168  001F82                     u7391:
  6169  001F82  EFC6  F00F         	goto	l512
  6170  001F86                     u7390:
  6171  001F86  0102               	movlb	2	; () banked
  6172  001F88  0102               	movlb	2	; () banked
  6173  001F8A  8141               	bsf	(0+(0/8)+(kangthaiTx@data))&0ffh,(0)&7
  6174                           	
  6175  001F8C                     l512:		; BSR set to: ?
  6176                           
  6177                           	line	13
  6178                           ;kangthai.h: 13: data <<= 1;
  6179  001F8C  0102               	movlb	2	; () banked
  6180  001F8E  90D8               	bcf	status,0
  6181  001F90  0102               	movlb	2	; () banked
  6182  001F92  3741               	rlcf	((kangthaiTx@data))&0ffh
  6183  001F94  0102               	movlb	2	; () banked
  6184  001F96  3742               	rlcf	((kangthaiTx@data+1))&0ffh
  6185  001F98  0102               	movlb	2	; () banked
  6186  001F9A  3743               	rlcf	((kangthaiTx@data+2))&0ffh
  6187  001F9C  0102               	movlb	2	; () banked
  6188  001F9E  3744               	rlcf	((kangthaiTx@data+3))&0ffh
  6189                           	line	11
  6190  001FA0  0102               	movlb	2	; () banked
  6191  001FA2  0102               	movlb	2	; () banked
  6192  001FA4  2B46               	incf	((kangthaiTx@j_270))&0ffh
  6193  001FA6  0E04               	movlw	(05h-1)
  6194  001FA8  0102               	movlb	2	; () banked
  6195  001FAA  0102               	movlb	2	; () banked
  6196  001FAC  6546               	cpfsgt	((kangthaiTx@j_270))&0ffh
  6197  001FAE  EFDB  F00F         	goto	u7401
  6198  001FB2  EFDD  F00F         	goto	u7400
  6199  001FB6                     u7401:
  6200  001FB6  EF9F  F00F         	goto	l509
  6201  001FBA                     u7400:
  6202                           	
  6203  001FBA                     l510:		; BSR set to: ?
  6204                           
  6205                           	line	15
  6206                           ;kangthai.h: 14: }
  6207                           ;kangthai.h: 15: data <<= 1;
  6208  001FBA  0102               	movlb	2	; () banked
  6209  001FBC  90D8               	bcf	status,0
  6210  001FBE  0102               	movlb	2	; () banked
  6211  001FC0  3741               	rlcf	((kangthaiTx@data))&0ffh
  6212  001FC2  0102               	movlb	2	; () banked
  6213  001FC4  3742               	rlcf	((kangthaiTx@data+1))&0ffh
  6214  001FC6  0102               	movlb	2	; () banked
  6215  001FC8  3743               	rlcf	((kangthaiTx@data+2))&0ffh
  6216  001FCA  0102               	movlb	2	; () banked
  6217  001FCC  3744               	rlcf	((kangthaiTx@data+3))&0ffh
  6218                           	line	16
  6219                           ;kangthai.h: 16: if(s[6] == '1') data |= 0b10;
  6220  001FCE  0E06               	movlw	low(06h)
  6221  001FD0  0102               	movlb	2	; () banked
  6222  001FD2  0102               	movlb	2	; () banked
  6223  001FD4  253A               	addwf	((kangthaiTx@s))&0ffh,w
  6224  001FD6  6EE9               	movwf	c:fsr0l
  6225  001FD8  0E00               	movlw	high(06h)
  6226  001FDA  0102               	movlb	2	; () banked
  6227  001FDC  0102               	movlb	2	; () banked
  6228  001FDE  213B               	addwfc	((kangthaiTx@s+1))&0ffh,w
  6229  001FE0  6EEA               	movwf	1+c:fsr0l
  6230  001FE2  0E31               	movlw	(031h)&0ffh
  6231  001FE4  62EF               	cpfseq	indf0
  6232  001FE6  EFF7  F00F         	goto	u7411
  6233  001FEA  EFF9  F00F         	goto	u7410
  6234  001FEE                     u7411:
  6235  001FEE  EFFE  F00F         	goto	l513
  6236  001FF2                     u7410:
  6237  001FF2  0102               	movlb	2	; () banked
  6238  001FF4  0102               	movlb	2	; () banked
  6239  001FF6  8341               	bsf	(0+(1/8)+(kangthaiTx@data))&0ffh,(1)&7
  6240  001FF8  EF01  F010         	goto	l514
  6241                           	line	17
  6242                           	
  6243  001FFC                     l513:		; BSR set to: ?
  6244                           
  6245                           ;kangthai.h: 17: else data |= 0b01;
  6246  001FFC  0102               	movlb	2	; () banked
  6247  001FFE  0102               	movlb	2	; () banked
  6248  002000  8141               	bsf	(0+(0/8)+(kangthaiTx@data))&0ffh,(0)&7
  6249                           	
  6250  002002                     l514:		; BSR set to: ?
  6251                           
  6252                           	line	19
  6253                           ;kangthai.h: 19: startTransmit();
  6254  002002  ECFF  F028         	call	_startTransmit	;wreg free
  6255                           	line	20
  6256                           ;kangthai.h: 20: for (char resend = 0; resend < 
                                 resends; resend++){
  6257  002006  0102               	movlb	2	; () banked
  6258  002008  6F49               	movwf	(??_kangthaiTx+12+0)&0ffh
  6259  00200A  0E00               	movlw	low(0)
  6260  00200C  0102               	movlb	2	; () banked
  6261  00200E  0102               	movlb	2	; () banked
  6262  002010  6F47               	movwf	((kangthaiTx@resend))&0ffh
  6263  002012  0102               	movlb	2	; () banked
  6264  002014  5149               	movf	(??_kangthaiTx+12+0)&0ffh,w
  6265  002016  EFB0  F010         	goto	l518
  6266                           	
  6267  00201A                     l515:		; BSR set to: ?
  6268                           
  6269                           	line	21
  6270                           ;kangthai.h: 21: temp = data;
  6271  00201A  C241  F23D         	movff	(kangthaiTx@data),(kangthaiTx@temp)
  6272  00201E  C242  F23E         	movff	(kangthaiTx@data+1),(kangthaiTx@temp+1)
  6273  002022  C243  F23F         	movff	(kangthaiTx@data+2),(kangthaiTx@temp+2)
  6274  002026  C244  F240         	movff	(kangthaiTx@data+3),(kangthaiTx@temp+3)
  6275                           	line	22
  6276                           ;kangthai.h: 22: LATB2 = 1;
  6277  00202A  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  6278                           	line	23
  6279                           ;kangthai.h: 23: waitTimer(357);
  6280  00202C  0E65               	movlw	low(0165h)
  6281  00202E  0102               	movlb	2	; () banked
  6282  002030  0102               	movlb	2	; () banked
  6283  002032  6F56               	movwf	((?_waitTimer))&0ffh
  6284  002034  0E01               	movlw	high(0165h)
  6285  002036  0102               	movlb	2	; () banked
  6286  002038  6F57               	movwf	((?_waitTimer+1))&0ffh
  6287  00203A  EC04  F028         	call	_waitTimer	;wreg free
  6288                           	line	24
  6289                           ;kangthai.h: 24: LATB2 = 0;
  6290  00203E  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  6291                           	line	25
  6292                           ;kangthai.h: 25: waitTimer(357*3);
  6293  002040  0E2F               	movlw	low(042Fh)
  6294  002042  0102               	movlb	2	; () banked
  6295  002044  0102               	movlb	2	; () banked
  6296  002046  6F56               	movwf	((?_waitTimer))&0ffh
  6297  002048  0E04               	movlw	high(042Fh)
  6298  00204A  0102               	movlb	2	; () banked
  6299  00204C  6F57               	movwf	((?_waitTimer+1))&0ffh
  6300  00204E  EC04  F028         	call	_waitTimer	;wreg free
  6301                           	line	26
  6302                           ;kangthai.h: 26: for (char bitnr = 0; bitnr < 12
                                 ; bitnr++){
  6303  002052  0102               	movlb	2	; () banked
  6304  002054  6F49               	movwf	(??_kangthaiTx+12+0)&0ffh
  6305  002056  0E00               	movlw	low(0)
  6306  002058  0102               	movlb	2	; () banked
  6307  00205A  0102               	movlb	2	; () banked
  6308  00205C  6F48               	movwf	((kangthaiTx@bitnr))&0ffh
  6309  00205E  0102               	movlb	2	; () banked
  6310  002060  5149               	movf	(??_kangthaiTx+12+0)&0ffh,w
  6311  002062  0E0B               	movlw	(0Ch-1)
  6312  002064  0102               	movlb	2	; () banked
  6313  002066  0102               	movlb	2	; () banked
  6314  002068  6548               	cpfsgt	((kangthaiTx@bitnr))&0ffh
  6315  00206A  EF39  F010         	goto	u7421
  6316  00206E  EF3B  F010         	goto	u7420
  6317  002072                     u7421:
  6318  002072  EF3D  F010         	goto	l519
  6319  002076                     u7420:
  6320  002076  EFA4  F010         	goto	l520
  6321                           	
  6322  00207A                     l519:		; BSR set to: ?
  6323                           
  6324                           	line	27
  6325                           ;kangthai.h: 27: LATB2 = 1;
  6326  00207A  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  6327                           	line	28
  6328                           ;kangthai.h: 28: if(temp & 0b100000000000) waitT
                                 imer(357);
  6329  00207C  0102               	movlb	2	; () banked
  6330                           	
  6331  00207E  0102               	movlb	2	; () banked
  6332  002080  A73E               	btfss	((kangthaiTx@temp+1))&0ffh,(11)&7
  6333  002082  EF45  F010         	goto	u7431
  6334  002086  EF47  F010         	goto	u7430
  6335  00208A                     u7431:
  6336  00208A  EF52  F010         	goto	l522
  6337  00208E                     u7430:
  6338  00208E  0E65               	movlw	low(0165h)
  6339  002090  0102               	movlb	2	; () banked
  6340  002092  0102               	movlb	2	; () banked
  6341  002094  6F56               	movwf	((?_waitTimer))&0ffh
  6342  002096  0E01               	movlw	high(0165h)
  6343  002098  0102               	movlb	2	; () banked
  6344  00209A  6F57               	movwf	((?_waitTimer+1))&0ffh
  6345  00209C  EC04  F028         	call	_waitTimer	;wreg free
  6346  0020A0  EF5B  F010         	goto	l523
  6347                           	line	29
  6348                           	
  6349  0020A4                     l522:		; BSR set to: ?
  6350                           
  6351                           ;kangthai.h: 29: else waitTimer(357*3);
  6352  0020A4  0E2F               	movlw	low(042Fh)
  6353  0020A6  0102               	movlb	2	; () banked
  6354  0020A8  0102               	movlb	2	; () banked
  6355  0020AA  6F56               	movwf	((?_waitTimer))&0ffh
  6356  0020AC  0E04               	movlw	high(042Fh)
  6357  0020AE  0102               	movlb	2	; () banked
  6358  0020B0  6F57               	movwf	((?_waitTimer+1))&0ffh
  6359  0020B2  EC04  F028         	call	_waitTimer	;wreg free
  6360                           	
  6361  0020B6                     l523:		; BSR set to: ?
  6362                           
  6363                           	line	30
  6364                           ;kangthai.h: 30: LATB2 = 0;
  6365  0020B6  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  6366                           	line	31
  6367                           ;kangthai.h: 31: if(temp & 0b100000000000) waitT
                                 imer(357*3);
  6368  0020B8  0102               	movlb	2	; () banked
  6369                           	
  6370  0020BA  0102               	movlb	2	; () banked
  6371  0020BC  A73E               	btfss	((kangthaiTx@temp+1))&0ffh,(11)&7
  6372  0020BE  EF63  F010         	goto	u7441
  6373  0020C2  EF65  F010         	goto	u7440
  6374  0020C6                     u7441:
  6375  0020C6  EF70  F010         	goto	l524
  6376  0020CA                     u7440:
  6377  0020CA  0E2F               	movlw	low(042Fh)
  6378  0020CC  0102               	movlb	2	; () banked
  6379  0020CE  0102               	movlb	2	; () banked
  6380  0020D0  6F56               	movwf	((?_waitTimer))&0ffh
  6381  0020D2  0E04               	movlw	high(042Fh)
  6382  0020D4  0102               	movlb	2	; () banked
  6383  0020D6  6F57               	movwf	((?_waitTimer+1))&0ffh
  6384  0020D8  EC04  F028         	call	_waitTimer	;wreg free
  6385  0020DC  EF79  F010         	goto	l525
  6386                           	line	32
  6387                           	
  6388  0020E0                     l524:		; BSR set to: ?
  6389                           
  6390                           ;kangthai.h: 32: else waitTimer(357);
  6391  0020E0  0E65               	movlw	low(0165h)
  6392  0020E2  0102               	movlb	2	; () banked
  6393  0020E4  0102               	movlb	2	; () banked
  6394  0020E6  6F56               	movwf	((?_waitTimer))&0ffh
  6395  0020E8  0E01               	movlw	high(0165h)
  6396  0020EA  0102               	movlb	2	; () banked
  6397  0020EC  6F57               	movwf	((?_waitTimer+1))&0ffh
  6398  0020EE  EC04  F028         	call	_waitTimer	;wreg free
  6399                           	
  6400  0020F2                     l525:		; BSR set to: ?
  6401                           
  6402                           	line	33
  6403                           ;kangthai.h: 33: LATB2 = 1;
  6404  0020F2  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  6405                           	line	34
  6406                           ;kangthai.h: 34: waitTimer(357);
  6407  0020F4  0E65               	movlw	low(0165h)
  6408  0020F6  0102               	movlb	2	; () banked
  6409  0020F8  0102               	movlb	2	; () banked
  6410  0020FA  6F56               	movwf	((?_waitTimer))&0ffh
  6411  0020FC  0E01               	movlw	high(0165h)
  6412  0020FE  0102               	movlb	2	; () banked
  6413  002100  6F57               	movwf	((?_waitTimer+1))&0ffh
  6414  002102  EC04  F028         	call	_waitTimer	;wreg free
  6415                           	line	35
  6416                           ;kangthai.h: 35: LATB2 = 0;
  6417  002106  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  6418                           	line	36
  6419                           ;kangthai.h: 36: waitTimer(357*3);
  6420  002108  0E2F               	movlw	low(042Fh)
  6421  00210A  0102               	movlb	2	; () banked
  6422  00210C  0102               	movlb	2	; () banked
  6423  00210E  6F56               	movwf	((?_waitTimer))&0ffh
  6424  002110  0E04               	movlw	high(042Fh)
  6425  002112  0102               	movlb	2	; () banked
  6426  002114  6F57               	movwf	((?_waitTimer+1))&0ffh
  6427  002116  EC04  F028         	call	_waitTimer	;wreg free
  6428                           	line	37
  6429                           ;kangthai.h: 37: temp <<= 1;
  6430  00211A  0102               	movlb	2	; () banked
  6431  00211C  90D8               	bcf	status,0
  6432  00211E  0102               	movlb	2	; () banked
  6433  002120  373D               	rlcf	((kangthaiTx@temp))&0ffh
  6434  002122  0102               	movlb	2	; () banked
  6435  002124  373E               	rlcf	((kangthaiTx@temp+1))&0ffh
  6436  002126  0102               	movlb	2	; () banked
  6437  002128  373F               	rlcf	((kangthaiTx@temp+2))&0ffh
  6438  00212A  0102               	movlb	2	; () banked
  6439  00212C  3740               	rlcf	((kangthaiTx@temp+3))&0ffh
  6440                           	line	26
  6441  00212E  0102               	movlb	2	; () banked
  6442  002130  0102               	movlb	2	; () banked
  6443  002132  2B48               	incf	((kangthaiTx@bitnr))&0ffh
  6444  002134  0E0B               	movlw	(0Ch-1)
  6445  002136  0102               	movlb	2	; () banked
  6446  002138  0102               	movlb	2	; () banked
  6447  00213A  6548               	cpfsgt	((kangthaiTx@bitnr))&0ffh
  6448  00213C  EFA2  F010         	goto	u7451
  6449  002140  EFA4  F010         	goto	u7450
  6450  002144                     u7451:
  6451  002144  EF3D  F010         	goto	l519
  6452  002148                     u7450:
  6453                           	
  6454  002148                     l520:		; BSR set to: ?
  6455                           
  6456                           	line	39
  6457                           ;kangthai.h: 38: }
  6458                           ;kangthai.h: 39: waitTimer(10000);
  6459  002148  0E10               	movlw	low(02710h)
  6460  00214A  0102               	movlb	2	; () banked
  6461  00214C  0102               	movlb	2	; () banked
  6462  00214E  6F56               	movwf	((?_waitTimer))&0ffh
  6463  002150  0E27               	movlw	high(02710h)
  6464  002152  0102               	movlb	2	; () banked
  6465  002154  6F57               	movwf	((?_waitTimer+1))&0ffh
  6466  002156  EC04  F028         	call	_waitTimer	;wreg free
  6467                           	line	20
  6468  00215A  0102               	movlb	2	; () banked
  6469  00215C  0102               	movlb	2	; () banked
  6470  00215E  2B47               	incf	((kangthaiTx@resend))&0ffh
  6471                           	
  6472  002160                     l518:		; BSR set to: ?
  6473                           
  6474  002160  0102               	movlb	2	; () banked
  6475  002162  0102               	movlb	2	; () banked
  6476  002164  513C               	movf	((kangthaiTx@resends))&0ffh,w
  6477  002166  0102               	movlb	2	; () banked
  6478  002168  0102               	movlb	2	; () banked
  6479  00216A  5D47               	subwf	((kangthaiTx@resend))&0ffh,w
  6480  00216C  A0D8               	btfss	status,0
  6481  00216E  EFBB  F010         	goto	u7461
  6482  002172  EFBD  F010         	goto	u7460
  6483  002176                     u7461:
  6484  002176  EF0D  F010         	goto	l515
  6485  00217A                     u7460:
  6486                           	
  6487  00217A                     l516:		; BSR set to: ?
  6488                           
  6489                           	line	41
  6490                           ;kangthai.h: 40: }
  6491                           ;kangthai.h: 41: stopTransmit();
  6492  00217A  EC2B  F028         	call	_stopTransmit	;wreg free
  6493                           	line	42
  6494                           ;kangthai.h: 42: }
  6495  00217E                     l505:
  6496                           			; BSR set to: ?
  6497                           
  6498  00217E  0012               	return
  6499                           	opt stack 0
  6500                           GLOBAL __end_of_kangthaiTx
  6501  002180                     	__end_of_kangthaiTx:
  6502                           	FNSIZE	_kangthaiTx,17,3
  6503                           ; =============== function _kangthaiTx ends ====
                                 ========
  6504                           
  6505                           	signat	_kangthaiTx,8312
  6506                           	global	_bmcConvertHex
  6507                           	global	??_bmcConvertHex
  6508                           	global	?_bmcConvertHex
  6509                           
  6510                           ; *************** function _bmcConvertHex ******
                                 ***********
  6511                           ; Defined at:
  6512                           ;		line 1 in file "D:\Hobby\Prosjekter\MultiTRX\
                                 Firmware\FW1.2\bmc.h"
  6513                           ; Parameters:
  6514                           ;		datap          size:   2offs:   0	type: PTR u
                                 nsigned char ; Largest target is 32
  6515                           ;		 -> main@line(32), 
  6516                           ;		data_len       size:   2offs:   2	type: PTR u
                                 nsigned char ; Largest target is 1
  6517                           ;		 -> parseCmd@line_len(1), 
  6518                           ; Auto variables:
  6519                           ;		temp        	       	type: unsigned char 
  6520                           ;		k           	       	type: unsigned char 
  6521                           ; Return value:
  6522                           ;		type: void 
  6523                           ;		size: 0
  6524                           ; Registers used:
  6525                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
  6526                           ; Tracked objects:
  6527                           ;		On entry : 0/0
  6528                           ;		On exit  : 0/0
  6529                           ;		Unchanged: 0/0
  6530                           ; Data sizes:
  6531                           ;		Autos:    2
  6532                           ;		Params:   4
  6533                           ;		Temp:     3
  6534                           ;		Total:    9
  6535                           ; This function calls:
  6536                           ;		_asciiToHex
  6537                           ; This function is called by:
  6538                           ;		_parseCmd
  6539                           ; This function uses a non-reentrant model
  6540                           ; 
  6541                                   psect   text18,class=CODE,space=0,reloc=
                                 2
  6542                           
  6543                           	opt lm
  6544                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\bmc.h"
  6545                           	line	1
  6546  000000                     	__size_of_bmcConvertHex	equ	__end_of_bmcConvert
                                 Hex-_bmcConvertHex
  6547                           ;bmc.h: 1: void bmcConvertHex(char *datap, char 
                                 *data_len){
  6548                           	
  6549  0044E6                     _bmcConvertHex:		; BSR set to: ?
  6550                           
  6551                           	opt stack 28
  6552                           	line	3
  6553  0044E6  0102               	movlb	2	; () banked
  6554  0044E8  6F40               	movwf	(??_bmcConvertHex+2+0)&0ffh
  6555  0044EA  0E00               	movlw	low(0)
  6556  0044EC  0102               	movlb	2	; () banked
  6557  0044EE  0102               	movlb	2	; () banked
  6558  0044F0  6F3F               	movwf	((bmcConvertHex@k))&0ffh
  6559  0044F2  0102               	movlb	2	; () banked
  6560  0044F4  5140               	movf	(??_bmcConvertHex+2+0)&0ffh,w
  6561  0044F6  EFDA  F022         	goto	l293
  6562                           	
  6563  0044FA                     l290:		; BSR set to: ?
  6564                           
  6565                           	line	4
  6566                           ;bmc.h: 4: temp = asciiToHex(datap[k]) << 4;
  6567  0044FA  0102               	movlb	2	; () banked
  6568  0044FC  0102               	movlb	2	; () banked
  6569  0044FE  513F               	movf	((bmcConvertHex@k))&0ffh,w
  6570  004500  0102               	movlb	2	; () banked
  6571  004502  0102               	movlb	2	; () banked
  6572  004504  253A               	addwf	((bmcConvertHex@datap))&0ffh,w
  6573  004506  6EE9               	movwf	c:fsr0l
  6574  004508  0102               	movlb	2	; () banked
  6575  00450A  0E00               	movlw	0
  6576  00450C  0102               	movlb	2	; () banked
  6577  00450E  0102               	movlb	2	; () banked
  6578  004510  213B               	addwfc	((bmcConvertHex@datap+1))&0ffh,w
  6579  004512  6EEA               	movwf	1+c:fsr0l
  6580  004514  50EF               	movf	indf0,w
  6581  004516  0102               	movlb	2	; () banked
  6582  004518  0102               	movlb	2	; () banked
  6583  00451A  6F50               	movwf	((?_asciiToHex))&0ffh
  6584  00451C  ECA5  F028         	call	_asciiToHex	;wreg free
  6585  004520  0102               	movlb	2	; () banked
  6586  004522  6F40               	movwf	(??_bmcConvertHex+2+0)&0ffh
  6587  004524  0102               	movlb	2	; () banked
  6588  004526  3940               	swapf	((??_bmcConvertHex+2+0))&0ffh,w
  6589  004528  0BF0               	andlw	(0ffh shl 4) & 0ffh
  6590  00452A  0102               	movlb	2	; () banked
  6591  00452C  0102               	movlb	2	; () banked
  6592  00452E  6F3E               	movwf	((bmcConvertHex@temp))&0ffh
  6593                           	line	5
  6594                           ;bmc.h: 5: temp += asciiToHex(datap[k+1]);
  6595  004530  C23F  F240         	movff	(bmcConvertHex@k),??_bmcConvertHex+2+0
  6596  004534  0E01               	movlw	01h
  6597  004536  0102               	movlb	2	; () banked
  6598  004538  2740               	addwf	(??_bmcConvertHex+2+0)&0ffh
  6599  00453A  0102               	movlb	2	; () banked
  6600  00453C  5140               	movf	(??_bmcConvertHex+2+0)&0ffh,w
  6601  00453E  0102               	movlb	2	; () banked
  6602  004540  0102               	movlb	2	; () banked
  6603  004542  253A               	addwf	((bmcConvertHex@datap))&0ffh,w
  6604  004544  0102               	movlb	2	; () banked
  6605  004546  6F41               	movwf	(??_bmcConvertHex+3+0)&0ffh
  6606  004548  6AE8               	clrf	wreg
  6607  00454A  0102               	movlb	2	; () banked
  6608  00454C  BF40               	btfsc	(??_bmcConvertHex+2+0)&0ffh,7
  6609  00454E  68E8               	setf	wreg
  6610  004550  0102               	movlb	2	; () banked
  6611  004552  0102               	movlb	2	; () banked
  6612  004554  213B               	addwfc	((bmcConvertHex@datap+1))&0ffh,w
  6613  004556  0102               	movlb	2	; () banked
  6614  004558  6F42               	movwf	(??_bmcConvertHex+3+0+1)&0ffh
  6615  00455A  C241  FFE9         	movff	??_bmcConvertHex+3+0,fsr0l
  6616  00455E  C242  FFEA         	movff	??_bmcConvertHex+3+1,fsr0h
  6617  004562  50EF               	movf	indf0,w
  6618  004564  0102               	movlb	2	; () banked
  6619  004566  0102               	movlb	2	; () banked
  6620  004568  6F50               	movwf	((?_asciiToHex))&0ffh
  6621  00456A  ECA5  F028         	call	_asciiToHex	;wreg free
  6622  00456E  0102               	movlb	2	; () banked
  6623  004570  0102               	movlb	2	; () banked
  6624  004572  273E               	addwf	((bmcConvertHex@temp))&0ffh
  6625                           	line	6
  6626                           ;bmc.h: 6: datap[k/2] = temp;
  6627  004574  C23F  F240         	movff	(bmcConvertHex@k),??_bmcConvertHex+2+0
  6628  004578  90D8               	bcf	status,0
  6629  00457A  0102               	movlb	2	; () banked
  6630  00457C  3340               	rrcf	(??_bmcConvertHex+2+0)&0ffh
  6631                           
  6632  00457E  0102               	movlb	2	; () banked
  6633  004580  5140               	movf	(??_bmcConvertHex+2+0)&0ffh,w
  6634  004582  0102               	movlb	2	; () banked
  6635  004584  0102               	movlb	2	; () banked
  6636  004586  253A               	addwf	((bmcConvertHex@datap))&0ffh,w
  6637  004588  0102               	movlb	2	; () banked
  6638  00458A  6F41               	movwf	(??_bmcConvertHex+3+0)&0ffh
  6639  00458C  6AE8               	clrf	wreg
  6640  00458E  0102               	movlb	2	; () banked
  6641  004590  BF40               	btfsc	(??_bmcConvertHex+2+0)&0ffh,7
  6642  004592  68E8               	setf	wreg
  6643  004594  0102               	movlb	2	; () banked
  6644  004596  0102               	movlb	2	; () banked
  6645  004598  213B               	addwfc	((bmcConvertHex@datap+1))&0ffh,w
  6646  00459A  0102               	movlb	2	; () banked
  6647  00459C  6F42               	movwf	(??_bmcConvertHex+3+0+1)&0ffh
  6648  00459E  C241  FFE9         	movff	??_bmcConvertHex+3+0,fsr0l
  6649  0045A2  C242  FFEA         	movff	??_bmcConvertHex+3+1,fsr0h
  6650  0045A6  0102               	movlb	2	; () banked
  6651  0045A8  C23E  FFEF         	movff	(bmcConvertHex@temp),indf0
  6652                           
  6653                           	line	3
  6654  0045AC  0E02               	movlw	(02h)&0ffh
  6655  0045AE  0102               	movlb	2	; () banked
  6656  0045B0  0102               	movlb	2	; () banked
  6657  0045B2  273F               	addwf	((bmcConvertHex@k))&0ffh
  6658                           	
  6659  0045B4                     l293:		; BSR set to: ?
  6660                           
  6661  0045B4  C23C  FFE9         	movff	(bmcConvertHex@data_len),fsr0l
  6662  0045B8  C23D  FFEA         	movff	(bmcConvertHex@data_len+1),fsr0h
  6663  0045BC  50EF               	movf	indf0,w
  6664  0045BE  0102               	movlb	2	; () banked
  6665  0045C0  0102               	movlb	2	; () banked
  6666  0045C2  5D3F               	subwf	((bmcConvertHex@k))&0ffh,w
  6667  0045C4  A0D8               	btfss	status,0
  6668  0045C6  EFE7  F022         	goto	u3021
  6669  0045CA  EFE9  F022         	goto	u3020
  6670  0045CE                     u3021:
  6671  0045CE  EF7D  F022         	goto	l290
  6672  0045D2                     u3020:
  6673                           	
  6674  0045D2                     l291:		; BSR set to: ?
  6675                           
  6676                           	line	8
  6677                           ;bmc.h: 7: }
  6678                           ;bmc.h: 8: *data_len /= 2;
  6679  0045D2  C23C  FFE9         	movff	(bmcConvertHex@data_len),fsr0l
  6680  0045D6  C23D  FFEA         	movff	(bmcConvertHex@data_len+1),fsr0h
  6681  0045DA  90D8               	bcf	status,0
  6682  0045DC  32EF               	rrcf	indf0
  6683                           	line	9
  6684                           ;bmc.h: 9: }
  6685  0045DE                     l289:
  6686                           			; BSR set to: ?
  6687                           
  6688  0045DE  0012               	return
  6689                           	opt stack 0
  6690                           GLOBAL __end_of_bmcConvertHex
  6691  0045E0                     	__end_of_bmcConvertHex:
  6692                           	FNSIZE	_bmcConvertHex,5,4
  6693                           ; =============== function _bmcConvertHex ends =
                                 ===========
  6694                           
  6695                           	signat	_bmcConvertHex,8312
  6696                           	global	_parseSettings
  6697                           	global	??_parseSettings
  6698                           	global	?_parseSettings
  6699                           
  6700                           ; *************** function _parseSettings ******
                                 ***********
  6701                           ; Defined at:
  6702                           ;		line 135 in file "D:\Hobby\Prosjekter\MultiTR
                                 X\Firmware\FW1.2\batchpcb26k20.c"
  6703                           ; Parameters:
  6704                           ;		linep          size:   2offs:   0	type: PTR u
                                 nsigned char ; Largest target is 32
  6705                           ;		 -> main@line(32), 
  6706                           ;		line_len       size:   1offs:   2	type: unsig
                                 ned char 
  6707                           ;		settingsp      size:   2offs:   3	type: PTR s
                                 truct .; Largest target is 14
  6708                           ;		 -> main@settings(14), 
  6709                           ; Auto variables:
  6710                           ;		None
  6711                           ; Return value:
  6712                           ;		type: void 
  6713                           ;		size: 0
  6714                           ; Registers used:
  6715                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, csta
                                 ck
  6716                           ; Tracked objects:
  6717                           ;		On entry : 0/0
  6718                           ;		On exit  : 0/0
  6719                           ;		Unchanged: 0/0
  6720                           ; Data sizes:
  6721                           ;		Autos:    0
  6722                           ;		Params:   5
  6723                           ;		Temp:     1
  6724                           ;		Total:    6
  6725                           ; This function calls:
  6726                           ;		_sPut
  6727                           ;		_sPuts
  6728                           ;		_readAd
  6729                           ;		_sPutint
  6730                           ;		_saveEeprom
  6731                           ;		_loadEeprom
  6732                           ;		_loadDefaults
  6733                           ; This function is called by:
  6734                           ;		_parseCmd
  6735                           ; This function uses a non-reentrant model
  6736                           ; 
  6737                                   psect   text19,class=CODE,space=0,reloc=
                                 2
  6738                           
  6739                           	opt lm
  6740                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\batchpcb26k20.c"
  6741                           	line	135
  6742  000000                     	__size_of_parseSettings	equ	__end_of_parseSetti
                                 ngs-_parseSettings
  6743                           ;batchpcb26k20.c: 135: void parseSettings(char *
                                 linep, char line_len, settings_t *settingsp){
  6744                           	
  6745  00003A                     _parseSettings:		; BSR set to: ?
  6746                           
  6747                           	opt stack 28
  6748                           	line	136
  6749  00003A  0102               	movlb	2	; () banked
  6750  00003C  0102               	movlb	2	; () banked
  6751  00003E  053C               	decf	((parseSettings@line_len))&0ffh,w
  6752                           
  6753  000040  A4D8               	btfss	status,2
  6754  000042  EF25  F000         	goto	u6671
  6755  000046  EF27  F000         	goto	u6670
  6756  00004A                     u6671:
  6757  00004A  EF19  F003         	goto	l538
  6758  00004E                     u6670:
  6759                           	line	137
  6760                           ;batchpcb26k20.c: 137: sPut(10);
  6761  00004E  0102               	movlb	2	; () banked
  6762  000050  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  6763  000052  0E0A               	movlw	low(0Ah)
  6764  000054  0102               	movlb	2	; () banked
  6765  000056  0102               	movlb	2	; () banked
  6766  000058  6F60               	movwf	((?_sPut))&0ffh
  6767  00005A  0102               	movlb	2	; () banked
  6768  00005C  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  6769  00005E  ECDF  F025         	call	_sPut	;wreg free
  6770                           	line	138
  6771                           ;batchpcb26k20.c: 138: sPuts("--------- Settings
                                  ----------"); sPut(10);
  6772  000062  0E87               	movlw	low(STR_7)
  6773  000064  0102               	movlb	2	; () banked
  6774  000066  0102               	movlb	2	; () banked
  6775  000068  6F5E               	movwf	((?_sPuts))&0ffh
  6776  00006A  0E7E               	movlw	high(STR_7)
  6777  00006C  0102               	movlb	2	; () banked
  6778  00006E  6F5F               	movwf	((?_sPuts+1))&0ffh
  6779  000070  EC9E  F026         	call	_sPuts	;wreg free
  6780  000074  0102               	movlb	2	; () banked
  6781  000076  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  6782  000078  0E0A               	movlw	low(0Ah)
  6783  00007A  0102               	movlb	2	; () banked
  6784  00007C  0102               	movlb	2	; () banked
  6785  00007E  6F60               	movwf	((?_sPut))&0ffh
  6786  000080  0102               	movlb	2	; () banked
  6787  000082  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  6788  000084  ECDF  F025         	call	_sPut	;wreg free
  6789                           	line	139
  6790                           ;batchpcb26k20.c: 139: sPuts("BMC:"); sPut(10);
  6791  000088  0EE7               	movlw	low(STR_8)
  6792  00008A  0102               	movlb	2	; () banked
  6793  00008C  0102               	movlb	2	; () banked
  6794  00008E  6F5E               	movwf	((?_sPuts))&0ffh
  6795  000090  0E7F               	movlw	high(STR_8)
  6796  000092  0102               	movlb	2	; () banked
  6797  000094  6F5F               	movwf	((?_sPuts+1))&0ffh
  6798  000096  EC9E  F026         	call	_sPuts	;wreg free
  6799  00009A  0102               	movlb	2	; () banked
  6800  00009C  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  6801  00009E  0E0A               	movlw	low(0Ah)
  6802  0000A0  0102               	movlb	2	; () banked
  6803  0000A2  0102               	movlb	2	; () banked
  6804  0000A4  6F60               	movwf	((?_sPut))&0ffh
  6805  0000A6  0102               	movlb	2	; () banked
  6806  0000A8  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  6807  0000AA  ECDF  F025         	call	_sPut	;wreg free
  6808                           	line	140
  6809                           ;batchpcb26k20.c: 140: sPuts(" [B] En. RX = "); 
                                 sPut('0' + settingsp->bmc_en_rx); sPut(10);
  6810  0000AE  0E43               	movlw	low(STR_9)
  6811  0000B0  0102               	movlb	2	; () banked
  6812  0000B2  0102               	movlb	2	; () banked
  6813  0000B4  6F5E               	movwf	((?_sPuts))&0ffh
  6814  0000B6  0E7F               	movlw	high(STR_9)
  6815  0000B8  0102               	movlb	2	; () banked
  6816  0000BA  6F5F               	movwf	((?_sPuts+1))&0ffh
  6817  0000BC  EC9E  F026         	call	_sPuts	;wreg free
  6818  0000C0  0E01               	movlw	low(01h)
  6819  0000C2  0102               	movlb	2	; () banked
  6820  0000C4  0102               	movlb	2	; () banked
  6821  0000C6  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  6822  0000C8  6EE9               	movwf	c:fsr0l
  6823  0000CA  0E00               	movlw	high(01h)
  6824  0000CC  0102               	movlb	2	; () banked
  6825  0000CE  0102               	movlb	2	; () banked
  6826  0000D0  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  6827  0000D2  6EEA               	movwf	1+c:fsr0l
  6828  0000D4  50EF               	movf	indf0,w
  6829  0000D6  0F30               	addlw	low(030h)
  6830  0000D8  0102               	movlb	2	; () banked
  6831  0000DA  0102               	movlb	2	; () banked
  6832  0000DC  6F60               	movwf	((?_sPut))&0ffh
  6833  0000DE  ECDF  F025         	call	_sPut	;wreg free
  6834  0000E2  0102               	movlb	2	; () banked
  6835  0000E4  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  6836  0000E6  0E0A               	movlw	low(0Ah)
  6837  0000E8  0102               	movlb	2	; () banked
  6838  0000EA  0102               	movlb	2	; () banked
  6839  0000EC  6F60               	movwf	((?_sPut))&0ffh
  6840  0000EE  0102               	movlb	2	; () banked
  6841  0000F0  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  6842  0000F2  ECDF  F025         	call	_sPut	;wreg free
  6843                           	line	141
  6844                           ;batchpcb26k20.c: 141: sPuts(" [M] Sends  = "); 
                                 sPut('0' + settingsp->bmc_sends); sPut(10);
  6845  0000F6  0E07               	movlw	low(STR_10)
  6846  0000F8  0102               	movlb	2	; () banked
  6847  0000FA  0102               	movlb	2	; () banked
  6848  0000FC  6F5E               	movwf	((?_sPuts))&0ffh
  6849  0000FE  0E7F               	movlw	high(STR_10)
  6850  000100  0102               	movlb	2	; () banked
  6851  000102  6F5F               	movwf	((?_sPuts+1))&0ffh
  6852  000104  EC9E  F026         	call	_sPuts	;wreg free
  6853  000108  0E02               	movlw	low(02h)
  6854  00010A  0102               	movlb	2	; () banked
  6855  00010C  0102               	movlb	2	; () banked
  6856  00010E  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  6857  000110  6EE9               	movwf	c:fsr0l
  6858  000112  0E00               	movlw	high(02h)
  6859  000114  0102               	movlb	2	; () banked
  6860  000116  0102               	movlb	2	; () banked
  6861  000118  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  6862  00011A  6EEA               	movwf	1+c:fsr0l
  6863  00011C  50EF               	movf	indf0,w
  6864  00011E  0F30               	addlw	low(030h)
  6865  000120  0102               	movlb	2	; () banked
  6866  000122  0102               	movlb	2	; () banked
  6867  000124  6F60               	movwf	((?_sPut))&0ffh
  6868  000126  ECDF  F025         	call	_sPut	;wreg free
  6869  00012A  0102               	movlb	2	; () banked
  6870  00012C  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  6871  00012E  0E0A               	movlw	low(0Ah)
  6872  000130  0102               	movlb	2	; () banked
  6873  000132  0102               	movlb	2	; () banked
  6874  000134  6F60               	movwf	((?_sPut))&0ffh
  6875  000136  0102               	movlb	2	; () banked
  6876  000138  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  6877  00013A  ECDF  F025         	call	_sPut	;wreg free
  6878                           	line	142
  6879                           ;batchpcb26k20.c: 142: sPuts(" [C] In hex = "); 
                                 sPut('0' + settingsp->bmc_en_hex); sPut(10);
  6880  00013E  0E61               	movlw	low(STR_11)
  6881  000140  0102               	movlb	2	; () banked
  6882  000142  0102               	movlb	2	; () banked
  6883  000144  6F5E               	movwf	((?_sPuts))&0ffh
  6884  000146  0E7F               	movlw	high(STR_11)
  6885  000148  0102               	movlb	2	; () banked
  6886  00014A  6F5F               	movwf	((?_sPuts+1))&0ffh
  6887  00014C  EC9E  F026         	call	_sPuts	;wreg free
  6888  000150  0E03               	movlw	low(03h)
  6889  000152  0102               	movlb	2	; () banked
  6890  000154  0102               	movlb	2	; () banked
  6891  000156  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  6892  000158  6EE9               	movwf	c:fsr0l
  6893  00015A  0E00               	movlw	high(03h)
  6894  00015C  0102               	movlb	2	; () banked
  6895  00015E  0102               	movlb	2	; () banked
  6896  000160  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  6897  000162  6EEA               	movwf	1+c:fsr0l
  6898  000164  50EF               	movf	indf0,w
  6899  000166  0F30               	addlw	low(030h)
  6900  000168  0102               	movlb	2	; () banked
  6901  00016A  0102               	movlb	2	; () banked
  6902  00016C  6F60               	movwf	((?_sPut))&0ffh
  6903  00016E  ECDF  F025         	call	_sPut	;wreg free
  6904  000172  0102               	movlb	2	; () banked
  6905  000174  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  6906  000176  0E0A               	movlw	low(0Ah)
  6907  000178  0102               	movlb	2	; () banked
  6908  00017A  0102               	movlb	2	; () banked
  6909  00017C  6F60               	movwf	((?_sPut))&0ffh
  6910  00017E  0102               	movlb	2	; () banked
  6911  000180  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  6912  000182  ECDF  F025         	call	_sPut	;wreg free
  6913                           	line	143
  6914                           ;batchpcb26k20.c: 143: sPuts(" [R] Repeat = "); 
                                 sPut('0' + settingsp->bmc_repeat); sPut(10);
  6915  000186  0E34               	movlw	low(STR_12)
  6916  000188  0102               	movlb	2	; () banked
  6917  00018A  0102               	movlb	2	; () banked
  6918  00018C  6F5E               	movwf	((?_sPuts))&0ffh
  6919  00018E  0E7F               	movlw	high(STR_12)
  6920  000190  0102               	movlb	2	; () banked
  6921  000192  6F5F               	movwf	((?_sPuts+1))&0ffh
  6922  000194  EC9E  F026         	call	_sPuts	;wreg free
  6923  000198  0E04               	movlw	low(04h)
  6924  00019A  0102               	movlb	2	; () banked
  6925  00019C  0102               	movlb	2	; () banked
  6926  00019E  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  6927  0001A0  6EE9               	movwf	c:fsr0l
  6928  0001A2  0E00               	movlw	high(04h)
  6929  0001A4  0102               	movlb	2	; () banked
  6930  0001A6  0102               	movlb	2	; () banked
  6931  0001A8  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  6932  0001AA  6EEA               	movwf	1+c:fsr0l
  6933  0001AC  50EF               	movf	indf0,w
  6934  0001AE  0F30               	addlw	low(030h)
  6935  0001B0  0102               	movlb	2	; () banked
  6936  0001B2  0102               	movlb	2	; () banked
  6937  0001B4  6F60               	movwf	((?_sPut))&0ffh
  6938  0001B6  ECDF  F025         	call	_sPut	;wreg free
  6939  0001BA  0102               	movlb	2	; () banked
  6940  0001BC  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  6941  0001BE  0E0A               	movlw	low(0Ah)
  6942  0001C0  0102               	movlb	2	; () banked
  6943  0001C2  0102               	movlb	2	; () banked
  6944  0001C4  6F60               	movwf	((?_sPut))&0ffh
  6945  0001C6  0102               	movlb	2	; () banked
  6946  0001C8  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  6947  0001CA  ECDF  F025         	call	_sPut	;wreg free
  6948                           	line	144
  6949                           ;batchpcb26k20.c: 144: sPuts(" [H] Hops   = "); 
                                 sPut('0' + settingsp->bmc_hops); sPut(10);
  6950  0001CE  0EDA               	movlw	low(STR_13)
  6951  0001D0  0102               	movlb	2	; () banked
  6952  0001D2  0102               	movlb	2	; () banked
  6953  0001D4  6F5E               	movwf	((?_sPuts))&0ffh
  6954  0001D6  0E7E               	movlw	high(STR_13)
  6955  0001D8  0102               	movlb	2	; () banked
  6956  0001DA  6F5F               	movwf	((?_sPuts+1))&0ffh
  6957  0001DC  EC9E  F026         	call	_sPuts	;wreg free
  6958  0001E0  0E05               	movlw	low(05h)
  6959  0001E2  0102               	movlb	2	; () banked
  6960  0001E4  0102               	movlb	2	; () banked
  6961  0001E6  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  6962  0001E8  6EE9               	movwf	c:fsr0l
  6963  0001EA  0E00               	movlw	high(05h)
  6964  0001EC  0102               	movlb	2	; () banked
  6965  0001EE  0102               	movlb	2	; () banked
  6966  0001F0  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  6967  0001F2  6EEA               	movwf	1+c:fsr0l
  6968  0001F4  50EF               	movf	indf0,w
  6969  0001F6  0F30               	addlw	low(030h)
  6970  0001F8  0102               	movlb	2	; () banked
  6971  0001FA  0102               	movlb	2	; () banked
  6972  0001FC  6F60               	movwf	((?_sPut))&0ffh
  6973  0001FE  ECDF  F025         	call	_sPut	;wreg free
  6974  000202  0102               	movlb	2	; () banked
  6975  000204  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  6976  000206  0E0A               	movlw	low(0Ah)
  6977  000208  0102               	movlb	2	; () banked
  6978  00020A  0102               	movlb	2	; () banked
  6979  00020C  6F60               	movwf	((?_sPut))&0ffh
  6980  00020E  0102               	movlb	2	; () banked
  6981  000210  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  6982  000212  ECDF  F025         	call	_sPut	;wreg free
  6983                           	line	145
  6984                           ;batchpcb26k20.c: 145: sPuts("Doro:"); sPut(10);
  6985  000216  0ED6               	movlw	low(STR_14)
  6986  000218  0102               	movlb	2	; () banked
  6987  00021A  0102               	movlb	2	; () banked
  6988  00021C  6F5E               	movwf	((?_sPuts))&0ffh
  6989  00021E  0E7F               	movlw	high(STR_14)
  6990  000220  0102               	movlb	2	; () banked
  6991  000222  6F5F               	movwf	((?_sPuts+1))&0ffh
  6992  000224  EC9E  F026         	call	_sPuts	;wreg free
  6993  000228  0102               	movlb	2	; () banked
  6994  00022A  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  6995  00022C  0E0A               	movlw	low(0Ah)
  6996  00022E  0102               	movlb	2	; () banked
  6997  000230  0102               	movlb	2	; () banked
  6998  000232  6F60               	movwf	((?_sPut))&0ffh
  6999  000234  0102               	movlb	2	; () banked
  7000  000236  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7001  000238  ECDF  F025         	call	_sPut	;wreg free
  7002                           	line	146
  7003                           ;batchpcb26k20.c: 146: sPuts(" [D] En. RX = "); 
                                 sPut('0' + settingsp->doro_en_rx); sPut(10);
  7004  00023C  0E8E               	movlw	low(STR_15)
  7005  00023E  0102               	movlb	2	; () banked
  7006  000240  0102               	movlb	2	; () banked
  7007  000242  6F5E               	movwf	((?_sPuts))&0ffh
  7008  000244  0E7F               	movlw	high(STR_15)
  7009  000246  0102               	movlb	2	; () banked
  7010  000248  6F5F               	movwf	((?_sPuts+1))&0ffh
  7011  00024A  EC9E  F026         	call	_sPuts	;wreg free
  7012  00024E  0E06               	movlw	low(06h)
  7013  000250  0102               	movlb	2	; () banked
  7014  000252  0102               	movlb	2	; () banked
  7015  000254  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7016  000256  6EE9               	movwf	c:fsr0l
  7017  000258  0E00               	movlw	high(06h)
  7018  00025A  0102               	movlb	2	; () banked
  7019  00025C  0102               	movlb	2	; () banked
  7020  00025E  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7021  000260  6EEA               	movwf	1+c:fsr0l
  7022  000262  50EF               	movf	indf0,w
  7023  000264  0F30               	addlw	low(030h)
  7024  000266  0102               	movlb	2	; () banked
  7025  000268  0102               	movlb	2	; () banked
  7026  00026A  6F60               	movwf	((?_sPut))&0ffh
  7027  00026C  ECDF  F025         	call	_sPut	;wreg free
  7028  000270  0102               	movlb	2	; () banked
  7029  000272  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7030  000274  0E0A               	movlw	low(0Ah)
  7031  000276  0102               	movlb	2	; () banked
  7032  000278  0102               	movlb	2	; () banked
  7033  00027A  6F60               	movwf	((?_sPut))&0ffh
  7034  00027C  0102               	movlb	2	; () banked
  7035  00027E  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7036  000280  ECDF  F025         	call	_sPut	;wreg free
  7037                           	line	147
  7038                           ;batchpcb26k20.c: 147: sPuts("GAO:"); sPut(10);
  7039  000284  0EE2               	movlw	low(STR_16)
  7040  000286  0102               	movlb	2	; () banked
  7041  000288  0102               	movlb	2	; () banked
  7042  00028A  6F5E               	movwf	((?_sPuts))&0ffh
  7043  00028C  0E7F               	movlw	high(STR_16)
  7044  00028E  0102               	movlb	2	; () banked
  7045  000290  6F5F               	movwf	((?_sPuts+1))&0ffh
  7046  000292  EC9E  F026         	call	_sPuts	;wreg free
  7047  000296  0102               	movlb	2	; () banked
  7048  000298  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7049  00029A  0E0A               	movlw	low(0Ah)
  7050  00029C  0102               	movlb	2	; () banked
  7051  00029E  0102               	movlb	2	; () banked
  7052  0002A0  6F60               	movwf	((?_sPut))&0ffh
  7053  0002A2  0102               	movlb	2	; () banked
  7054  0002A4  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7055  0002A6  ECDF  F025         	call	_sPut	;wreg free
  7056                           	line	148
  7057                           ;batchpcb26k20.c: 148: sPuts(" [G] En. RX = "); 
                                 sPut('0' + settingsp->gao_en_rx); sPut(10);
  7058  0002AA  0E70               	movlw	low(STR_17)
  7059  0002AC  0102               	movlb	2	; () banked
  7060  0002AE  0102               	movlb	2	; () banked
  7061  0002B0  6F5E               	movwf	((?_sPuts))&0ffh
  7062  0002B2  0E7F               	movlw	high(STR_17)
  7063  0002B4  0102               	movlb	2	; () banked
  7064  0002B6  6F5F               	movwf	((?_sPuts+1))&0ffh
  7065  0002B8  EC9E  F026         	call	_sPuts	;wreg free
  7066  0002BC  0E07               	movlw	low(07h)
  7067  0002BE  0102               	movlb	2	; () banked
  7068  0002C0  0102               	movlb	2	; () banked
  7069  0002C2  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7070  0002C4  6EE9               	movwf	c:fsr0l
  7071  0002C6  0E00               	movlw	high(07h)
  7072  0002C8  0102               	movlb	2	; () banked
  7073  0002CA  0102               	movlb	2	; () banked
  7074  0002CC  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7075  0002CE  6EEA               	movwf	1+c:fsr0l
  7076  0002D0  50EF               	movf	indf0,w
  7077  0002D2  0F30               	addlw	low(030h)
  7078  0002D4  0102               	movlb	2	; () banked
  7079  0002D6  0102               	movlb	2	; () banked
  7080  0002D8  6F60               	movwf	((?_sPut))&0ffh
  7081  0002DA  ECDF  F025         	call	_sPut	;wreg free
  7082  0002DE  0102               	movlb	2	; () banked
  7083  0002E0  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7084  0002E2  0E0A               	movlw	low(0Ah)
  7085  0002E4  0102               	movlb	2	; () banked
  7086  0002E6  0102               	movlb	2	; () banked
  7087  0002E8  6F60               	movwf	((?_sPut))&0ffh
  7088  0002EA  0102               	movlb	2	; () banked
  7089  0002EC  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7090  0002EE  ECDF  F025         	call	_sPut	;wreg free
  7091                           	line	149
  7092                           ;batchpcb26k20.c: 149: sPuts(" [A] Sends  = "); 
                                 sPut('0' + settingsp->gao_sends); sPut(10);
  7093  0002F2  0EE9               	movlw	low(STR_18)
  7094  0002F4  0102               	movlb	2	; () banked
  7095  0002F6  0102               	movlb	2	; () banked
  7096  0002F8  6F5E               	movwf	((?_sPuts))&0ffh
  7097  0002FA  0E7E               	movlw	high(STR_18)
  7098  0002FC  0102               	movlb	2	; () banked
  7099  0002FE  6F5F               	movwf	((?_sPuts+1))&0ffh
  7100  000300  EC9E  F026         	call	_sPuts	;wreg free
  7101  000304  0E08               	movlw	low(08h)
  7102  000306  0102               	movlb	2	; () banked
  7103  000308  0102               	movlb	2	; () banked
  7104  00030A  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7105  00030C  6EE9               	movwf	c:fsr0l
  7106  00030E  0E00               	movlw	high(08h)
  7107  000310  0102               	movlb	2	; () banked
  7108  000312  0102               	movlb	2	; () banked
  7109  000314  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7110  000316  6EEA               	movwf	1+c:fsr0l
  7111  000318  50EF               	movf	indf0,w
  7112  00031A  0F30               	addlw	low(030h)
  7113  00031C  0102               	movlb	2	; () banked
  7114  00031E  0102               	movlb	2	; () banked
  7115  000320  6F60               	movwf	((?_sPut))&0ffh
  7116  000322  ECDF  F025         	call	_sPut	;wreg free
  7117  000326  0102               	movlb	2	; () banked
  7118  000328  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7119  00032A  0E0A               	movlw	low(0Ah)
  7120  00032C  0102               	movlb	2	; () banked
  7121  00032E  0102               	movlb	2	; () banked
  7122  000330  6F60               	movwf	((?_sPut))&0ffh
  7123  000332  0102               	movlb	2	; () banked
  7124  000334  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7125  000336  ECDF  F025         	call	_sPut	;wreg free
  7126                           	line	150
  7127                           ;batchpcb26k20.c: 150: sPuts("Esic:"); sPut(10);
  7128  00033A  0EDC               	movlw	low(STR_19)
  7129  00033C  0102               	movlb	2	; () banked
  7130  00033E  0102               	movlb	2	; () banked
  7131  000340  6F5E               	movwf	((?_sPuts))&0ffh
  7132  000342  0E7F               	movlw	high(STR_19)
  7133  000344  0102               	movlb	2	; () banked
  7134  000346  6F5F               	movwf	((?_sPuts+1))&0ffh
  7135  000348  EC9E  F026         	call	_sPuts	;wreg free
  7136  00034C  0102               	movlb	2	; () banked
  7137  00034E  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7138  000350  0E0A               	movlw	low(0Ah)
  7139  000352  0102               	movlb	2	; () banked
  7140  000354  0102               	movlb	2	; () banked
  7141  000356  6F60               	movwf	((?_sPut))&0ffh
  7142  000358  0102               	movlb	2	; () banked
  7143  00035A  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7144  00035C  ECDF  F025         	call	_sPut	;wreg free
  7145                           	line	151
  7146                           ;batchpcb26k20.c: 151: sPuts(" [E] En. RX = "); 
                                 sPut('0' + settingsp->esic_en_rx); sPut(10);
  7147  000360  0E9D               	movlw	low(STR_20)
  7148  000362  0102               	movlb	2	; () banked
  7149  000364  0102               	movlb	2	; () banked
  7150  000366  6F5E               	movwf	((?_sPuts))&0ffh
  7151  000368  0E7F               	movlw	high(STR_20)
  7152  00036A  0102               	movlb	2	; () banked
  7153  00036C  6F5F               	movwf	((?_sPuts+1))&0ffh
  7154  00036E  EC9E  F026         	call	_sPuts	;wreg free
  7155  000372  0E09               	movlw	low(09h)
  7156  000374  0102               	movlb	2	; () banked
  7157  000376  0102               	movlb	2	; () banked
  7158  000378  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7159  00037A  6EE9               	movwf	c:fsr0l
  7160  00037C  0E00               	movlw	high(09h)
  7161  00037E  0102               	movlb	2	; () banked
  7162  000380  0102               	movlb	2	; () banked
  7163  000382  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7164  000384  6EEA               	movwf	1+c:fsr0l
  7165  000386  50EF               	movf	indf0,w
  7166  000388  0F30               	addlw	low(030h)
  7167  00038A  0102               	movlb	2	; () banked
  7168  00038C  0102               	movlb	2	; () banked
  7169  00038E  6F60               	movwf	((?_sPut))&0ffh
  7170  000390  ECDF  F025         	call	_sPut	;wreg free
  7171  000394  0102               	movlb	2	; () banked
  7172  000396  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7173  000398  0E0A               	movlw	low(0Ah)
  7174  00039A  0102               	movlb	2	; () banked
  7175  00039C  0102               	movlb	2	; () banked
  7176  00039E  6F60               	movwf	((?_sPut))&0ffh
  7177  0003A0  0102               	movlb	2	; () banked
  7178  0003A2  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7179  0003A4  ECDF  F025         	call	_sPut	;wreg free
  7180                           	line	152
  7181                           ;batchpcb26k20.c: 152: sPuts("Nexa:"); sPut(10);
  7182  0003A8  0ED0               	movlw	low(STR_21)
  7183  0003AA  0102               	movlb	2	; () banked
  7184  0003AC  0102               	movlb	2	; () banked
  7185  0003AE  6F5E               	movwf	((?_sPuts))&0ffh
  7186  0003B0  0E7F               	movlw	high(STR_21)
  7187  0003B2  0102               	movlb	2	; () banked
  7188  0003B4  6F5F               	movwf	((?_sPuts+1))&0ffh
  7189  0003B6  EC9E  F026         	call	_sPuts	;wreg free
  7190  0003BA  0102               	movlb	2	; () banked
  7191  0003BC  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7192  0003BE  0E0A               	movlw	low(0Ah)
  7193  0003C0  0102               	movlb	2	; () banked
  7194  0003C2  0102               	movlb	2	; () banked
  7195  0003C4  6F60               	movwf	((?_sPut))&0ffh
  7196  0003C6  0102               	movlb	2	; () banked
  7197  0003C8  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7198  0003CA  ECDF  F025         	call	_sPut	;wreg free
  7199                           	line	153
  7200                           ;batchpcb26k20.c: 153: sPuts(" [N] En. RX = "); 
                                 sPut('0' + settingsp->nexa_en_rx); sPut(10);
  7201  0003CE  0E7F               	movlw	low(STR_22)
  7202  0003D0  0102               	movlb	2	; () banked
  7203  0003D2  0102               	movlb	2	; () banked
  7204  0003D4  6F5E               	movwf	((?_sPuts))&0ffh
  7205  0003D6  0E7F               	movlw	high(STR_22)
  7206  0003D8  0102               	movlb	2	; () banked
  7207  0003DA  6F5F               	movwf	((?_sPuts+1))&0ffh
  7208  0003DC  EC9E  F026         	call	_sPuts	;wreg free
  7209  0003E0  0E0A               	movlw	low(0Ah)
  7210  0003E2  0102               	movlb	2	; () banked
  7211  0003E4  0102               	movlb	2	; () banked
  7212  0003E6  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7213  0003E8  6EE9               	movwf	c:fsr0l
  7214  0003EA  0E00               	movlw	high(0Ah)
  7215  0003EC  0102               	movlb	2	; () banked
  7216  0003EE  0102               	movlb	2	; () banked
  7217  0003F0  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7218  0003F2  6EEA               	movwf	1+c:fsr0l
  7219  0003F4  50EF               	movf	indf0,w
  7220  0003F6  0F30               	addlw	low(030h)
  7221  0003F8  0102               	movlb	2	; () banked
  7222  0003FA  0102               	movlb	2	; () banked
  7223  0003FC  6F60               	movwf	((?_sPut))&0ffh
  7224  0003FE  ECDF  F025         	call	_sPut	;wreg free
  7225  000402  0102               	movlb	2	; () banked
  7226  000404  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7227  000406  0E0A               	movlw	low(0Ah)
  7228  000408  0102               	movlb	2	; () banked
  7229  00040A  0102               	movlb	2	; () banked
  7230  00040C  6F60               	movwf	((?_sPut))&0ffh
  7231  00040E  0102               	movlb	2	; () banked
  7232  000410  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7233  000412  ECDF  F025         	call	_sPut	;wreg free
  7234                           	line	154
  7235                           ;batchpcb26k20.c: 154: sPuts(" [X] Sends  = "); 
                                 sPut('0' + settingsp->nexa_sends); sPut(10);
  7236  000416  0E25               	movlw	low(STR_23)
  7237  000418  0102               	movlb	2	; () banked
  7238  00041A  0102               	movlb	2	; () banked
  7239  00041C  6F5E               	movwf	((?_sPuts))&0ffh
  7240  00041E  0E7F               	movlw	high(STR_23)
  7241  000420  0102               	movlb	2	; () banked
  7242  000422  6F5F               	movwf	((?_sPuts+1))&0ffh
  7243  000424  EC9E  F026         	call	_sPuts	;wreg free
  7244  000428  0E0B               	movlw	low(0Bh)
  7245  00042A  0102               	movlb	2	; () banked
  7246  00042C  0102               	movlb	2	; () banked
  7247  00042E  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7248  000430  6EE9               	movwf	c:fsr0l
  7249  000432  0E00               	movlw	high(0Bh)
  7250  000434  0102               	movlb	2	; () banked
  7251  000436  0102               	movlb	2	; () banked
  7252  000438  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7253  00043A  6EEA               	movwf	1+c:fsr0l
  7254  00043C  50EF               	movf	indf0,w
  7255  00043E  0F30               	addlw	low(030h)
  7256  000440  0102               	movlb	2	; () banked
  7257  000442  0102               	movlb	2	; () banked
  7258  000444  6F60               	movwf	((?_sPut))&0ffh
  7259  000446  ECDF  F025         	call	_sPut	;wreg free
  7260  00044A  0102               	movlb	2	; () banked
  7261  00044C  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7262  00044E  0E0A               	movlw	low(0Ah)
  7263  000450  0102               	movlb	2	; () banked
  7264  000452  0102               	movlb	2	; () banked
  7265  000454  6F60               	movwf	((?_sPut))&0ffh
  7266  000456  0102               	movlb	2	; () banked
  7267  000458  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7268  00045A  ECDF  F025         	call	_sPut	;wreg free
  7269                           	line	155
  7270                           ;batchpcb26k20.c: 155: sPuts("Waveman:"); sPut(1
                                 0);
  7271  00045E  0EC0               	movlw	low(STR_24)
  7272  000460  0102               	movlb	2	; () banked
  7273  000462  0102               	movlb	2	; () banked
  7274  000464  6F5E               	movwf	((?_sPuts))&0ffh
  7275  000466  0E7F               	movlw	high(STR_24)
  7276  000468  0102               	movlb	2	; () banked
  7277  00046A  6F5F               	movwf	((?_sPuts+1))&0ffh
  7278  00046C  EC9E  F026         	call	_sPuts	;wreg free
  7279  000470  0102               	movlb	2	; () banked
  7280  000472  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7281  000474  0E0A               	movlw	low(0Ah)
  7282  000476  0102               	movlb	2	; () banked
  7283  000478  0102               	movlb	2	; () banked
  7284  00047A  6F60               	movwf	((?_sPut))&0ffh
  7285  00047C  0102               	movlb	2	; () banked
  7286  00047E  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7287  000480  ECDF  F025         	call	_sPut	;wreg free
  7288                           	line	156
  7289                           ;batchpcb26k20.c: 156: sPuts(" [W] Sends  = "); 
                                 sPut('0' + settingsp->waveman_sends); sPut(10);
  7290  000484  0E16               	movlw	low(STR_25)
  7291  000486  0102               	movlb	2	; () banked
  7292  000488  0102               	movlb	2	; () banked
  7293  00048A  6F5E               	movwf	((?_sPuts))&0ffh
  7294  00048C  0E7F               	movlw	high(STR_25)
  7295  00048E  0102               	movlb	2	; () banked
  7296  000490  6F5F               	movwf	((?_sPuts+1))&0ffh
  7297  000492  EC9E  F026         	call	_sPuts	;wreg free
  7298  000496  0E0C               	movlw	low(0Ch)
  7299  000498  0102               	movlb	2	; () banked
  7300  00049A  0102               	movlb	2	; () banked
  7301  00049C  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7302  00049E  6EE9               	movwf	c:fsr0l
  7303  0004A0  0E00               	movlw	high(0Ch)
  7304  0004A2  0102               	movlb	2	; () banked
  7305  0004A4  0102               	movlb	2	; () banked
  7306  0004A6  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7307  0004A8  6EEA               	movwf	1+c:fsr0l
  7308  0004AA  50EF               	movf	indf0,w
  7309  0004AC  0F30               	addlw	low(030h)
  7310  0004AE  0102               	movlb	2	; () banked
  7311  0004B0  0102               	movlb	2	; () banked
  7312  0004B2  6F60               	movwf	((?_sPut))&0ffh
  7313  0004B4  ECDF  F025         	call	_sPut	;wreg free
  7314  0004B8  0102               	movlb	2	; () banked
  7315  0004BA  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7316  0004BC  0E0A               	movlw	low(0Ah)
  7317  0004BE  0102               	movlb	2	; () banked
  7318  0004C0  0102               	movlb	2	; () banked
  7319  0004C2  6F60               	movwf	((?_sPut))&0ffh
  7320  0004C4  0102               	movlb	2	; () banked
  7321  0004C6  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7322  0004C8  ECDF  F025         	call	_sPut	;wreg free
  7323                           	line	157
  7324                           ;batchpcb26k20.c: 157: sPuts("Kangthai:"); sPut(
                                 10);
  7325  0004CC  0EAC               	movlw	low(STR_26)
  7326  0004CE  0102               	movlb	2	; () banked
  7327  0004D0  0102               	movlb	2	; () banked
  7328  0004D2  6F5E               	movwf	((?_sPuts))&0ffh
  7329  0004D4  0E7F               	movlw	high(STR_26)
  7330  0004D6  0102               	movlb	2	; () banked
  7331  0004D8  6F5F               	movwf	((?_sPuts+1))&0ffh
  7332  0004DA  EC9E  F026         	call	_sPuts	;wreg free
  7333  0004DE  0102               	movlb	2	; () banked
  7334  0004E0  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7335  0004E2  0E0A               	movlw	low(0Ah)
  7336  0004E4  0102               	movlb	2	; () banked
  7337  0004E6  0102               	movlb	2	; () banked
  7338  0004E8  6F60               	movwf	((?_sPut))&0ffh
  7339  0004EA  0102               	movlb	2	; () banked
  7340  0004EC  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7341  0004EE  ECDF  F025         	call	_sPut	;wreg free
  7342                           	line	158
  7343                           ;batchpcb26k20.c: 158: sPuts(" [K] Sends  = "); 
                                 sPut('0' + settingsp->kangthai_sends); sPut(10);
  7344  0004F2  0EF8               	movlw	low(STR_27)
  7345  0004F4  0102               	movlb	2	; () banked
  7346  0004F6  0102               	movlb	2	; () banked
  7347  0004F8  6F5E               	movwf	((?_sPuts))&0ffh
  7348  0004FA  0E7E               	movlw	high(STR_27)
  7349  0004FC  0102               	movlb	2	; () banked
  7350  0004FE  6F5F               	movwf	((?_sPuts+1))&0ffh
  7351  000500  EC9E  F026         	call	_sPuts	;wreg free
  7352  000504  0E0D               	movlw	low(0Dh)
  7353  000506  0102               	movlb	2	; () banked
  7354  000508  0102               	movlb	2	; () banked
  7355  00050A  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7356  00050C  6EE9               	movwf	c:fsr0l
  7357  00050E  0E00               	movlw	high(0Dh)
  7358  000510  0102               	movlb	2	; () banked
  7359  000512  0102               	movlb	2	; () banked
  7360  000514  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7361  000516  6EEA               	movwf	1+c:fsr0l
  7362  000518  50EF               	movf	indf0,w
  7363  00051A  0F30               	addlw	low(030h)
  7364  00051C  0102               	movlb	2	; () banked
  7365  00051E  0102               	movlb	2	; () banked
  7366  000520  6F60               	movwf	((?_sPut))&0ffh
  7367  000522  ECDF  F025         	call	_sPut	;wreg free
  7368  000526  0102               	movlb	2	; () banked
  7369  000528  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7370  00052A  0E0A               	movlw	low(0Ah)
  7371  00052C  0102               	movlb	2	; () banked
  7372  00052E  0102               	movlb	2	; () banked
  7373  000530  6F60               	movwf	((?_sPut))&0ffh
  7374  000532  0102               	movlb	2	; () banked
  7375  000534  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7376  000536  ECDF  F025         	call	_sPut	;wreg free
  7377                           	line	159
  7378                           ;batchpcb26k20.c: 159: sPuts("Settings:"); sPut(
                                 10);
  7379  00053A  0EB6               	movlw	low(STR_28)
  7380  00053C  0102               	movlb	2	; () banked
  7381  00053E  0102               	movlb	2	; () banked
  7382  000540  6F5E               	movwf	((?_sPuts))&0ffh
  7383  000542  0E7F               	movlw	high(STR_28)
  7384  000544  0102               	movlb	2	; () banked
  7385  000546  6F5F               	movwf	((?_sPuts+1))&0ffh
  7386  000548  EC9E  F026         	call	_sPuts	;wreg free
  7387  00054C  0102               	movlb	2	; () banked
  7388  00054E  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7389  000550  0E0A               	movlw	low(0Ah)
  7390  000552  0102               	movlb	2	; () banked
  7391  000554  0102               	movlb	2	; () banked
  7392  000556  6F60               	movwf	((?_sPut))&0ffh
  7393  000558  0102               	movlb	2	; () banked
  7394  00055A  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7395  00055C  ECDF  F025         	call	_sPut	;wreg free
  7396                           	line	160
  7397                           ;batchpcb26k20.c: 160: sPuts(" [S] EEPROM save")
                                 ; sPut(10);
  7398  000560  0EB8               	movlw	low(STR_29)
  7399  000562  0102               	movlb	2	; () banked
  7400  000564  0102               	movlb	2	; () banked
  7401  000566  6F5E               	movwf	((?_sPuts))&0ffh
  7402  000568  0E7E               	movlw	high(STR_29)
  7403  00056A  0102               	movlb	2	; () banked
  7404  00056C  6F5F               	movwf	((?_sPuts+1))&0ffh
  7405  00056E  EC9E  F026         	call	_sPuts	;wreg free
  7406  000572  0102               	movlb	2	; () banked
  7407  000574  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7408  000576  0E0A               	movlw	low(0Ah)
  7409  000578  0102               	movlb	2	; () banked
  7410  00057A  0102               	movlb	2	; () banked
  7411  00057C  6F60               	movwf	((?_sPut))&0ffh
  7412  00057E  0102               	movlb	2	; () banked
  7413  000580  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7414  000582  ECDF  F025         	call	_sPut	;wreg free
  7415                           	line	161
  7416                           ;batchpcb26k20.c: 161: sPuts(" [L] EEPROM load")
                                 ; sPut(10);
  7417  000586  0EC9               	movlw	low(STR_30)
  7418  000588  0102               	movlb	2	; () banked
  7419  00058A  0102               	movlb	2	; () banked
  7420  00058C  6F5E               	movwf	((?_sPuts))&0ffh
  7421  00058E  0E7E               	movlw	high(STR_30)
  7422  000590  0102               	movlb	2	; () banked
  7423  000592  6F5F               	movwf	((?_sPuts+1))&0ffh
  7424  000594  EC9E  F026         	call	_sPuts	;wreg free
  7425  000598  0102               	movlb	2	; () banked
  7426  00059A  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7427  00059C  0E0A               	movlw	low(0Ah)
  7428  00059E  0102               	movlb	2	; () banked
  7429  0005A0  0102               	movlb	2	; () banked
  7430  0005A2  6F60               	movwf	((?_sPut))&0ffh
  7431  0005A4  0102               	movlb	2	; () banked
  7432  0005A6  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7433  0005A8  ECDF  F025         	call	_sPut	;wreg free
  7434                           	line	162
  7435                           ;batchpcb26k20.c: 162: sPuts(" [F] Load defaults
                                 "); sPut(10);
  7436  0005AC  0EA5               	movlw	low(STR_31)
  7437  0005AE  0102               	movlb	2	; () banked
  7438  0005B0  0102               	movlb	2	; () banked
  7439  0005B2  6F5E               	movwf	((?_sPuts))&0ffh
  7440  0005B4  0E7E               	movlw	high(STR_31)
  7441  0005B6  0102               	movlb	2	; () banked
  7442  0005B8  6F5F               	movwf	((?_sPuts+1))&0ffh
  7443  0005BA  EC9E  F026         	call	_sPuts	;wreg free
  7444  0005BE  0102               	movlb	2	; () banked
  7445  0005C0  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7446  0005C2  0E0A               	movlw	low(0Ah)
  7447  0005C4  0102               	movlb	2	; () banked
  7448  0005C6  0102               	movlb	2	; () banked
  7449  0005C8  6F60               	movwf	((?_sPut))&0ffh
  7450  0005CA  0102               	movlb	2	; () banked
  7451  0005CC  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7452  0005CE  ECDF  F025         	call	_sPut	;wreg free
  7453                           	line	163
  7454                           ;batchpcb26k20.c: 163: sPuts("Other:"); sPut(10)
                                 ;
  7455  0005D2  0EC9               	movlw	low(STR_32)
  7456  0005D4  0102               	movlb	2	; () banked
  7457  0005D6  0102               	movlb	2	; () banked
  7458  0005D8  6F5E               	movwf	((?_sPuts))&0ffh
  7459  0005DA  0E7F               	movlw	high(STR_32)
  7460  0005DC  0102               	movlb	2	; () banked
  7461  0005DE  6F5F               	movwf	((?_sPuts+1))&0ffh
  7462  0005E0  EC9E  F026         	call	_sPuts	;wreg free
  7463  0005E4  0102               	movlb	2	; () banked
  7464  0005E6  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7465  0005E8  0E0A               	movlw	low(0Ah)
  7466  0005EA  0102               	movlb	2	; () banked
  7467  0005EC  0102               	movlb	2	; () banked
  7468  0005EE  6F60               	movwf	((?_sPut))&0ffh
  7469  0005F0  0102               	movlb	2	; () banked
  7470  0005F2  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7471  0005F4  ECDF  F025         	call	_sPut	;wreg free
  7472                           	line	164
  7473                           ;batchpcb26k20.c: 164: sPuts(" Curr. RSSI = "); 
                                 sPutint(readAd()); sPut(10);
  7474  0005F8  0E52               	movlw	low(STR_33)
  7475  0005FA  0102               	movlb	2	; () banked
  7476  0005FC  0102               	movlb	2	; () banked
  7477  0005FE  6F5E               	movwf	((?_sPuts))&0ffh
  7478  000600  0E7F               	movlw	high(STR_33)
  7479  000602  0102               	movlb	2	; () banked
  7480  000604  6F5F               	movwf	((?_sPuts+1))&0ffh
  7481  000606  EC9E  F026         	call	_sPuts	;wreg free
  7482  00060A  EC65  F021         	call	_readAd	;wreg free
  7483  00060E  C240  F24F         	movff	0+?_readAd,(?_sPutint)
  7484  000612  C241  F250         	movff	1+?_readAd,(?_sPutint+1)
  7485  000616  ECB8  F01E         	call	_sPutint	;wreg free
  7486  00061A  0102               	movlb	2	; () banked
  7487  00061C  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7488  00061E  0E0A               	movlw	low(0Ah)
  7489  000620  0102               	movlb	2	; () banked
  7490  000622  0102               	movlb	2	; () banked
  7491  000624  6F60               	movwf	((?_sPut))&0ffh
  7492  000626  0102               	movlb	2	; () banked
  7493  000628  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7494  00062A  ECDF  F025         	call	_sPut	;wreg free
  7495                           	line	165
  7496                           ;batchpcb26k20.c: 165: }
  7497  00062E  EFDC  F005         	goto	l539
  7498                           	line	166
  7499                           	
  7500  000632                     l538:		; BSR set to: ?
  7501                           
  7502                           	line	167
  7503                           ;batchpcb26k20.c: 166: else{
  7504                           ;batchpcb26k20.c: 167: switch (linep[0]){
  7505  000632  EFA8  F005         	goto	l541
  7506                           	line	168
  7507                           ;batchpcb26k20.c: 168: case 'B':
  7508                           	
  7509  000636                     l542:		; BSR set to: ?
  7510                           
  7511                           	line	169
  7512                           ;batchpcb26k20.c: 169: settingsp->bmc_en_rx = li
                                 nep[1] - '0';
  7513  000636  0E01               	movlw	low(01h)
  7514  000638  0102               	movlb	2	; () banked
  7515  00063A  0102               	movlb	2	; () banked
  7516  00063C  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7517  00063E  6EE9               	movwf	c:fsr0l
  7518  000640  0E00               	movlw	high(01h)
  7519  000642  0102               	movlb	2	; () banked
  7520  000644  0102               	movlb	2	; () banked
  7521  000646  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7522  000648  6EEA               	movwf	1+c:fsr0l
  7523  00064A  0E01               	movlw	low(01h)
  7524  00064C  0102               	movlb	2	; () banked
  7525  00064E  0102               	movlb	2	; () banked
  7526  000650  253A               	addwf	((parseSettings@linep))&0ffh,w
  7527  000652  6EE1               	movwf	c:fsr1l
  7528  000654  0E00               	movlw	high(01h)
  7529  000656  0102               	movlb	2	; () banked
  7530  000658  0102               	movlb	2	; () banked
  7531  00065A  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  7532  00065C  6EE2               	movwf	1+c:fsr1l
  7533  00065E  50E7               	movf	indf1,w
  7534  000660  0FD0               	addlw	low(0D0h)
  7535  000662  6EEF               	movwf	indf0
  7536                           
  7537                           	line	170
  7538                           ;batchpcb26k20.c: 170: sPuts("$OK");
  7539  000664  0EEC               	movlw	low(STR_34)
  7540  000666  0102               	movlb	2	; () banked
  7541  000668  0102               	movlb	2	; () banked
  7542  00066A  6F5E               	movwf	((?_sPuts))&0ffh
  7543  00066C  0E7F               	movlw	high(STR_34)
  7544  00066E  0102               	movlb	2	; () banked
  7545  000670  6F5F               	movwf	((?_sPuts+1))&0ffh
  7546  000672  EC9E  F026         	call	_sPuts	;wreg free
  7547                           	line	171
  7548                           ;batchpcb26k20.c: 171: sPut(10);
  7549  000676  0102               	movlb	2	; () banked
  7550  000678  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7551  00067A  0E0A               	movlw	low(0Ah)
  7552  00067C  0102               	movlb	2	; () banked
  7553  00067E  0102               	movlb	2	; () banked
  7554  000680  6F60               	movwf	((?_sPut))&0ffh
  7555  000682  0102               	movlb	2	; () banked
  7556  000684  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7557  000686  ECDF  F025         	call	_sPut	;wreg free
  7558                           	line	172
  7559                           ;batchpcb26k20.c: 172: break;
  7560  00068A  EFDC  F005         	goto	l539
  7561                           	line	173
  7562                           ;batchpcb26k20.c: 173: case 'M':
  7563                           	
  7564  00068E                     l543:		; BSR set to: ?
  7565                           
  7566                           	line	174
  7567                           ;batchpcb26k20.c: 174: settingsp->bmc_sends = li
                                 nep[1] - '0';
  7568  00068E  0E02               	movlw	low(02h)
  7569  000690  0102               	movlb	2	; () banked
  7570  000692  0102               	movlb	2	; () banked
  7571  000694  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7572  000696  6EE9               	movwf	c:fsr0l
  7573  000698  0E00               	movlw	high(02h)
  7574  00069A  0102               	movlb	2	; () banked
  7575  00069C  0102               	movlb	2	; () banked
  7576  00069E  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7577  0006A0  6EEA               	movwf	1+c:fsr0l
  7578  0006A2  0E01               	movlw	low(01h)
  7579  0006A4  0102               	movlb	2	; () banked
  7580  0006A6  0102               	movlb	2	; () banked
  7581  0006A8  253A               	addwf	((parseSettings@linep))&0ffh,w
  7582  0006AA  6EE1               	movwf	c:fsr1l
  7583  0006AC  0E00               	movlw	high(01h)
  7584  0006AE  0102               	movlb	2	; () banked
  7585  0006B0  0102               	movlb	2	; () banked
  7586  0006B2  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  7587  0006B4  6EE2               	movwf	1+c:fsr1l
  7588  0006B6  50E7               	movf	indf1,w
  7589  0006B8  0FD0               	addlw	low(0D0h)
  7590  0006BA  6EEF               	movwf	indf0
  7591                           
  7592                           	line	175
  7593                           ;batchpcb26k20.c: 175: sPuts("$OK");
  7594  0006BC  0EEC               	movlw	low(STR_35)
  7595  0006BE  0102               	movlb	2	; () banked
  7596  0006C0  0102               	movlb	2	; () banked
  7597  0006C2  6F5E               	movwf	((?_sPuts))&0ffh
  7598  0006C4  0E7F               	movlw	high(STR_35)
  7599  0006C6  0102               	movlb	2	; () banked
  7600  0006C8  6F5F               	movwf	((?_sPuts+1))&0ffh
  7601  0006CA  EC9E  F026         	call	_sPuts	;wreg free
  7602                           	line	176
  7603                           ;batchpcb26k20.c: 176: sPut(10);
  7604  0006CE  0102               	movlb	2	; () banked
  7605  0006D0  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7606  0006D2  0E0A               	movlw	low(0Ah)
  7607  0006D4  0102               	movlb	2	; () banked
  7608  0006D6  0102               	movlb	2	; () banked
  7609  0006D8  6F60               	movwf	((?_sPut))&0ffh
  7610  0006DA  0102               	movlb	2	; () banked
  7611  0006DC  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7612  0006DE  ECDF  F025         	call	_sPut	;wreg free
  7613                           	line	177
  7614                           ;batchpcb26k20.c: 177: break;
  7615  0006E2  EFDC  F005         	goto	l539
  7616                           	line	178
  7617                           ;batchpcb26k20.c: 178: case 'C':
  7618                           	
  7619  0006E6                     l544:		; BSR set to: ?
  7620                           
  7621                           	line	179
  7622                           ;batchpcb26k20.c: 179: settingsp->bmc_en_hex = l
                                 inep[1] - '0';
  7623  0006E6  0E03               	movlw	low(03h)
  7624  0006E8  0102               	movlb	2	; () banked
  7625  0006EA  0102               	movlb	2	; () banked
  7626  0006EC  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7627  0006EE  6EE9               	movwf	c:fsr0l
  7628  0006F0  0E00               	movlw	high(03h)
  7629  0006F2  0102               	movlb	2	; () banked
  7630  0006F4  0102               	movlb	2	; () banked
  7631  0006F6  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7632  0006F8  6EEA               	movwf	1+c:fsr0l
  7633  0006FA  0E01               	movlw	low(01h)
  7634  0006FC  0102               	movlb	2	; () banked
  7635  0006FE  0102               	movlb	2	; () banked
  7636  000700  253A               	addwf	((parseSettings@linep))&0ffh,w
  7637  000702  6EE1               	movwf	c:fsr1l
  7638  000704  0E00               	movlw	high(01h)
  7639  000706  0102               	movlb	2	; () banked
  7640  000708  0102               	movlb	2	; () banked
  7641  00070A  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  7642  00070C  6EE2               	movwf	1+c:fsr1l
  7643  00070E  50E7               	movf	indf1,w
  7644  000710  0FD0               	addlw	low(0D0h)
  7645  000712  6EEF               	movwf	indf0
  7646                           
  7647                           	line	180
  7648                           ;batchpcb26k20.c: 180: sPuts("$OK");
  7649  000714  0EEC               	movlw	low(STR_36)
  7650  000716  0102               	movlb	2	; () banked
  7651  000718  0102               	movlb	2	; () banked
  7652  00071A  6F5E               	movwf	((?_sPuts))&0ffh
  7653  00071C  0E7F               	movlw	high(STR_36)
  7654  00071E  0102               	movlb	2	; () banked
  7655  000720  6F5F               	movwf	((?_sPuts+1))&0ffh
  7656  000722  EC9E  F026         	call	_sPuts	;wreg free
  7657                           	line	181
  7658                           ;batchpcb26k20.c: 181: sPut(10);
  7659  000726  0102               	movlb	2	; () banked
  7660  000728  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7661  00072A  0E0A               	movlw	low(0Ah)
  7662  00072C  0102               	movlb	2	; () banked
  7663  00072E  0102               	movlb	2	; () banked
  7664  000730  6F60               	movwf	((?_sPut))&0ffh
  7665  000732  0102               	movlb	2	; () banked
  7666  000734  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7667  000736  ECDF  F025         	call	_sPut	;wreg free
  7668                           	line	182
  7669                           ;batchpcb26k20.c: 182: break;
  7670  00073A  EFDC  F005         	goto	l539
  7671                           	line	183
  7672                           ;batchpcb26k20.c: 183: case 'R':
  7673                           	
  7674  00073E                     l545:		; BSR set to: ?
  7675                           
  7676                           	line	184
  7677                           ;batchpcb26k20.c: 184: settingsp->bmc_repeat = l
                                 inep[1] - '0';
  7678  00073E  0E04               	movlw	low(04h)
  7679  000740  0102               	movlb	2	; () banked
  7680  000742  0102               	movlb	2	; () banked
  7681  000744  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7682  000746  6EE9               	movwf	c:fsr0l
  7683  000748  0E00               	movlw	high(04h)
  7684  00074A  0102               	movlb	2	; () banked
  7685  00074C  0102               	movlb	2	; () banked
  7686  00074E  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7687  000750  6EEA               	movwf	1+c:fsr0l
  7688  000752  0E01               	movlw	low(01h)
  7689  000754  0102               	movlb	2	; () banked
  7690  000756  0102               	movlb	2	; () banked
  7691  000758  253A               	addwf	((parseSettings@linep))&0ffh,w
  7692  00075A  6EE1               	movwf	c:fsr1l
  7693  00075C  0E00               	movlw	high(01h)
  7694  00075E  0102               	movlb	2	; () banked
  7695  000760  0102               	movlb	2	; () banked
  7696  000762  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  7697  000764  6EE2               	movwf	1+c:fsr1l
  7698  000766  50E7               	movf	indf1,w
  7699  000768  0FD0               	addlw	low(0D0h)
  7700  00076A  6EEF               	movwf	indf0
  7701                           
  7702                           	line	185
  7703                           ;batchpcb26k20.c: 185: sPuts("$OK");
  7704  00076C  0EEC               	movlw	low(STR_37)
  7705  00076E  0102               	movlb	2	; () banked
  7706  000770  0102               	movlb	2	; () banked
  7707  000772  6F5E               	movwf	((?_sPuts))&0ffh
  7708  000774  0E7F               	movlw	high(STR_37)
  7709  000776  0102               	movlb	2	; () banked
  7710  000778  6F5F               	movwf	((?_sPuts+1))&0ffh
  7711  00077A  EC9E  F026         	call	_sPuts	;wreg free
  7712                           	line	186
  7713                           ;batchpcb26k20.c: 186: sPut(10);
  7714  00077E  0102               	movlb	2	; () banked
  7715  000780  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7716  000782  0E0A               	movlw	low(0Ah)
  7717  000784  0102               	movlb	2	; () banked
  7718  000786  0102               	movlb	2	; () banked
  7719  000788  6F60               	movwf	((?_sPut))&0ffh
  7720  00078A  0102               	movlb	2	; () banked
  7721  00078C  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7722  00078E  ECDF  F025         	call	_sPut	;wreg free
  7723                           	line	187
  7724                           ;batchpcb26k20.c: 187: break;
  7725  000792  EFDC  F005         	goto	l539
  7726                           	line	188
  7727                           ;batchpcb26k20.c: 188: case 'H':
  7728                           	
  7729  000796                     l546:		; BSR set to: ?
  7730                           
  7731                           	line	189
  7732                           ;batchpcb26k20.c: 189: settingsp->bmc_hops = lin
                                 ep[1] - '0';
  7733  000796  0E05               	movlw	low(05h)
  7734  000798  0102               	movlb	2	; () banked
  7735  00079A  0102               	movlb	2	; () banked
  7736  00079C  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7737  00079E  6EE9               	movwf	c:fsr0l
  7738  0007A0  0E00               	movlw	high(05h)
  7739  0007A2  0102               	movlb	2	; () banked
  7740  0007A4  0102               	movlb	2	; () banked
  7741  0007A6  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7742  0007A8  6EEA               	movwf	1+c:fsr0l
  7743  0007AA  0E01               	movlw	low(01h)
  7744  0007AC  0102               	movlb	2	; () banked
  7745  0007AE  0102               	movlb	2	; () banked
  7746  0007B0  253A               	addwf	((parseSettings@linep))&0ffh,w
  7747  0007B2  6EE1               	movwf	c:fsr1l
  7748  0007B4  0E00               	movlw	high(01h)
  7749  0007B6  0102               	movlb	2	; () banked
  7750  0007B8  0102               	movlb	2	; () banked
  7751  0007BA  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  7752  0007BC  6EE2               	movwf	1+c:fsr1l
  7753  0007BE  50E7               	movf	indf1,w
  7754  0007C0  0FD0               	addlw	low(0D0h)
  7755  0007C2  6EEF               	movwf	indf0
  7756                           
  7757                           	line	190
  7758                           ;batchpcb26k20.c: 190: sPuts("$OK");
  7759  0007C4  0EEC               	movlw	low(STR_38)
  7760  0007C6  0102               	movlb	2	; () banked
  7761  0007C8  0102               	movlb	2	; () banked
  7762  0007CA  6F5E               	movwf	((?_sPuts))&0ffh
  7763  0007CC  0E7F               	movlw	high(STR_38)
  7764  0007CE  0102               	movlb	2	; () banked
  7765  0007D0  6F5F               	movwf	((?_sPuts+1))&0ffh
  7766  0007D2  EC9E  F026         	call	_sPuts	;wreg free
  7767                           	line	191
  7768                           ;batchpcb26k20.c: 191: sPut(10);
  7769  0007D6  0102               	movlb	2	; () banked
  7770  0007D8  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7771  0007DA  0E0A               	movlw	low(0Ah)
  7772  0007DC  0102               	movlb	2	; () banked
  7773  0007DE  0102               	movlb	2	; () banked
  7774  0007E0  6F60               	movwf	((?_sPut))&0ffh
  7775  0007E2  0102               	movlb	2	; () banked
  7776  0007E4  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7777  0007E6  ECDF  F025         	call	_sPut	;wreg free
  7778                           	line	192
  7779                           ;batchpcb26k20.c: 192: break;
  7780  0007EA  EFDC  F005         	goto	l539
  7781                           	line	193
  7782                           ;batchpcb26k20.c: 193: case 'D':
  7783                           	
  7784  0007EE                     l547:		; BSR set to: ?
  7785                           
  7786                           	line	194
  7787                           ;batchpcb26k20.c: 194: settingsp->doro_en_rx = l
                                 inep[1] - '0';
  7788  0007EE  0E06               	movlw	low(06h)
  7789  0007F0  0102               	movlb	2	; () banked
  7790  0007F2  0102               	movlb	2	; () banked
  7791  0007F4  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7792  0007F6  6EE9               	movwf	c:fsr0l
  7793  0007F8  0E00               	movlw	high(06h)
  7794  0007FA  0102               	movlb	2	; () banked
  7795  0007FC  0102               	movlb	2	; () banked
  7796  0007FE  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7797  000800  6EEA               	movwf	1+c:fsr0l
  7798  000802  0E01               	movlw	low(01h)
  7799  000804  0102               	movlb	2	; () banked
  7800  000806  0102               	movlb	2	; () banked
  7801  000808  253A               	addwf	((parseSettings@linep))&0ffh,w
  7802  00080A  6EE1               	movwf	c:fsr1l
  7803  00080C  0E00               	movlw	high(01h)
  7804  00080E  0102               	movlb	2	; () banked
  7805  000810  0102               	movlb	2	; () banked
  7806  000812  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  7807  000814  6EE2               	movwf	1+c:fsr1l
  7808  000816  50E7               	movf	indf1,w
  7809  000818  0FD0               	addlw	low(0D0h)
  7810  00081A  6EEF               	movwf	indf0
  7811                           
  7812                           	line	195
  7813                           ;batchpcb26k20.c: 195: sPuts("$OK");
  7814  00081C  0EEC               	movlw	low(STR_39)
  7815  00081E  0102               	movlb	2	; () banked
  7816  000820  0102               	movlb	2	; () banked
  7817  000822  6F5E               	movwf	((?_sPuts))&0ffh
  7818  000824  0E7F               	movlw	high(STR_39)
  7819  000826  0102               	movlb	2	; () banked
  7820  000828  6F5F               	movwf	((?_sPuts+1))&0ffh
  7821  00082A  EC9E  F026         	call	_sPuts	;wreg free
  7822                           	line	196
  7823                           ;batchpcb26k20.c: 196: sPut(10);
  7824  00082E  0102               	movlb	2	; () banked
  7825  000830  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7826  000832  0E0A               	movlw	low(0Ah)
  7827  000834  0102               	movlb	2	; () banked
  7828  000836  0102               	movlb	2	; () banked
  7829  000838  6F60               	movwf	((?_sPut))&0ffh
  7830  00083A  0102               	movlb	2	; () banked
  7831  00083C  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7832  00083E  ECDF  F025         	call	_sPut	;wreg free
  7833                           	line	197
  7834                           ;batchpcb26k20.c: 197: break;
  7835  000842  EFDC  F005         	goto	l539
  7836                           	line	198
  7837                           ;batchpcb26k20.c: 198: case 'G':
  7838                           	
  7839  000846                     l548:		; BSR set to: ?
  7840                           
  7841                           	line	199
  7842                           ;batchpcb26k20.c: 199: settingsp->gao_en_rx = li
                                 nep[1] - '0';
  7843  000846  0E07               	movlw	low(07h)
  7844  000848  0102               	movlb	2	; () banked
  7845  00084A  0102               	movlb	2	; () banked
  7846  00084C  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7847  00084E  6EE9               	movwf	c:fsr0l
  7848  000850  0E00               	movlw	high(07h)
  7849  000852  0102               	movlb	2	; () banked
  7850  000854  0102               	movlb	2	; () banked
  7851  000856  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7852  000858  6EEA               	movwf	1+c:fsr0l
  7853  00085A  0E01               	movlw	low(01h)
  7854  00085C  0102               	movlb	2	; () banked
  7855  00085E  0102               	movlb	2	; () banked
  7856  000860  253A               	addwf	((parseSettings@linep))&0ffh,w
  7857  000862  6EE1               	movwf	c:fsr1l
  7858  000864  0E00               	movlw	high(01h)
  7859  000866  0102               	movlb	2	; () banked
  7860  000868  0102               	movlb	2	; () banked
  7861  00086A  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  7862  00086C  6EE2               	movwf	1+c:fsr1l
  7863  00086E  50E7               	movf	indf1,w
  7864  000870  0FD0               	addlw	low(0D0h)
  7865  000872  6EEF               	movwf	indf0
  7866                           
  7867                           	line	200
  7868                           ;batchpcb26k20.c: 200: sPuts("$OK");
  7869  000874  0EEC               	movlw	low(STR_40)
  7870  000876  0102               	movlb	2	; () banked
  7871  000878  0102               	movlb	2	; () banked
  7872  00087A  6F5E               	movwf	((?_sPuts))&0ffh
  7873  00087C  0E7F               	movlw	high(STR_40)
  7874  00087E  0102               	movlb	2	; () banked
  7875  000880  6F5F               	movwf	((?_sPuts+1))&0ffh
  7876  000882  EC9E  F026         	call	_sPuts	;wreg free
  7877                           	line	201
  7878                           ;batchpcb26k20.c: 201: sPut(10);
  7879  000886  0102               	movlb	2	; () banked
  7880  000888  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7881  00088A  0E0A               	movlw	low(0Ah)
  7882  00088C  0102               	movlb	2	; () banked
  7883  00088E  0102               	movlb	2	; () banked
  7884  000890  6F60               	movwf	((?_sPut))&0ffh
  7885  000892  0102               	movlb	2	; () banked
  7886  000894  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7887  000896  ECDF  F025         	call	_sPut	;wreg free
  7888                           	line	202
  7889                           ;batchpcb26k20.c: 202: break;
  7890  00089A  EFDC  F005         	goto	l539
  7891                           	line	203
  7892                           ;batchpcb26k20.c: 203: case 'A':
  7893                           	
  7894  00089E                     l549:		; BSR set to: ?
  7895                           
  7896                           	line	204
  7897                           ;batchpcb26k20.c: 204: settingsp->gao_sends = li
                                 nep[1] - '0';
  7898  00089E  0E08               	movlw	low(08h)
  7899  0008A0  0102               	movlb	2	; () banked
  7900  0008A2  0102               	movlb	2	; () banked
  7901  0008A4  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7902  0008A6  6EE9               	movwf	c:fsr0l
  7903  0008A8  0E00               	movlw	high(08h)
  7904  0008AA  0102               	movlb	2	; () banked
  7905  0008AC  0102               	movlb	2	; () banked
  7906  0008AE  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7907  0008B0  6EEA               	movwf	1+c:fsr0l
  7908  0008B2  0E01               	movlw	low(01h)
  7909  0008B4  0102               	movlb	2	; () banked
  7910  0008B6  0102               	movlb	2	; () banked
  7911  0008B8  253A               	addwf	((parseSettings@linep))&0ffh,w
  7912  0008BA  6EE1               	movwf	c:fsr1l
  7913  0008BC  0E00               	movlw	high(01h)
  7914  0008BE  0102               	movlb	2	; () banked
  7915  0008C0  0102               	movlb	2	; () banked
  7916  0008C2  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  7917  0008C4  6EE2               	movwf	1+c:fsr1l
  7918  0008C6  50E7               	movf	indf1,w
  7919  0008C8  0FD0               	addlw	low(0D0h)
  7920  0008CA  6EEF               	movwf	indf0
  7921                           
  7922                           	line	205
  7923                           ;batchpcb26k20.c: 205: sPuts("$OK");
  7924  0008CC  0EEC               	movlw	low(STR_41)
  7925  0008CE  0102               	movlb	2	; () banked
  7926  0008D0  0102               	movlb	2	; () banked
  7927  0008D2  6F5E               	movwf	((?_sPuts))&0ffh
  7928  0008D4  0E7F               	movlw	high(STR_41)
  7929  0008D6  0102               	movlb	2	; () banked
  7930  0008D8  6F5F               	movwf	((?_sPuts+1))&0ffh
  7931  0008DA  EC9E  F026         	call	_sPuts	;wreg free
  7932                           	line	206
  7933                           ;batchpcb26k20.c: 206: sPut(10);
  7934  0008DE  0102               	movlb	2	; () banked
  7935  0008E0  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7936  0008E2  0E0A               	movlw	low(0Ah)
  7937  0008E4  0102               	movlb	2	; () banked
  7938  0008E6  0102               	movlb	2	; () banked
  7939  0008E8  6F60               	movwf	((?_sPut))&0ffh
  7940  0008EA  0102               	movlb	2	; () banked
  7941  0008EC  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7942  0008EE  ECDF  F025         	call	_sPut	;wreg free
  7943                           	line	207
  7944                           ;batchpcb26k20.c: 207: break;
  7945  0008F2  EFDC  F005         	goto	l539
  7946                           	line	208
  7947                           ;batchpcb26k20.c: 208: case 'E':
  7948                           	
  7949  0008F6                     l550:		; BSR set to: ?
  7950                           
  7951                           	line	209
  7952                           ;batchpcb26k20.c: 209: settingsp->esic_en_rx = l
                                 inep[1] - '0';
  7953  0008F6  0E09               	movlw	low(09h)
  7954  0008F8  0102               	movlb	2	; () banked
  7955  0008FA  0102               	movlb	2	; () banked
  7956  0008FC  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  7957  0008FE  6EE9               	movwf	c:fsr0l
  7958  000900  0E00               	movlw	high(09h)
  7959  000902  0102               	movlb	2	; () banked
  7960  000904  0102               	movlb	2	; () banked
  7961  000906  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  7962  000908  6EEA               	movwf	1+c:fsr0l
  7963  00090A  0E01               	movlw	low(01h)
  7964  00090C  0102               	movlb	2	; () banked
  7965  00090E  0102               	movlb	2	; () banked
  7966  000910  253A               	addwf	((parseSettings@linep))&0ffh,w
  7967  000912  6EE1               	movwf	c:fsr1l
  7968  000914  0E00               	movlw	high(01h)
  7969  000916  0102               	movlb	2	; () banked
  7970  000918  0102               	movlb	2	; () banked
  7971  00091A  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  7972  00091C  6EE2               	movwf	1+c:fsr1l
  7973  00091E  50E7               	movf	indf1,w
  7974  000920  0FD0               	addlw	low(0D0h)
  7975  000922  6EEF               	movwf	indf0
  7976                           
  7977                           	line	210
  7978                           ;batchpcb26k20.c: 210: sPuts("$OK");
  7979  000924  0EEC               	movlw	low(STR_42)
  7980  000926  0102               	movlb	2	; () banked
  7981  000928  0102               	movlb	2	; () banked
  7982  00092A  6F5E               	movwf	((?_sPuts))&0ffh
  7983  00092C  0E7F               	movlw	high(STR_42)
  7984  00092E  0102               	movlb	2	; () banked
  7985  000930  6F5F               	movwf	((?_sPuts+1))&0ffh
  7986  000932  EC9E  F026         	call	_sPuts	;wreg free
  7987                           	line	211
  7988                           ;batchpcb26k20.c: 211: sPut(10);
  7989  000936  0102               	movlb	2	; () banked
  7990  000938  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  7991  00093A  0E0A               	movlw	low(0Ah)
  7992  00093C  0102               	movlb	2	; () banked
  7993  00093E  0102               	movlb	2	; () banked
  7994  000940  6F60               	movwf	((?_sPut))&0ffh
  7995  000942  0102               	movlb	2	; () banked
  7996  000944  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  7997  000946  ECDF  F025         	call	_sPut	;wreg free
  7998                           	line	212
  7999                           ;batchpcb26k20.c: 212: break;
  8000  00094A  EFDC  F005         	goto	l539
  8001                           	line	213
  8002                           ;batchpcb26k20.c: 213: case 'N':
  8003                           	
  8004  00094E                     l551:		; BSR set to: ?
  8005                           
  8006                           	line	214
  8007                           ;batchpcb26k20.c: 214: settingsp->nexa_en_rx = l
                                 inep[1] - '0';
  8008  00094E  0E0A               	movlw	low(0Ah)
  8009  000950  0102               	movlb	2	; () banked
  8010  000952  0102               	movlb	2	; () banked
  8011  000954  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  8012  000956  6EE9               	movwf	c:fsr0l
  8013  000958  0E00               	movlw	high(0Ah)
  8014  00095A  0102               	movlb	2	; () banked
  8015  00095C  0102               	movlb	2	; () banked
  8016  00095E  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  8017  000960  6EEA               	movwf	1+c:fsr0l
  8018  000962  0E01               	movlw	low(01h)
  8019  000964  0102               	movlb	2	; () banked
  8020  000966  0102               	movlb	2	; () banked
  8021  000968  253A               	addwf	((parseSettings@linep))&0ffh,w
  8022  00096A  6EE1               	movwf	c:fsr1l
  8023  00096C  0E00               	movlw	high(01h)
  8024  00096E  0102               	movlb	2	; () banked
  8025  000970  0102               	movlb	2	; () banked
  8026  000972  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  8027  000974  6EE2               	movwf	1+c:fsr1l
  8028  000976  50E7               	movf	indf1,w
  8029  000978  0FD0               	addlw	low(0D0h)
  8030  00097A  6EEF               	movwf	indf0
  8031                           
  8032                           	line	215
  8033                           ;batchpcb26k20.c: 215: sPuts("$OK");
  8034  00097C  0EEC               	movlw	low(STR_43)
  8035  00097E  0102               	movlb	2	; () banked
  8036  000980  0102               	movlb	2	; () banked
  8037  000982  6F5E               	movwf	((?_sPuts))&0ffh
  8038  000984  0E7F               	movlw	high(STR_43)
  8039  000986  0102               	movlb	2	; () banked
  8040  000988  6F5F               	movwf	((?_sPuts+1))&0ffh
  8041  00098A  EC9E  F026         	call	_sPuts	;wreg free
  8042                           	line	216
  8043                           ;batchpcb26k20.c: 216: sPut(10);
  8044  00098E  0102               	movlb	2	; () banked
  8045  000990  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  8046  000992  0E0A               	movlw	low(0Ah)
  8047  000994  0102               	movlb	2	; () banked
  8048  000996  0102               	movlb	2	; () banked
  8049  000998  6F60               	movwf	((?_sPut))&0ffh
  8050  00099A  0102               	movlb	2	; () banked
  8051  00099C  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  8052  00099E  ECDF  F025         	call	_sPut	;wreg free
  8053                           	line	217
  8054                           ;batchpcb26k20.c: 217: break;
  8055  0009A2  EFDC  F005         	goto	l539
  8056                           	line	218
  8057                           ;batchpcb26k20.c: 218: case 'X':
  8058                           	
  8059  0009A6                     l552:		; BSR set to: ?
  8060                           
  8061                           	line	219
  8062                           ;batchpcb26k20.c: 219: settingsp->nexa_sends = l
                                 inep[1] - '0';
  8063  0009A6  0E0B               	movlw	low(0Bh)
  8064  0009A8  0102               	movlb	2	; () banked
  8065  0009AA  0102               	movlb	2	; () banked
  8066  0009AC  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  8067  0009AE  6EE9               	movwf	c:fsr0l
  8068  0009B0  0E00               	movlw	high(0Bh)
  8069  0009B2  0102               	movlb	2	; () banked
  8070  0009B4  0102               	movlb	2	; () banked
  8071  0009B6  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  8072  0009B8  6EEA               	movwf	1+c:fsr0l
  8073  0009BA  0E01               	movlw	low(01h)
  8074  0009BC  0102               	movlb	2	; () banked
  8075  0009BE  0102               	movlb	2	; () banked
  8076  0009C0  253A               	addwf	((parseSettings@linep))&0ffh,w
  8077  0009C2  6EE1               	movwf	c:fsr1l
  8078  0009C4  0E00               	movlw	high(01h)
  8079  0009C6  0102               	movlb	2	; () banked
  8080  0009C8  0102               	movlb	2	; () banked
  8081  0009CA  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  8082  0009CC  6EE2               	movwf	1+c:fsr1l
  8083  0009CE  50E7               	movf	indf1,w
  8084  0009D0  0FD0               	addlw	low(0D0h)
  8085  0009D2  6EEF               	movwf	indf0
  8086                           
  8087                           	line	220
  8088                           ;batchpcb26k20.c: 220: sPuts("$OK");
  8089  0009D4  0EEC               	movlw	low(STR_44)
  8090  0009D6  0102               	movlb	2	; () banked
  8091  0009D8  0102               	movlb	2	; () banked
  8092  0009DA  6F5E               	movwf	((?_sPuts))&0ffh
  8093  0009DC  0E7F               	movlw	high(STR_44)
  8094  0009DE  0102               	movlb	2	; () banked
  8095  0009E0  6F5F               	movwf	((?_sPuts+1))&0ffh
  8096  0009E2  EC9E  F026         	call	_sPuts	;wreg free
  8097                           	line	221
  8098                           ;batchpcb26k20.c: 221: sPut(10);
  8099  0009E6  0102               	movlb	2	; () banked
  8100  0009E8  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  8101  0009EA  0E0A               	movlw	low(0Ah)
  8102  0009EC  0102               	movlb	2	; () banked
  8103  0009EE  0102               	movlb	2	; () banked
  8104  0009F0  6F60               	movwf	((?_sPut))&0ffh
  8105  0009F2  0102               	movlb	2	; () banked
  8106  0009F4  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  8107  0009F6  ECDF  F025         	call	_sPut	;wreg free
  8108                           	line	222
  8109                           ;batchpcb26k20.c: 222: break;
  8110  0009FA  EFDC  F005         	goto	l539
  8111                           	line	223
  8112                           ;batchpcb26k20.c: 223: case 'W':
  8113                           	
  8114  0009FE                     l553:		; BSR set to: ?
  8115                           
  8116                           	line	224
  8117                           ;batchpcb26k20.c: 224: settingsp->waveman_sends 
                                 = linep[1] - '0';
  8118  0009FE  0E0C               	movlw	low(0Ch)
  8119  000A00  0102               	movlb	2	; () banked
  8120  000A02  0102               	movlb	2	; () banked
  8121  000A04  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  8122  000A06  6EE9               	movwf	c:fsr0l
  8123  000A08  0E00               	movlw	high(0Ch)
  8124  000A0A  0102               	movlb	2	; () banked
  8125  000A0C  0102               	movlb	2	; () banked
  8126  000A0E  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  8127  000A10  6EEA               	movwf	1+c:fsr0l
  8128  000A12  0E01               	movlw	low(01h)
  8129  000A14  0102               	movlb	2	; () banked
  8130  000A16  0102               	movlb	2	; () banked
  8131  000A18  253A               	addwf	((parseSettings@linep))&0ffh,w
  8132  000A1A  6EE1               	movwf	c:fsr1l
  8133  000A1C  0E00               	movlw	high(01h)
  8134  000A1E  0102               	movlb	2	; () banked
  8135  000A20  0102               	movlb	2	; () banked
  8136  000A22  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  8137  000A24  6EE2               	movwf	1+c:fsr1l
  8138  000A26  50E7               	movf	indf1,w
  8139  000A28  0FD0               	addlw	low(0D0h)
  8140  000A2A  6EEF               	movwf	indf0
  8141                           
  8142                           	line	225
  8143                           ;batchpcb26k20.c: 225: sPuts("$OK");
  8144  000A2C  0EEC               	movlw	low(STR_45)
  8145  000A2E  0102               	movlb	2	; () banked
  8146  000A30  0102               	movlb	2	; () banked
  8147  000A32  6F5E               	movwf	((?_sPuts))&0ffh
  8148  000A34  0E7F               	movlw	high(STR_45)
  8149  000A36  0102               	movlb	2	; () banked
  8150  000A38  6F5F               	movwf	((?_sPuts+1))&0ffh
  8151  000A3A  EC9E  F026         	call	_sPuts	;wreg free
  8152                           	line	226
  8153                           ;batchpcb26k20.c: 226: sPut(10);
  8154  000A3E  0102               	movlb	2	; () banked
  8155  000A40  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  8156  000A42  0E0A               	movlw	low(0Ah)
  8157  000A44  0102               	movlb	2	; () banked
  8158  000A46  0102               	movlb	2	; () banked
  8159  000A48  6F60               	movwf	((?_sPut))&0ffh
  8160  000A4A  0102               	movlb	2	; () banked
  8161  000A4C  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  8162  000A4E  ECDF  F025         	call	_sPut	;wreg free
  8163                           	line	227
  8164                           ;batchpcb26k20.c: 227: break;
  8165  000A52  EFDC  F005         	goto	l539
  8166                           	line	228
  8167                           ;batchpcb26k20.c: 228: case 'K':
  8168                           	
  8169  000A56                     l554:		; BSR set to: ?
  8170                           
  8171                           	line	229
  8172                           ;batchpcb26k20.c: 229: settingsp->kangthai_sends
                                  = linep[1] - '0';
  8173  000A56  0E0D               	movlw	low(0Dh)
  8174  000A58  0102               	movlb	2	; () banked
  8175  000A5A  0102               	movlb	2	; () banked
  8176  000A5C  253D               	addwf	((parseSettings@settingsp))&0ffh,w
  8177  000A5E  6EE9               	movwf	c:fsr0l
  8178  000A60  0E00               	movlw	high(0Dh)
  8179  000A62  0102               	movlb	2	; () banked
  8180  000A64  0102               	movlb	2	; () banked
  8181  000A66  213E               	addwfc	((parseSettings@settingsp+1))&0ffh,w
  8182  000A68  6EEA               	movwf	1+c:fsr0l
  8183  000A6A  0E01               	movlw	low(01h)
  8184  000A6C  0102               	movlb	2	; () banked
  8185  000A6E  0102               	movlb	2	; () banked
  8186  000A70  253A               	addwf	((parseSettings@linep))&0ffh,w
  8187  000A72  6EE1               	movwf	c:fsr1l
  8188  000A74  0E00               	movlw	high(01h)
  8189  000A76  0102               	movlb	2	; () banked
  8190  000A78  0102               	movlb	2	; () banked
  8191  000A7A  213B               	addwfc	((parseSettings@linep+1))&0ffh,w
  8192  000A7C  6EE2               	movwf	1+c:fsr1l
  8193  000A7E  50E7               	movf	indf1,w
  8194  000A80  0FD0               	addlw	low(0D0h)
  8195  000A82  6EEF               	movwf	indf0
  8196                           
  8197                           	line	230
  8198                           ;batchpcb26k20.c: 230: sPuts("$OK");
  8199  000A84  0EEC               	movlw	low(STR_46)
  8200  000A86  0102               	movlb	2	; () banked
  8201  000A88  0102               	movlb	2	; () banked
  8202  000A8A  6F5E               	movwf	((?_sPuts))&0ffh
  8203  000A8C  0E7F               	movlw	high(STR_46)
  8204  000A8E  0102               	movlb	2	; () banked
  8205  000A90  6F5F               	movwf	((?_sPuts+1))&0ffh
  8206  000A92  EC9E  F026         	call	_sPuts	;wreg free
  8207                           	line	231
  8208                           ;batchpcb26k20.c: 231: sPut(10);
  8209  000A96  0102               	movlb	2	; () banked
  8210  000A98  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  8211  000A9A  0E0A               	movlw	low(0Ah)
  8212  000A9C  0102               	movlb	2	; () banked
  8213  000A9E  0102               	movlb	2	; () banked
  8214  000AA0  6F60               	movwf	((?_sPut))&0ffh
  8215  000AA2  0102               	movlb	2	; () banked
  8216  000AA4  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  8217  000AA6  ECDF  F025         	call	_sPut	;wreg free
  8218                           	line	232
  8219                           ;batchpcb26k20.c: 232: break;
  8220  000AAA  EFDC  F005         	goto	l539
  8221                           	line	233
  8222                           ;batchpcb26k20.c: 233: case 'S':
  8223                           	
  8224  000AAE                     l555:		; BSR set to: ?
  8225                           
  8226                           	line	234
  8227                           ;batchpcb26k20.c: 234: saveEeprom(settingsp);
  8228  000AAE  C23D  F240         	movff	(parseSettings@settingsp),(?_saveEeprom)
  8229  000AB2  C23E  F241         	movff	(parseSettings@settingsp+1),(?_saveEeprom
                                 +1)
  8230  000AB6  EC0E  F027         	call	_saveEeprom	;wreg free
  8231                           	line	235
  8232                           ;batchpcb26k20.c: 235: sPuts("$OK");
  8233  000ABA  0EEC               	movlw	low(STR_47)
  8234  000ABC  0102               	movlb	2	; () banked
  8235  000ABE  0102               	movlb	2	; () banked
  8236  000AC0  6F5E               	movwf	((?_sPuts))&0ffh
  8237  000AC2  0E7F               	movlw	high(STR_47)
  8238  000AC4  0102               	movlb	2	; () banked
  8239  000AC6  6F5F               	movwf	((?_sPuts+1))&0ffh
  8240  000AC8  EC9E  F026         	call	_sPuts	;wreg free
  8241                           	line	236
  8242                           ;batchpcb26k20.c: 236: sPut(10);
  8243  000ACC  0102               	movlb	2	; () banked
  8244  000ACE  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  8245  000AD0  0E0A               	movlw	low(0Ah)
  8246  000AD2  0102               	movlb	2	; () banked
  8247  000AD4  0102               	movlb	2	; () banked
  8248  000AD6  6F60               	movwf	((?_sPut))&0ffh
  8249  000AD8  0102               	movlb	2	; () banked
  8250  000ADA  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  8251  000ADC  ECDF  F025         	call	_sPut	;wreg free
  8252                           	line	237
  8253                           ;batchpcb26k20.c: 237: break;
  8254  000AE0  EFDC  F005         	goto	l539
  8255                           	line	238
  8256                           ;batchpcb26k20.c: 238: case 'L':
  8257                           	
  8258  000AE4                     l556:		; BSR set to: ?
  8259                           
  8260                           	line	239
  8261                           ;batchpcb26k20.c: 239: loadEeprom(settingsp);
  8262  000AE4  C23D  F240         	movff	(parseSettings@settingsp),(?_loadEeprom)
  8263  000AE8  C23E  F241         	movff	(parseSettings@settingsp+1),(?_loadEeprom
                                 +1)
  8264  000AEC  ECD6  F026         	call	_loadEeprom	;wreg free
  8265                           	line	240
  8266                           ;batchpcb26k20.c: 240: sPuts("$OK");
  8267  000AF0  0EEC               	movlw	low(STR_48)
  8268  000AF2  0102               	movlb	2	; () banked
  8269  000AF4  0102               	movlb	2	; () banked
  8270  000AF6  6F5E               	movwf	((?_sPuts))&0ffh
  8271  000AF8  0E7F               	movlw	high(STR_48)
  8272  000AFA  0102               	movlb	2	; () banked
  8273  000AFC  6F5F               	movwf	((?_sPuts+1))&0ffh
  8274  000AFE  EC9E  F026         	call	_sPuts	;wreg free
  8275                           	line	241
  8276                           ;batchpcb26k20.c: 241: sPut(10);
  8277  000B02  0102               	movlb	2	; () banked
  8278  000B04  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  8279  000B06  0E0A               	movlw	low(0Ah)
  8280  000B08  0102               	movlb	2	; () banked
  8281  000B0A  0102               	movlb	2	; () banked
  8282  000B0C  6F60               	movwf	((?_sPut))&0ffh
  8283  000B0E  0102               	movlb	2	; () banked
  8284  000B10  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  8285  000B12  ECDF  F025         	call	_sPut	;wreg free
  8286                           	line	242
  8287                           ;batchpcb26k20.c: 242: break;
  8288  000B16  EFDC  F005         	goto	l539
  8289                           	line	243
  8290                           ;batchpcb26k20.c: 243: case 'F':
  8291                           	
  8292  000B1A                     l557:		; BSR set to: ?
  8293                           
  8294                           	line	244
  8295                           ;batchpcb26k20.c: 244: loadDefaults(settingsp);
  8296  000B1A  C23D  F240         	movff	(parseSettings@settingsp),(?_loadDefaults
                                 )
  8297  000B1E  C23E  F241         	movff	(parseSettings@settingsp+1),(?_loadDefaul
                                 ts+1)
  8298  000B22  EC2B  F020         	call	_loadDefaults	;wreg free
  8299                           	line	245
  8300                           ;batchpcb26k20.c: 245: sPuts("$OK");
  8301  000B26  0EEC               	movlw	low(STR_49)
  8302  000B28  0102               	movlb	2	; () banked
  8303  000B2A  0102               	movlb	2	; () banked
  8304  000B2C  6F5E               	movwf	((?_sPuts))&0ffh
  8305  000B2E  0E7F               	movlw	high(STR_49)
  8306  000B30  0102               	movlb	2	; () banked
  8307  000B32  6F5F               	movwf	((?_sPuts+1))&0ffh
  8308  000B34  EC9E  F026         	call	_sPuts	;wreg free
  8309                           	line	246
  8310                           ;batchpcb26k20.c: 246: sPut(10);
  8311  000B38  0102               	movlb	2	; () banked
  8312  000B3A  6F3F               	movwf	(??_parseSettings+0+0)&0ffh
  8313  000B3C  0E0A               	movlw	low(0Ah)
  8314  000B3E  0102               	movlb	2	; () banked
  8315  000B40  0102               	movlb	2	; () banked
  8316  000B42  6F60               	movwf	((?_sPut))&0ffh
  8317  000B44  0102               	movlb	2	; () banked
  8318  000B46  513F               	movf	(??_parseSettings+0+0)&0ffh,w
  8319  000B48  ECDF  F025         	call	_sPut	;wreg free
  8320                           	line	247
  8321                           ;batchpcb26k20.c: 247: break;
  8322  000B4C  EFDC  F005         	goto	l539
  8323                           	line	167
  8324                           	
  8325  000B50                     l541:		; BSR set to: ?
  8326                           
  8327  000B50  C23A  FFE9         	movff	(parseSettings@linep),fsr0l
  8328  000B54  C23B  FFEA         	movff	(parseSettings@linep+1),fsr0h
  8329  000B58  50EF               	movf	indf0,w
  8330  000B5A  0A41               	xorlw	65 ^ 0
  8331  000B5C  E101 D69F          	bz	l549
  8332  000B60  0A03               	xorlw	66 ^ 65
  8333  000B62  E101 D568          	bz	l542
  8334  000B66  0A01               	xorlw	67 ^ 66
  8335  000B68  E101 D5BD          	bz	l544
  8336  000B6C  0A07               	xorlw	68 ^ 67
  8337  000B6E  E101 D63E          	bz	l547
  8338  000B72  0A01               	xorlw	69 ^ 68
  8339  000B74  E101 D6BF          	bz	l550
  8340  000B78  0A03               	xorlw	70 ^ 69
  8341  000B7A  E0CF               	bz	l557
  8342  000B7C  0A01               	xorlw	71 ^ 70
  8343  000B7E  E101 D662          	bz	l548
  8344  000B82  0A0F               	xorlw	72 ^ 71
  8345  000B84  E101 D607          	bz	l546
  8346  000B88  0A03               	xorlw	75 ^ 72
  8347  000B8A  E101 D764          	bz	l554
  8348  000B8E  0A07               	xorlw	76 ^ 75
  8349  000B90  E0A9               	bz	l556
  8350  000B92  0A01               	xorlw	77 ^ 76
  8351  000B94  E101 D57B          	bz	l543
  8352  000B98  0A03               	xorlw	78 ^ 77
  8353  000B9A  E101 D6D8          	bz	l551
  8354  000B9E  0A1C               	xorlw	82 ^ 78
  8355  000BA0  E101 D5CD          	bz	l545
  8356  000BA4  0A01               	xorlw	83 ^ 82
  8357  000BA6  E083               	bz	l555
  8358  000BA8  0A04               	xorlw	87 ^ 83
  8359  000BAA  E101 D728          	bz	l553
  8360  000BAE  0A0F               	xorlw	88 ^ 87
  8361  000BB0  E101 D6F9          	bz	l552
  8362  000BB4  EFDC  F005         	goto	l539
  8363                           
  8364                           	line	249
  8365                           	
  8366  000BB8                     l539:		; BSR set to: ?
  8367                           
  8368                           	line	250
  8369                           ;batchpcb26k20.c: 249: }
  8370                           ;batchpcb26k20.c: 250: }
  8371  000BB8                     l537:
  8372                           			; BSR set to: ?
  8373                           
  8374  000BB8  0012               	return
  8375                           	opt stack 0
  8376                           GLOBAL __end_of_parseSettings
  8377  000BBA                     	__end_of_parseSettings:
  8378                           	FNSIZE	_parseSettings,1,5
  8379                           ; =============== function _parseSettings ends =
                                 ===========
  8380                           
  8381                           	signat	_parseSettings,12408
  8382                           	global	_gaoTx
  8383                           	global	??_gaoTx
  8384                           	global	?_gaoTx
  8385                           
  8386                           ; *************** function _gaoTx **************
                                 ***
  8387                           ; Defined at:
  8388                           ;		line 1 in file "D:\Hobby\Prosjekter\MultiTRX\
                                 Firmware\FW1.2\gaomod.h"
  8389                           ; Parameters:
  8390                           ;		s              size:   2offs:   0	type: PTR u
                                 nsigned char ; Largest target is 32
  8391                           ;		 -> main@line(32), 
  8392                           ;		resends        size:   1offs:   2	type: unsig
                                 ned char 
  8393                           ; Auto variables:
  8394                           ;		temp        	       	type: unsigned long 
  8395                           ;		data        	       	type: unsigned long 
  8396                           ;		j           	       	type: unsigned char 
  8397                           ;		resend      	       	type: unsigned char 
  8398                           ;		preamble    	       	type: unsigned char 
  8399                           ;		bitnr       	       	type: unsigned char 
  8400                           ; Return value:
  8401                           ;		type: void 
  8402                           ;		size: 0
  8403                           ; Registers used:
  8404                           ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, cstack
  8405                           ; Tracked objects:
  8406                           ;		On entry : 0/0
  8407                           ;		On exit  : 0/0
  8408                           ;		Unchanged: 0/0
  8409                           ; Data sizes:
  8410                           ;		Autos:   12
  8411                           ;		Params:   3
  8412                           ;		Temp:     3
  8413                           ;		Total:   18
  8414                           ; This function calls:
  8415                           ;		_asciiToHex
  8416                           ;		_startTransmit
  8417                           ;		_waitTimer
  8418                           ;		_stopTransmit
  8419                           ; This function is called by:
  8420                           ;		_parseCmd
  8421                           ; This function uses a non-reentrant model
  8422                           ; 
  8423                                   psect   text20,class=CODE,space=0,reloc=
                                 2
  8424                           
  8425                           	opt lm
  8426                           	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
                                 .2\gaomod.h"
  8427                           	line	1
  8428  000000                     	__size_of_gaoTx	equ	__end_of_gaoTx-_gaoTx
  8429                           ;gaomod.h: 1: void gaoTx(char *s, char resends){
  8430                           	
  8431  002180                     _gaoTx:		; BSR set to: ?
  8432                           
  8433                           	opt stack 28
  8434                           	line	5
  8435  002180  0E00               	movlw	low(0)
  8436  002182  0102               	movlb	2	; () banked
  8437  002184  0102               	movlb	2	; () banked
  8438  002186  6F41               	movwf	((gaoTx@data))&0ffh
  8439  002188  0E00               	movlw	high(0)
  8440  00218A  0102               	movlb	2	; () banked
  8441  00218C  6F42               	movwf	((gaoTx@data+1))&0ffh
  8442  00218E  0E00               	movlw	low highword(0)
  8443  002190  0102               	movlb	2	; () banked
  8444  002192  6F43               	movwf	((gaoTx@data+2))&0ffh
  8445  002194  0E00               	movlw	high highword(0)
  8446  002196  0102               	movlb	2	; () banked
  8447  002198  6F44               	movwf	((gaoTx@data+3))&0ffh
  8448                           	line	7
  8449                           ;gaomod.h: 7: for (char j = 0; j < 5; j++){
  8450  00219A  0102               	movlb	2	; () banked
  8451  00219C  6F49               	movwf	(??_gaoTx+12+0)&0ffh
  8452  00219E  0E00               	movlw	low(0)
  8453  0021A0  0102               	movlb	2	; () banked
  8454  0021A2  0102               	movlb	2	; () banked
  8455  0021A4  6F45               	movwf	((gaoTx@j))&0ffh
  8456  0021A6  0102               	movlb	2	; () banked
  8457  0021A8  5149               	movf	(??_gaoTx+12+0)&0ffh,w
  8458  0021AA  0E04               	movlw	(05h-1)
  8459  0021AC  0102               	movlb	2	; () banked
  8460  0021AE  0102               	movlb	2	; () banked
  8461  0021B0  6545               	cpfsgt	((gaoTx@j))&0ffh
  8462  0021B2  EFDD  F010         	goto	u7021
  8463  0021B6  EFDF  F010         	goto	u7020
  8464  0021BA                     u7021:
  8465  0021BA  EFE1  F010         	goto	l351
  8466  0021BE                     u7020:
  8467  0021BE  EF16  F011         	goto	l352
  8468                           	
  8469  0021C2                     l351:		; BSR set to: ?
  8470                           
  8471                           	line	8
  8472                           ;gaomod.h: 8: data |= asciiToHex(s[j]);
  8473  0021C2  0102               	movlb	2	; () banked
  8474  0021C4  0102               	movlb	2	; () banked
  8475  0021C6  5145               	movf	((gaoTx@j))&0ffh,w
  8476  0021C8  0102               	movlb	2	; () banked
  8477  0021CA  0102               	movlb	2	; () banked
  8478  0021CC  253A               	addwf	((gaoTx@s))&0ffh,w
  8479  0021CE  6EE9               	movwf	c:fsr0l
  8480  0021D0  0102               	movlb	2	; () banked
  8481  0021D2  0E00               	movlw	0
  8482  0021D4  0102               	movlb	2	; () banked
  8483  0021D6  0102               	movlb	2	; () banked
  8484  0021D8  213B               	addwfc	((gaoTx@s+1))&0ffh,w
  8485  0021DA  6EEA               	movwf	1+c:fsr0l
  8486  0021DC  50EF               	movf	indf0,w
  8487  0021DE  0102               	movlb	2	; () banked
  8488  0021E0  0102               	movlb	2	; () banked
  8489  0021E2  6F50               	movwf	((?_asciiToHex))&0ffh
  8490  0021E4  ECA5  F028         	call	_asciiToHex	;wreg free
  8491  0021E8  0102               	movlb	2	; () banked
  8492  0021EA  6F49               	movwf	(??_gaoTx+12+0)&0ffh
  8493  0021EC  0102               	movlb	2	; () banked
  8494  0021EE  5149               	movf	((??_gaoTx+12+0))&0ffh,w
  8495  0021F0  0102               	movlb	2	; () banked
  8496  0021F2  0102               	movlb	2	; () banked
  8497  0021F4  1341               	iorwf	((gaoTx@data))&0ffh
  8498                           	line	9
  8499                           ;gaomod.h: 9: data <<= 4;
  8500  0021F6  0102               	movlb	2	; () banked
  8501  0021F8  0E04               	movlw	04h
  8502  0021FA                     u7035:
  8503  0021FA  90D8               	bcf	status,0
  8504  0021FC  0102               	movlb	2	; () banked
  8505  0021FE  3741               	rlcf	((gaoTx@data))&0ffh
  8506  002200  0102               	movlb	2	; () banked
  8507  002202  3742               	rlcf	((gaoTx@data+1))&0ffh
  8508  002204  0102               	movlb	2	; () banked
  8509  002206  3743               	rlcf	((gaoTx@data+2))&0ffh
  8510  002208  0102               	movlb	2	; () banked
  8511  00220A  3744               	rlcf	((gaoTx@data+3))&0ffh
  8512  00220C  2EE8               	decfsz	wreg
  8513+ 00220E  EFFD  F010         	goto	u7035
  8514+                          	line	7
  8515+ 002212  0102               	movlb	2	; () banked
  8516+ 002214  0102               	movlb	2	; () banked
  8517+ 002216  2B45               	incf	((gaoTx@j))&0ffh
  8518+ 002218  0E04               	movlw	(05h-1)
  8519+ 00221A  0102               	movlb	2	; () banked
  8520+ 00221C  0102               	movlb	2	; () banked
  8521+ 00221E  6545               	cpfsgt	((gaoTx@j))&0ffh
  8522+ 002220  EF14  F011         	goto	u7041
  8523+ 002224  EF16  F011         	goto	u7040
  8524+ 002228                     u7041:
  8525+ 002228  EFE1  F010         	goto	l351
  8526+ 00222C                     u7040:
  8527+                          	
  8528+ 00222C                     l352:		; BSR set to: ?
  8529+                          
  8530+                          	line	11
  8531+                          ;gaomod.h: 10: }
  8532+                          ;gaomod.h: 11: if((s[5] - '0') == 1) data |= 0xF
      +                          ;
  8533+ 00222C  0E05               	movlw	low(05h)
  8534+ 00222E  0102               	movlb	2	; () banked
  8535+ 002230  0102               	movlb	2	; () banked
  8536+ 002232  253A               	addwf	((gaoTx@s))&0ffh,w
  8537+ 002234  6EE9               	movwf	c:fsr0l
  8538+ 002236  0E00               	movlw	high(05h)
  8539+ 002238  0102               	movlb	2	; () banked
  8540+ 00223A  0102               	movlb	2	; () banked
  8541+ 00223C  213B               	addwfc	((gaoTx@s+1))&0ffh,w
  8542+ 00223E  6EEA               	movwf	1+c:fsr0l
  8543+ 002240  50EF               	movf	indf0,w
  8544+ 002242  0102               	movlb	2	; () banked
  8545+ 002244  6F49               	movwf	(??_gaoTx+12+0)&0ffh
  8546+ 002246  0ED0               	movlw	low(0FFD0h)
  8547+ 002248  0102               	movlb	2	; () banked
  8548+ 00224A  2549               	addwf	((??_gaoTx+12+0))&0ffh,w
  8549+ 00224C  0102               	movlb	2	; () banked
  8550+ 00224E  6F4A               	movwf	(??_gaoTx+13+0)&0ffh
  8551+ 002250  0102               	movlb	2	; () banked
  8552+ 002252  6B4B               	clrf	1+(??_gaoTx+13+0)&0ffh
  8553+ 002254  0EFF               	movlw	high(0FFD0h)
  8554+ 002256  0102               	movlb	2	; () banked
  8555+ 002258  234B               	addwfc	1+(??_gaoTx+13+0)&0ffh
  8556+ 00225A  0102               	movlb	2	; () banked
  8557+ 00225C  054A               	decf	(??_gaoTx+13+0)&0ffh,w
  8558+ 00225E  114B               	iorwf (??_gaoTx+13+1)&0ffh,w
  8559+                          
  8560+ 002260  A4D8               	btfss	status,2
  8561+ 002262  EF35  F011         	goto	u7051
  8562+ 002266  EF37  F011         	goto	u7050
  8563+ 00226A                     u7051:
  8564+ 00226A  EF44  F011         	goto	l354
  8565+ 00226E                     u7050:
  8566+ 00226E  0E0F               	movlw	0Fh
  8567+ 002270  0102               	movlb	2	; () banked
  8568+ 002272  0102               	movlb	2	; () banked
  8569+ 002274  1341               	iorwf	((gaoTx@data))&0ffh
  8570+ 002276  0E00               	movlw	0
  8571+ 002278  0102               	movlb	2	; () banked
  8572+ 00227A  1342               	iorwf	((gaoTx@data+1))&0ffh
  8573+ 00227C  0E00               	movlw	0
  8574+ 00227E  0102               	movlb	2	; () banked
  8575+ 002280  1343               	iorwf	((gaoTx@data+2))&0ffh
  8576+ 002282  0E00               	movlw	0
  8577+ 002284  0102               	movlb	2	; () banked
  8578+ 002286  1344               	iorwf	((gaoTx@data+3))&0ffh
  8579+                          	
  8580+ 002288                     l354:		; BSR set to: ?
  8581+                          
  8582+                          	line	12
  8583+                          ;gaomod.h: 12: if((s[5] - '0') == 2) data |= 0xA
      +                          ;
  8584+ 002288  0E05               	movlw	low(05h)
  8585+ 00228A  0102               	movlb	2	; () banked
  8586+ 00228C  0102               	movlb	2	; () banked
  8587+ 00228E  253A               	addwf	((gaoTx@s))&0ffh,w
  8588+ 002290  6EE9               	movwf	c:fsr0l
  8589+ 002292  0E00               	movlw	high(05h)
  8590+ 002294  0102               	movlb	2	; () banked
  8591+ 002296  0102               	movlb	2	; () banked
  8592+ 002298  213B               	addwfc	((gaoTx@s+1))&0ffh,w
  8593+ 00229A  6EEA               	movwf	1+c:fsr0l
  8594+ 00229C  50EF               	movf	indf0,w
  8595+ 00229E  0102               	movlb	2	; () banked
  8596+ 0022A0  6F49               	movwf	(??_gaoTx+12+0)&0ffh
  8597+ 0022A2  0ED0               	movlw	low(0FFD0h)
  8598+ 0022A4  0102               	movlb	2	; () banked
  8599+ 0022A6  2549               	addwf	((??_gaoTx+12+0))&0ffh,w
  8600+ 0022A8  0102               	movlb	2	; () banked
  8601+ 0022AA  6F4A               	movwf	(??_gaoTx+13+0)&0ffh
  8602+ 0022AC  0102               	movlb	2	; () banked
  8603+ 0022AE  6B4B               	clrf	1+(??_gaoTx+13+0)&0ffh
  8604+ 0022B0  0EFF               	movlw	high(0FFD0h)
  8605+ 0022B2  0102               	movlb	2	; () banked
  8606+ 0022B4  234B               	addwfc	1+(??_gaoTx+13+0)&0ffh
  8607+ 0022B6  0102               	movlb	2	; () banked
  8608+ 0022B8  514A               	movf	(??_gaoTx+13+0)&0ffh,w
  8609+ 0022BA  0A02               	xorlw	2
  8610+ 0022BC  114B               	iorwf (??_gaoTx+13+1)&0ffh,w
  8611+                          
  8612+ 0022BE  A4D8               	btfss	status,2
  8613+ 0022C0  EF64  F011         	goto	u7061
  8614+ 0022C4  EF66  F011         	goto	u7060
  8615+ 0022C8                     u7061:
  8616+ 0022C8  EF73  F011         	goto	l355
  8617+ 0022CC                     u7060:
  8618+ 0022CC  0E0A               	movlw	0Ah
  8619+ 0022CE  0102               	movlb	2	; () banked
  8620+ 0022D0  0102               	movlb	2	; () banked
  8621+ 0022D2  1341               	iorwf	((gaoTx@data))&0ffh
  8622+ 0022D4  0E00               	movlw	0
  8623+ 0022D6  0102               	movlb	2	; () banked
  8624+ 0022D8  1342               	iorwf	((gaoTx@data+1))&0ffh
  8625+ 0022DA  0E00               	movlw	0
  8626+ 0022DC  0102               	movlb	2	; () banked
  8627+ 0022DE  1343               	iorwf	((gaoTx@data+2))&0ffh
  8628+ 0022E0  0E00               	movlw	0
  8629+ 0022E2  0102               	movlb	2	; () banked
  8630+ 0022E4  1344               	iorwf	((gaoTx@data+3))&0ffh
  8631+                          	
  8632+ 0022E6                     l355:		; BSR set to: ?
  8633+                          
  8634+                          	line	14
  8635+                          ;gaomod.h: 14: startTransmit();
  8636+ 0022E6  ECFF  F028         	call	_startTransmit	;wreg free
  8637+                          	line	15
  8638+                          ;gaomod.h: 15: for (char resend = 0; resend < re
      +                          sends; resend++){
  8639+ 0022EA  0102               	movlb	2	; () banked
  8640+ 0022EC  6F49               	movwf	(??_gaoTx+12+0)&0ffh
  8641+ 0022EE  0E00               	movlw	low(0)
  8642+ 0022F0  0102               	movlb	2	; () banked
  8643+ 0022F2  0102               	movlb	2	; () banked
  8644+ 0022F4  6F46               	movwf	((gaoTx@resend))&0ffh
  8645+ 0022F6  0102               	movlb	2	; () banked
  8646+ 0022F8  5149               	movf	(??_gaoTx+12+0)&0ffh,w
  8647+ 0022FA  EF4E  F012         	goto	l359
  8648+                          	
  8649+ 0022FE                     l356:		; BSR set to: ?
  8650+                          
  8651+                          	line	16
  8652+                          ;gaomod.h: 16: temp = data;
  8653+ 0022FE  C241  F23D         	movff	(gaoTx@data),(gaoTx@temp)
  8654+ 002302  C242  F23E         	movff	(gaoTx@data+1),(gaoTx@temp+1)
  8655+ 002306  C243  F23F         	movff	(gaoTx@data+2),(gaoTx@temp+2)
  8656+ 00230A  C244  F240         	movff	(gaoTx@data+3),(gaoTx@temp+3)
  8657+                          	line	17
  8658+                          ;gaomod.h: 17: for (char preamble = 0; preamble 
      +                          < 4; preamble++){
  8659+ 00230E  0102               	movlb	2	; () banked
  8660+ 002310  6F49               	movwf	(??_gaoTx+12+0)&0ffh
  8661+ 002312  0E00               	movlw	low(0)
  8662+ 002314  0102               	movlb	2	; () banked
  8663+ 002316  0102               	movlb	2	; () banked
  8664+ 002318  6F47               	movwf	((gaoTx@preamble))&0ffh
  8665+ 00231A  0102               	movlb	2	; () banked
  8666+ 00231C  5149               	movf	(??_gaoTx+12+0)&0ffh,w
  8667+ 00231E  0E03               	movlw	(04h-1)
  8668+ 002320  0102               	movlb	2	; () banked
  8669+ 002322  0102               	movlb	2	; () banked
  8670+ 002324  6547               	cpfsgt	((gaoTx@preamble))&0ffh
  8671+ 002326  EF97  F011         	goto	u7071
  8672+ 00232A  EF99  F011         	goto	u7070
  8673+ 00232E                     u7071:
  8674+ 00232E  EF9B  F011         	goto	l360
  8675+ 002332                     u7070:
  8676+ 002332  EFBC  F011         	goto	l361
  8677+                          	
  8678+ 002336                     l360:		; BSR set to: ?
  8679+                          
  8680+                          	line	18
  8681+                          ;gaomod.h: 18: LATB2 = 1;
  8682+ 002336  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  8683+                          	line	19
  8684+                          ;gaomod.h: 19: waitTimer(590);
  8685+ 002338  0E4E               	movlw	low(024Eh)
  8686+ 00233A  0102               	movlb	2	; () banked
  8687+ 00233C  0102               	movlb	2	; () banked
  8688+ 00233E  6F56               	movwf	((?_waitTimer))&0ffh
  8689+ 002340  0E02               	movlw	high(024Eh)
  8690+ 002342  0102               	movlb	2	; () banked
  8691+ 002344  6F57               	movwf	((?_waitTimer+1))&0ffh
  8692+ 002346  EC04  F028         	call	_waitTimer	;wreg free
  8693+                          	line	20
  8694+                          ;gaomod.h: 20: LATB2 = 0;
  8695+ 00234A  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  8696+                          	line	21
  8697+                          ;gaomod.h: 21: waitTimer(590);
  8698+ 00234C  0E4E               	movlw	low(024Eh)
  8699+ 00234E  0102               	movlb	2	; () banked
  8700+ 002350  0102               	movlb	2	; () banked
  8701+ 002352  6F56               	movwf	((?_waitTimer))&0ffh
  8702+ 002354  0E02               	movlw	high(024Eh)
  8703+ 002356  0102               	movlb	2	; () banked
  8704+ 002358  6F57               	movwf	((?_waitTimer+1))&0ffh
  8705+ 00235A  EC04  F028         	call	_waitTimer	;wreg free
  8706+                          	line	17
  8707+ 00235E  0102               	movlb	2	; () banked
  8708+ 002360  0102               	movlb	2	; () banked
  8709+ 002362  2B47               	incf	((gaoTx@preamble))&0ffh
  8710+ 002364  0E03               	movlw	(04h-1)
  8711+ 002366  0102               	movlb	2	; () banked
  8712+ 002368  0102               	movlb	2	; () banked
  8713+ 00236A  6547               	cpfsgt	((gaoTx@preamble))&0ffh
  8714+ 00236C  EFBA  F011         	goto	u7081
  8715+ 002370  EFBC  F011         	goto	u7080
  8716+ 002374                     u7081:
  8717+ 002374  EF9B  F011         	goto	l360
  8718+ 002378                     u7080:
  8719+                          	
  8720+ 002378                     l361:		; BSR set to: ?
  8721+                          
  8722+                          	line	23
  8723+                          ;gaomod.h: 22: }
  8724+                          ;gaomod.h: 23: for (char bitnr = 0; bitnr < 24; 
      +                          bitnr++){
  8725+ 002378  0102               	movlb	2	; () banked
  8726+ 00237A  6F49               	movwf	(??_gaoTx+12+0)&0ffh
  8727+ 00237C  0E00               	movlw	low(0)
  8728+ 00237E  0102               	movlb	2	; () banked
  8729+ 002380  0102               	movlb	2	; () banked
  8730+ 002382  6F48               	movwf	((gaoTx@bitnr))&0ffh
  8731+ 002384  0102               	movlb	2	; () banked
  8732+ 002386  5149               	movf	(??_gaoTx+12+0)&0ffh,w
  8733+ 002388  0E17               	movlw	(018h-1)
  8734+ 00238A  0102               	movlb	2	; () banked
  8735+ 00238C  0102               	movlb	2	; () banked
  8736+ 00238E  6548               	cpfsgt	((gaoTx@bitnr))&0ffh
  8737+ 002390  EFCC  F011         	goto	u7091
  8738+ 002394  EFCE  F011         	goto	u7090
  8739+ 002398                     u7091:
  8740+ 002398  EFD0  F011         	goto	l363
  8741+ 00239C                     u7090:
  8742+ 00239C  EF37  F012         	goto	l364
  8743+                          	
  8744+ 0023A0                     l363:		; BSR set to: ?
  8745+                          
  8746+                          	line	24
  8747+                          ;gaomod.h: 24: LATB2 = 1;
  8748+ 0023A0  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  8749+                          	line	25
  8750+                          ;gaomod.h: 25: waitTimer(590);
  8751+ 0023A2  0E4E               	movlw	low(024Eh)
  8752+ 0023A4  0102               	movlb	2	; () banked
  8753+ 0023A6  0102               	movlb	2	; () banked
  8754+ 0023A8  6F56               	movwf	((?_waitTimer))&0ffh
  8755+ 0023AA  0E02               	movlw	high(024Eh)
  8756+ 0023AC  0102               	movlb	2	; () banked
  8757+ 0023AE  6F57               	movwf	((?_waitTimer+1))&0ffh
  8758+ 0023B0  EC04  F028         	call	_waitTimer	;wreg free
  8759+                          	line	26
  8760+                          ;gaomod.h: 26: LATB2 = 0;
  8761+ 0023B4  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  8762+                          	line	27
  8763+                          ;gaomod.h: 27: if(temp & 0b100000000000000000000
      +                          000) waitTimer(590*2);
  8764+ 0023B6  0102               	movlb	2	; () banked
  8765+                          	
  8766+ 0023B8  0102               	movlb	2	; () banked
  8767+ 0023BA  AF3F               	btfss	((gaoTx@temp+2))&0ffh,(23)&7
  8768+ 0023BC  EFE2  F011         	goto	u7101
  8769+ 0023C0  EFE4  F011         	goto	u7100
  8770+ 0023C4                     u7101:
  8771+ 0023C4  EFEF  F011         	goto	l366
  8772+ 0023C8                     u7100:
  8773+ 0023C8  0E9C               	movlw	low(049Ch)
  8774+ 0023CA  0102               	movlb	2	; () banked
  8775+ 0023CC  0102               	movlb	2	; () banked
  8776+ 0023CE  6F56               	movwf	((?_waitTimer))&0ffh
  8777+ 0023D0  0E04               	movlw	high(049Ch)
  8778+ 0023D2  0102               	movlb	2	; () banked
  8779+ 0023D4  6F57               	movwf	((?_waitTimer+1))&0ffh
  8780+ 0023D6  EC04  F028         	call	_waitTimer	;wreg free
  8781+ 0023DA  EFF8  F011         	goto	l367
  8782+                          	line	28
  8783+                          	
  8784+ 0023DE                     l366:		; BSR set to: ?
  8785+                          
  8786+                          ;gaomod.h: 28: else waitTimer(590);
  8787+ 0023DE  0E4E               	movlw	low(024Eh)
  8788+ 0023E0  0102               	movlb	2	; () banked
  8789+ 0023E2  0102               	movlb	2	; () banked
  8790+ 0023E4  6F56               	movwf	((?_waitTimer))&0ffh
  8791+ 0023E6  0E02               	movlw	high(024Eh)
  8792+ 0023E8  0102               	movlb	2	; () banked
  8793+ 0023EA  6F57               	movwf	((?_waitTimer+1))&0ffh
  8794+ 0023EC  EC04  F028         	call	_waitTimer	;wreg free
  8795+                          	
  8796+ 0023F0                     l367:		; BSR set to: ?
  8797+                          
  8798+                          	line	29
  8799+                          ;gaomod.h: 29: LATB2 = 1;
  8800+ 0023F0  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  8801+                          	line	30
  8802+                          ;gaomod.h: 30: waitTimer(590);
  8803+ 0023F2  0E4E               	movlw	low(024Eh)
  8804+ 0023F4  0102               	movlb	2	; () banked
  8805+ 0023F6  0102               	movlb	2	; () banked
  8806+ 0023F8  6F56               	movwf	((?_waitTimer))&0ffh
  8807+ 0023FA  0E02               	movlw	high(024Eh)
  8808+ 0023FC  0102               	movlb	2	; () banked
  8809+ 0023FE  6F57               	movwf	((?_waitTimer+1))&0ffh
  8810+ 002400  EC04  F028         	call	_waitTimer	;wreg free
  8811+                          	line	31
  8812+                          ;gaomod.h: 31: LATB2 = 0;
  8813+ 002404  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  8814+                          	line	32
  8815+                          ;gaomod.h: 32: if(temp & 0b100000000000000000000
      +                          000) waitTimer(590);
  8816+ 002406  0102               	movlb	2	; () banked
  8817+                          	
  8818+ 002408  0102               	movlb	2	; () banked
  8819+ 00240A  AF3F               	btfss	((gaoTx@temp+2))&0ffh,(23)&7
  8820+ 00240C  EF0A  F012         	goto	u7111
  8821+ 002410  EF0C  F012         	goto	u7110
  8822+ 002414                     u7111:
  8823+ 002414  EF17  F012         	goto	l368
  8824+ 002418                     u7110:
  8825+ 002418  0E4E               	movlw	low(024Eh)
  8826+ 00241A  0102               	movlb	2	; () banked
  8827+ 00241C  0102               	movlb	2	; () banked
  8828+ 00241E  6F56               	movwf	((?_waitTimer))&0ffh
  8829+ 002420  0E02               	movlw	high(024Eh)
  8830+ 002422  0102               	movlb	2	; () banked
  8831+ 002424  6F57               	movwf	((?_waitTimer+1))&0ffh
  8832+ 002426  EC04  F028         	call	_waitTimer	;wreg free
  8833+ 00242A  EF20  F012         	goto	l369
  8834+                          	line	33
  8835+                          	
  8836+ 00242E                     l368:		; BSR set to: ?
  8837+                          
  8838+                          ;gaomod.h: 33: else waitTimer(590*2);
  8839+ 00242E  0E9C               	movlw	low(049Ch)
  8840+ 002430  0102               	movlb	2	; () banked
  8841+ 002432  0102               	movlb	2	; () banked
  8842+ 002434  6F56               	movwf	((?_waitTimer))&0ffh
  8843+ 002436  0E04               	movlw	high(049Ch)
  8844+ 002438  0102               	movlb	2	; () banked
  8845+ 00243A  6F57               	movwf	((?_waitTimer+1))&0ffh
  8846+ 00243C  EC04  F028         	call	_waitTimer	;wreg free
  8847+                          	
  8848+ 002440                     l369:		; BSR set to: ?
  8849+                          
  8850+                          	line	34
  8851+                          ;gaomod.h: 34: temp <<= 1;
  8852+ 002440  0102               	movlb	2	; () banked
  8853+ 002442  90D8               	bcf	status,0
  8854+ 002444  0102               	movlb	2	; () banked
  8855+ 002446  373D               	rlcf	((gaoTx@temp))&0ffh
  8856+ 002448  0102               	movlb	2	; () banked
  8857+ 00244A  373E               	rlcf	((gaoTx@temp+1))&0ffh
  8858+ 00244C  0102               	movlb	2	; () banked
  8859+ 00244E  373F               	rlcf	((gaoTx@temp+2))&0ffh
  8860+ 002450  0102               	movlb	2	; () banked
  8861+ 002452  3740               	rlcf	((gaoTx@temp+3))&0ffh
  8862+                          	line	23
  8863+ 002454  0102               	movlb	2	; () banked
  8864+ 002456  0102               	movlb	2	; () banked
  8865+ 002458  2B48               	incf	((gaoTx@bitnr))&0ffh
  8866+ 00245A  0E17               	movlw	(018h-1)
  8867+ 00245C  0102               	movlb	2	; () banked
  8868+ 00245E  0102               	movlb	2	; () banked
  8869+ 002460  6548               	cpfsgt	((gaoTx@bitnr))&0ffh
  8870+ 002462  EF35  F012         	goto	u7121
  8871+ 002466  EF37  F012         	goto	u7120
  8872+ 00246A                     u7121:
  8873+ 00246A  EFD0  F011         	goto	l363
  8874+ 00246E                     u7120:
  8875+                          	
  8876+ 00246E                     l364:		; BSR set to: ?
  8877+                          
  8878+                          	line	36
  8879+                          ;gaomod.h: 35: }
  8880+                          ;gaomod.h: 36: LATB2 = 1;
  8881+ 00246E  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  8882+                          	line	37
  8883+                          ;gaomod.h: 37: waitTimer(590/2);
  8884+ 002470  0E27               	movlw	low(0127h)
  8885+ 002472  0102               	movlb	2	; () banked
  8886+ 002474  0102               	movlb	2	; () banked
  8887+ 002476  6F56               	movwf	((?_waitTimer))&0ffh
  8888+ 002478  0E01               	movlw	high(0127h)
  8889+ 00247A  0102               	movlb	2	; () banked
  8890+ 00247C  6F57               	movwf	((?_waitTimer+1))&0ffh
  8891+ 00247E  EC04  F028         	call	_waitTimer	;wreg free
  8892+                          	line	38
  8893+                          ;gaomod.h: 38: LATB2 = 0;
  8894+ 002482  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  8895+                          	line	39
  8896+                          ;gaomod.h: 39: waitTimer(7000);
  8897+ 002484  0E58               	movlw	low(01B58h)
  8898+ 002486  0102               	movlb	2	; () banked
  8899+ 002488  0102               	movlb	2	; () banked
  8900+ 00248A  6F56               	movwf	((?_waitTimer))&0ffh
  8901+ 00248C  0E1B               	movlw	high(01B58h)
  8902+ 00248E  0102               	movlb	2	; () banked
  8903+ 002490  6F57               	movwf	((?_waitTimer+1))&0ffh
  8904+ 002492  EC04  F028         	call	_waitTimer	;wreg free
  8905+                          	line	15
  8906+ 002496  0102               	movlb	2	; () banked
  8907+ 002498  0102               	movlb	2	; () banked
  8908+ 00249A  2B46               	incf	((gaoTx@resend))&0ffh
  8909+                          	
  8910+ 00249C                     l359:		; BSR set to: ?
  8911+                          
  8912+ 00249C  0102               	movlb	2	; () banked
  8913+ 00249E  0102               	movlb	2	; () banked
  8914+ 0024A0  513C               	movf	((gaoTx@resends))&0ffh,w
  8915+ 0024A2  0102               	movlb	2	; () banked
  8916+ 0024A4  0102               	movlb	2	; () banked
  8917+ 0024A6  5D46               	subwf	((gaoTx@resend))&0ffh,w
  8918+ 0024A8  A0D8               	btfss	status,0
  8919+ 0024AA  EF59  F012         	goto	u7131
  8920+ 0024AE  EF5B  F012         	goto	u7130
  8921+ 0024B2                     u7131:
  8922+ 0024B2  EF7F  F011         	goto	l356
  8923+ 0024B6                     u7130:
  8924+                          	
  8925+ 0024B6                     l357:		; BSR set to: ?
  8926+                          
  8927+                          	line	41
  8928+                          ;gaomod.h: 40: }
  8929+                          ;gaomod.h: 41: stopTransmit();
  8930+ 0024B6  EC2B  F028         	call	_stopTransmit	;wreg free
  8931+                          	line	42
  8932+                          ;gaomod.h: 42: }
  8933+ 0024BA                     l350:
  8934+                          			; BSR set to: ?
  8935+                          
  8936+ 0024BA  0012               	return
  8937+                          	opt stack 0
  8938+                          GLOBAL __end_of_gaoTx
  8939+ 0024BC                     	__end_of_gaoTx:
  8940+                          	FNSIZE	_gaoTx,15,3
  8941+                          ; =============== function _gaoTx ends =========
      +                          ===
  8942+                          
  8943+                          	signat	_gaoTx,8312
  8944+                          	global	_wavemanTx
  8945+                          	global	??_wavemanTx
  8946+                          	global	?_wavemanTx
  8947+                          
  8948+                          ; *************** function _wavemanTx **********
      +                          *******
  8949+                          ; Defined at:
  8950+                          ;		line 1 in file "D:\Hobby\Prosjekter\MultiTRX\
      +                          Firmware\FW1.2\waveman.h"
  8951+                          ; Parameters:
  8952+                          ;		s              size:   2offs:   0	type: PTR u
      +                          nsigned char ; Largest target is 32
  8953+                          ;		 -> main@line(32), 
  8954+                          ;		resends        size:   1offs:   2	type: unsig
      +                          ned char 
  8955+                          ; Auto variables:
  8956+                          ;		bitnr       	       	type: unsigned char 
  8957+                          ;		data        	       	type: unsigned int 
  8958+                          ;		temp        	       	type: unsigned int 
  8959+                          ;		resend      	       	type: unsigned char 
  8960+                          ; Return value:
  8961+                          ;		type: void 
  8962+                          ;		size: 0
  8963+                          ; Registers used:
  8964+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
  8965+                          ; Tracked objects:
  8966+                          ;		On entry : 0/0
  8967+                          ;		On exit  : 0/0
  8968+                          ;		Unchanged: 0/0
  8969+                          ; Data sizes:
  8970+                          ;		Autos:    6
  8971+                          ;		Params:   3
  8972+                          ;		Temp:     3
  8973+                          ;		Total:   12
  8974+                          ; This function calls:
  8975+                          ;		_reverse
  8976+                          ;		___wmul
  8977+                          ;		_startTransmit
  8978+                          ;		_waitTimer
  8979+                          ;		_stopTransmit
  8980+                          ; This function is called by:
  8981+                          ;		_parseCmd
  8982+                          ; This function uses a non-reentrant model
  8983+                          ; 
  8984+                                  psect   text21,class=CODE,space=0,reloc=
      +                          2
  8985+                          
  8986+                          	opt lm
  8987+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\waveman.h"
  8988+                          	line	1
  8989+ 000000                     	__size_of_wavemanTx	equ	__end_of_wavemanTx-_wav
      +                          emanTx
  8990+                          ;waveman.h: 1: void wavemanTx(char *s, char rese
      +                          nds){
  8991+                          	
  8992+ 0027C2                     _wavemanTx:		; BSR set to: ?
  8993+                          
  8994+                          	opt stack 28
  8995+                          	line	12
  8996+ 0027C2  C23A  FFE9         	movff	(wavemanTx@s),fsr0l
  8997+ 0027C6  C23B  FFEA         	movff	(wavemanTx@s+1),fsr0h
  8998+ 0027CA  50EF               	movf	indf0,w
  8999+ 0027CC  0FBF               	addlw	low(0BFh)
  9000+ 0027CE  0102               	movlb	2	; () banked
  9001+ 0027D0  0102               	movlb	2	; () banked
  9002+ 0027D2  6F46               	movwf	((?_reverse))&0ffh
  9003+ 0027D4  EC26  F026         	call	_reverse	;wreg free
  9004+ 0027D8  0102               	movlb	2	; () banked
  9005+ 0027DA  6F43               	movwf	(??_wavemanTx+6+0)&0ffh
  9006+ 0027DC  0102               	movlb	2	; () banked
  9007+ 0027DE  5143               	movf	((??_wavemanTx+6+0))&0ffh,w
  9008+ 0027E0  0102               	movlb	2	; () banked
  9009+ 0027E2  0102               	movlb	2	; () banked
  9010+ 0027E4  6F3E               	movwf	((wavemanTx@data))&0ffh
  9011+ 0027E6  0102               	movlb	2	; () banked
  9012+ 0027E8  6B3F               	clrf	((wavemanTx@data+1))&0ffh
  9013+                          	line	13
  9014+                          ;waveman.h: 13: data <<= 8;
  9015+ 0027EA  0102               	movlb	2	; () banked
  9016+ 0027EC  0102               	movlb	2	; () banked
  9017+ 0027EE  513E               	movf	((wavemanTx@data))&0ffh,w
  9018+ 0027F0  0102               	movlb	2	; () banked
  9019+ 0027F2  6F3F               	movwf	((wavemanTx@data+1))&0ffh
  9020+ 0027F4  0102               	movlb	2	; () banked
  9021+ 0027F6  6B3E               	clrf	((wavemanTx@data))&0ffh
  9022+                          	line	14
  9023+                          ;waveman.h: 14: temp = (s[1] - '0') * 10;
  9024+ 0027F8  0E0A               	movlw	low(0Ah)
  9025+ 0027FA  0102               	movlb	2	; () banked
  9026+ 0027FC  0102               	movlb	2	; () banked
  9027+ 0027FE  6F48               	movwf	(0+(?___wmul+02h))&0ffh
  9028+ 002800  0E00               	movlw	high(0Ah)
  9029+ 002802  0102               	movlb	2	; () banked
  9030+ 002804  6F49               	movwf	(1+(?___wmul+02h))&0ffh
  9031+ 002806  0E01               	movlw	low(01h)
  9032+ 002808  0102               	movlb	2	; () banked
  9033+ 00280A  0102               	movlb	2	; () banked
  9034+ 00280C  253A               	addwf	((wavemanTx@s))&0ffh,w
  9035+ 00280E  6EE9               	movwf	c:fsr0l
  9036+ 002810  0E00               	movlw	high(01h)
  9037+ 002812  0102               	movlb	2	; () banked
  9038+ 002814  0102               	movlb	2	; () banked
  9039+ 002816  213B               	addwfc	((wavemanTx@s+1))&0ffh,w
  9040+ 002818  6EEA               	movwf	1+c:fsr0l
  9041+ 00281A  50EF               	movf	indf0,w
  9042+ 00281C  0102               	movlb	2	; () banked
  9043+ 00281E  6F43               	movwf	(??_wavemanTx+6+0)&0ffh
  9044+ 002820  0ED0               	movlw	low(0FFD0h)
  9045+ 002822  0102               	movlb	2	; () banked
  9046+ 002824  2543               	addwf	((??_wavemanTx+6+0))&0ffh,w
  9047+ 002826  0102               	movlb	2	; () banked
  9048+                          	
  9049+ 002828  0102               	movlb	2	; () banked
  9050+ 00282A  6F46               	movwf	((?___wmul))&0ffh
  9051+ 00282C  0102               	movlb	2	; () banked
  9052+ 00282E  6B47               	clrf	1+((?___wmul))&0ffh
  9053+ 002830  0EFF               	movlw	high(0FFD0h)
  9054+ 002832  0102               	movlb	2	; () banked
  9055+ 002834  2347               	addwfc	1+((?___wmul))&0ffh
  9056+ 002836  EC64  F026         	call	___wmul	;wreg free
  9057+ 00283A  C246  F240         	movff	0+?___wmul,(wavemanTx@temp)
  9058+ 00283E  C247  F241         	movff	1+?___wmul,(wavemanTx@temp+1)
  9059+                          	line	15
  9060+                          ;waveman.h: 15: temp += (s[2] - '0');
  9061+ 002842  0E02               	movlw	low(02h)
  9062+ 002844  0102               	movlb	2	; () banked
  9063+ 002846  0102               	movlb	2	; () banked
  9064+ 002848  253A               	addwf	((wavemanTx@s))&0ffh,w
  9065+ 00284A  6EE9               	movwf	c:fsr0l
  9066+ 00284C  0E00               	movlw	high(02h)
  9067+ 00284E  0102               	movlb	2	; () banked
  9068+ 002850  0102               	movlb	2	; () banked
  9069+ 002852  213B               	addwfc	((wavemanTx@s+1))&0ffh,w
  9070+ 002854  6EEA               	movwf	1+c:fsr0l
  9071+ 002856  50EF               	movf	indf0,w
  9072+ 002858  0102               	movlb	2	; () banked
  9073+ 00285A  6F43               	movwf	(??_wavemanTx+6+0)&0ffh
  9074+ 00285C  0ED0               	movlw	low(0FFD0h)
  9075+ 00285E  0102               	movlb	2	; () banked
  9076+ 002860  2543               	addwf	((??_wavemanTx+6+0))&0ffh,w
  9077+ 002862  0102               	movlb	2	; () banked
  9078+ 002864  6F44               	movwf	(??_wavemanTx+7+0)&0ffh
  9079+ 002866  0102               	movlb	2	; () banked
  9080+ 002868  6B45               	clrf	1+(??_wavemanTx+7+0)&0ffh
  9081+ 00286A  0EFF               	movlw	high(0FFD0h)
  9082+ 00286C  0102               	movlb	2	; () banked
  9083+ 00286E  2345               	addwfc	1+(??_wavemanTx+7+0)&0ffh
  9084+ 002870  0102               	movlb	2	; () banked
  9085+ 002872  5144               	movf	(??_wavemanTx+7+0)&0ffh,w
  9086+ 002874  0102               	movlb	2	; () banked
  9087+ 002876  0102               	movlb	2	; () banked
  9088+ 002878  2740               	addwf	((wavemanTx@temp))&0ffh
  9089+ 00287A  0102               	movlb	2	; () banked
  9090+ 00287C  5145               	movf	(??_wavemanTx+7+1)&0ffh,w
  9091+ 00287E  0102               	movlb	2	; () banked
  9092+ 002880  0102               	movlb	2	; () banked
  9093+ 002882  2341               	addwfc	((wavemanTx@temp+1))&0ffh
  9094+                          
  9095+                          	line	16
  9096+                          ;waveman.h: 16: temp--;
  9097+ 002884  0102               	movlb	2	; () banked
  9098+ 002886  0102               	movlb	2	; () banked
  9099+ 002888  0740               	decf	((wavemanTx@temp))&0ffh
  9100+ 00288A  A0D8               	btfss	status,0
  9101+ 00288C  0741               	decf	((wavemanTx@temp+1))&0ffh
  9102+                          	line	17
  9103+                          ;waveman.h: 17: temp = reverse(temp);
  9104+ 00288E  C240  F246         	movff	(wavemanTx@temp),(?_reverse)
  9105+ 002892  EC26  F026         	call	_reverse	;wreg free
  9106+ 002896  0102               	movlb	2	; () banked
  9107+ 002898  6F43               	movwf	(??_wavemanTx+6+0)&0ffh
  9108+ 00289A  0102               	movlb	2	; () banked
  9109+ 00289C  5143               	movf	((??_wavemanTx+6+0))&0ffh,w
  9110+ 00289E  0102               	movlb	2	; () banked
  9111+ 0028A0  0102               	movlb	2	; () banked
  9112+ 0028A2  6F40               	movwf	((wavemanTx@temp))&0ffh
  9113+ 0028A4  0102               	movlb	2	; () banked
  9114+ 0028A6  6B41               	clrf	((wavemanTx@temp+1))&0ffh
  9115+                          	line	18
  9116+                          ;waveman.h: 18: temp <<= 4;
  9117+ 0028A8  0102               	movlb	2	; () banked
  9118+ 0028AA  0102               	movlb	2	; () banked
  9119+ 0028AC  3B40               	swapf	((wavemanTx@temp))&0ffh
  9120+ 0028AE  0102               	movlb	2	; () banked
  9121+ 0028B0  3B41               	swapf	((wavemanTx@temp+1))&0ffh
  9122+ 0028B2  0EF0               	movlw	0f0h
  9123+ 0028B4  0102               	movlb	2	; () banked
  9124+ 0028B6  1741               	andwf	((wavemanTx@temp+1))&0ffh
  9125+ 0028B8  0102               	movlb	2	; () banked
  9126+ 0028BA  5140               	movf	((wavemanTx@temp))&0ffh,w
  9127+ 0028BC  0B0F               	andlw	0fh
  9128+ 0028BE  0102               	movlb	2	; () banked
  9129+ 0028C0  1341               	iorwf	((wavemanTx@temp+1))&0ffh
  9130+ 0028C2  0EF0               	movlw	0f0h
  9131+ 0028C4  0102               	movlb	2	; () banked
  9132+ 0028C6  1740               	andwf	((wavemanTx@temp))&0ffh
  9133+                          	line	19
  9134+                          ;waveman.h: 19: data += temp;
  9135+ 0028C8  0102               	movlb	2	; () banked
  9136+ 0028CA  0102               	movlb	2	; () banked
  9137+ 0028CC  5140               	movf	((wavemanTx@temp))&0ffh,w
  9138+ 0028CE  0102               	movlb	2	; () banked
  9139+ 0028D0  0102               	movlb	2	; () banked
  9140+ 0028D2  273E               	addwf	((wavemanTx@data))&0ffh
  9141+ 0028D4  0102               	movlb	2	; () banked
  9142+ 0028D6  0102               	movlb	2	; () banked
  9143+ 0028D8  5141               	movf	((wavemanTx@temp+1))&0ffh,w
  9144+ 0028DA  0102               	movlb	2	; () banked
  9145+ 0028DC  0102               	movlb	2	; () banked
  9146+ 0028DE  233F               	addwfc	((wavemanTx@data+1))&0ffh
  9147+                          
  9148+                          	line	20
  9149+                          ;waveman.h: 20: if (s[3] - '0') data |= 0b000000
      +                          0000000111;
  9150+ 0028E0  0E03               	movlw	low(03h)
  9151+ 0028E2  0102               	movlb	2	; () banked
  9152+ 0028E4  0102               	movlb	2	; () banked
  9153+ 0028E6  253A               	addwf	((wavemanTx@s))&0ffh,w
  9154+ 0028E8  6EE9               	movwf	c:fsr0l
  9155+ 0028EA  0E00               	movlw	high(03h)
  9156+ 0028EC  0102               	movlb	2	; () banked
  9157+ 0028EE  0102               	movlb	2	; () banked
  9158+ 0028F0  213B               	addwfc	((wavemanTx@s+1))&0ffh,w
  9159+ 0028F2  6EEA               	movwf	1+c:fsr0l
  9160+ 0028F4  50EF               	movf	indf0,w
  9161+ 0028F6  0102               	movlb	2	; () banked
  9162+ 0028F8  6F43               	movwf	(??_wavemanTx+6+0)&0ffh
  9163+ 0028FA  0ED0               	movlw	low(0FFD0h)
  9164+ 0028FC  0102               	movlb	2	; () banked
  9165+ 0028FE  2543               	addwf	((??_wavemanTx+6+0))&0ffh,w
  9166+ 002900  0102               	movlb	2	; () banked
  9167+ 002902  6F44               	movwf	(??_wavemanTx+7+0)&0ffh
  9168+ 002904  0102               	movlb	2	; () banked
  9169+ 002906  6B45               	clrf	1+(??_wavemanTx+7+0)&0ffh
  9170+ 002908  0EFF               	movlw	high(0FFD0h)
  9171+ 00290A  0102               	movlb	2	; () banked
  9172+ 00290C  2345               	addwfc	1+(??_wavemanTx+7+0)&0ffh
  9173+ 00290E  0102               	movlb	2	; () banked
  9174+ 002910  5145               	movf	(??_wavemanTx+7+1)&0ffh,w
  9175+ 002912  1144               	iorwf (??_wavemanTx+7+0)&0ffh,w
  9176+                          
  9177+ 002914  B4D8               	btfsc	status,2
  9178+ 002916  EF8F  F014         	goto	u7471
  9179+ 00291A  EF91  F014         	goto	u7470
  9180+ 00291E                     u7471:
  9181+ 00291E  EF95  F014         	goto	l527
  9182+ 002922                     u7470:
  9183+ 002922  0E07               	movlw	07h
  9184+ 002924  0102               	movlb	2	; () banked
  9185+ 002926  0102               	movlb	2	; () banked
  9186+ 002928  133E               	iorwf	((wavemanTx@data))&0ffh
  9187+                          	
  9188+ 00292A                     l527:		; BSR set to: ?
  9189+                          
  9190+                          	line	22
  9191+                          ;waveman.h: 22: startTransmit();
  9192+ 00292A  ECFF  F028         	call	_startTransmit	;wreg free
  9193+                          	line	23
  9194+                          ;waveman.h: 23: for (char resend = 0; resend < r
      +                          esends; resend++){
  9195+ 00292E  0102               	movlb	2	; () banked
  9196+ 002930  6F43               	movwf	(??_wavemanTx+6+0)&0ffh
  9197+ 002932  0E00               	movlw	low(0)
  9198+ 002934  0102               	movlb	2	; () banked
  9199+ 002936  0102               	movlb	2	; () banked
  9200+ 002938  6F42               	movwf	((wavemanTx@resend))&0ffh
  9201+ 00293A  0102               	movlb	2	; () banked
  9202+ 00293C  5143               	movf	(??_wavemanTx+6+0)&0ffh,w
  9203+ 00293E  EF33  F015         	goto	l531
  9204+                          	
  9205+ 002942                     l528:		; BSR set to: ?
  9206+                          
  9207+                          	line	24
  9208+                          ;waveman.h: 24: temp = data;
  9209+ 002942  C23E  F240         	movff	(wavemanTx@data),(wavemanTx@temp)
  9210+ 002946  C23F  F241         	movff	(wavemanTx@data+1),(wavemanTx@temp+1)
  9211+                          	line	25
  9212+                          ;waveman.h: 25: LATB2 = 1;
  9213+ 00294A  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  9214+                          	line	26
  9215+                          ;waveman.h: 26: waitTimer(272);
  9216+ 00294C  0E10               	movlw	low(0110h)
  9217+ 00294E  0102               	movlb	2	; () banked
  9218+ 002950  0102               	movlb	2	; () banked
  9219+ 002952  6F56               	movwf	((?_waitTimer))&0ffh
  9220+ 002954  0E01               	movlw	high(0110h)
  9221+ 002956  0102               	movlb	2	; () banked
  9222+ 002958  6F57               	movwf	((?_waitTimer+1))&0ffh
  9223+ 00295A  EC04  F028         	call	_waitTimer	;wreg free
  9224+                          	line	27
  9225+                          ;waveman.h: 27: LATB2 = 0;
  9226+ 00295E  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  9227+                          	line	28
  9228+                          ;waveman.h: 28: waitTimer((1714-272));
  9229+ 002960  0EA2               	movlw	low(05A2h)
  9230+ 002962  0102               	movlb	2	; () banked
  9231+ 002964  0102               	movlb	2	; () banked
  9232+ 002966  6F56               	movwf	((?_waitTimer))&0ffh
  9233+ 002968  0E05               	movlw	high(05A2h)
  9234+ 00296A  0102               	movlb	2	; () banked
  9235+ 00296C  6F57               	movwf	((?_waitTimer+1))&0ffh
  9236+ 00296E  EC04  F028         	call	_waitTimer	;wreg free
  9237+                          	line	29
  9238+                          ;waveman.h: 29: for (bitnr = 0; bitnr < 12; bitn
      +                          r++){
  9239+ 002972  0102               	movlb	2	; () banked
  9240+ 002974  6F43               	movwf	(??_wavemanTx+6+0)&0ffh
  9241+ 002976  0E00               	movlw	low(0)
  9242+ 002978  0102               	movlb	2	; () banked
  9243+ 00297A  0102               	movlb	2	; () banked
  9244+ 00297C  6F3D               	movwf	((wavemanTx@bitnr))&0ffh
  9245+ 00297E  0102               	movlb	2	; () banked
  9246+ 002980  5143               	movf	(??_wavemanTx+6+0)&0ffh,w
  9247+ 002982  0E0B               	movlw	(0Ch-1)
  9248+ 002984  0102               	movlb	2	; () banked
  9249+ 002986  0102               	movlb	2	; () banked
  9250+ 002988  653D               	cpfsgt	((wavemanTx@bitnr))&0ffh
  9251+ 00298A  EFC9  F014         	goto	u7481
  9252+ 00298E  EFCB  F014         	goto	u7480
  9253+ 002992                     u7481:
  9254+ 002992  EFCD  F014         	goto	l532
  9255+ 002996                     u7480:
  9256+ 002996  EF27  F015         	goto	l533
  9257+                          	
  9258+ 00299A                     l532:		; BSR set to: ?
  9259+                          
  9260+                          	line	30
  9261+                          ;waveman.h: 30: if(temp & 0b0000100000000000){
  9262+ 00299A  0102               	movlb	2	; () banked
  9263+                          	
  9264+ 00299C  0102               	movlb	2	; () banked
  9265+ 00299E  A741               	btfss	((wavemanTx@temp+1))&0ffh,(11)&7
  9266+ 0029A0  EFD4  F014         	goto	u7491
  9267+ 0029A4  EFD6  F014         	goto	u7490
  9268+ 0029A8                     u7491:
  9269+ 0029A8  EFEC  F014         	goto	l535
  9270+ 0029AC                     u7490:
  9271+                          	line	31
  9272+                          ;waveman.h: 31: LATB2 = 1;
  9273+ 0029AC  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  9274+                          	line	32
  9275+                          ;waveman.h: 32: waitTimer(1156);
  9276+ 0029AE  0E84               	movlw	low(0484h)
  9277+ 0029B0  0102               	movlb	2	; () banked
  9278+ 0029B2  0102               	movlb	2	; () banked
  9279+ 0029B4  6F56               	movwf	((?_waitTimer))&0ffh
  9280+ 0029B6  0E04               	movlw	high(0484h)
  9281+ 0029B8  0102               	movlb	2	; () banked
  9282+ 0029BA  6F57               	movwf	((?_waitTimer+1))&0ffh
  9283+ 0029BC  EC04  F028         	call	_waitTimer	;wreg free
  9284+                          	line	33
  9285+                          ;waveman.h: 33: LATB2 = 0;
  9286+ 0029C0  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  9287+                          	line	34
  9288+                          ;waveman.h: 34: waitTimer((1714-1156));
  9289+ 0029C2  0E2E               	movlw	low(022Eh)
  9290+ 0029C4  0102               	movlb	2	; () banked
  9291+ 0029C6  0102               	movlb	2	; () banked
  9292+ 0029C8  6F56               	movwf	((?_waitTimer))&0ffh
  9293+ 0029CA  0E02               	movlw	high(022Eh)
  9294+ 0029CC  0102               	movlb	2	; () banked
  9295+ 0029CE  6F57               	movwf	((?_waitTimer+1))&0ffh
  9296+ 0029D0  EC04  F028         	call	_waitTimer	;wreg free
  9297+                          	line	35
  9298+                          ;waveman.h: 35: }
  9299+ 0029D4  EF00  F015         	goto	l536
  9300+                          	line	36
  9301+                          	
  9302+ 0029D8                     l535:		; BSR set to: ?
  9303+                          
  9304+                          	line	37
  9305+                          ;waveman.h: 36: else{
  9306+                          ;waveman.h: 37: LATB2 = 1;
  9307+ 0029D8  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  9308+                          	line	38
  9309+                          ;waveman.h: 38: waitTimer(272);
  9310+ 0029DA  0E10               	movlw	low(0110h)
  9311+ 0029DC  0102               	movlb	2	; () banked
  9312+ 0029DE  0102               	movlb	2	; () banked
  9313+ 0029E0  6F56               	movwf	((?_waitTimer))&0ffh
  9314+ 0029E2  0E01               	movlw	high(0110h)
  9315+ 0029E4  0102               	movlb	2	; () banked
  9316+ 0029E6  6F57               	movwf	((?_waitTimer+1))&0ffh
  9317+ 0029E8  EC04  F028         	call	_waitTimer	;wreg free
  9318+                          	line	39
  9319+                          ;waveman.h: 39: LATB2 = 0;
  9320+ 0029EC  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  9321+                          	line	40
  9322+                          ;waveman.h: 40: waitTimer((1714-272));
  9323+ 0029EE  0EA2               	movlw	low(05A2h)
  9324+ 0029F0  0102               	movlb	2	; () banked
  9325+ 0029F2  0102               	movlb	2	; () banked
  9326+ 0029F4  6F56               	movwf	((?_waitTimer))&0ffh
  9327+ 0029F6  0E05               	movlw	high(05A2h)
  9328+ 0029F8  0102               	movlb	2	; () banked
  9329+ 0029FA  6F57               	movwf	((?_waitTimer+1))&0ffh
  9330+ 0029FC  EC04  F028         	call	_waitTimer	;wreg free
  9331+                          	line	41
  9332+                          	
  9333+ 002A00                     l536:		; BSR set to: ?
  9334+                          
  9335+                          	line	42
  9336+                          ;waveman.h: 41: }
  9337+                          ;waveman.h: 42: LATB2 = 1;
  9338+ 002A00  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  9339+                          	line	43
  9340+                          ;waveman.h: 43: waitTimer(272);
  9341+ 002A02  0E10               	movlw	low(0110h)
  9342+ 002A04  0102               	movlb	2	; () banked
  9343+ 002A06  0102               	movlb	2	; () banked
  9344+ 002A08  6F56               	movwf	((?_waitTimer))&0ffh
  9345+ 002A0A  0E01               	movlw	high(0110h)
  9346+ 002A0C  0102               	movlb	2	; () banked
  9347+ 002A0E  6F57               	movwf	((?_waitTimer+1))&0ffh
  9348+ 002A10  EC04  F028         	call	_waitTimer	;wreg free
  9349+                          	line	44
  9350+                          ;waveman.h: 44: LATB2 = 0;
  9351+ 002A14  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  9352+                          	line	45
  9353+                          ;waveman.h: 45: waitTimer((1714-272));
  9354+ 002A16  0EA2               	movlw	low(05A2h)
  9355+ 002A18  0102               	movlb	2	; () banked
  9356+ 002A1A  0102               	movlb	2	; () banked
  9357+ 002A1C  6F56               	movwf	((?_waitTimer))&0ffh
  9358+ 002A1E  0E05               	movlw	high(05A2h)
  9359+ 002A20  0102               	movlb	2	; () banked
  9360+ 002A22  6F57               	movwf	((?_waitTimer+1))&0ffh
  9361+ 002A24  EC04  F028         	call	_waitTimer	;wreg free
  9362+                          	line	46
  9363+                          ;waveman.h: 46: temp <<= 1;
  9364+ 002A28  0102               	movlb	2	; () banked
  9365+ 002A2A  90D8               	bcf	status,0
  9366+ 002A2C  0102               	movlb	2	; () banked
  9367+ 002A2E  3740               	rlcf	((wavemanTx@temp))&0ffh
  9368+ 002A30  0102               	movlb	2	; () banked
  9369+ 002A32  3741               	rlcf	((wavemanTx@temp+1))&0ffh
  9370+                          	line	29
  9371+ 002A34  0102               	movlb	2	; () banked
  9372+ 002A36  0102               	movlb	2	; () banked
  9373+ 002A38  2B3D               	incf	((wavemanTx@bitnr))&0ffh
  9374+ 002A3A  0E0B               	movlw	(0Ch-1)
  9375+ 002A3C  0102               	movlb	2	; () banked
  9376+ 002A3E  0102               	movlb	2	; () banked
  9377+ 002A40  653D               	cpfsgt	((wavemanTx@bitnr))&0ffh
  9378+ 002A42  EF25  F015         	goto	u7501
  9379+ 002A46  EF27  F015         	goto	u7500
  9380+ 002A4A                     u7501:
  9381+ 002A4A  EFCD  F014         	goto	l532
  9382+ 002A4E                     u7500:
  9383+                          	
  9384+ 002A4E                     l533:		; BSR set to: ?
  9385+                          
  9386+                          	line	48
  9387+                          ;waveman.h: 47: }
  9388+                          ;waveman.h: 48: waitTimer(11500);
  9389+ 002A4E  0EEC               	movlw	low(02CECh)
  9390+ 002A50  0102               	movlb	2	; () banked
  9391+ 002A52  0102               	movlb	2	; () banked
  9392+ 002A54  6F56               	movwf	((?_waitTimer))&0ffh
  9393+ 002A56  0E2C               	movlw	high(02CECh)
  9394+ 002A58  0102               	movlb	2	; () banked
  9395+ 002A5A  6F57               	movwf	((?_waitTimer+1))&0ffh
  9396+ 002A5C  EC04  F028         	call	_waitTimer	;wreg free
  9397+                          	line	23
  9398+ 002A60  0102               	movlb	2	; () banked
  9399+ 002A62  0102               	movlb	2	; () banked
  9400+ 002A64  2B42               	incf	((wavemanTx@resend))&0ffh
  9401+                          	
  9402+ 002A66                     l531:		; BSR set to: ?
  9403+                          
  9404+ 002A66  0102               	movlb	2	; () banked
  9405+ 002A68  0102               	movlb	2	; () banked
  9406+ 002A6A  513C               	movf	((wavemanTx@resends))&0ffh,w
  9407+ 002A6C  0102               	movlb	2	; () banked
  9408+ 002A6E  0102               	movlb	2	; () banked
  9409+ 002A70  5D42               	subwf	((wavemanTx@resend))&0ffh,w
  9410+ 002A72  A0D8               	btfss	status,0
  9411+ 002A74  EF3E  F015         	goto	u7511
  9412+ 002A78  EF40  F015         	goto	u7510
  9413+ 002A7C                     u7511:
  9414+ 002A7C  EFA1  F014         	goto	l528
  9415+ 002A80                     u7510:
  9416+                          	
  9417+ 002A80                     l529:		; BSR set to: ?
  9418+                          
  9419+                          	line	50
  9420+                          ;waveman.h: 49: }
  9421+                          ;waveman.h: 50: stopTransmit();
  9422+ 002A80  EC2B  F028         	call	_stopTransmit	;wreg free
  9423+                          	line	51
  9424+                          ;waveman.h: 51: }
  9425+ 002A84                     l526:
  9426+                          			; BSR set to: ?
  9427+                          
  9428+ 002A84  0012               	return
  9429+                          	opt stack 0
  9430+                          GLOBAL __end_of_wavemanTx
  9431+ 002A86                     	__end_of_wavemanTx:
  9432+                          	FNSIZE	_wavemanTx,9,3
  9433+                          ; =============== function _wavemanTx ends =====
      +                          =======
  9434+                          
  9435+                          	signat	_wavemanTx,8312
  9436+                          	global	_nexaTx
  9437+                          	global	??_nexaTx
  9438+                          	global	?_nexaTx
  9439+                          
  9440+                          ; *************** function _nexaTx *************
      +                          ****
  9441+                          ; Defined at:
  9442+                          ;		line 1 in file "D:\Hobby\Prosjekter\MultiTRX\
      +                          Firmware\FW1.2\nexa.h"
  9443+                          ; Parameters:
  9444+                          ;		s              size:   2offs:   0	type: PTR u
      +                          nsigned char ; Largest target is 32
  9445+                          ;		 -> main@line(32), 
  9446+                          ;		resends        size:   1offs:   2	type: unsig
      +                          ned char 
  9447+                          ; Auto variables:
  9448+                          ;		dimming     	       	type: unsigned char 
  9449+                          ;		bitnr       	       	type: unsigned char 
  9450+                          ;		temp        	       	type: unsigned long 
  9451+                          ;		data        	       	type: unsigned long 
  9452+                          ;		j           	       	type: unsigned char 
  9453+                          ;		resend      	       	type: unsigned char 
  9454+                          ; Return value:
  9455+                          ;		type: void 
  9456+                          ;		size: 0
  9457+                          ; Registers used:
  9458+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
  9459+                          ; Tracked objects:
  9460+                          ;		On entry : 0/0
  9461+                          ;		On exit  : 0/0
  9462+                          ;		Unchanged: 0/0
  9463+                          ; Data sizes:
  9464+                          ;		Autos:   12
  9465+                          ;		Params:   3
  9466+                          ;		Temp:     7
  9467+                          ;		Total:   22
  9468+                          ; This function calls:
  9469+                          ;		_asciiToHex
  9470+                          ;		_startTransmit
  9471+                          ;		_waitTimer
  9472+                          ;		_stopTransmit
  9473+                          ; This function is called by:
  9474+                          ;		_parseCmd
  9475+                          ; This function uses a non-reentrant model
  9476+                          ; 
  9477+                                  psect   text22,class=CODE,space=0,reloc=
      +                          2
  9478+                          
  9479+                          	opt lm
  9480+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\nexa.h"
  9481+                          	line	1
  9482+ 000000                     	__size_of_nexaTx	equ	__end_of_nexaTx-_nexaTx
  9483+                          ;nexa.h: 1: void nexaTx(char *s, char resends){
  9484+                          	
  9485+ 0011B2                     _nexaTx:		; BSR set to: ?
  9486+                          
  9487+                          	opt stack 28
  9488+                          	line	7
  9489+ 0011B2  0E00               	movlw	low(0)
  9490+ 0011B4  0102               	movlb	2	; () banked
  9491+ 0011B6  0102               	movlb	2	; () banked
  9492+ 0011B8  6F43               	movwf	((nexaTx@data))&0ffh
  9493+ 0011BA  0E00               	movlw	high(0)
  9494+ 0011BC  0102               	movlb	2	; () banked
  9495+ 0011BE  6F44               	movwf	((nexaTx@data+1))&0ffh
  9496+ 0011C0  0E00               	movlw	low highword(0)
  9497+ 0011C2  0102               	movlb	2	; () banked
  9498+ 0011C4  6F45               	movwf	((nexaTx@data+2))&0ffh
  9499+ 0011C6  0E00               	movlw	high highword(0)
  9500+ 0011C8  0102               	movlb	2	; () banked
  9501+ 0011CA  6F46               	movwf	((nexaTx@data+3))&0ffh
  9502+                          	line	12
  9503+                          ;nexa.h: 8: unsigned char dimming;
  9504+                          ;nexa.h: 9: unsigned long temp;
  9505+                          ;nexa.h: 10: char bitnr;
  9506+                          ;nexa.h: 12: for (char j=0; j<6; j++){
  9507+ 0011CC  0102               	movlb	2	; () banked
  9508+ 0011CE  6F49               	movwf	(??_nexaTx+12+0)&0ffh
  9509+ 0011D0  0E00               	movlw	low(0)
  9510+ 0011D2  0102               	movlb	2	; () banked
  9511+ 0011D4  0102               	movlb	2	; () banked
  9512+ 0011D6  6F47               	movwf	((nexaTx@j))&0ffh
  9513+ 0011D8  0102               	movlb	2	; () banked
  9514+ 0011DA  5149               	movf	(??_nexaTx+12+0)&0ffh,w
  9515+ 0011DC  0E05               	movlw	(06h-1)
  9516+ 0011DE  0102               	movlb	2	; () banked
  9517+ 0011E0  0102               	movlb	2	; () banked
  9518+ 0011E2  6547               	cpfsgt	((nexaTx@j))&0ffh
  9519+ 0011E4  EFF6  F008         	goto	u7141
  9520+ 0011E8  EFF8  F008         	goto	u7140
  9521+ 0011EC                     u7141:
  9522+ 0011EC  EFFA  F008         	goto	l405
  9523+ 0011F0                     u7140:
  9524+ 0011F0  EF2F  F009         	goto	l406
  9525+                          	
  9526+ 0011F4                     l405:		; BSR set to: ?
  9527+                          
  9528+                          	line	13
  9529+                          ;nexa.h: 13: data |= asciiToHex(s[j]);
  9530+ 0011F4  0102               	movlb	2	; () banked
  9531+ 0011F6  0102               	movlb	2	; () banked
  9532+ 0011F8  5147               	movf	((nexaTx@j))&0ffh,w
  9533+ 0011FA  0102               	movlb	2	; () banked
  9534+ 0011FC  0102               	movlb	2	; () banked
  9535+ 0011FE  253A               	addwf	((nexaTx@s))&0ffh,w
  9536+ 001200  6EE9               	movwf	c:fsr0l
  9537+ 001202  0102               	movlb	2	; () banked
  9538+ 001204  0E00               	movlw	0
  9539+ 001206  0102               	movlb	2	; () banked
  9540+ 001208  0102               	movlb	2	; () banked
  9541+ 00120A  213B               	addwfc	((nexaTx@s+1))&0ffh,w
  9542+ 00120C  6EEA               	movwf	1+c:fsr0l
  9543+ 00120E  50EF               	movf	indf0,w
  9544+ 001210  0102               	movlb	2	; () banked
  9545+ 001212  0102               	movlb	2	; () banked
  9546+ 001214  6F50               	movwf	((?_asciiToHex))&0ffh
  9547+ 001216  ECA5  F028         	call	_asciiToHex	;wreg free
  9548+ 00121A  0102               	movlb	2	; () banked
  9549+ 00121C  6F49               	movwf	(??_nexaTx+12+0)&0ffh
  9550+ 00121E  0102               	movlb	2	; () banked
  9551+ 001220  5149               	movf	((??_nexaTx+12+0))&0ffh,w
  9552+ 001222  0102               	movlb	2	; () banked
  9553+ 001224  0102               	movlb	2	; () banked
  9554+ 001226  1343               	iorwf	((nexaTx@data))&0ffh
  9555+                          	line	14
  9556+                          ;nexa.h: 14: data <<= 4;
  9557+ 001228  0102               	movlb	2	; () banked
  9558+ 00122A  0E04               	movlw	04h
  9559+ 00122C                     u7155:
  9560+ 00122C  90D8               	bcf	status,0
  9561+ 00122E  0102               	movlb	2	; () banked
  9562+ 001230  3743               	rlcf	((nexaTx@data))&0ffh
  9563+ 001232  0102               	movlb	2	; () banked
  9564+ 001234  3744               	rlcf	((nexaTx@data+1))&0ffh
  9565+ 001236  0102               	movlb	2	; () banked
  9566+ 001238  3745               	rlcf	((nexaTx@data+2))&0ffh
  9567+ 00123A  0102               	movlb	2	; () banked
  9568+ 00123C  3746               	rlcf	((nexaTx@data+3))&0ffh
  9569+ 00123E  2EE8               	decfsz	wreg
  9570+ 001240  EF16  F009         	goto	u7155
  9571+                          	line	12
  9572+ 001244  0102               	movlb	2	; () banked
  9573+ 001246  0102               	movlb	2	; () banked
  9574+ 001248  2B47               	incf	((nexaTx@j))&0ffh
  9575+ 00124A  0E05               	movlw	(06h-1)
  9576+ 00124C  0102               	movlb	2	; () banked
  9577+ 00124E  0102               	movlb	2	; () banked
  9578+ 001250  6547               	cpfsgt	((nexaTx@j))&0ffh
  9579+ 001252  EF2D  F009         	goto	u7161
  9580+ 001256  EF2F  F009         	goto	u7160
  9581+ 00125A                     u7161:
  9582+ 00125A  EFFA  F008         	goto	l405
  9583+ 00125E                     u7160:
  9584+                          	
  9585+ 00125E                     l406:		; BSR set to: ?
  9586+                          
  9587+                          	line	16
  9588+                          ;nexa.h: 15: }
  9589+                          ;nexa.h: 16: data <<= 4;
  9590+ 00125E  0102               	movlb	2	; () banked
  9591+ 001260  0E04               	movlw	04h
  9592+ 001262                     u7175:
  9593+ 001262  90D8               	bcf	status,0
  9594+ 001264  0102               	movlb	2	; () banked
  9595+ 001266  3743               	rlcf	((nexaTx@data))&0ffh
  9596+ 001268  0102               	movlb	2	; () banked
  9597+ 00126A  3744               	rlcf	((nexaTx@data+1))&0ffh
  9598+ 00126C  0102               	movlb	2	; () banked
  9599+ 00126E  3745               	rlcf	((nexaTx@data+2))&0ffh
  9600+ 001270  0102               	movlb	2	; () banked
  9601+ 001272  3746               	rlcf	((nexaTx@data+3))&0ffh
  9602+ 001274  2EE8               	decfsz	wreg
  9603+ 001276  EF31  F009         	goto	u7175
  9604+                          	line	17
  9605+                          ;nexa.h: 17: data |= (s[6] - '0') << 6;
  9606+ 00127A  0E06               	movlw	low(06h)
  9607+ 00127C  0102               	movlb	2	; () banked
  9608+ 00127E  0102               	movlb	2	; () banked
  9609+ 001280  253A               	addwf	((nexaTx@s))&0ffh,w
  9610+ 001282  6EE9               	movwf	c:fsr0l
  9611+ 001284  0E00               	movlw	high(06h)
  9612+ 001286  0102               	movlb	2	; () banked
  9613+ 001288  0102               	movlb	2	; () banked
  9614+ 00128A  213B               	addwfc	((nexaTx@s+1))&0ffh,w
  9615+ 00128C  6EEA               	movwf	1+c:fsr0l
  9616+ 00128E  50EF               	movf	indf0,w
  9617+ 001290  0102               	movlb	2	; () banked
  9618+ 001292  6F49               	movwf	(??_nexaTx+12+0)&0ffh
  9619+ 001294  C249  F24A         	movff	(??_nexaTx+12+0),??_nexaTx+13+0
  9620+ 001298  0102               	movlb	2	; () banked
  9621+ 00129A  6B4B               	clrf	(??_nexaTx+13+0+1)&0ffh
  9622+ 00129C  0E06               	movlw	06h
  9623+ 00129E                     u7185:
  9624+ 00129E  90D8               	bcf	status,0
  9625+ 0012A0  0102               	movlb	2	; () banked
  9626+ 0012A2  374A               	rlcf	(??_nexaTx+13+0)&0ffh
  9627+ 0012A4  374B               	rlcf	(??_nexaTx+13+1)&0ffh
  9628+ 0012A6  2EE8               	decfsz	wreg
  9629+ 0012A8  EF4F  F009         	goto	u7185
  9630+ 0012AC  0E00               	movlw	low(0F400h)
  9631+ 0012AE  0102               	movlb	2	; () banked
  9632+ 0012B0  254A               	addwf	(??_nexaTx+13+0)&0ffh,w
  9633+ 0012B2  0102               	movlb	2	; () banked
  9634+ 0012B4  6F4C               	movwf	(??_nexaTx+15+0)&0ffh
  9635+ 0012B6  0EF4               	movlw	high(0F400h)
  9636+ 0012B8  0102               	movlb	2	; () banked
  9637+ 0012BA  214B               	addwfc	(??_nexaTx+13+1)&0ffh,w
  9638+ 0012BC  0102               	movlb	2	; () banked
  9639+ 0012BE  6F4D               	movwf	1+(??_nexaTx+15+0)&0ffh
  9640+                          	
  9641+ 0012C0  0102               	movlb	2	; () banked
  9642+ 0012C2  6B4E               	clrf	2+(??_nexaTx+15+0)&0ffh
  9643+                          	
  9644+ 0012C4  0102               	movlb	2	; () banked
  9645+ 0012C6  6B4F               	clrf	3+(??_nexaTx+15+0)&0ffh
  9646+ 0012C8  0102               	movlb	2	; () banked
  9647+ 0012CA  514C               	movf	(??_nexaTx+15+0)&0ffh,w
  9648+ 0012CC  0102               	movlb	2	; () banked
  9649+ 0012CE  0102               	movlb	2	; () banked
  9650+ 0012D0  1343               	iorwf	((nexaTx@data))&0ffh
  9651+ 0012D2  0102               	movlb	2	; () banked
  9652+ 0012D4  514D               	movf	(??_nexaTx+15+1)&0ffh,w
  9653+ 0012D6  0102               	movlb	2	; () banked
  9654+ 0012D8  0102               	movlb	2	; () banked
  9655+ 0012DA  1344               	iorwf	((nexaTx@data+1))&0ffh
  9656+ 0012DC  0102               	movlb	2	; () banked
  9657+ 0012DE  514E               	movf	(??_nexaTx+15+2)&0ffh,w
  9658+ 0012E0  0102               	movlb	2	; () banked
  9659+ 0012E2  0102               	movlb	2	; () banked
  9660+ 0012E4  1345               	iorwf	((nexaTx@data+2))&0ffh
  9661+ 0012E6  0102               	movlb	2	; () banked
  9662+ 0012E8  514F               	movf	(??_nexaTx+15+3)&0ffh,w
  9663+ 0012EA  0102               	movlb	2	; () banked
  9664+ 0012EC  0102               	movlb	2	; () banked
  9665+ 0012EE  1346               	iorwf	((nexaTx@data+3))&0ffh
  9666+                          
  9667+                          	line	18
  9668+                          ;nexa.h: 18: if (s[7] - '0') data |= 0b00100000;
  9669+ 0012F0  0E07               	movlw	low(07h)
  9670+ 0012F2  0102               	movlb	2	; () banked
  9671+ 0012F4  0102               	movlb	2	; () banked
  9672+ 0012F6  253A               	addwf	((nexaTx@s))&0ffh,w
  9673+ 0012F8  6EE9               	movwf	c:fsr0l
  9674+ 0012FA  0E00               	movlw	high(07h)
  9675+ 0012FC  0102               	movlb	2	; () banked
  9676+ 0012FE  0102               	movlb	2	; () banked
  9677+ 001300  213B               	addwfc	((nexaTx@s+1))&0ffh,w
  9678+ 001302  6EEA               	movwf	1+c:fsr0l
  9679+ 001304  50EF               	movf	indf0,w
  9680+ 001306  0102               	movlb	2	; () banked
  9681+ 001308  6F49               	movwf	(??_nexaTx+12+0)&0ffh
  9682+ 00130A  0ED0               	movlw	low(0FFD0h)
  9683+ 00130C  0102               	movlb	2	; () banked
  9684+ 00130E  2549               	addwf	((??_nexaTx+12+0))&0ffh,w
  9685+ 001310  0102               	movlb	2	; () banked
  9686+ 001312  6F4A               	movwf	(??_nexaTx+13+0)&0ffh
  9687+ 001314  0102               	movlb	2	; () banked
  9688+ 001316  6B4B               	clrf	1+(??_nexaTx+13+0)&0ffh
  9689+ 001318  0EFF               	movlw	high(0FFD0h)
  9690+ 00131A  0102               	movlb	2	; () banked
  9691+ 00131C  234B               	addwfc	1+(??_nexaTx+13+0)&0ffh
  9692+ 00131E  0102               	movlb	2	; () banked
  9693+ 001320  514B               	movf	(??_nexaTx+13+1)&0ffh,w
  9694+ 001322  114A               	iorwf (??_nexaTx+13+0)&0ffh,w
  9695+                          
  9696+ 001324  B4D8               	btfsc	status,2
  9697+ 001326  EF97  F009         	goto	u7191
  9698+ 00132A  EF99  F009         	goto	u7190
  9699+ 00132E                     u7191:
  9700+ 00132E  EF9C  F009         	goto	l408
  9701+ 001332                     u7190:
  9702+ 001332  0102               	movlb	2	; () banked
  9703+ 001334  0102               	movlb	2	; () banked
  9704+ 001336  8B43               	bsf	(0+(5/8)+(nexaTx@data))&0ffh,(5)&7
  9705+                          	
  9706+ 001338                     l408:		; BSR set to: ?
  9707+                          
  9708+                          	line	19
  9709+                          ;nexa.h: 19: data |= asciiToHex(s[8]);
  9710+ 001338  0E08               	movlw	low(08h)
  9711+ 00133A  0102               	movlb	2	; () banked
  9712+ 00133C  0102               	movlb	2	; () banked
  9713+ 00133E  253A               	addwf	((nexaTx@s))&0ffh,w
  9714+ 001340  6EE9               	movwf	c:fsr0l
  9715+ 001342  0E00               	movlw	high(08h)
  9716+ 001344  0102               	movlb	2	; () banked
  9717+ 001346  0102               	movlb	2	; () banked
  9718+ 001348  213B               	addwfc	((nexaTx@s+1))&0ffh,w
  9719+ 00134A  6EEA               	movwf	1+c:fsr0l
  9720+ 00134C  50EF               	movf	indf0,w
  9721+ 00134E  0102               	movlb	2	; () banked
  9722+ 001350  0102               	movlb	2	; () banked
  9723+ 001352  6F50               	movwf	((?_asciiToHex))&0ffh
  9724+ 001354  ECA5  F028         	call	_asciiToHex	;wreg free
  9725+ 001358  0102               	movlb	2	; () banked
  9726+ 00135A  6F49               	movwf	(??_nexaTx+12+0)&0ffh
  9727+ 00135C  0102               	movlb	2	; () banked
  9728+ 00135E  5149               	movf	((??_nexaTx+12+0))&0ffh,w
  9729+ 001360  0102               	movlb	2	; () banked
  9730+ 001362  0102               	movlb	2	; () banked
  9731+ 001364  1343               	iorwf	((nexaTx@data))&0ffh
  9732+                          	line	20
  9733+                          ;nexa.h: 20: if (s[9] == '1'){data |= 0b00010000
      +                          ;}
  9734+ 001366  0E09               	movlw	low(09h)
  9735+ 001368  0102               	movlb	2	; () banked
  9736+ 00136A  0102               	movlb	2	; () banked
  9737+ 00136C  253A               	addwf	((nexaTx@s))&0ffh,w
  9738+ 00136E  6EE9               	movwf	c:fsr0l
  9739+ 001370  0E00               	movlw	high(09h)
  9740+ 001372  0102               	movlb	2	; () banked
  9741+ 001374  0102               	movlb	2	; () banked
  9742+ 001376  213B               	addwfc	((nexaTx@s+1))&0ffh,w
  9743+ 001378  6EEA               	movwf	1+c:fsr0l
  9744+ 00137A  0E31               	movlw	(031h)&0ffh
  9745+ 00137C  62EF               	cpfseq	indf0
  9746+ 00137E  EFC3  F009         	goto	u7201
  9747+ 001382  EFC5  F009         	goto	u7200
  9748+ 001386                     u7201:
  9749+ 001386  EFC8  F009         	goto	l409
  9750+ 00138A                     u7200:
  9751+ 00138A  0102               	movlb	2	; () banked
  9752+ 00138C  0102               	movlb	2	; () banked
  9753+ 00138E  8943               	bsf	(0+(4/8)+(nexaTx@data))&0ffh,(4)&7
  9754+                          	
  9755+ 001390                     l409:		; BSR set to: ?
  9756+                          
  9757+                          	line	21
  9758+                          ;nexa.h: 21: if (s[9] == '2') dimming = asciiToH
      +                          ex(s[10]);
  9759+ 001390  0E09               	movlw	low(09h)
  9760+ 001392  0102               	movlb	2	; () banked
  9761+ 001394  0102               	movlb	2	; () banked
  9762+ 001396  253A               	addwf	((nexaTx@s))&0ffh,w
  9763+ 001398  6EE9               	movwf	c:fsr0l
  9764+ 00139A  0E00               	movlw	high(09h)
  9765+ 00139C  0102               	movlb	2	; () banked
  9766+ 00139E  0102               	movlb	2	; () banked
  9767+ 0013A0  213B               	addwfc	((nexaTx@s+1))&0ffh,w
  9768+ 0013A2  6EEA               	movwf	1+c:fsr0l
  9769+ 0013A4  0E32               	movlw	(032h)&0ffh
  9770+ 0013A6  62EF               	cpfseq	indf0
  9771+ 0013A8  EFD8  F009         	goto	u7211
  9772+ 0013AC  EFDA  F009         	goto	u7210
  9773+ 0013B0                     u7211:
  9774+ 0013B0  EFEF  F009         	goto	l410
  9775+ 0013B4                     u7210:
  9776+ 0013B4  0E0A               	movlw	low(0Ah)
  9777+ 0013B6  0102               	movlb	2	; () banked
  9778+ 0013B8  0102               	movlb	2	; () banked
  9779+ 0013BA  253A               	addwf	((nexaTx@s))&0ffh,w
  9780+ 0013BC  6EE9               	movwf	c:fsr0l
  9781+ 0013BE  0E00               	movlw	high(0Ah)
  9782+ 0013C0  0102               	movlb	2	; () banked
  9783+ 0013C2  0102               	movlb	2	; () banked
  9784+ 0013C4  213B               	addwfc	((nexaTx@s+1))&0ffh,w
  9785+ 0013C6  6EEA               	movwf	1+c:fsr0l
  9786+ 0013C8  50EF               	movf	indf0,w
  9787+ 0013CA  0102               	movlb	2	; () banked
  9788+ 0013CC  0102               	movlb	2	; () banked
  9789+ 0013CE  6F50               	movwf	((?_asciiToHex))&0ffh
  9790+ 0013D0  ECA5  F028         	call	_asciiToHex	;wreg free
  9791+ 0013D4  0102               	movlb	2	; () banked
  9792+ 0013D6  0102               	movlb	2	; () banked
  9793+ 0013D8  6F3D               	movwf	((nexaTx@dimming))&0ffh
  9794+ 0013DA  EFF7  F009         	goto	l411
  9795+                          	line	22
  9796+                          	
  9797+ 0013DE                     l410:		; BSR set to: ?
  9798+                          
  9799+                          ;nexa.h: 22: else dimming = 0;
  9800+ 0013DE  0102               	movlb	2	; () banked
  9801+ 0013E0  6F49               	movwf	(??_nexaTx+12+0)&0ffh
  9802+ 0013E2  0E00               	movlw	low(0)
  9803+ 0013E4  0102               	movlb	2	; () banked
  9804+ 0013E6  0102               	movlb	2	; () banked
  9805+ 0013E8  6F3D               	movwf	((nexaTx@dimming))&0ffh
  9806+ 0013EA  0102               	movlb	2	; () banked
  9807+ 0013EC  5149               	movf	(??_nexaTx+12+0)&0ffh,w
  9808+                          	
  9809+ 0013EE                     l411:		; BSR set to: ?
  9810+                          
  9811+                          	line	24
  9812+                          ;nexa.h: 24: startTransmit();
  9813+ 0013EE  ECFF  F028         	call	_startTransmit	;wreg free
  9814+                          	line	25
  9815+                          ;nexa.h: 25: for (char resend = 0; resend < rese
      +                          nds; resend++){
  9816+ 0013F2  0102               	movlb	2	; () banked
  9817+ 0013F4  6F49               	movwf	(??_nexaTx+12+0)&0ffh
  9818+ 0013F6  0E00               	movlw	low(0)
  9819+ 0013F8  0102               	movlb	2	; () banked
  9820+ 0013FA  0102               	movlb	2	; () banked
  9821+ 0013FC  6F48               	movwf	((nexaTx@resend))&0ffh
  9822+ 0013FE  0102               	movlb	2	; () banked
  9823+ 001400  5149               	movf	(??_nexaTx+12+0)&0ffh,w
  9824+ 001402  EF82  F00B         	goto	l415
  9825+                          	
  9826+ 001406                     l412:		; BSR set to: ?
  9827+                          
  9828+                          	line	26
  9829+                          ;nexa.h: 26: LATB2 = 1;
  9830+ 001406  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  9831+                          	line	27
  9832+                          ;nexa.h: 27: waitTimer(204);
  9833+ 001408  0ECC               	movlw	low(0CCh)
  9834+ 00140A  0102               	movlb	2	; () banked
  9835+ 00140C  0102               	movlb	2	; () banked
  9836+ 00140E  6F56               	movwf	((?_waitTimer))&0ffh
  9837+ 001410  0E00               	movlw	high(0CCh)
  9838+ 001412  0102               	movlb	2	; () banked
  9839+ 001414  6F57               	movwf	((?_waitTimer+1))&0ffh
  9840+ 001416  EC04  F028         	call	_waitTimer	;wreg free
  9841+                          	line	28
  9842+                          ;nexa.h: 28: LATB2 = 0;
  9843+ 00141A  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  9844+                          	line	29
  9845+                          ;nexa.h: 29: waitTimer(2720);
  9846+ 00141C  0EA0               	movlw	low(0AA0h)
  9847+ 00141E  0102               	movlb	2	; () banked
  9848+ 001420  0102               	movlb	2	; () banked
  9849+ 001422  6F56               	movwf	((?_waitTimer))&0ffh
  9850+ 001424  0E0A               	movlw	high(0AA0h)
  9851+ 001426  0102               	movlb	2	; () banked
  9852+ 001428  6F57               	movwf	((?_waitTimer+1))&0ffh
  9853+ 00142A  EC04  F028         	call	_waitTimer	;wreg free
  9854+                          	line	30
  9855+                          ;nexa.h: 30: temp = data;
  9856+ 00142E  C243  F23F         	movff	(nexaTx@data),(nexaTx@temp)
  9857+ 001432  C244  F240         	movff	(nexaTx@data+1),(nexaTx@temp+1)
  9858+ 001436  C245  F241         	movff	(nexaTx@data+2),(nexaTx@temp+2)
  9859+ 00143A  C246  F242         	movff	(nexaTx@data+3),(nexaTx@temp+3)
  9860+                          	line	31
  9861+                          ;nexa.h: 31: for (bitnr = 0; bitnr < 32; bitnr++
      +                          ){
  9862+ 00143E  0102               	movlb	2	; () banked
  9863+ 001440  6F49               	movwf	(??_nexaTx+12+0)&0ffh
  9864+ 001442  0E00               	movlw	low(0)
  9865+ 001444  0102               	movlb	2	; () banked
  9866+ 001446  0102               	movlb	2	; () banked
  9867+ 001448  6F3E               	movwf	((nexaTx@bitnr))&0ffh
  9868+ 00144A  0102               	movlb	2	; () banked
  9869+ 00144C  5149               	movf	(??_nexaTx+12+0)&0ffh,w
  9870+ 00144E  0E1F               	movlw	(020h-1)
  9871+ 001450  0102               	movlb	2	; () banked
  9872+ 001452  0102               	movlb	2	; () banked
  9873+ 001454  653E               	cpfsgt	((nexaTx@bitnr))&0ffh
  9874+ 001456  EF2F  F00A         	goto	u7221
  9875+ 00145A  EF31  F00A         	goto	u7220
  9876+ 00145E                     u7221:
  9877+ 00145E  EF33  F00A         	goto	l416
  9878+ 001462                     u7220:
  9879+ 001462  EFDA  F00A         	goto	l417
  9880+                          	
  9881+ 001466                     l416:		; BSR set to: ?
  9882+                          
  9883+                          	line	32
  9884+                          ;nexa.h: 32: LATB2 = 1;
  9885+ 001466  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  9886+                          	line	33
  9887+                          ;nexa.h: 33: waitTimer(204);
  9888+ 001468  0ECC               	movlw	low(0CCh)
  9889+ 00146A  0102               	movlb	2	; () banked
  9890+ 00146C  0102               	movlb	2	; () banked
  9891+ 00146E  6F56               	movwf	((?_waitTimer))&0ffh
  9892+ 001470  0E00               	movlw	high(0CCh)
  9893+ 001472  0102               	movlb	2	; () banked
  9894+ 001474  6F57               	movwf	((?_waitTimer+1))&0ffh
  9895+ 001476  EC04  F028         	call	_waitTimer	;wreg free
  9896+                          	line	34
  9897+                          ;nexa.h: 34: LATB2 = 0;
  9898+ 00147A  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  9899+                          	line	35
  9900+                          ;nexa.h: 35: if (dimming && bitnr == 27) waitTim
      +                          er(272);
  9901+ 00147C  0102               	movlb	2	; () banked
  9902+ 00147E  0102               	movlb	2	; () banked
  9903+ 001480  513D               	movf	((nexaTx@dimming))&0ffh,w
  9904+ 001482  B4D8               	btfsc	status,2
  9905+ 001484  EF46  F00A         	goto	u7231
  9906+ 001488  EF48  F00A         	goto	u7230
  9907+ 00148C                     u7231:
  9908+ 00148C  EF5E  F00A         	goto	l419
  9909+ 001490                     u7230:
  9910+ 001490  0102               	movlb	2	; () banked
  9911+ 001492  0102               	movlb	2	; () banked
  9912+ 001494  513E               	movf	((nexaTx@bitnr))&0ffh,w
  9913+ 001496  0A1B               	xorlw	27
  9914+                          
  9915+ 001498  A4D8               	btfss	status,2
  9916+ 00149A  EF51  F00A         	goto	u7241
  9917+ 00149E  EF53  F00A         	goto	u7240
  9918+ 0014A2                     u7241:
  9919+ 0014A2  EF5E  F00A         	goto	l419
  9920+ 0014A6                     u7240:
  9921+ 0014A6  0E10               	movlw	low(0110h)
  9922+ 0014A8  0102               	movlb	2	; () banked
  9923+ 0014AA  0102               	movlb	2	; () banked
  9924+ 0014AC  6F56               	movwf	((?_waitTimer))&0ffh
  9925+ 0014AE  0E01               	movlw	high(0110h)
  9926+ 0014B0  0102               	movlb	2	; () banked
  9927+ 0014B2  6F57               	movwf	((?_waitTimer+1))&0ffh
  9928+ 0014B4  EC04  F028         	call	_waitTimer	;wreg free
  9929+ 0014B8  EF7B  F00A         	goto	l420
  9930+                          	line	36
  9931+                          	
  9932+ 0014BC                     l419:		; BSR set to: ?
  9933+                          
  9934+                          ;nexa.h: 36: else if(temp & 0b100000000000000000
      +                          00000000000000) waitTimer(1326);
  9935+ 0014BC  0102               	movlb	2	; () banked
  9936+                          	
  9937+ 0014BE  0102               	movlb	2	; () banked
  9938+ 0014C0  AF42               	btfss	((nexaTx@temp+3))&0ffh,(31)&7
  9939+ 0014C2  EF65  F00A         	goto	u7251
  9940+ 0014C6  EF67  F00A         	goto	u7250
  9941+ 0014CA                     u7251:
  9942+ 0014CA  EF72  F00A         	goto	l421
  9943+ 0014CE                     u7250:
  9944+ 0014CE  0E2E               	movlw	low(052Eh)
  9945+ 0014D0  0102               	movlb	2	; () banked
  9946+ 0014D2  0102               	movlb	2	; () banked
  9947+ 0014D4  6F56               	movwf	((?_waitTimer))&0ffh
  9948+ 0014D6  0E05               	movlw	high(052Eh)
  9949+ 0014D8  0102               	movlb	2	; () banked
  9950+ 0014DA  6F57               	movwf	((?_waitTimer+1))&0ffh
  9951+ 0014DC  EC04  F028         	call	_waitTimer	;wreg free
  9952+ 0014E0  EF7B  F00A         	goto	l420
  9953+                          	line	37
  9954+                          	
  9955+ 0014E4                     l421:		; BSR set to: ?
  9956+                          
  9957+                          ;nexa.h: 37: else waitTimer(272);
  9958+ 0014E4  0E10               	movlw	low(0110h)
  9959+ 0014E6  0102               	movlb	2	; () banked
  9960+ 0014E8  0102               	movlb	2	; () banked
  9961+ 0014EA  6F56               	movwf	((?_waitTimer))&0ffh
  9962+ 0014EC  0E01               	movlw	high(0110h)
  9963+ 0014EE  0102               	movlb	2	; () banked
  9964+ 0014F0  6F57               	movwf	((?_waitTimer+1))&0ffh
  9965+ 0014F2  EC04  F028         	call	_waitTimer	;wreg free
  9966+                          	
  9967+ 0014F6                     l422:		; BSR set to: ?
  9968+                          
  9969+                          	
  9970+ 0014F6                     l420:		; BSR set to: ?
  9971+                          
  9972+                          	line	38
  9973+                          ;nexa.h: 38: LATB2 = 1;
  9974+ 0014F6  848A               	bsf	c:(31826/8),(31826)&7	;volatile
  9975+                          	line	39
  9976+                          ;nexa.h: 39: waitTimer(204);
  9977+ 0014F8  0ECC               	movlw	low(0CCh)
  9978+ 0014FA  0102               	movlb	2	; () banked
  9979+ 0014FC  0102               	movlb	2	; () banked
  9980+ 0014FE  6F56               	movwf	((?_waitTimer))&0ffh
  9981+ 001500  0E00               	movlw	high(0CCh)
  9982+ 001502  0102               	movlb	2	; () banked
  9983+ 001504  6F57               	movwf	((?_waitTimer+1))&0ffh
  9984+ 001506  EC04  F028         	call	_waitTimer	;wreg free
  9985+                          	line	40
  9986+                          ;nexa.h: 40: LATB2 = 0;
  9987+ 00150A  948A               	bcf	c:(31826/8),(31826)&7	;volatile
  9988+                          	line	41
  9989+                          ;nexa.h: 41: if (dimming && bitnr == 27) waitTim
      +                          er(272);
  9990+ 00150C  0102               	movlb	2	; () banked
  9991+ 00150E  0102               	movlb	2	; () banked
  9992+ 001510  513D               	movf	((nexaTx@dimming))&0ffh,w
  9993+ 001512  B4D8               	btfsc	status,2
  9994+ 001514  EF8E  F00A         	goto	u7261
  9995+ 001518  EF90  F00A         	goto	u7260
  9996+ 00151C                     u7261:
  9997+ 00151C  EFA6  F00A         	goto	l423
  9998+ 001520                     u7260:
  9999+ 001520  0102               	movlb	2	; () banked
 10000+ 001522  0102               	movlb	2	; () banked
 10001+ 001524  513E               	movf	((nexaTx@bitnr))&0ffh,w
 10002+ 001526  0A1B               	xorlw	27
 10003+                          
 10004+ 001528  A4D8               	btfss	status,2
 10005+ 00152A  EF99  F00A         	goto	u7271
 10006+ 00152E  EF9B  F00A         	goto	u7270
 10007+ 001532                     u7271:
 10008+ 001532  EFA6  F00A         	goto	l423
 10009+ 001536                     u7270:
 10010+ 001536  0E10               	movlw	low(0110h)
 10011+ 001538  0102               	movlb	2	; () banked
 10012+ 00153A  0102               	movlb	2	; () banked
 10013+ 00153C  6F56               	movwf	((?_waitTimer))&0ffh
 10014+ 00153E  0E01               	movlw	high(0110h)
 10015+ 001540  0102               	movlb	2	; () banked
 10016+ 001542  6F57               	movwf	((?_waitTimer+1))&0ffh
 10017+ 001544  EC04  F028         	call	_waitTimer	;wreg free
 10018+ 001548  EFC3  F00A         	goto	l424
 10019+                          	line	42
 10020+                          	
 10021+ 00154C                     l423:		; BSR set to: ?
 10022+                          
 10023+                          ;nexa.h: 42: else if((temp & 0b10000000000000000
      +                          000000000000000) == 0) waitTimer(1326);
 10024+ 00154C  0102               	movlb	2	; () banked
 10025+                          	
 10026+ 00154E  0102               	movlb	2	; () banked
 10027+ 001550  BF42               	btfsc	((nexaTx@temp+3))&0ffh,(31)&7
 10028+ 001552  EFAD  F00A         	goto	u7281
 10029+ 001556  EFAF  F00A         	goto	u7280
 10030+ 00155A                     u7281:
 10031+ 00155A  EFBA  F00A         	goto	l425
 10032+ 00155E                     u7280:
 10033+ 00155E  0E2E               	movlw	low(052Eh)
 10034+ 001560  0102               	movlb	2	; () banked
 10035+ 001562  0102               	movlb	2	; () banked
 10036+ 001564  6F56               	movwf	((?_waitTimer))&0ffh
 10037+ 001566  0E05               	movlw	high(052Eh)
 10038+ 001568  0102               	movlb	2	; () banked
 10039+ 00156A  6F57               	movwf	((?_waitTimer+1))&0ffh
 10040+ 00156C  EC04  F028         	call	_waitTimer	;wreg free
 10041+ 001570  EFC3  F00A         	goto	l424
 10042+                          	line	43
 10043+                          	
 10044+ 001574                     l425:		; BSR set to: ?
 10045+                          
 10046+                          ;nexa.h: 43: else waitTimer(272);
 10047+ 001574  0E10               	movlw	low(0110h)
 10048+ 001576  0102               	movlb	2	; () banked
 10049+ 001578  0102               	movlb	2	; () banked
 10050+ 00157A  6F56               	movwf	((?_waitTimer))&0ffh
 10051+ 00157C  0E01               	movlw	high(0110h)
 10052+ 00157E  0102               	movlb	2	; () banked
 10053+ 001580  6F57               	movwf	((?_waitTimer+1))&0ffh
 10054+ 001582  EC04  F028         	call	_waitTimer	;wreg free
 10055+                          	
 10056+ 001586                     l426:		; BSR set to: ?
 10057+                          
 10058+                          	
 10059+ 001586                     l424:		; BSR set to: ?
 10060+                          
 10061+                          	line	44
 10062+                          ;nexa.h: 44: temp <<= 1;
 10063+ 001586  0102               	movlb	2	; () banked
 10064+ 001588  90D8               	bcf	status,0
 10065+ 00158A  0102               	movlb	2	; () banked
 10066+ 00158C  373F               	rlcf	((nexaTx@temp))&0ffh
 10067+ 00158E  0102               	movlb	2	; () banked
 10068+ 001590  3740               	rlcf	((nexaTx@temp+1))&0ffh
 10069+ 001592  0102               	movlb	2	; () banked
 10070+ 001594  3741               	rlcf	((nexaTx@temp+2))&0ffh
 10071+ 001596  0102               	movlb	2	; () banked
 10072+ 001598  3742               	rlcf	((nexaTx@temp+3))&0ffh
 10073+                          	line	31
 10074+ 00159A  0102               	movlb	2	; () banked
 10075+ 00159C  0102               	movlb	2	; () banked
 10076+ 00159E  2B3E               	incf	((nexaTx@bitnr))&0ffh
 10077+ 0015A0  0E1F               	movlw	(020h-1)
 10078+ 0015A2  0102               	movlb	2	; () banked
 10079+ 0015A4  0102               	movlb	2	; () banked
 10080+ 0015A6  653E               	cpfsgt	((nexaTx@bitnr))&0ffh
 10081+ 0015A8  EFD8  F00A         	goto	u7291
 10082+ 0015AC  EFDA  F00A         	goto	u7290
 10083+ 0015B0                     u7291:
 10084+ 0015B0  EF33  F00A         	goto	l416
 10085+ 0015B4                     u7290:
 10086+                          	
 10087+ 0015B4                     l417:		; BSR set to: ?
 10088+                          
 10089+                          	line	46
 10090+                          ;nexa.h: 45: }
 10091+                          ;nexa.h: 46: if (dimming != 0){
 10092+ 0015B4  0102               	movlb	2	; () banked
 10093+ 0015B6  0102               	movlb	2	; () banked
 10094+ 0015B8  513D               	movf	((nexaTx@dimming))&0ffh,w
 10095+ 0015BA  B4D8               	btfsc	status,2
 10096+ 0015BC  EFE2  F00A         	goto	u7301
 10097+ 0015C0  EFE4  F00A         	goto	u7300
 10098+ 0015C4                     u7301:
 10099+ 0015C4  EF6B  F00B         	goto	l427
 10100+ 0015C8                     u7300:
 10101+                          	line	47
 10102+                          ;nexa.h: 47: temp = dimming;
 10103+ 0015C8  0102               	movlb	2	; () banked
 10104+ 0015CA  0102               	movlb	2	; () banked
 10105+ 0015CC  513D               	movf	((nexaTx@dimming))&0ffh,w
 10106+ 0015CE  0102               	movlb	2	; () banked
 10107+ 0015D0  0102               	movlb	2	; () banked
 10108+ 0015D2  6F3F               	movwf	((nexaTx@temp))&0ffh
 10109+ 0015D4  0102               	movlb	2	; () banked
 10110+ 0015D6  6B40               	clrf	((nexaTx@temp+1))&0ffh
 10111+ 0015D8  0102               	movlb	2	; () banked
 10112+ 0015DA  6B41               	clrf	((nexaTx@temp+2))&0ffh
 10113+ 0015DC  0102               	movlb	2	; () banked
 10114+ 0015DE  6B42               	clrf	((nexaTx@temp+3))&0ffh
 10115+                          
 10116+                          	line	48
 10117+                          ;nexa.h: 48: for (bitnr = 0; bitnr < 4; bitnr++)
      +                          {
 10118+ 0015E0  0102               	movlb	2	; () banked
 10119+ 0015E2  6F49               	movwf	(??_nexaTx+12+0)&0ffh
 10120+ 0015E4  0E00               	movlw	low(0)
 10121+ 0015E6  0102               	movlb	2	; () banked
 10122+ 0015E8  0102               	movlb	2	; () banked
 10123+ 0015EA  6F3E               	movwf	((nexaTx@bitnr))&0ffh
 10124+ 0015EC  0102               	movlb	2	; () banked
 10125+ 0015EE  5149               	movf	(??_nexaTx+12+0)&0ffh,w
 10126+ 0015F0  0E03               	movlw	(04h-1)
 10127+ 0015F2  0102               	movlb	2	; () banked
 10128+ 0015F4  0102               	movlb	2	; () banked
 10129+ 0015F6  653E               	cpfsgt	((nexaTx@bitnr))&0ffh
 10130+ 0015F8  EF00  F00B         	goto	u7311
 10131+ 0015FC  EF02  F00B         	goto	u7310
 10132+ 001600                     u7311:
 10133+ 001600  EF04  F00B         	goto	l428
 10134+ 001604                     u7310:
 10135+ 001604  EF6B  F00B         	goto	l427
 10136+                          	
 10137+ 001608                     l428:		; BSR set to: ?
 10138+                          
 10139+                          	line	49
 10140+                          ;nexa.h: 49: LATB2 = 1;
 10141+ 001608  848A               	bsf	c:(31826/8),(31826)&7	;volatile
 10142+                          	line	50
 10143+                          ;nexa.h: 50: waitTimer(204);
 10144+ 00160A  0ECC               	movlw	low(0CCh)
 10145+ 00160C  0102               	movlb	2	; () banked
 10146+ 00160E  0102               	movlb	2	; () banked
 10147+ 001610  6F56               	movwf	((?_waitTimer))&0ffh
 10148+ 001612  0E00               	movlw	high(0CCh)
 10149+ 001614  0102               	movlb	2	; () banked
 10150+ 001616  6F57               	movwf	((?_waitTimer+1))&0ffh
 10151+ 001618  EC04  F028         	call	_waitTimer	;wreg free
 10152+                          	line	51
 10153+                          ;nexa.h: 51: LATB2 = 0;
 10154+ 00161C  948A               	bcf	c:(31826/8),(31826)&7	;volatile
 10155+                          	line	52
 10156+                          ;nexa.h: 52: if(temp & 0b1000) waitTimer(1326);
 10157+ 00161E  0102               	movlb	2	; () banked
 10158+                          	
 10159+ 001620  0102               	movlb	2	; () banked
 10160+ 001622  A73F               	btfss	((nexaTx@temp))&0ffh,(3)&7
 10161+ 001624  EF16  F00B         	goto	u7321
 10162+ 001628  EF18  F00B         	goto	u7320
 10163+ 00162C                     u7321:
 10164+ 00162C  EF23  F00B         	goto	l431
 10165+ 001630                     u7320:
 10166+ 001630  0E2E               	movlw	low(052Eh)
 10167+ 001632  0102               	movlb	2	; () banked
 10168+ 001634  0102               	movlb	2	; () banked
 10169+ 001636  6F56               	movwf	((?_waitTimer))&0ffh
 10170+ 001638  0E05               	movlw	high(052Eh)
 10171+ 00163A  0102               	movlb	2	; () banked
 10172+ 00163C  6F57               	movwf	((?_waitTimer+1))&0ffh
 10173+ 00163E  EC04  F028         	call	_waitTimer	;wreg free
 10174+ 001642  EF2C  F00B         	goto	l432
 10175+                          	line	53
 10176+                          	
 10177+ 001646                     l431:		; BSR set to: ?
 10178+                          
 10179+                          ;nexa.h: 53: else waitTimer(272);
 10180+ 001646  0E10               	movlw	low(0110h)
 10181+ 001648  0102               	movlb	2	; () banked
 10182+ 00164A  0102               	movlb	2	; () banked
 10183+ 00164C  6F56               	movwf	((?_waitTimer))&0ffh
 10184+ 00164E  0E01               	movlw	high(0110h)
 10185+ 001650  0102               	movlb	2	; () banked
 10186+ 001652  6F57               	movwf	((?_waitTimer+1))&0ffh
 10187+ 001654  EC04  F028         	call	_waitTimer	;wreg free
 10188+                          	
 10189+ 001658                     l432:		; BSR set to: ?
 10190+                          
 10191+                          	line	54
 10192+                          ;nexa.h: 54: LATB2 = 1;
 10193+ 001658  848A               	bsf	c:(31826/8),(31826)&7	;volatile
 10194+                          	line	55
 10195+                          ;nexa.h: 55: waitTimer(204);
 10196+ 00165A  0ECC               	movlw	low(0CCh)
 10197+ 00165C  0102               	movlb	2	; () banked
 10198+ 00165E  0102               	movlb	2	; () banked
 10199+ 001660  6F56               	movwf	((?_waitTimer))&0ffh
 10200+ 001662  0E00               	movlw	high(0CCh)
 10201+ 001664  0102               	movlb	2	; () banked
 10202+ 001666  6F57               	movwf	((?_waitTimer+1))&0ffh
 10203+ 001668  EC04  F028         	call	_waitTimer	;wreg free
 10204+                          	line	56
 10205+                          ;nexa.h: 56: LATB2 = 0;
 10206+ 00166C  948A               	bcf	c:(31826/8),(31826)&7	;volatile
 10207+                          	line	57
 10208+                          ;nexa.h: 57: if(temp & 0b1000) waitTimer(272);
 10209+ 00166E  0102               	movlb	2	; () banked
 10210+                          	
 10211+ 001670  0102               	movlb	2	; () banked
 10212+ 001672  A73F               	btfss	((nexaTx@temp))&0ffh,(3)&7
 10213+ 001674  EF3E  F00B         	goto	u7331
 10214+ 001678  EF40  F00B         	goto	u7330
 10215+ 00167C                     u7331:
 10216+ 00167C  EF4B  F00B         	goto	l433
 10217+ 001680                     u7330:
 10218+ 001680  0E10               	movlw	low(0110h)
 10219+ 001682  0102               	movlb	2	; () banked
 10220+ 001684  0102               	movlb	2	; () banked
 10221+ 001686  6F56               	movwf	((?_waitTimer))&0ffh
 10222+ 001688  0E01               	movlw	high(0110h)
 10223+ 00168A  0102               	movlb	2	; () banked
 10224+ 00168C  6F57               	movwf	((?_waitTimer+1))&0ffh
 10225+ 00168E  EC04  F028         	call	_waitTimer	;wreg free
 10226+ 001692  EF54  F00B         	goto	l434
 10227+                          	line	58
 10228+                          	
 10229+ 001696                     l433:		; BSR set to: ?
 10230+                          
 10231+                          ;nexa.h: 58: else waitTimer(1326);
 10232+ 001696  0E2E               	movlw	low(052Eh)
 10233+ 001698  0102               	movlb	2	; () banked
 10234+ 00169A  0102               	movlb	2	; () banked
 10235+ 00169C  6F56               	movwf	((?_waitTimer))&0ffh
 10236+ 00169E  0E05               	movlw	high(052Eh)
 10237+ 0016A0  0102               	movlb	2	; () banked
 10238+ 0016A2  6F57               	movwf	((?_waitTimer+1))&0ffh
 10239+ 0016A4  EC04  F028         	call	_waitTimer	;wreg free
 10240+                          	
 10241+ 0016A8                     l434:		; BSR set to: ?
 10242+                          
 10243+                          	line	59
 10244+                          ;nexa.h: 59: temp <<= 1;
 10245+ 0016A8  0102               	movlb	2	; () banked
 10246+ 0016AA  90D8               	bcf	status,0
 10247+ 0016AC  0102               	movlb	2	; () banked
 10248+ 0016AE  373F               	rlcf	((nexaTx@temp))&0ffh
 10249+ 0016B0  0102               	movlb	2	; () banked
 10250+ 0016B2  3740               	rlcf	((nexaTx@temp+1))&0ffh
 10251+ 0016B4  0102               	movlb	2	; () banked
 10252+ 0016B6  3741               	rlcf	((nexaTx@temp+2))&0ffh
 10253+ 0016B8  0102               	movlb	2	; () banked
 10254+ 0016BA  3742               	rlcf	((nexaTx@temp+3))&0ffh
 10255+                          	line	48
 10256+ 0016BC  0102               	movlb	2	; () banked
 10257+ 0016BE  0102               	movlb	2	; () banked
 10258+ 0016C0  2B3E               	incf	((nexaTx@bitnr))&0ffh
 10259+ 0016C2  0E03               	movlw	(04h-1)
 10260+ 0016C4  0102               	movlb	2	; () banked
 10261+ 0016C6  0102               	movlb	2	; () banked
 10262+ 0016C8  653E               	cpfsgt	((nexaTx@bitnr))&0ffh
 10263+ 0016CA  EF69  F00B         	goto	u7341
 10264+ 0016CE  EF6B  F00B         	goto	u7340
 10265+ 0016D2                     u7341:
 10266+ 0016D2  EF04  F00B         	goto	l428
 10267+ 0016D6                     u7340:
 10268+                          	
 10269+ 0016D6                     l429:		; BSR set to: ?
 10270+                          
 10271+                          	line	61
 10272+                          	
 10273+ 0016D6                     l427:		; BSR set to: ?
 10274+                          
 10275+                          	line	62
 10276+                          ;nexa.h: 60: }
 10277+                          ;nexa.h: 61: }
 10278+                          ;nexa.h: 62: LATB2 = 1;
 10279+ 0016D6  848A               	bsf	c:(31826/8),(31826)&7	;volatile
 10280+                          	line	63
 10281+                          ;nexa.h: 63: waitTimer(204);
 10282+ 0016D8  0ECC               	movlw	low(0CCh)
 10283+ 0016DA  0102               	movlb	2	; () banked
 10284+ 0016DC  0102               	movlb	2	; () banked
 10285+ 0016DE  6F56               	movwf	((?_waitTimer))&0ffh
 10286+ 0016E0  0E00               	movlw	high(0CCh)
 10287+ 0016E2  0102               	movlb	2	; () banked
 10288+ 0016E4  6F57               	movwf	((?_waitTimer+1))&0ffh
 10289+ 0016E6  EC04  F028         	call	_waitTimer	;wreg free
 10290+                          	line	64
 10291+                          ;nexa.h: 64: LATB2 = 0;
 10292+ 0016EA  948A               	bcf	c:(31826/8),(31826)&7	;volatile
 10293+                          	line	65
 10294+                          ;nexa.h: 65: waitTimer(10000);
 10295+ 0016EC  0E10               	movlw	low(02710h)
 10296+ 0016EE  0102               	movlb	2	; () banked
 10297+ 0016F0  0102               	movlb	2	; () banked
 10298+ 0016F2  6F56               	movwf	((?_waitTimer))&0ffh
 10299+ 0016F4  0E27               	movlw	high(02710h)
 10300+ 0016F6  0102               	movlb	2	; () banked
 10301+ 0016F8  6F57               	movwf	((?_waitTimer+1))&0ffh
 10302+ 0016FA  EC04  F028         	call	_waitTimer	;wreg free
 10303+                          	line	25
 10304+ 0016FE  0102               	movlb	2	; () banked
 10305+ 001700  0102               	movlb	2	; () banked
 10306+ 001702  2B48               	incf	((nexaTx@resend))&0ffh
 10307+                          	
 10308+ 001704                     l415:		; BSR set to: ?
 10309+                          
 10310+ 001704  0102               	movlb	2	; () banked
 10311+ 001706  0102               	movlb	2	; () banked
 10312+ 001708  513C               	movf	((nexaTx@resends))&0ffh,w
 10313+ 00170A  0102               	movlb	2	; () banked
 10314+ 00170C  0102               	movlb	2	; () banked
 10315+ 00170E  5D48               	subwf	((nexaTx@resend))&0ffh,w
 10316+ 001710  A0D8               	btfss	status,0
 10317+ 001712  EF8D  F00B         	goto	u7351
 10318+ 001716  EF8F  F00B         	goto	u7350
 10319+ 00171A                     u7351:
 10320+ 00171A  EF03  F00A         	goto	l412
 10321+ 00171E                     u7350:
 10322+                          	
 10323+ 00171E                     l413:		; BSR set to: ?
 10324+                          
 10325+                          	line	67
 10326+                          ;nexa.h: 66: }
 10327+                          ;nexa.h: 67: stopTransmit();
 10328+ 00171E  EC2B  F028         	call	_stopTransmit	;wreg free
 10329+                          	line	68
 10330+                          ;nexa.h: 68: }
 10331+ 001722                     l404:
 10332+                          			; BSR set to: ?
 10333+                          
 10334+ 001722  0012               	return
 10335+                          	opt stack 0
 10336+                          GLOBAL __end_of_nexaTx
 10337+ 001724                     	__end_of_nexaTx:
 10338+                          	FNSIZE	_nexaTx,19,3
 10339+                          ; =============== function _nexaTx ends ========
      +                          ====
 10340+                          
 10341+                          	signat	_nexaTx,8312
 10342+                          	global	_doroPrint
 10343+                          	global	??_doroPrint
 10344+                          	global	?_doroPrint
 10345+                          
 10346+                          ; *************** function _doroPrint **********
      +                          *******
 10347+                          ; Defined at:
 10348+                          ;		line 1 in file "D:\Hobby\Prosjekter\MultiTRX\
      +                          Firmware\FW1.2\doro.h"
 10349+                          ; Parameters:
 10350+                          ;		data           size:   2offs:   0	type: unsig
      +                          ned int 
 10351+                          ; Auto variables:
 10352+                          ;		number      	       	type: unsigned int 
 10353+                          ;		j           	       	type: unsigned char 
 10354+                          ; Return value:
 10355+                          ;		type: void 
 10356+                          ;		size: 0
 10357+                          ; Registers used:
 10358+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
 10359+                          ; Tracked objects:
 10360+                          ;		On entry : 0/0
 10361+                          ;		On exit  : 0/0
 10362+                          ;		Unchanged: 0/0
 10363+                          ; Data sizes:
 10364+                          ;		Autos:    3
 10365+                          ;		Params:   2
 10366+                          ;		Temp:     1
 10367+                          ;		Total:    6
 10368+                          ; This function calls:
 10369+                          ;		_sPuts
 10370+                          ;		_sPutonehex
 10371+                          ;		_sPut
 10372+                          ;		_blinkRxLed
 10373+                          ; This function is called by:
 10374+                          ;		_doroDecode
 10375+                          ; This function uses a non-reentrant model
 10376+                          ; 
 10377+                                  psect   text23,class=CODE,space=0,reloc=
      +                          2
 10378+                          
 10379+                          	opt lm
 10380+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\doro.h"
 10381+                          	line	1
 10382+ 000000                     	__size_of_doroPrint	equ	__end_of_doroPrint-_dor
      +                          oPrint
 10383+                          ;doro.h: 1: void doroPrint(unsigned int data){
 10384+                          	
 10385+ 0047A6                     _doroPrint:		; BSR set to: ?
 10386+                          
 10387+                          	opt stack 28
 10388+                          	line	2
 10389+ 0047A6  0EF0               	movlw	low(STR_6)
 10390+ 0047A8  0102               	movlb	2	; () banked
 10391+ 0047AA  0102               	movlb	2	; () banked
 10392+ 0047AC  6F5E               	movwf	((?_sPuts))&0ffh
 10393+ 0047AE  0E7F               	movlw	high(STR_6)
 10394+ 0047B0  0102               	movlb	2	; () banked
 10395+ 0047B2  6F5F               	movwf	((?_sPuts+1))&0ffh
 10396+ 0047B4  EC9E  F026         	call	_sPuts	;wreg free
 10397+                          	line	4
 10398+                          ;doro.h: 3: unsigned int number;
 10399+                          ;doro.h: 4: for (char j = 0; j < 3; j++){
 10400+ 0047B8  0102               	movlb	2	; () banked
 10401+ 0047BA  6F3C               	movwf	(??_doroPrint+3+0)&0ffh
 10402+ 0047BC  0E00               	movlw	low(0)
 10403+ 0047BE  0102               	movlb	2	; () banked
 10404+ 0047C0  0102               	movlb	2	; () banked
 10405+ 0047C2  6F3B               	movwf	((doroPrint@j))&0ffh
 10406+ 0047C4  0102               	movlb	2	; () banked
 10407+ 0047C6  513C               	movf	(??_doroPrint+3+0)&0ffh,w
 10408+ 0047C8  0E02               	movlw	(03h-1)
 10409+ 0047CA  0102               	movlb	2	; () banked
 10410+ 0047CC  0102               	movlb	2	; () banked
 10411+ 0047CE  653B               	cpfsgt	((doroPrint@j))&0ffh
 10412+ 0047D0  EFEC  F023         	goto	u7851
 10413+ 0047D4  EFEE  F023         	goto	u7850
 10414+ 0047D8                     u7851:
 10415+ 0047D8  EFF0  F023         	goto	l487
 10416+ 0047DC                     u7850:
 10417+ 0047DC  EF25  F024         	goto	l488
 10418+                          	
 10419+ 0047E0                     l487:		; BSR set to: ?
 10420+                          
 10421+                          	line	5
 10422+                          ;doro.h: 5: number = data & 0b0000111100000000;
 10423+ 0047E0  0E00               	movlw	0
 10424+ 0047E2  0102               	movlb	2	; () banked
 10425+ 0047E4  0102               	movlb	2	; () banked
 10426+ 0047E6  1537               	andwf	((doroPrint@data))&0ffh,w
 10427+ 0047E8  0102               	movlb	2	; () banked
 10428+                          	
 10429+ 0047EA  0102               	movlb	2	; () banked
 10430+ 0047EC  6F39               	movwf	((doroPrint@number))&0ffh
 10431+ 0047EE  0E0F               	movlw	0Fh
 10432+ 0047F0  0102               	movlb	2	; () banked
 10433+ 0047F2  0102               	movlb	2	; () banked
 10434+ 0047F4  1538               	andwf	((doroPrint@data+1))&0ffh,w
 10435+ 0047F6  0102               	movlb	2	; () banked
 10436+ 0047F8  6F3A               	movwf	1+((doroPrint@number))&0ffh
 10437+                          	line	6
 10438+                          ;doro.h: 6: data <<= 4;
 10439+ 0047FA  0102               	movlb	2	; () banked
 10440+ 0047FC  0102               	movlb	2	; () banked
 10441+ 0047FE  3B37               	swapf	((doroPrint@data))&0ffh
 10442+ 004800  0102               	movlb	2	; () banked
 10443+ 004802  3B38               	swapf	((doroPrint@data+1))&0ffh
 10444+ 004804  0EF0               	movlw	0f0h
 10445+ 004806  0102               	movlb	2	; () banked
 10446+ 004808  1738               	andwf	((doroPrint@data+1))&0ffh
 10447+ 00480A  0102               	movlb	2	; () banked
 10448+ 00480C  5137               	movf	((doroPrint@data))&0ffh,w
 10449+ 00480E  0B0F               	andlw	0fh
 10450+ 004810  0102               	movlb	2	; () banked
 10451+ 004812  1338               	iorwf	((doroPrint@data+1))&0ffh
 10452+ 004814  0EF0               	movlw	0f0h
 10453+ 004816  0102               	movlb	2	; () banked
 10454+ 004818  1737               	andwf	((doroPrint@data))&0ffh
 10455+                          	line	7
 10456+                          ;doro.h: 7: number >>= 8;
 10457+ 00481A  0102               	movlb	2	; () banked
 10458+ 00481C  0102               	movlb	2	; () banked
 10459+ 00481E  513A               	movf	((doroPrint@number+1))&0ffh,w
 10460+ 004820  0102               	movlb	2	; () banked
 10461+ 004822  6F39               	movwf	((doroPrint@number))&0ffh
 10462+ 004824  0102               	movlb	2	; () banked
 10463+ 004826  6B3A               	clrf	((doroPrint@number+1))&0ffh
 10464+                          	line	8
 10465+                          ;doro.h: 8: sPutonehex(number);
 10466+ 004828  C239  F24A         	movff	(doroPrint@number),(?_sPutonehex)
 10467+ 00482C  EC4C  F028         	call	_sPutonehex	;wreg free
 10468+                          	line	4
 10469+ 004830  0102               	movlb	2	; () banked
 10470+ 004832  0102               	movlb	2	; () banked
 10471+ 004834  2B3B               	incf	((doroPrint@j))&0ffh
 10472+ 004836  0E02               	movlw	(03h-1)
 10473+ 004838  0102               	movlb	2	; () banked
 10474+ 00483A  0102               	movlb	2	; () banked
 10475+ 00483C  653B               	cpfsgt	((doroPrint@j))&0ffh
 10476+ 00483E  EF23  F024         	goto	u7861
 10477+ 004842  EF25  F024         	goto	u7860
 10478+ 004846                     u7861:
 10479+ 004846  EFF0  F023         	goto	l487
 10480+ 00484A                     u7860:
 10481+                          	
 10482+ 00484A                     l488:		; BSR set to: ?
 10483+                          
 10484+                          	line	10
 10485+                          ;doro.h: 9: }
 10486+                          ;doro.h: 10: sPut(10);
 10487+ 00484A  0102               	movlb	2	; () banked
 10488+ 00484C  6F3C               	movwf	(??_doroPrint+3+0)&0ffh
 10489+ 00484E  0E0A               	movlw	low(0Ah)
 10490+ 004850  0102               	movlb	2	; () banked
 10491+ 004852  0102               	movlb	2	; () banked
 10492+ 004854  6F60               	movwf	((?_sPut))&0ffh
 10493+ 004856  0102               	movlb	2	; () banked
 10494+ 004858  513C               	movf	(??_doroPrint+3+0)&0ffh,w
 10495+ 00485A  ECDF  F025         	call	_sPut	;wreg free
 10496+                          	line	11
 10497+                          ;doro.h: 11: blinkRxLed();
 10498+ 00485E  EC0D  F029         	call	_blinkRxLed	;wreg free
 10499+                          	line	12
 10500+                          ;doro.h: 12: }
 10501+ 004862                     l486:
 10502+                          			; BSR set to: ?
 10503+                          
 10504+ 004862  0012               	return
 10505+                          	opt stack 0
 10506+                          GLOBAL __end_of_doroPrint
 10507+ 004864                     	__end_of_doroPrint:
 10508+                          	FNSIZE	_doroPrint,4,2
 10509+                          ; =============== function _doroPrint ends =====
      +                          =======
 10510+                          
 10511+                          	signat	_doroPrint,4216
 10512+                          	global	_esicPrint
 10513+                          	global	??_esicPrint
 10514+                          	global	?_esicPrint
 10515+                          
 10516+                          ; *************** function _esicPrint **********
      +                          *******
 10517+                          ; Defined at:
 10518+                          ;		line 1 in file "D:\Hobby\Prosjekter\MultiTRX\
      +                          Firmware\FW1.2\esic.h"
 10519+                          ; Parameters:
 10520+                          ;		data           size:   4offs:   0	type: unsig
      +                          ned long 
 10521+                          ; Auto variables:
 10522+                          ;		constantchec	       	type: unsigned char 
 10523+                          ;		packetcount 	       	type: unsigned char 
 10524+                          ;		channel     	       	type: unsigned char 
 10525+                          ;		house       	       	type: unsigned char 
 10526+                          ;		humidity    	       	type: unsigned char 
 10527+                          ;		lowbatt     	       	type: unsigned char 
 10528+                          ;		parity      	       	type: unsigned char 
 10529+                          ;		paritycalc  	       	type: unsigned char 
 10530+                          ;		temperature 	       	type: long 
 10531+                          ;		temp        	       	type: unsigned long 
 10532+                          ;		counter     	       	type: unsigned char 
 10533+                          ; Return value:
 10534+                          ;		type: void 
 10535+                          ;		size: 0
 10536+                          ; Registers used:
 10537+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
 10538+                          ; Tracked objects:
 10539+                          ;		On entry : 0/0
 10540+                          ;		On exit  : 0/0
 10541+                          ;		Unchanged: 0/0
 10542+                          ; Data sizes:
 10543+                          ;		Autos:   17
 10544+                          ;		Params:   4
 10545+                          ;		Temp:     4
 10546+                          ;		Total:   25
 10547+                          ; This function calls:
 10548+                          ;		___lmul
 10549+                          ;		___aldiv
 10550+                          ;		_sPuts
 10551+                          ;		_sPutint
 10552+                          ;		_sPut
 10553+                          ;		___aslmul
 10554+                          ;		___almod
 10555+                          ;		___awdiv
 10556+                          ;		_blinkRxLed
 10557+                          ; This function is called by:
 10558+                          ;		_esicDecode
 10559+                          ; This function uses a non-reentrant model
 10560+                          ; 
 10561+                                  psect   text24,class=CODE,space=0,reloc=
      +                          2
 10562+                          
 10563+                          	opt lm
 10564+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\esic.h"
 10565+                          	line	1
 10566+ 000000                     	__size_of_esicPrint	equ	__end_of_esicPrint-_esi
      +                          cPrint
 10567+                          ;esic.h: 1: void esicPrint(unsigned long data){
 10568+                          	
 10569+ 000BBA                     _esicPrint:		; BSR set to: ?
 10570+                          
 10571+                          	opt stack 28
 10572+                          	line	5
 10573+ 000BBA  0102               	movlb	2	; () banked
 10574+ 000BBC  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 10575+ 000BBE  0E00               	movlw	low(0)
 10576+ 000BC0  0102               	movlb	2	; () banked
 10577+ 000BC2  0102               	movlb	2	; () banked
 10578+ 000BC4  6F3A               	movwf	((esicPrint@constantcheck))&0ffh
 10579+ 000BC6  0102               	movlb	2	; () banked
 10580+ 000BC8  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 10581+                          	line	11
 10582+                          ;esic.h: 6: char humidity;
 10583+                          ;esic.h: 7: signed long temperature;
 10584+                          ;esic.h: 8: char lowbatt;
 10585+                          ;esic.h: 9: char packetcount;
 10586+                          ;esic.h: 10: char parity;
 10587+                          ;esic.h: 11: char paritycalc = 0;
 10588+ 000BCA  0102               	movlb	2	; () banked
 10589+ 000BCC  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 10590+ 000BCE  0E00               	movlw	low(0)
 10591+ 000BD0  0102               	movlb	2	; () banked
 10592+ 000BD2  0102               	movlb	2	; () banked
 10593+ 000BD4  6F41               	movwf	((esicPrint@paritycalc))&0ffh
 10594+ 000BD6  0102               	movlb	2	; () banked
 10595+ 000BD8  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 10596+                          	line	13
 10597+                          ;esic.h: 13: parity = data & 0b11;
 10598+ 000BDA  0102               	movlb	2	; () banked
 10599+ 000BDC  0102               	movlb	2	; () banked
 10600+ 000BDE  5136               	movf	((esicPrint@data))&0ffh,w
 10601+ 000BE0  0B03               	andlw	low(03h)
 10602+ 000BE2  0102               	movlb	2	; () banked
 10603+ 000BE4  0102               	movlb	2	; () banked
 10604+ 000BE6  6F40               	movwf	((esicPrint@parity))&0ffh
 10605+                          	line	15
 10606+                          ;esic.h: 15: temp = data;
 10607+ 000BE8  C236  F246         	movff	(esicPrint@data),(esicPrint@temp)
 10608+ 000BEC  C237  F247         	movff	(esicPrint@data+1),(esicPrint@temp+1)
 10609+ 000BF0  C238  F248         	movff	(esicPrint@data+2),(esicPrint@temp+2)
 10610+ 000BF4  C239  F249         	movff	(esicPrint@data+3),(esicPrint@temp+3)
 10611+                          	line	16
 10612+                          ;esic.h: 16: for (char counter = 0; counter < 15
      +                          ; counter++){
 10613+ 000BF8  0102               	movlb	2	; () banked
 10614+ 000BFA  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 10615+ 000BFC  0E00               	movlw	low(0)
 10616+ 000BFE  0102               	movlb	2	; () banked
 10617+ 000C00  0102               	movlb	2	; () banked
 10618+ 000C02  6F4A               	movwf	((esicPrint@counter))&0ffh
 10619+ 000C04  0102               	movlb	2	; () banked
 10620+ 000C06  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 10621+ 000C08  0E0E               	movlw	(0Fh-1)
 10622+ 000C0A  0102               	movlb	2	; () banked
 10623+ 000C0C  0102               	movlb	2	; () banked
 10624+ 000C0E  654A               	cpfsgt	((esicPrint@counter))&0ffh
 10625+ 000C10  EF0C  F006         	goto	u6431
 10626+ 000C14  EF0E  F006         	goto	u6430
 10627+ 000C18                     u6431:
 10628+ 000C18  EF10  F006         	goto	l463
 10629+ 000C1C                     u6430:
 10630+ 000C1C  EF50  F006         	goto	l464
 10631+                          	
 10632+ 000C20                     l463:		; BSR set to: ?
 10633+                          
 10634+                          	line	17
 10635+                          ;esic.h: 17: temp = data & 0b11;
 10636+ 000C20  0E03               	movlw	03h
 10637+ 000C22  0102               	movlb	2	; () banked
 10638+ 000C24  0102               	movlb	2	; () banked
 10639+ 000C26  1536               	andwf	((esicPrint@data))&0ffh,w
 10640+ 000C28  0102               	movlb	2	; () banked
 10641+ 000C2A  0102               	movlb	2	; () banked
 10642+ 000C2C  6F46               	movwf	((esicPrint@temp))&0ffh
 10643+ 000C2E  0E00               	movlw	0
 10644+ 000C30  0102               	movlb	2	; () banked
 10645+ 000C32  0102               	movlb	2	; () banked
 10646+ 000C34  1537               	andwf	((esicPrint@data+1))&0ffh,w
 10647+ 000C36  0102               	movlb	2	; () banked
 10648+ 000C38  6F47               	movwf	1+((esicPrint@temp))&0ffh
 10649+ 000C3A  0E00               	movlw	0
 10650+ 000C3C  0102               	movlb	2	; () banked
 10651+ 000C3E  0102               	movlb	2	; () banked
 10652+ 000C40  1538               	andwf	((esicPrint@data+2))&0ffh,w
 10653+ 000C42  0102               	movlb	2	; () banked
 10654+ 000C44  6F48               	movwf	2+((esicPrint@temp))&0ffh
 10655+ 000C46  0E00               	movlw	0
 10656+ 000C48  0102               	movlb	2	; () banked
 10657+ 000C4A  0102               	movlb	2	; () banked
 10658+ 000C4C  1539               	andwf	((esicPrint@data+3))&0ffh,w
 10659+ 000C4E  0102               	movlb	2	; () banked
 10660+ 000C50  6F49               	movwf	3+((esicPrint@temp))&0ffh
 10661+                          	line	18
 10662+                          ;esic.h: 18: paritycalc = paritycalc ^ temp;
 10663+ 000C52  0102               	movlb	2	; () banked
 10664+ 000C54  0102               	movlb	2	; () banked
 10665+ 000C56  5141               	movf	((esicPrint@paritycalc))&0ffh,w
 10666+ 000C58  0102               	movlb	2	; () banked
 10667+ 000C5A  0102               	movlb	2	; () banked
 10668+ 000C5C  1946               	xorwf	((esicPrint@temp))&0ffh,w
 10669+ 000C5E  0102               	movlb	2	; () banked
 10670+ 000C60  0102               	movlb	2	; () banked
 10671+ 000C62  6F41               	movwf	((esicPrint@paritycalc))&0ffh
 10672+                          	line	19
 10673+                          ;esic.h: 19: temp >>= 2;
 10674+ 000C64  0E02               	movlw	02h
 10675+ 000C66  0102               	movlb	2	; () banked
 10676+ 000C68  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 10677+ 000C6A                     u6445:
 10678+ 000C6A  90D8               	bcf	status,0
 10679+ 000C6C  0102               	movlb	2	; () banked
 10680+ 000C6E  0102               	movlb	2	; () banked
 10681+ 000C70  3349               	rrcf	((esicPrint@temp+3))&0ffh
 10682+ 000C72  0102               	movlb	2	; () banked
 10683+ 000C74  3348               	rrcf	((esicPrint@temp+2))&0ffh
 10684+ 000C76  0102               	movlb	2	; () banked
 10685+ 000C78  3347               	rrcf	((esicPrint@temp+1))&0ffh
 10686+ 000C7A  0102               	movlb	2	; () banked
 10687+ 000C7C  3346               	rrcf	((esicPrint@temp))&0ffh
 10688+ 000C7E  0102               	movlb	2	; () banked
 10689+ 000C80  2F4B               	decfsz	(??_esicPrint+17+0)&0ffh
 10690+ 000C82  EF35  F006         	goto	u6445
 10691+                          
 10692+                          	line	16
 10693+ 000C86  0102               	movlb	2	; () banked
 10694+ 000C88  0102               	movlb	2	; () banked
 10695+ 000C8A  2B4A               	incf	((esicPrint@counter))&0ffh
 10696+ 000C8C  0E0E               	movlw	(0Fh-1)
 10697+ 000C8E  0102               	movlb	2	; () banked
 10698+ 000C90  0102               	movlb	2	; () banked
 10699+ 000C92  654A               	cpfsgt	((esicPrint@counter))&0ffh
 10700+ 000C94  EF4E  F006         	goto	u6451
 10701+ 000C98  EF50  F006         	goto	u6450
 10702+ 000C9C                     u6451:
 10703+ 000C9C  EF10  F006         	goto	l463
 10704+ 000CA0                     u6450:
 10705+                          	
 10706+ 000CA0                     l464:		; BSR set to: ?
 10707+                          
 10708+                          	line	22
 10709+                          ;esic.h: 20: }
 10710+                          ;esic.h: 22: temp = data & 0b0000001100000000000
      +                          0000000000000;
 10711+ 000CA0  0E00               	movlw	0
 10712+ 000CA2  0102               	movlb	2	; () banked
 10713+ 000CA4  0102               	movlb	2	; () banked
 10714+ 000CA6  1536               	andwf	((esicPrint@data))&0ffh,w
 10715+ 000CA8  0102               	movlb	2	; () banked
 10716+ 000CAA  0102               	movlb	2	; () banked
 10717+ 000CAC  6F46               	movwf	((esicPrint@temp))&0ffh
 10718+ 000CAE  0E00               	movlw	0
 10719+ 000CB0  0102               	movlb	2	; () banked
 10720+ 000CB2  0102               	movlb	2	; () banked
 10721+ 000CB4  1537               	andwf	((esicPrint@data+1))&0ffh,w
 10722+ 000CB6  0102               	movlb	2	; () banked
 10723+ 000CB8  6F47               	movwf	1+((esicPrint@temp))&0ffh
 10724+ 000CBA  0E00               	movlw	0
 10725+ 000CBC  0102               	movlb	2	; () banked
 10726+ 000CBE  0102               	movlb	2	; () banked
 10727+ 000CC0  1538               	andwf	((esicPrint@data+2))&0ffh,w
 10728+ 000CC2  0102               	movlb	2	; () banked
 10729+ 000CC4  6F48               	movwf	2+((esicPrint@temp))&0ffh
 10730+ 000CC6  0E03               	movlw	03h
 10731+ 000CC8  0102               	movlb	2	; () banked
 10732+ 000CCA  0102               	movlb	2	; () banked
 10733+ 000CCC  1539               	andwf	((esicPrint@data+3))&0ffh,w
 10734+ 000CCE  0102               	movlb	2	; () banked
 10735+ 000CD0  6F49               	movwf	3+((esicPrint@temp))&0ffh
 10736+                          	line	23
 10737+                          ;esic.h: 23: temp >>= 24;
 10738+ 000CD2  0E18               	movlw	018h
 10739+ 000CD4  0102               	movlb	2	; () banked
 10740+ 000CD6  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 10741+ 000CD8                     u6465:
 10742+ 000CD8  90D8               	bcf	status,0
 10743+ 000CDA  0102               	movlb	2	; () banked
 10744+ 000CDC  0102               	movlb	2	; () banked
 10745+ 000CDE  3349               	rrcf	((esicPrint@temp+3))&0ffh
 10746+ 000CE0  0102               	movlb	2	; () banked
 10747+ 000CE2  3348               	rrcf	((esicPrint@temp+2))&0ffh
 10748+ 000CE4  0102               	movlb	2	; () banked
 10749+ 000CE6  3347               	rrcf	((esicPrint@temp+1))&0ffh
 10750+ 000CE8  0102               	movlb	2	; () banked
 10751+ 000CEA  3346               	rrcf	((esicPrint@temp))&0ffh
 10752+ 000CEC  0102               	movlb	2	; () banked
 10753+ 000CEE  2F4B               	decfsz	(??_esicPrint+17+0)&0ffh
 10754+ 000CF0  EF6C  F006         	goto	u6465
 10755+                          
 10756+                          	line	25
 10757+                          ;esic.h: 25: if ((temp == 0b11)&&(paritycalc == 
      +                          parity)){
 10758+ 000CF4  0102               	movlb	2	; () banked
 10759+ 000CF6  5146               	movf	((esicPrint@temp))&0ffh,w
 10760+ 000CF8  0A03               	xorlw	3
 10761+ 000CFA  1147               	iorwf ((esicPrint@temp+1))&0ffh,w
 10762+ 000CFC  1148               	iorwf ((esicPrint@temp+2))&0ffh,w
 10763+ 000CFE  1149               	iorwf ((esicPrint@temp+3))&0ffh,w
 10764+                          
 10765+ 000D00  A4D8               	btfss	status,2
 10766+ 000D02  EF85  F006         	goto	u6471
 10767+ 000D06  EF87  F006         	goto	u6470
 10768+ 000D0A                     u6471:
 10769+ 000D0A  EFD8  F008         	goto	l466
 10770+ 000D0E                     u6470:
 10771+ 000D0E  0102               	movlb	2	; () banked
 10772+ 000D10  0102               	movlb	2	; () banked
 10773+ 000D12  5140               	movf	((esicPrint@parity))&0ffh,w
 10774+ 000D14  0102               	movlb	2	; () banked
 10775+ 000D16  0102               	movlb	2	; () banked
 10776+ 000D18  6341               	cpfseq	((esicPrint@paritycalc))&0ffh
 10777+ 000D1A  EF91  F006         	goto	u6481
 10778+ 000D1E  EF93  F006         	goto	u6480
 10779+ 000D22                     u6481:
 10780+ 000D22  EFD8  F008         	goto	l466
 10781+ 000D26                     u6480:
 10782+                          	line	26
 10783+                          ;esic.h: 26: temp = data & 0b1111000000000000000
      +                          0000000000000;
 10784+ 000D26  0E00               	movlw	0
 10785+ 000D28  0102               	movlb	2	; () banked
 10786+ 000D2A  0102               	movlb	2	; () banked
 10787+ 000D2C  1536               	andwf	((esicPrint@data))&0ffh,w
 10788+ 000D2E  0102               	movlb	2	; () banked
 10789+ 000D30  0102               	movlb	2	; () banked
 10790+ 000D32  6F46               	movwf	((esicPrint@temp))&0ffh
 10791+ 000D34  0E00               	movlw	0
 10792+ 000D36  0102               	movlb	2	; () banked
 10793+ 000D38  0102               	movlb	2	; () banked
 10794+ 000D3A  1537               	andwf	((esicPrint@data+1))&0ffh,w
 10795+ 000D3C  0102               	movlb	2	; () banked
 10796+ 000D3E  6F47               	movwf	1+((esicPrint@temp))&0ffh
 10797+ 000D40  0E00               	movlw	0
 10798+ 000D42  0102               	movlb	2	; () banked
 10799+ 000D44  0102               	movlb	2	; () banked
 10800+ 000D46  1538               	andwf	((esicPrint@data+2))&0ffh,w
 10801+ 000D48  0102               	movlb	2	; () banked
 10802+ 000D4A  6F48               	movwf	2+((esicPrint@temp))&0ffh
 10803+ 000D4C  0EF0               	movlw	0F0h
 10804+ 000D4E  0102               	movlb	2	; () banked
 10805+ 000D50  0102               	movlb	2	; () banked
 10806+ 000D52  1539               	andwf	((esicPrint@data+3))&0ffh,w
 10807+ 000D54  0102               	movlb	2	; () banked
 10808+ 000D56  6F49               	movwf	3+((esicPrint@temp))&0ffh
 10809+                          	line	27
 10810+                          ;esic.h: 27: house = temp >> 28;
 10811+ 000D58  0102               	movlb	2	; () banked
 10812+ 000D5A  C246  F24B         	movff	(esicPrint@temp),??_esicPrint+17+0
 10813+ 000D5E  0102               	movlb	2	; () banked
 10814+ 000D60  C247  F24C         	movff	(esicPrint@temp+1),??_esicPrint+17+0+1
 10815+ 000D64  0102               	movlb	2	; () banked
 10816+ 000D66  C248  F24D         	movff	(esicPrint@temp+2),??_esicPrint+17+0+2
 10817+ 000D6A  0102               	movlb	2	; () banked
 10818+ 000D6C  C249  F24E         	movff	(esicPrint@temp+3),??_esicPrint+17+0+3
 10819+ 000D70  0E1D               	movlw	01Ch+1
 10820+ 000D72  EFC1  F006         	goto	u6490
 10821+ 000D76                     u6495:
 10822+ 000D76  90D8               	bcf	status,0
 10823+ 000D78  0102               	movlb	2	; () banked
 10824+ 000D7A  334E               	rrcf	(??_esicPrint+17+3)&0ffh
 10825+ 000D7C  334D               	rrcf	(??_esicPrint+17+2)&0ffh
 10826+ 000D7E  334C               	rrcf	(??_esicPrint+17+1)&0ffh
 10827+ 000D80  334B               	rrcf	(??_esicPrint+17+0)&0ffh
 10828+ 000D82                     u6490:
 10829+ 000D82  2EE8               	decfsz	wreg
 10830+ 000D84  EFBB  F006         	goto	u6495
 10831+ 000D88  0102               	movlb	2	; () banked
 10832+ 000D8A  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 10833+ 000D8C  0102               	movlb	2	; () banked
 10834+ 000D8E  0102               	movlb	2	; () banked
 10835+ 000D90  6F3D               	movwf	((esicPrint@house))&0ffh
 10836+                          	line	29
 10837+                          ;esic.h: 29: temp = data & 0b0000110000000000000
      +                          0000000000000;
 10838+ 000D92  0E00               	movlw	0
 10839+ 000D94  0102               	movlb	2	; () banked
 10840+ 000D96  0102               	movlb	2	; () banked
 10841+ 000D98  1536               	andwf	((esicPrint@data))&0ffh,w
 10842+ 000D9A  0102               	movlb	2	; () banked
 10843+ 000D9C  0102               	movlb	2	; () banked
 10844+ 000D9E  6F46               	movwf	((esicPrint@temp))&0ffh
 10845+ 000DA0  0E00               	movlw	0
 10846+ 000DA2  0102               	movlb	2	; () banked
 10847+ 000DA4  0102               	movlb	2	; () banked
 10848+ 000DA6  1537               	andwf	((esicPrint@data+1))&0ffh,w
 10849+ 000DA8  0102               	movlb	2	; () banked
 10850+ 000DAA  6F47               	movwf	1+((esicPrint@temp))&0ffh
 10851+ 000DAC  0E00               	movlw	0
 10852+ 000DAE  0102               	movlb	2	; () banked
 10853+ 000DB0  0102               	movlb	2	; () banked
 10854+ 000DB2  1538               	andwf	((esicPrint@data+2))&0ffh,w
 10855+ 000DB4  0102               	movlb	2	; () banked
 10856+ 000DB6  6F48               	movwf	2+((esicPrint@temp))&0ffh
 10857+ 000DB8  0E0C               	movlw	0Ch
 10858+ 000DBA  0102               	movlb	2	; () banked
 10859+ 000DBC  0102               	movlb	2	; () banked
 10860+ 000DBE  1539               	andwf	((esicPrint@data+3))&0ffh,w
 10861+ 000DC0  0102               	movlb	2	; () banked
 10862+ 000DC2  6F49               	movwf	3+((esicPrint@temp))&0ffh
 10863+                          	line	30
 10864+                          ;esic.h: 30: temp >>= 26;
 10865+ 000DC4  0E1A               	movlw	01Ah
 10866+ 000DC6  0102               	movlb	2	; () banked
 10867+ 000DC8  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 10868+ 000DCA                     u6505:
 10869+ 000DCA  90D8               	bcf	status,0
 10870+ 000DCC  0102               	movlb	2	; () banked
 10871+ 000DCE  0102               	movlb	2	; () banked
 10872+ 000DD0  3349               	rrcf	((esicPrint@temp+3))&0ffh
 10873+ 000DD2  0102               	movlb	2	; () banked
 10874+ 000DD4  3348               	rrcf	((esicPrint@temp+2))&0ffh
 10875+ 000DD6  0102               	movlb	2	; () banked
 10876+ 000DD8  3347               	rrcf	((esicPrint@temp+1))&0ffh
 10877+ 000DDA  0102               	movlb	2	; () banked
 10878+ 000DDC  3346               	rrcf	((esicPrint@temp))&0ffh
 10879+ 000DDE  0102               	movlb	2	; () banked
 10880+ 000DE0  2F4B               	decfsz	(??_esicPrint+17+0)&0ffh
 10881+ 000DE2  EFE5  F006         	goto	u6505
 10882+                          
 10883+                          	line	31
 10884+                          ;esic.h: 31: channel = temp + 1;
 10885+ 000DE6  0102               	movlb	2	; () banked
 10886+ 000DE8  0102               	movlb	2	; () banked
 10887+ 000DEA  2946               	incf	((esicPrint@temp))&0ffh,w
 10888+ 000DEC  0102               	movlb	2	; () banked
 10889+ 000DEE  0102               	movlb	2	; () banked
 10890+ 000DF0  6F3C               	movwf	((esicPrint@channel))&0ffh
 10891+                          	line	33
 10892+                          ;esic.h: 33: temp = data & 0b0000000010000000000
      +                          0000000000000;
 10893+ 000DF2  0E00               	movlw	0
 10894+ 000DF4  0102               	movlb	2	; () banked
 10895+ 000DF6  0102               	movlb	2	; () banked
 10896+ 000DF8  1536               	andwf	((esicPrint@data))&0ffh,w
 10897+ 000DFA  0102               	movlb	2	; () banked
 10898+ 000DFC  0102               	movlb	2	; () banked
 10899+ 000DFE  6F46               	movwf	((esicPrint@temp))&0ffh
 10900+ 000E00  0E00               	movlw	0
 10901+ 000E02  0102               	movlb	2	; () banked
 10902+ 000E04  0102               	movlb	2	; () banked
 10903+ 000E06  1537               	andwf	((esicPrint@data+1))&0ffh,w
 10904+ 000E08  0102               	movlb	2	; () banked
 10905+ 000E0A  6F47               	movwf	1+((esicPrint@temp))&0ffh
 10906+ 000E0C  0E80               	movlw	080h
 10907+ 000E0E  0102               	movlb	2	; () banked
 10908+ 000E10  0102               	movlb	2	; () banked
 10909+ 000E12  1538               	andwf	((esicPrint@data+2))&0ffh,w
 10910+ 000E14  0102               	movlb	2	; () banked
 10911+ 000E16  6F48               	movwf	2+((esicPrint@temp))&0ffh
 10912+ 000E18  0E00               	movlw	0
 10913+ 000E1A  0102               	movlb	2	; () banked
 10914+ 000E1C  0102               	movlb	2	; () banked
 10915+ 000E1E  1539               	andwf	((esicPrint@data+3))&0ffh,w
 10916+ 000E20  0102               	movlb	2	; () banked
 10917+ 000E22  6F49               	movwf	3+((esicPrint@temp))&0ffh
 10918+                          	line	34
 10919+                          ;esic.h: 34: lowbatt = temp >> 23;
 10920+ 000E24  0102               	movlb	2	; () banked
 10921+ 000E26  3548               	rlcf	((esicPrint@temp+2))&0ffh,w
 10922+ 000E28  0102               	movlb	2	; () banked
 10923+ 000E2A  3549               	rlcf	((esicPrint@temp+3))&0ffh,w
 10924+ 000E2C  0102               	movlb	2	; () banked
 10925+ 000E2E  0102               	movlb	2	; () banked
 10926+ 000E30  6F3F               	movwf	((esicPrint@lowbatt))&0ffh
 10927+                          	line	36
 10928+                          ;esic.h: 36: temp = data & 0b0000000001111111100
      +                          0000000000000;
 10929+ 000E32  0E00               	movlw	0
 10930+ 000E34  0102               	movlb	2	; () banked
 10931+ 000E36  0102               	movlb	2	; () banked
 10932+ 000E38  1536               	andwf	((esicPrint@data))&0ffh,w
 10933+ 000E3A  0102               	movlb	2	; () banked
 10934+ 000E3C  0102               	movlb	2	; () banked
 10935+ 000E3E  6F46               	movwf	((esicPrint@temp))&0ffh
 10936+ 000E40  0E80               	movlw	080h
 10937+ 000E42  0102               	movlb	2	; () banked
 10938+ 000E44  0102               	movlb	2	; () banked
 10939+ 000E46  1537               	andwf	((esicPrint@data+1))&0ffh,w
 10940+ 000E48  0102               	movlb	2	; () banked
 10941+ 000E4A  6F47               	movwf	1+((esicPrint@temp))&0ffh
 10942+ 000E4C  0E7F               	movlw	07Fh
 10943+ 000E4E  0102               	movlb	2	; () banked
 10944+ 000E50  0102               	movlb	2	; () banked
 10945+ 000E52  1538               	andwf	((esicPrint@data+2))&0ffh,w
 10946+ 000E54  0102               	movlb	2	; () banked
 10947+ 000E56  6F48               	movwf	2+((esicPrint@temp))&0ffh
 10948+ 000E58  0E00               	movlw	0
 10949+ 000E5A  0102               	movlb	2	; () banked
 10950+ 000E5C  0102               	movlb	2	; () banked
 10951+ 000E5E  1539               	andwf	((esicPrint@data+3))&0ffh,w
 10952+ 000E60  0102               	movlb	2	; () banked
 10953+ 000E62  6F49               	movwf	3+((esicPrint@temp))&0ffh
 10954+                          	line	37
 10955+                          ;esic.h: 37: humidity = temp >> 15;
 10956+ 000E64  0102               	movlb	2	; () banked
 10957+ 000E66  C246  F24B         	movff	(esicPrint@temp),??_esicPrint+17+0
 10958+ 000E6A  0102               	movlb	2	; () banked
 10959+ 000E6C  C247  F24C         	movff	(esicPrint@temp+1),??_esicPrint+17+0+1
 10960+ 000E70  0102               	movlb	2	; () banked
 10961+ 000E72  C248  F24D         	movff	(esicPrint@temp+2),??_esicPrint+17+0+2
 10962+ 000E76  0102               	movlb	2	; () banked
 10963+ 000E78  C249  F24E         	movff	(esicPrint@temp+3),??_esicPrint+17+0+3
 10964+ 000E7C  0E10               	movlw	0Fh+1
 10965+ 000E7E  EF47  F007         	goto	u6510
 10966+ 000E82                     u6515:
 10967+ 000E82  90D8               	bcf	status,0
 10968+ 000E84  0102               	movlb	2	; () banked
 10969+ 000E86  334E               	rrcf	(??_esicPrint+17+3)&0ffh
 10970+ 000E88  334D               	rrcf	(??_esicPrint+17+2)&0ffh
 10971+ 000E8A  334C               	rrcf	(??_esicPrint+17+1)&0ffh
 10972+ 000E8C  334B               	rrcf	(??_esicPrint+17+0)&0ffh
 10973+ 000E8E                     u6510:
 10974+ 000E8E  2EE8               	decfsz	wreg
 10975+ 000E90  EF41  F007         	goto	u6515
 10976+ 000E94  0102               	movlb	2	; () banked
 10977+ 000E96  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 10978+ 000E98  0102               	movlb	2	; () banked
 10979+ 000E9A  0102               	movlb	2	; () banked
 10980+ 000E9C  6F3E               	movwf	((esicPrint@humidity))&0ffh
 10981+                          	line	39
 10982+                          ;esic.h: 39: temp = data & 0b0000000000000000011
      +                          1111111110000;
 10983+ 000E9E  0EF0               	movlw	0F0h
 10984+ 000EA0  0102               	movlb	2	; () banked
 10985+ 000EA2  0102               	movlb	2	; () banked
 10986+ 000EA4  1536               	andwf	((esicPrint@data))&0ffh,w
 10987+ 000EA6  0102               	movlb	2	; () banked
 10988+ 000EA8  0102               	movlb	2	; () banked
 10989+ 000EAA  6F46               	movwf	((esicPrint@temp))&0ffh
 10990+ 000EAC  0E7F               	movlw	07Fh
 10991+ 000EAE  0102               	movlb	2	; () banked
 10992+ 000EB0  0102               	movlb	2	; () banked
 10993+ 000EB2  1537               	andwf	((esicPrint@data+1))&0ffh,w
 10994+ 000EB4  0102               	movlb	2	; () banked
 10995+ 000EB6  6F47               	movwf	1+((esicPrint@temp))&0ffh
 10996+ 000EB8  0E00               	movlw	0
 10997+ 000EBA  0102               	movlb	2	; () banked
 10998+ 000EBC  0102               	movlb	2	; () banked
 10999+ 000EBE  1538               	andwf	((esicPrint@data+2))&0ffh,w
 11000+ 000EC0  0102               	movlb	2	; () banked
 11001+ 000EC2  6F48               	movwf	2+((esicPrint@temp))&0ffh
 11002+ 000EC4  0E00               	movlw	0
 11003+ 000EC6  0102               	movlb	2	; () banked
 11004+ 000EC8  0102               	movlb	2	; () banked
 11005+ 000ECA  1539               	andwf	((esicPrint@data+3))&0ffh,w
 11006+ 000ECC  0102               	movlb	2	; () banked
 11007+ 000ECE  6F49               	movwf	3+((esicPrint@temp))&0ffh
 11008+                          	line	40
 11009+                          ;esic.h: 40: temperature = temp >> 4;
 11010+ 000ED0  0102               	movlb	2	; () banked
 11011+ 000ED2  C246  F24B         	movff	(esicPrint@temp),??_esicPrint+17+0
 11012+ 000ED6  0102               	movlb	2	; () banked
 11013+ 000ED8  C247  F24C         	movff	(esicPrint@temp+1),??_esicPrint+17+0+1
 11014+ 000EDC  0102               	movlb	2	; () banked
 11015+ 000EDE  C248  F24D         	movff	(esicPrint@temp+2),??_esicPrint+17+0+2
 11016+ 000EE2  0102               	movlb	2	; () banked
 11017+ 000EE4  C249  F24E         	movff	(esicPrint@temp+3),??_esicPrint+17+0+3
 11018+ 000EE8  0E05               	movlw	04h+1
 11019+ 000EEA  EF7D  F007         	goto	u6520
 11020+ 000EEE                     u6525:
 11021+ 000EEE  90D8               	bcf	status,0
 11022+ 000EF0  0102               	movlb	2	; () banked
 11023+ 000EF2  334E               	rrcf	(??_esicPrint+17+3)&0ffh
 11024+ 000EF4  334D               	rrcf	(??_esicPrint+17+2)&0ffh
 11025+ 000EF6  334C               	rrcf	(??_esicPrint+17+1)&0ffh
 11026+ 000EF8  334B               	rrcf	(??_esicPrint+17+0)&0ffh
 11027+ 000EFA                     u6520:
 11028+ 000EFA  2EE8               	decfsz	wreg
 11029+ 000EFC  EF77  F007         	goto	u6525
 11030+ 000F00  C24B  F242         	movff	??_esicPrint+17+0,(esicPrint@temperature)
 11031+ 000F04  C24C  F243         	movff	??_esicPrint+17+1,(esicPrint@temperature+
      +                          1)
 11032+ 000F08  C24D  F244         	movff	??_esicPrint+17+2,(esicPrint@temperature+
      +                          2)
 11033+ 000F0C  C24E  F245         	movff	??_esicPrint+17+3,(esicPrint@temperature+
      +                          3)
 11034+                          	line	41
 11035+                          ;esic.h: 41: temperature = ((temperature-800)*10
      +                          ) / 16;
 11036+ 000F10  0E0A               	movlw	low(0Ah)
 11037+ 000F12  0102               	movlb	2	; () banked
 11038+ 000F14  0102               	movlb	2	; () banked
 11039+ 000F16  6F59               	movwf	(0+(?___lmul+04h))&0ffh
 11040+ 000F18  0E00               	movlw	high(0Ah)
 11041+ 000F1A  0102               	movlb	2	; () banked
 11042+ 000F1C  6F5A               	movwf	(1+(?___lmul+04h))&0ffh
 11043+ 000F1E  0E00               	movlw	low highword(0Ah)
 11044+ 000F20  0102               	movlb	2	; () banked
 11045+ 000F22  6F5B               	movwf	(2+(?___lmul+04h))&0ffh
 11046+ 000F24  0E00               	movlw	high highword(0Ah)
 11047+ 000F26  0102               	movlb	2	; () banked
 11048+ 000F28  6F5C               	movwf	(3+(?___lmul+04h))&0ffh
 11049+ 000F2A  0EE0               	movlw	0E0h
 11050+ 000F2C  0102               	movlb	2	; () banked
 11051+ 000F2E  0102               	movlb	2	; () banked
 11052+ 000F30  2542               	addwf	((esicPrint@temperature))&0ffh,w
 11053+ 000F32  0102               	movlb	2	; () banked
 11054+ 000F34  0102               	movlb	2	; () banked
 11055+ 000F36  6F55               	movwf	((?___lmul))&0ffh
 11056+ 000F38  0EFC               	movlw	0FCh
 11057+ 000F3A  0102               	movlb	2	; () banked
 11058+ 000F3C  0102               	movlb	2	; () banked
 11059+ 000F3E  2143               	addwfc	((esicPrint@temperature+1))&0ffh,w
 11060+ 000F40  0102               	movlb	2	; () banked
 11061+ 000F42  6F56               	movwf	1+((?___lmul))&0ffh
 11062+ 000F44  0EFF               	movlw	0FFh
 11063+ 000F46  0102               	movlb	2	; () banked
 11064+ 000F48  0102               	movlb	2	; () banked
 11065+ 000F4A  2144               	addwfc	((esicPrint@temperature+2))&0ffh,w
 11066+ 000F4C  0102               	movlb	2	; () banked
 11067+ 000F4E  6F57               	movwf	2+((?___lmul))&0ffh
 11068+ 000F50  0EFF               	movlw	0FFh
 11069+ 000F52  0102               	movlb	2	; () banked
 11070+ 000F54  0102               	movlb	2	; () banked
 11071+ 000F56  2145               	addwfc	((esicPrint@temperature+3))&0ffh,w
 11072+ 000F58  0102               	movlb	2	; () banked
 11073+ 000F5A  6F58               	movwf	3+((?___lmul))&0ffh
 11074+ 000F5C  EC32  F024         	call	___lmul	;wreg free
 11075+ 000F60  C255  F24F         	movff	0+?___lmul,(?___aldiv)
 11076+ 000F64  C256  F250         	movff	1+?___lmul,(?___aldiv+1)
 11077+ 000F68  C257  F251         	movff	2+?___lmul,(?___aldiv+2)
 11078+ 000F6C  C258  F252         	movff	3+?___lmul,(?___aldiv+3)
 11079+ 000F70  0E10               	movlw	low(010h)
 11080+ 000F72  0102               	movlb	2	; () banked
 11081+ 000F74  0102               	movlb	2	; () banked
 11082+ 000F76  6F53               	movwf	(0+(?___aldiv+04h))&0ffh
 11083+ 000F78  0E00               	movlw	high(010h)
 11084+ 000F7A  0102               	movlb	2	; () banked
 11085+ 000F7C  6F54               	movwf	(1+(?___aldiv+04h))&0ffh
 11086+ 000F7E  0E00               	movlw	low highword(010h)
 11087+ 000F80  0102               	movlb	2	; () banked
 11088+ 000F82  6F55               	movwf	(2+(?___aldiv+04h))&0ffh
 11089+ 000F84  0E00               	movlw	high highword(010h)
 11090+ 000F86  0102               	movlb	2	; () banked
 11091+ 000F88  6F56               	movwf	(3+(?___aldiv+04h))&0ffh
 11092+ 000F8A  EC19  F01B         	call	___aldiv	;wreg free
 11093+ 000F8E  C24F  F242         	movff	0+?___aldiv,(esicPrint@temperature)
 11094+ 000F92  C250  F243         	movff	1+?___aldiv,(esicPrint@temperature+1)
 11095+ 000F96  C251  F244         	movff	2+?___aldiv,(esicPrint@temperature+2)
 11096+ 000F9A  C252  F245         	movff	3+?___aldiv,(esicPrint@temperature+3)
 11097+                          	line	43
 11098+                          ;esic.h: 43: temp = data & 0b0000000000000000000
      +                          0000000001100;
 11099+ 000F9E  0E0C               	movlw	0Ch
 11100+ 000FA0  0102               	movlb	2	; () banked
 11101+ 000FA2  0102               	movlb	2	; () banked
 11102+ 000FA4  1536               	andwf	((esicPrint@data))&0ffh,w
 11103+ 000FA6  0102               	movlb	2	; () banked
 11104+ 000FA8  0102               	movlb	2	; () banked
 11105+ 000FAA  6F46               	movwf	((esicPrint@temp))&0ffh
 11106+ 000FAC  0E00               	movlw	0
 11107+ 000FAE  0102               	movlb	2	; () banked
 11108+ 000FB0  0102               	movlb	2	; () banked
 11109+ 000FB2  1537               	andwf	((esicPrint@data+1))&0ffh,w
 11110+ 000FB4  0102               	movlb	2	; () banked
 11111+ 000FB6  6F47               	movwf	1+((esicPrint@temp))&0ffh
 11112+ 000FB8  0E00               	movlw	0
 11113+ 000FBA  0102               	movlb	2	; () banked
 11114+ 000FBC  0102               	movlb	2	; () banked
 11115+ 000FBE  1538               	andwf	((esicPrint@data+2))&0ffh,w
 11116+ 000FC0  0102               	movlb	2	; () banked
 11117+ 000FC2  6F48               	movwf	2+((esicPrint@temp))&0ffh
 11118+ 000FC4  0E00               	movlw	0
 11119+ 000FC6  0102               	movlb	2	; () banked
 11120+ 000FC8  0102               	movlb	2	; () banked
 11121+ 000FCA  1539               	andwf	((esicPrint@data+3))&0ffh,w
 11122+ 000FCC  0102               	movlb	2	; () banked
 11123+ 000FCE  6F49               	movwf	3+((esicPrint@temp))&0ffh
 11124+                          	line	44
 11125+                          ;esic.h: 44: temp >>= 2;
 11126+ 000FD0  0E02               	movlw	02h
 11127+ 000FD2  0102               	movlb	2	; () banked
 11128+ 000FD4  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 11129+ 000FD6                     u6535:
 11130+ 000FD6  90D8               	bcf	status,0
 11131+ 000FD8  0102               	movlb	2	; () banked
 11132+ 000FDA  0102               	movlb	2	; () banked
 11133+ 000FDC  3349               	rrcf	((esicPrint@temp+3))&0ffh
 11134+ 000FDE  0102               	movlb	2	; () banked
 11135+ 000FE0  3348               	rrcf	((esicPrint@temp+2))&0ffh
 11136+ 000FE2  0102               	movlb	2	; () banked
 11137+ 000FE4  3347               	rrcf	((esicPrint@temp+1))&0ffh
 11138+ 000FE6  0102               	movlb	2	; () banked
 11139+ 000FE8  3346               	rrcf	((esicPrint@temp))&0ffh
 11140+ 000FEA  0102               	movlb	2	; () banked
 11141+ 000FEC  2F4B               	decfsz	(??_esicPrint+17+0)&0ffh
 11142+ 000FEE  EFEB  F007         	goto	u6535
 11143+                          
 11144+                          	line	45
 11145+                          ;esic.h: 45: packetcount = temp;
 11146+ 000FF2  C246  F23B         	movff	(esicPrint@temp),(esicPrint@packetcount)
 11147+                          	line	47
 11148+                          ;esic.h: 47: sPuts("$E");
 11149+ 000FF6  0EF3               	movlw	low(STR_5)
 11150+ 000FF8  0102               	movlb	2	; () banked
 11151+ 000FFA  0102               	movlb	2	; () banked
 11152+ 000FFC  6F5E               	movwf	((?_sPuts))&0ffh
 11153+ 000FFE  0E7F               	movlw	high(STR_5)
 11154+ 001000  0102               	movlb	2	; () banked
 11155+ 001002  6F5F               	movwf	((?_sPuts+1))&0ffh
 11156+ 001004  EC9E  F026         	call	_sPuts	;wreg free
 11157+                          	line	48
 11158+                          ;esic.h: 48: sPutint(house); sPut(',');
 11159+ 001008  0102               	movlb	2	; () banked
 11160+ 00100A  0102               	movlb	2	; () banked
 11161+ 00100C  C23D  F24F         	movff	(esicPrint@house),(?_sPutint)
 11162+ 001010  0102               	movlb	2	; () banked
 11163+ 001012  0102               	movlb	2	; () banked
 11164+ 001014  6B50               	clrf	((?_sPutint+1))&0ffh
 11165+ 001016  ECB8  F01E         	call	_sPutint	;wreg free
 11166+ 00101A  0102               	movlb	2	; () banked
 11167+ 00101C  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 11168+ 00101E  0E2C               	movlw	low(02Ch)
 11169+ 001020  0102               	movlb	2	; () banked
 11170+ 001022  0102               	movlb	2	; () banked
 11171+ 001024  6F60               	movwf	((?_sPut))&0ffh
 11172+ 001026  0102               	movlb	2	; () banked
 11173+ 001028  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 11174+ 00102A  ECDF  F025         	call	_sPut	;wreg free
 11175+                          	line	49
 11176+                          ;esic.h: 49: sPutint(channel); sPut(',');
 11177+ 00102E  0102               	movlb	2	; () banked
 11178+ 001030  0102               	movlb	2	; () banked
 11179+ 001032  C23C  F24F         	movff	(esicPrint@channel),(?_sPutint)
 11180+ 001036  0102               	movlb	2	; () banked
 11181+ 001038  0102               	movlb	2	; () banked
 11182+ 00103A  6B50               	clrf	((?_sPutint+1))&0ffh
 11183+ 00103C  ECB8  F01E         	call	_sPutint	;wreg free
 11184+ 001040  0102               	movlb	2	; () banked
 11185+ 001042  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 11186+ 001044  0E2C               	movlw	low(02Ch)
 11187+ 001046  0102               	movlb	2	; () banked
 11188+ 001048  0102               	movlb	2	; () banked
 11189+ 00104A  6F60               	movwf	((?_sPut))&0ffh
 11190+ 00104C  0102               	movlb	2	; () banked
 11191+ 00104E  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 11192+ 001050  ECDF  F025         	call	_sPut	;wreg free
 11193+                          	line	51
 11194+                          ;esic.h: 51: if(temperature < 0){
 11195+ 001054  0102               	movlb	2	; () banked
 11196+ 001056  0102               	movlb	2	; () banked
 11197+ 001058  AF45               	btfss	((esicPrint@temperature+3))&0ffh,7
 11198+ 00105A  EF31  F008         	goto	u6541
 11199+ 00105E  EF33  F008         	goto	u6540
 11200+ 001062                     u6541:
 11201+ 001062  EF55  F008         	goto	l467
 11202+ 001066                     u6540:
 11203+                          	line	52
 11204+                          ;esic.h: 52: sPut('-');
 11205+ 001066  0102               	movlb	2	; () banked
 11206+ 001068  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 11207+ 00106A  0E2D               	movlw	low(02Dh)
 11208+ 00106C  0102               	movlb	2	; () banked
 11209+ 00106E  0102               	movlb	2	; () banked
 11210+ 001070  6F60               	movwf	((?_sPut))&0ffh
 11211+ 001072  0102               	movlb	2	; () banked
 11212+ 001074  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 11213+ 001076  ECDF  F025         	call	_sPut	;wreg free
 11214+                          	line	53
 11215+                          ;esic.h: 53: temperature *= -1;
 11216+ 00107A  0EFF               	movlw	low(-1)
 11217+ 00107C  0102               	movlb	2	; () banked
 11218+ 00107E  0102               	movlb	2	; () banked
 11219+ 001080  6F51               	movwf	(0+(?___aslmul+02h))&0ffh
 11220+ 001082  0EFF               	movlw	high(-1)
 11221+ 001084  0102               	movlb	2	; () banked
 11222+ 001086  6F52               	movwf	(1+(?___aslmul+02h))&0ffh
 11223+ 001088  0EFF               	movlw	low highword(-1)
 11224+ 00108A  0102               	movlb	2	; () banked
 11225+ 00108C  6F53               	movwf	(2+(?___aslmul+02h))&0ffh
 11226+ 00108E  0EFF               	movlw	high highword(-1)
 11227+ 001090  0102               	movlb	2	; () banked
 11228+ 001092  6F54               	movwf	(3+(?___aslmul+02h))&0ffh
 11229+ 001094  0102               	movlb	2	; () banked
 11230+ 001096  0E42               	movlw	low(esicPrint@temperature)
 11231+ 001098  0102               	movlb	2	; () banked
 11232+ 00109A  0102               	movlb	2	; () banked
 11233+ 00109C  6F4F               	movwf	((?___aslmul))&0ffh
 11234+ 00109E  0102               	movlb	2	; () banked
 11235+ 0010A0  0E02               	movlw	high(esicPrint@temperature)
 11236+ 0010A2  0102               	movlb	2	; () banked
 11237+ 0010A4  6F50               	movwf	((?___aslmul+1))&0ffh
 11238+ 0010A6  ECAB  F027         	call	___aslmul	;wreg free
 11239+                          	line	54
 11240+                          	
 11241+ 0010AA                     l467:		; BSR set to: ?
 11242+                          
 11243+                          	line	56
 11244+                          ;esic.h: 54: }
 11245+                          ;esic.h: 56: sPutint(temperature/10); sPut('.');
      +                           sPutint(temperature%10); sPut(',');
 11246+ 0010AA  0E0A               	movlw	low(0Ah)
 11247+ 0010AC  0102               	movlb	2	; () banked
 11248+ 0010AE  0102               	movlb	2	; () banked
 11249+ 0010B0  6F53               	movwf	(0+(?___aldiv+04h))&0ffh
 11250+ 0010B2  0E00               	movlw	high(0Ah)
 11251+ 0010B4  0102               	movlb	2	; () banked
 11252+ 0010B6  6F54               	movwf	(1+(?___aldiv+04h))&0ffh
 11253+ 0010B8  0E00               	movlw	low highword(0Ah)
 11254+ 0010BA  0102               	movlb	2	; () banked
 11255+ 0010BC  6F55               	movwf	(2+(?___aldiv+04h))&0ffh
 11256+ 0010BE  0E00               	movlw	high highword(0Ah)
 11257+ 0010C0  0102               	movlb	2	; () banked
 11258+ 0010C2  6F56               	movwf	(3+(?___aldiv+04h))&0ffh
 11259+ 0010C4  C242  F24F         	movff	(esicPrint@temperature),(?___aldiv)
 11260+ 0010C8  C243  F250         	movff	(esicPrint@temperature+1),(?___aldiv+1)
 11261+ 0010CC  C244  F251         	movff	(esicPrint@temperature+2),(?___aldiv+2)
 11262+ 0010D0  C245  F252         	movff	(esicPrint@temperature+3),(?___aldiv+3)
 11263+ 0010D4  EC19  F01B         	call	___aldiv	;wreg free
 11264+ 0010D8  C24F  F24F         	movff	0+?___aldiv,(?_sPutint)
 11265+ 0010DC  C250  F250         	movff	1+?___aldiv,(?_sPutint+1)
 11266+ 0010E0  ECB8  F01E         	call	_sPutint	;wreg free
 11267+ 0010E4  0102               	movlb	2	; () banked
 11268+ 0010E6  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 11269+ 0010E8  0E2E               	movlw	low(02Eh)
 11270+ 0010EA  0102               	movlb	2	; () banked
 11271+ 0010EC  0102               	movlb	2	; () banked
 11272+ 0010EE  6F60               	movwf	((?_sPut))&0ffh
 11273+ 0010F0  0102               	movlb	2	; () banked
 11274+ 0010F2  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 11275+ 0010F4  ECDF  F025         	call	_sPut	;wreg free
 11276+ 0010F8  0E0A               	movlw	low(0Ah)
 11277+ 0010FA  0102               	movlb	2	; () banked
 11278+ 0010FC  0102               	movlb	2	; () banked
 11279+ 0010FE  6F53               	movwf	(0+(?___almod+04h))&0ffh
 11280+ 001100  0E00               	movlw	high(0Ah)
 11281+ 001102  0102               	movlb	2	; () banked
 11282+ 001104  6F54               	movwf	(1+(?___almod+04h))&0ffh
 11283+ 001106  0E00               	movlw	low highword(0Ah)
 11284+ 001108  0102               	movlb	2	; () banked
 11285+ 00110A  6F55               	movwf	(2+(?___almod+04h))&0ffh
 11286+ 00110C  0E00               	movlw	high highword(0Ah)
 11287+ 00110E  0102               	movlb	2	; () banked
 11288+ 001110  6F56               	movwf	(3+(?___almod+04h))&0ffh
 11289+ 001112  C242  F24F         	movff	(esicPrint@temperature),(?___almod)
 11290+ 001116  C243  F250         	movff	(esicPrint@temperature+1),(?___almod+1)
 11291+ 00111A  C244  F251         	movff	(esicPrint@temperature+2),(?___almod+2)
 11292+ 00111E  C245  F252         	movff	(esicPrint@temperature+3),(?___almod+3)
 11293+ 001122  ECDF  F01D         	call	___almod	;wreg free
 11294+ 001126  C24F  F24F         	movff	0+?___almod,(?_sPutint)
 11295+ 00112A  C250  F250         	movff	1+?___almod,(?_sPutint+1)
 11296+ 00112E  ECB8  F01E         	call	_sPutint	;wreg free
 11297+ 001132  0102               	movlb	2	; () banked
 11298+ 001134  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 11299+ 001136  0E2C               	movlw	low(02Ch)
 11300+ 001138  0102               	movlb	2	; () banked
 11301+ 00113A  0102               	movlb	2	; () banked
 11302+ 00113C  6F60               	movwf	((?_sPut))&0ffh
 11303+ 00113E  0102               	movlb	2	; () banked
 11304+ 001140  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 11305+ 001142  ECDF  F025         	call	_sPut	;wreg free
 11306+                          	line	57
 11307+                          ;esic.h: 57: sPutint(humidity/2); sPut(',');
 11308+ 001146  0E02               	movlw	low(02h)
 11309+ 001148  0102               	movlb	2	; () banked
 11310+ 00114A  0102               	movlb	2	; () banked
 11311+ 00114C  6F51               	movwf	(0+(?___awdiv+02h))&0ffh
 11312+ 00114E  0E00               	movlw	high(02h)
 11313+ 001150  0102               	movlb	2	; () banked
 11314+ 001152  6F52               	movwf	(1+(?___awdiv+02h))&0ffh
 11315+ 001154  0102               	movlb	2	; () banked
 11316+ 001156  0102               	movlb	2	; () banked
 11317+ 001158  C23E  F24F         	movff	(esicPrint@humidity),(?___awdiv)
 11318+ 00115C  0102               	movlb	2	; () banked
 11319+ 00115E  0102               	movlb	2	; () banked
 11320+ 001160  6B50               	clrf	((?___awdiv+1))&0ffh
 11321+ 001162  EC7E  F01F         	call	___awdiv	;wreg free
 11322+ 001166  C24F  F24F         	movff	0+?___awdiv,(?_sPutint)
 11323+ 00116A  C250  F250         	movff	1+?___awdiv,(?_sPutint+1)
 11324+ 00116E  ECB8  F01E         	call	_sPutint	;wreg free
 11325+ 001172  0102               	movlb	2	; () banked
 11326+ 001174  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 11327+ 001176  0E2C               	movlw	low(02Ch)
 11328+ 001178  0102               	movlb	2	; () banked
 11329+ 00117A  0102               	movlb	2	; () banked
 11330+ 00117C  6F60               	movwf	((?_sPut))&0ffh
 11331+ 00117E  0102               	movlb	2	; () banked
 11332+ 001180  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 11333+ 001182  ECDF  F025         	call	_sPut	;wreg free
 11334+                          	line	58
 11335+                          ;esic.h: 58: sPut(lowbatt + '0');
 11336+ 001186  0102               	movlb	2	; () banked
 11337+ 001188  0102               	movlb	2	; () banked
 11338+ 00118A  513F               	movf	((esicPrint@lowbatt))&0ffh,w
 11339+ 00118C  0F30               	addlw	low(030h)
 11340+ 00118E  0102               	movlb	2	; () banked
 11341+ 001190  0102               	movlb	2	; () banked
 11342+ 001192  6F60               	movwf	((?_sPut))&0ffh
 11343+ 001194  ECDF  F025         	call	_sPut	;wreg free
 11344+                          	line	59
 11345+                          ;esic.h: 59: sPut(10);
 11346+ 001198  0102               	movlb	2	; () banked
 11347+ 00119A  6F4B               	movwf	(??_esicPrint+17+0)&0ffh
 11348+ 00119C  0E0A               	movlw	low(0Ah)
 11349+ 00119E  0102               	movlb	2	; () banked
 11350+ 0011A0  0102               	movlb	2	; () banked
 11351+ 0011A2  6F60               	movwf	((?_sPut))&0ffh
 11352+ 0011A4  0102               	movlb	2	; () banked
 11353+ 0011A6  514B               	movf	(??_esicPrint+17+0)&0ffh,w
 11354+ 0011A8  ECDF  F025         	call	_sPut	;wreg free
 11355+                          	line	60
 11356+                          ;esic.h: 60: blinkRxLed();
 11357+ 0011AC  EC0D  F029         	call	_blinkRxLed	;wreg free
 11358+                          	line	61
 11359+                          	
 11360+ 0011B0                     l466:		; BSR set to: ?
 11361+                          
 11362+                          	line	62
 11363+                          ;esic.h: 61: }
 11364+                          ;esic.h: 62: }
 11365+ 0011B0                     l462:
 11366+                          			; BSR set to: ?
 11367+                          
 11368+ 0011B0  0012               	return
 11369+                          	opt stack 0
 11370+                          GLOBAL __end_of_esicPrint
 11371+ 0011B2                     	__end_of_esicPrint:
 11372+                          	FNSIZE	_esicPrint,21,4
 11373+                          ; =============== function _esicPrint ends =====
      +                          =======
 11374+                          
 11375+                          	signat	_esicPrint,4216
 11376+                          	global	_reverse
 11377+                          	global	??_reverse
 11378+                          	global	?_reverse
 11379+                          
 11380+                          ; *************** function _reverse ************
      +                          *****
 11381+                          ; Defined at:
 11382+                          ;		line 75 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 11383+                          ; Parameters:
 11384+                          ;		input          size:   1offs:   0	type: unsig
      +                          ned char 
 11385+                          ; Auto variables:
 11386+                          ;		output      	       	type: unsigned char 
 11387+                          ; Return value:
 11388+                          ;		type: unsigned char 
 11389+                          ;		size: 1
 11390+                          ; Registers used:
 11391+                          ;		wreg, status,2, status,0
 11392+                          ; Tracked objects:
 11393+                          ;		On entry : 0/0
 11394+                          ;		On exit  : 0/0
 11395+                          ;		Unchanged: 0/0
 11396+                          ; Data sizes:
 11397+                          ;		Autos:    1
 11398+                          ;		Params:   1
 11399+                          ;		Temp:     1
 11400+                          ;		Total:    3
 11401+                          ; This function calls:
 11402+                          ;		Nothing
 11403+                          ; This function is called by:
 11404+                          ;		_wavemanTx
 11405+                          ; This function uses a non-reentrant model
 11406+                          ; 
 11407+                                  psect   text25,class=CODE,space=0,reloc=
      +                          2
 11408+                          
 11409+                          	opt lm
 11410+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 11411+                          	line	75
 11412+ 000000                     	__size_of_reverse	equ	__end_of_reverse-_reverse
 11413+                          ;batchpcb26k20.c: 75: char reverse(char input){
 11414+                          	
 11415+ 004C4C                     _reverse:		; BSR set to: ?
 11416+                          
 11417+                          	opt stack 27
 11418+                          	line	76
 11419+ 004C4C  0102               	movlb	2	; () banked
 11420+ 004C4E  6F48               	movwf	(??_reverse+1+0)&0ffh
 11421+ 004C50  0E00               	movlw	low(0)
 11422+ 004C52  0102               	movlb	2	; () banked
 11423+ 004C54  0102               	movlb	2	; () banked
 11424+ 004C56  6F47               	movwf	((reverse@output))&0ffh
 11425+ 004C58  0102               	movlb	2	; () banked
 11426+ 004C5A  5148               	movf	(??_reverse+1+0)&0ffh,w
 11427+                          	line	77
 11428+                          ;batchpcb26k20.c: 77: if (input & 0b00000001) ou
      +                          tput |= 0b00001000;
 11429+ 004C5C  0102               	movlb	2	; () banked
 11430+                          	
 11431+ 004C5E  0102               	movlb	2	; () banked
 11432+ 004C60  A146               	btfss	((reverse@input))&0ffh,(0)&7
 11433+ 004C62  EF35  F026         	goto	u2901
 11434+ 004C66  EF37  F026         	goto	u2900
 11435+ 004C6A                     u2901:
 11436+ 004C6A  EF3A  F026         	goto	l270
 11437+ 004C6E                     u2900:
 11438+ 004C6E  0102               	movlb	2	; () banked
 11439+ 004C70  0102               	movlb	2	; () banked
 11440+ 004C72  8747               	bsf	(0+(3/8)+(reverse@output))&0ffh,(3)&7
 11441+                          	
 11442+ 004C74                     l270:		; BSR set to: ?
 11443+                          
 11444+                          	line	78
 11445+                          ;batchpcb26k20.c: 78: if (input & 0b00000010) ou
      +                          tput |= 0b00000100;
 11446+ 004C74  0102               	movlb	2	; () banked
 11447+                          	
 11448+ 004C76  0102               	movlb	2	; () banked
 11449+ 004C78  A346               	btfss	((reverse@input))&0ffh,(1)&7
 11450+ 004C7A  EF41  F026         	goto	u2911
 11451+ 004C7E  EF43  F026         	goto	u2910
 11452+ 004C82                     u2911:
 11453+ 004C82  EF46  F026         	goto	l271
 11454+ 004C86                     u2910:
 11455+ 004C86  0102               	movlb	2	; () banked
 11456+ 004C88  0102               	movlb	2	; () banked
 11457+ 004C8A  8547               	bsf	(0+(2/8)+(reverse@output))&0ffh,(2)&7
 11458+                          	
 11459+ 004C8C                     l271:		; BSR set to: ?
 11460+                          
 11461+                          	line	79
 11462+                          ;batchpcb26k20.c: 79: if (input & 0b00000100) ou
      +                          tput |= 0b00000010;
 11463+ 004C8C  0102               	movlb	2	; () banked
 11464+                          	
 11465+ 004C8E  0102               	movlb	2	; () banked
 11466+ 004C90  A546               	btfss	((reverse@input))&0ffh,(2)&7
 11467+ 004C92  EF4D  F026         	goto	u2921
 11468+ 004C96  EF4F  F026         	goto	u2920
 11469+ 004C9A                     u2921:
 11470+ 004C9A  EF52  F026         	goto	l272
 11471+ 004C9E                     u2920:
 11472+ 004C9E  0102               	movlb	2	; () banked
 11473+ 004CA0  0102               	movlb	2	; () banked
 11474+ 004CA2  8347               	bsf	(0+(1/8)+(reverse@output))&0ffh,(1)&7
 11475+                          	
 11476+ 004CA4                     l272:		; BSR set to: ?
 11477+                          
 11478+                          	line	80
 11479+                          ;batchpcb26k20.c: 80: if (input & 0b00001000) ou
      +                          tput |= 0b00000001;
 11480+ 004CA4  0102               	movlb	2	; () banked
 11481+                          	
 11482+ 004CA6  0102               	movlb	2	; () banked
 11483+ 004CA8  A746               	btfss	((reverse@input))&0ffh,(3)&7
 11484+ 004CAA  EF59  F026         	goto	u2931
 11485+ 004CAE  EF5B  F026         	goto	u2930
 11486+ 004CB2                     u2931:
 11487+ 004CB2  EF5E  F026         	goto	l273
 11488+ 004CB6                     u2930:
 11489+ 004CB6  0102               	movlb	2	; () banked
 11490+ 004CB8  0102               	movlb	2	; () banked
 11491+ 004CBA  8147               	bsf	(0+(0/8)+(reverse@output))&0ffh,(0)&7
 11492+                          	
 11493+ 004CBC                     l273:		; BSR set to: ?
 11494+                          
 11495+                          	line	81
 11496+                          ;batchpcb26k20.c: 81: return output;
 11497+ 004CBC  0102               	movlb	2	; () banked
 11498+ 004CBE  0102               	movlb	2	; () banked
 11499+ 004CC0  5147               	movf	((reverse@output))&0ffh,w
 11500+ 004CC2  EF63  F026         	goto	l269
 11501+                          	line	82
 11502+                          ;batchpcb26k20.c: 82: }
 11503+ 004CC6                     l269:
 11504+                          			; BSR set to: ?
 11505+                          
 11506+ 004CC6  0012               	return
 11507+                          	opt stack 0
 11508+                          GLOBAL __end_of_reverse
 11509+ 004CC8                     	__end_of_reverse:
 11510+                          	FNSIZE	_reverse,2,1
 11511+                          ; =============== function _reverse ends =======
      +                          =====
 11512+                          
 11513+                          	signat	_reverse,4217
 11514+                          	global	_bmcTx
 11515+                          	global	??_bmcTx
 11516+                          	global	?_bmcTx
 11517+                          
 11518+                          ; *************** function _bmcTx **************
      +                          ***
 11519+                          ; Defined at:
 11520+                          ;		line 29 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\bmc.h"
 11521+                          ; Parameters:
 11522+                          ;		datap          size:   2offs:   0	type: PTR u
      +                          nsigned char ; Largest target is 33
 11523+                          ;		 -> main@line(32), F2852(33), 
 11524+                          ;		data_len       size:   1offs:   2	type: unsig
      +                          ned char 
 11525+                          ;		hops           size:   1offs:   3	type: unsig
      +                          ned char 
 11526+                          ;		sends          size:   1offs:   4	type: unsig
      +                          ned char 
 11527+                          ; Auto variables:
 11528+                          ;		temp        	       	type: unsigned char 
 11529+                          ;		checksum    	       	type: unsigned char 
 11530+                          ;		k           	       	type: unsigned char 
 11531+                          ;		j           	       	type: unsigned char 
 11532+                          ;		k           	       	type: unsigned char 
 11533+                          ;		k           	       	type: unsigned char 
 11534+                          ; Return value:
 11535+                          ;		type: void 
 11536+                          ;		size: 0
 11537+                          ; Registers used:
 11538+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
 11539+                          ; Tracked objects:
 11540+                          ;		On entry : 0/0
 11541+                          ;		On exit  : 0/0
 11542+                          ;		Unchanged: 0/0
 11543+                          ; Data sizes:
 11544+                          ;		Autos:    6
 11545+                          ;		Params:   5
 11546+                          ;		Temp:     2
 11547+                          ;		Total:   13
 11548+                          ; This function calls:
 11549+                          ;		_startTransmit
 11550+                          ;		_bmcTxByte
 11551+                          ;		_waitTimer
 11552+                          ;		_stopTransmit
 11553+                          ; This function is called by:
 11554+                          ;		_bmcRepeat
 11555+                          ;		_parseCmd
 11556+                          ; This function uses a non-reentrant model
 11557+                          ; 
 11558+                                  psect   text26,class=CODE,space=0,reloc=
      +                          2
 11559+                          
 11560+                          	opt lm
 11561+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\bmc.h"
 11562+                          	line	29
 11563+ 000000                     	__size_of_bmcTx	equ	__end_of_bmcTx-_bmcTx
 11564+                          ;bmc.h: 29: void bmcTx(char *datap, char data_le
      +                          n, char hops, char sends){
 11565+                          	
 11566+ 003820                     _bmcTx:		; BSR set to: ?
 11567+                          
 11568+                          	opt stack 27
 11569+                          	line	33
 11570+ 003820  C249  F251         	movff	(bmcTx@hops),??_bmcTx+6+0
 11571+ 003824  0E07               	movlw	07h
 11572+ 003826  0102               	movlb	2	; () banked
 11573+ 003828  1751               	andwf	(??_bmcTx+6+0)&0ffh
 11574+ 00382A  0E05               	movlw	05h
 11575+ 00382C  0102               	movlb	2	; () banked
 11576+ 00382E  6F52               	movwf	(??_bmcTx+7+0)&0ffh
 11577+ 003830                     u6755:
 11578+ 003830  90D8               	bcf	status,0
 11579+ 003832  0102               	movlb	2	; () banked
 11580+ 003834  3751               	rlcf	(??_bmcTx+6+0)&0ffh
 11581+ 003836  0102               	movlb	2	; () banked
 11582+ 003838  2F52               	decfsz	(??_bmcTx+7+0)&0ffh
 11583+ 00383A  EF18  F01C         	goto	u6755
 11584+ 00383E  0102               	movlb	2	; () banked
 11585+ 003840  0102               	movlb	2	; () banked
 11586+ 003842  5148               	movf	((bmcTx@data_len))&0ffh,w
 11587+ 003844  0B1F               	andlw	low(01Fh)
 11588+ 003846  0102               	movlb	2	; () banked
 11589+ 003848  1151               	iorwf	(??_bmcTx+6+0)&0ffh,w
 11590+ 00384A  0102               	movlb	2	; () banked
 11591+ 00384C  0102               	movlb	2	; () banked
 11592+ 00384E  6F4B               	movwf	((bmcTx@temp))&0ffh
 11593+                          	line	34
 11594+                          ;bmc.h: 34: char checksum = temp;
 11595+ 003850  C24B  F24C         	movff	(bmcTx@temp),(bmcTx@checksum)
 11596+                          	line	35
 11597+                          ;bmc.h: 35: for (char k=0; k<data_len; k++) chec
      +                          ksum += datap[k];
 11598+ 003854  0102               	movlb	2	; () banked
 11599+ 003856  6F51               	movwf	(??_bmcTx+6+0)&0ffh
 11600+ 003858  0E00               	movlw	low(0)
 11601+ 00385A  0102               	movlb	2	; () banked
 11602+ 00385C  0102               	movlb	2	; () banked
 11603+ 00385E  6F4D               	movwf	((bmcTx@k))&0ffh
 11604+ 003860  0102               	movlb	2	; () banked
 11605+ 003862  5151               	movf	(??_bmcTx+6+0)&0ffh,w
 11606+ 003864  EF48  F01C         	goto	l304
 11607+                          	
 11608+ 003868                     l301:		; BSR set to: ?
 11609+                          
 11610+ 003868  0102               	movlb	2	; () banked
 11611+ 00386A  0102               	movlb	2	; () banked
 11612+ 00386C  514D               	movf	((bmcTx@k))&0ffh,w
 11613+ 00386E  0102               	movlb	2	; () banked
 11614+ 003870  0102               	movlb	2	; () banked
 11615+ 003872  2546               	addwf	((bmcTx@datap))&0ffh,w
 11616+ 003874  6EE9               	movwf	c:fsr0l
 11617+ 003876  0102               	movlb	2	; () banked
 11618+ 003878  0E00               	movlw	0
 11619+ 00387A  0102               	movlb	2	; () banked
 11620+ 00387C  0102               	movlb	2	; () banked
 11621+ 00387E  2147               	addwfc	((bmcTx@datap+1))&0ffh,w
 11622+ 003880  6EEA               	movwf	1+c:fsr0l
 11623+ 003882  50EF               	movf	indf0,w
 11624+ 003884  0102               	movlb	2	; () banked
 11625+ 003886  0102               	movlb	2	; () banked
 11626+ 003888  274C               	addwf	((bmcTx@checksum))&0ffh
 11627+ 00388A  0102               	movlb	2	; () banked
 11628+ 00388C  0102               	movlb	2	; () banked
 11629+ 00388E  2B4D               	incf	((bmcTx@k))&0ffh
 11630+                          	
 11631+ 003890                     l304:		; BSR set to: ?
 11632+                          
 11633+ 003890  0102               	movlb	2	; () banked
 11634+ 003892  0102               	movlb	2	; () banked
 11635+ 003894  5148               	movf	((bmcTx@data_len))&0ffh,w
 11636+ 003896  0102               	movlb	2	; () banked
 11637+ 003898  0102               	movlb	2	; () banked
 11638+ 00389A  5D4D               	subwf	((bmcTx@k))&0ffh,w
 11639+ 00389C  A0D8               	btfss	status,0
 11640+ 00389E  EF53  F01C         	goto	u6761
 11641+ 0038A2  EF55  F01C         	goto	u6760
 11642+ 0038A6                     u6761:
 11643+ 0038A6  EF34  F01C         	goto	l301
 11644+ 0038AA                     u6760:
 11645+                          	
 11646+ 0038AA                     l302:		; BSR set to: ?
 11647+                          
 11648+                          	line	37
 11649+                          ;bmc.h: 37: startTransmit();
 11650+ 0038AA  ECFF  F028         	call	_startTransmit	;wreg free
 11651+                          	line	38
 11652+                          ;bmc.h: 38: for (char j=0; j<sends; j++){
 11653+ 0038AE  0102               	movlb	2	; () banked
 11654+ 0038B0  6F51               	movwf	(??_bmcTx+6+0)&0ffh
 11655+ 0038B2  0E00               	movlw	low(0)
 11656+ 0038B4  0102               	movlb	2	; () banked
 11657+ 0038B6  0102               	movlb	2	; () banked
 11658+ 0038B8  6F4E               	movwf	((bmcTx@j))&0ffh
 11659+ 0038BA  0102               	movlb	2	; () banked
 11660+ 0038BC  5151               	movf	(??_bmcTx+6+0)&0ffh,w
 11661+ 0038BE  EFF0  F01C         	goto	l308
 11662+                          	
 11663+ 0038C2                     l305:		; BSR set to: ?
 11664+                          
 11665+                          	line	39
 11666+                          ;bmc.h: 39: for (char k=0; k<2; k++) bmcTxByte('
      +                          S');
 11667+ 0038C2  0102               	movlb	2	; () banked
 11668+ 0038C4  6F51               	movwf	(??_bmcTx+6+0)&0ffh
 11669+ 0038C6  0E00               	movlw	low(0)
 11670+ 0038C8  0102               	movlb	2	; () banked
 11671+ 0038CA  0102               	movlb	2	; () banked
 11672+ 0038CC  6F4F               	movwf	((bmcTx@k_167))&0ffh
 11673+ 0038CE  0102               	movlb	2	; () banked
 11674+ 0038D0  5151               	movf	(??_bmcTx+6+0)&0ffh,w
 11675+ 0038D2  0E01               	movlw	(02h-1)
 11676+ 0038D4  0102               	movlb	2	; () banked
 11677+ 0038D6  0102               	movlb	2	; () banked
 11678+ 0038D8  654F               	cpfsgt	((bmcTx@k_167))&0ffh
 11679+ 0038DA  EF71  F01C         	goto	u6771
 11680+ 0038DE  EF73  F01C         	goto	u6770
 11681+ 0038E2                     u6771:
 11682+ 0038E2  EF75  F01C         	goto	l309
 11683+ 0038E6                     u6770:
 11684+ 0038E6  EF8C  F01C         	goto	l310
 11685+                          	
 11686+ 0038EA                     l309:		; BSR set to: ?
 11687+                          
 11688+ 0038EA  0102               	movlb	2	; () banked
 11689+ 0038EC  6F51               	movwf	(??_bmcTx+6+0)&0ffh
 11690+ 0038EE  0E53               	movlw	low(053h)
 11691+ 0038F0  0102               	movlb	2	; () banked
 11692+ 0038F2  0102               	movlb	2	; () banked
 11693+ 0038F4  6F53               	movwf	((?_bmcTxByte))&0ffh
 11694+ 0038F6  0102               	movlb	2	; () banked
 11695+ 0038F8  5151               	movf	(??_bmcTx+6+0)&0ffh,w
 11696+ 0038FA  EC91  F025         	call	_bmcTxByte	;wreg free
 11697+ 0038FE  0102               	movlb	2	; () banked
 11698+ 003900  0102               	movlb	2	; () banked
 11699+ 003902  2B4F               	incf	((bmcTx@k_167))&0ffh
 11700+ 003904  0E01               	movlw	(02h-1)
 11701+ 003906  0102               	movlb	2	; () banked
 11702+ 003908  0102               	movlb	2	; () banked
 11703+ 00390A  654F               	cpfsgt	((bmcTx@k_167))&0ffh
 11704+ 00390C  EF8A  F01C         	goto	u6781
 11705+ 003910  EF8C  F01C         	goto	u6780
 11706+ 003914                     u6781:
 11707+ 003914  EF75  F01C         	goto	l309
 11708+ 003918                     u6780:
 11709+                          	
 11710+ 003918                     l310:		; BSR set to: ?
 11711+                          
 11712+                          	line	40
 11713+                          ;bmc.h: 40: bmcTxByte(temp);
 11714+ 003918  C24B  F253         	movff	(bmcTx@temp),(?_bmcTxByte)
 11715+ 00391C  EC91  F025         	call	_bmcTxByte	;wreg free
 11716+                          	line	41
 11717+                          ;bmc.h: 41: for (char k=0; k<data_len; k++) bmcT
      +                          xByte(datap[k]);
 11718+ 003920  0102               	movlb	2	; () banked
 11719+ 003922  6F51               	movwf	(??_bmcTx+6+0)&0ffh
 11720+ 003924  0E00               	movlw	low(0)
 11721+ 003926  0102               	movlb	2	; () banked
 11722+ 003928  0102               	movlb	2	; () banked
 11723+ 00392A  6F50               	movwf	((bmcTx@k_168))&0ffh
 11724+ 00392C  0102               	movlb	2	; () banked
 11725+ 00392E  5151               	movf	(??_bmcTx+6+0)&0ffh,w
 11726+ 003930  EFB0  F01C         	goto	l315
 11727+                          	
 11728+ 003934                     l312:		; BSR set to: ?
 11729+                          
 11730+ 003934  0102               	movlb	2	; () banked
 11731+ 003936  0102               	movlb	2	; () banked
 11732+ 003938  5150               	movf	((bmcTx@k_168))&0ffh,w
 11733+ 00393A  0102               	movlb	2	; () banked
 11734+ 00393C  0102               	movlb	2	; () banked
 11735+ 00393E  2546               	addwf	((bmcTx@datap))&0ffh,w
 11736+ 003940  6EE9               	movwf	c:fsr0l
 11737+ 003942  0102               	movlb	2	; () banked
 11738+ 003944  0E00               	movlw	0
 11739+ 003946  0102               	movlb	2	; () banked
 11740+ 003948  0102               	movlb	2	; () banked
 11741+ 00394A  2147               	addwfc	((bmcTx@datap+1))&0ffh,w
 11742+ 00394C  6EEA               	movwf	1+c:fsr0l
 11743+ 00394E  50EF               	movf	indf0,w
 11744+ 003950  0102               	movlb	2	; () banked
 11745+ 003952  0102               	movlb	2	; () banked
 11746+ 003954  6F53               	movwf	((?_bmcTxByte))&0ffh
 11747+ 003956  EC91  F025         	call	_bmcTxByte	;wreg free
 11748+ 00395A  0102               	movlb	2	; () banked
 11749+ 00395C  0102               	movlb	2	; () banked
 11750+ 00395E  2B50               	incf	((bmcTx@k_168))&0ffh
 11751+                          	
 11752+ 003960                     l315:		; BSR set to: ?
 11753+                          
 11754+ 003960  0102               	movlb	2	; () banked
 11755+ 003962  0102               	movlb	2	; () banked
 11756+ 003964  5148               	movf	((bmcTx@data_len))&0ffh,w
 11757+ 003966  0102               	movlb	2	; () banked
 11758+ 003968  0102               	movlb	2	; () banked
 11759+ 00396A  5D50               	subwf	((bmcTx@k_168))&0ffh,w
 11760+ 00396C  A0D8               	btfss	status,0
 11761+ 00396E  EFBB  F01C         	goto	u6791
 11762+ 003972  EFBD  F01C         	goto	u6790
 11763+ 003976                     u6791:
 11764+ 003976  EF9A  F01C         	goto	l312
 11765+ 00397A                     u6790:
 11766+                          	
 11767+ 00397A                     l313:		; BSR set to: ?
 11768+                          
 11769+                          	line	42
 11770+                          ;bmc.h: 42: bmcTxByte(checksum);
 11771+ 00397A  C24C  F253         	movff	(bmcTx@checksum),(?_bmcTxByte)
 11772+ 00397E  EC91  F025         	call	_bmcTxByte	;wreg free
 11773+                          	line	43
 11774+                          ;bmc.h: 43: LATB2 ^= 1;
 11775+ 003982  748A               	btg	c:(31826/8),(31826)&7	;volatile
 11776+                          	line	44
 11777+                          ;bmc.h: 44: waitTimer(500);
 11778+ 003984  0EF4               	movlw	low(01F4h)
 11779+ 003986  0102               	movlb	2	; () banked
 11780+ 003988  0102               	movlb	2	; () banked
 11781+ 00398A  6F56               	movwf	((?_waitTimer))&0ffh
 11782+ 00398C  0E01               	movlw	high(01F4h)
 11783+ 00398E  0102               	movlb	2	; () banked
 11784+ 003990  6F57               	movwf	((?_waitTimer+1))&0ffh
 11785+ 003992  EC04  F028         	call	_waitTimer	;wreg free
 11786+                          	line	45
 11787+                          ;bmc.h: 45: LATB2 = 0;
 11788+ 003996  948A               	bcf	c:(31826/8),(31826)&7	;volatile
 11789+                          	line	46
 11790+                          ;bmc.h: 46: if (j != (sends-1)) waitTimer(3000);
 11791+ 003998  0EFF               	movlw	low(-1)
 11792+ 00399A  0102               	movlb	2	; () banked
 11793+ 00399C  0102               	movlb	2	; () banked
 11794+ 00399E  254A               	addwf	((bmcTx@sends))&0ffh,w
 11795+ 0039A0  0102               	movlb	2	; () banked
 11796+ 0039A2  6F51               	movwf	(??_bmcTx+6+0)&0ffh
 11797+ 0039A4  0102               	movlb	2	; () banked
 11798+ 0039A6  6B52               	clrf	1+(??_bmcTx+6+0)&0ffh
 11799+ 0039A8  0EFF               	movlw	high(-1)
 11800+ 0039AA  0102               	movlb	2	; () banked
 11801+ 0039AC  2352               	addwfc	1+(??_bmcTx+6+0)&0ffh
 11802+ 0039AE  0102               	movlb	2	; () banked
 11803+ 0039B0  0102               	movlb	2	; () banked
 11804+ 0039B2  514E               	movf	((bmcTx@j))&0ffh,w
 11805+ 0039B4  0102               	movlb	2	; () banked
 11806+ 0039B6  1951               	xorwf	(??_bmcTx+6+0)&0ffh,w
 11807+ 0039B8  1152               	iorwf	(??_bmcTx+6+1)&0ffh,w
 11808+                          
 11809+ 0039BA  B4D8               	btfsc	status,2
 11810+ 0039BC  EFE2  F01C         	goto	u6801
 11811+ 0039C0  EFE4  F01C         	goto	u6800
 11812+ 0039C4                     u6801:
 11813+ 0039C4  EFED  F01C         	goto	l316
 11814+ 0039C8                     u6800:
 11815+ 0039C8  0EB8               	movlw	low(0BB8h)
 11816+ 0039CA  0102               	movlb	2	; () banked
 11817+ 0039CC  0102               	movlb	2	; () banked
 11818+ 0039CE  6F56               	movwf	((?_waitTimer))&0ffh
 11819+ 0039D0  0E0B               	movlw	high(0BB8h)
 11820+ 0039D2  0102               	movlb	2	; () banked
 11821+ 0039D4  6F57               	movwf	((?_waitTimer+1))&0ffh
 11822+ 0039D6  EC04  F028         	call	_waitTimer	;wreg free
 11823+                          	
 11824+ 0039DA                     l316:		; BSR set to: ?
 11825+                          
 11826+                          	line	38
 11827+ 0039DA  0102               	movlb	2	; () banked
 11828+ 0039DC  0102               	movlb	2	; () banked
 11829+ 0039DE  2B4E               	incf	((bmcTx@j))&0ffh
 11830+                          	
 11831+ 0039E0                     l308:		; BSR set to: ?
 11832+                          
 11833+ 0039E0  0102               	movlb	2	; () banked
 11834+ 0039E2  0102               	movlb	2	; () banked
 11835+ 0039E4  514A               	movf	((bmcTx@sends))&0ffh,w
 11836+ 0039E6  0102               	movlb	2	; () banked
 11837+ 0039E8  0102               	movlb	2	; () banked
 11838+ 0039EA  5D4E               	subwf	((bmcTx@j))&0ffh,w
 11839+ 0039EC  A0D8               	btfss	status,0
 11840+ 0039EE  EFFB  F01C         	goto	u6811
 11841+ 0039F2  EFFD  F01C         	goto	u6810
 11842+ 0039F6                     u6811:
 11843+ 0039F6  EF61  F01C         	goto	l305
 11844+ 0039FA                     u6810:
 11845+                          	
 11846+ 0039FA                     l306:		; BSR set to: ?
 11847+                          
 11848+                          	line	48
 11849+                          ;bmc.h: 47: }
 11850+                          ;bmc.h: 48: stopTransmit();
 11851+ 0039FA  EC2B  F028         	call	_stopTransmit	;wreg free
 11852+                          	line	49
 11853+                          ;bmc.h: 49: }
 11854+ 0039FE                     l300:
 11855+                          			; BSR set to: ?
 11856+                          
 11857+ 0039FE  0012               	return
 11858+                          	opt stack 0
 11859+                          GLOBAL __end_of_bmcTx
 11860+ 003A00                     	__end_of_bmcTx:
 11861+                          	FNSIZE	_bmcTx,8,5
 11862+                          ; =============== function _bmcTx ends =========
      +                          ===
 11863+                          
 11864+                          	signat	_bmcTx,16504
 11865+                          	global	___wmul
 11866+                          	global	??___wmul
 11867+                          	global	?___wmul
 11868+                          
 11869+                          ; *************** function ___wmul *************
      +                          ****
 11870+                          ; Defined at:
 11871+                          ;		line 3 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\wmul.c"
 11872+                          ; Parameters:
 11873+                          ;		multiplier     size:   2offs:   0	type: unsig
      +                          ned int 
 11874+                          ;		multiplicand   size:   2offs:   2	type: unsig
      +                          ned int 
 11875+                          ; Auto variables:
 11876+                          ;		product     	       	type: unsigned int 
 11877+                          ; Return value:
 11878+                          ;		type: unsigned int 
 11879+                          ;		size: 2
 11880+                          ; Registers used:
 11881+                          ;		wreg, status,2, status,0
 11882+                          ; Tracked objects:
 11883+                          ;		On entry : 0/0
 11884+                          ;		On exit  : 0/0
 11885+                          ;		Unchanged: 0/0
 11886+                          ; Data sizes:
 11887+                          ;		Autos:    2
 11888+                          ;		Params:   4
 11889+                          ;		Temp:     0
 11890+                          ;		Total:    6
 11891+                          ; This function calls:
 11892+                          ;		Nothing
 11893+                          ; This function is called by:
 11894+                          ;		_wavemanTx
 11895+                          ; This function uses a non-reentrant model
 11896+                          ; 
 11897+                                  psect   text27,class=CODE,space=0,reloc=
      +                          2
 11898+                          
 11899+                          	opt lm
 11900+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\wmul.c"
 11901+                          	line	3
 11902+ 000000                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 11903+                          	
 11904+ 004CC8                     ___wmul:		; BSR set to: ?
 11905+                          
 11906+                          	opt stack 27
 11907+                          	line	4
 11908+ 004CC8  0E00               	movlw	low(0)
 11909+ 004CCA  0102               	movlb	2	; () banked
 11910+ 004CCC  0102               	movlb	2	; () banked
 11911+ 004CCE  6F4A               	movwf	((___wmul@product))&0ffh
 11912+ 004CD0  0E00               	movlw	high(0)
 11913+ 004CD2  0102               	movlb	2	; () banked
 11914+ 004CD4  6F4B               	movwf	((___wmul@product+1))&0ffh
 11915+                          	line	6
 11916+                          	
 11917+ 004CD6                     l1340:		; BSR set to: ?
 11918+                          
 11919+                          	line	7
 11920+ 004CD6  0102               	movlb	2	; () banked
 11921+                          	
 11922+ 004CD8  0102               	movlb	2	; () banked
 11923+ 004CDA  A146               	btfss	((___wmul@multiplier))&0ffh,(0)&7
 11924+ 004CDC  EF72  F026         	goto	u5971
 11925+ 004CE0  EF74  F026         	goto	u5970
 11926+ 004CE4                     u5971:
 11927+ 004CE4  EF80  F026         	goto	l1341
 11928+ 004CE8                     u5970:
 11929+                          	line	8
 11930+ 004CE8  0102               	movlb	2	; () banked
 11931+ 004CEA  0102               	movlb	2	; () banked
 11932+ 004CEC  5148               	movf	((___wmul@multiplicand))&0ffh,w
 11933+ 004CEE  0102               	movlb	2	; () banked
 11934+ 004CF0  0102               	movlb	2	; () banked
 11935+ 004CF2  274A               	addwf	((___wmul@product))&0ffh
 11936+ 004CF4  0102               	movlb	2	; () banked
 11937+ 004CF6  0102               	movlb	2	; () banked
 11938+ 004CF8  5149               	movf	((___wmul@multiplicand+1))&0ffh,w
 11939+ 004CFA  0102               	movlb	2	; () banked
 11940+ 004CFC  0102               	movlb	2	; () banked
 11941+ 004CFE  234B               	addwfc	((___wmul@product+1))&0ffh
 11942+                          
 11943+                          	
 11944+ 004D00                     l1341:		; BSR set to: ?
 11945+                          
 11946+                          	line	9
 11947+ 004D00  0102               	movlb	2	; () banked
 11948+ 004D02  90D8               	bcf	status,0
 11949+ 004D04  0102               	movlb	2	; () banked
 11950+ 004D06  3748               	rlcf	((___wmul@multiplicand))&0ffh
 11951+ 004D08  0102               	movlb	2	; () banked
 11952+ 004D0A  3749               	rlcf	((___wmul@multiplicand+1))&0ffh
 11953+                          	line	10
 11954+ 004D0C  0102               	movlb	2	; () banked
 11955+ 004D0E  90D8               	bcf	status,0
 11956+ 004D10  0102               	movlb	2	; () banked
 11957+ 004D12  3347               	rrcf	((___wmul@multiplier+1))&0ffh
 11958+ 004D14  0102               	movlb	2	; () banked
 11959+ 004D16  3346               	rrcf	((___wmul@multiplier))&0ffh
 11960+                          	line	11
 11961+ 004D18  0102               	movlb	2	; () banked
 11962+ 004D1A  0102               	movlb	2	; () banked
 11963+ 004D1C  5147               	movf	((___wmul@multiplier+1))&0ffh,w
 11964+ 004D1E  1146               	iorwf ((___wmul@multiplier))&0ffh,w
 11965+                          
 11966+ 004D20  A4D8               	btfss	status,2
 11967+ 004D22  EF95  F026         	goto	u5981
 11968+ 004D26  EF97  F026         	goto	u5980
 11969+ 004D2A                     u5981:
 11970+ 004D2A  EF6B  F026         	goto	l1340
 11971+ 004D2E                     u5980:
 11972+                          	
 11973+ 004D2E                     l1339:		; BSR set to: ?
 11974+                          
 11975+                          	line	12
 11976+ 004D2E  C24A  F246         	movff	(___wmul@product),(?___wmul)
 11977+ 004D32  C24B  F247         	movff	(___wmul@product+1),(?___wmul+1)
 11978+ 004D36  EF9D  F026         	goto	l1337
 11979+                          	line	13
 11980+ 004D3A                     l1337:
 11981+                          			; BSR set to: ?
 11982+                          
 11983+ 004D3A  0012               	return
 11984+                          	opt stack 0
 11985+                          GLOBAL __end_of___wmul
 11986+ 004D3C                     	__end_of___wmul:
 11987+                          	FNSIZE	___wmul,2,4
 11988+                          ; =============== function ___wmul ends ========
      +                          ====
 11989+                          
 11990+                          	signat	___wmul,8314
 11991+                          	global	_asciiToHex
 11992+                          	global	??_asciiToHex
 11993+                          	global	?_asciiToHex
 11994+                          
 11995+                          ; *************** function _asciiToHex *********
      +                          ********
 11996+                          ; Defined at:
 11997+                          ;		line 69 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 11998+                          ; Parameters:
 11999+                          ;		input          size:   1offs:   0	type: unsig
      +                          ned char 
 12000+                          ; Auto variables:
 12001+                          ;		None
 12002+                          ; Return value:
 12003+                          ;		type: unsigned char 
 12004+                          ;		size: 1
 12005+                          ; Registers used:
 12006+                          ;		wreg, status,2, status,0
 12007+                          ; Tracked objects:
 12008+                          ;		On entry : 0/0
 12009+                          ;		On exit  : 0/0
 12010+                          ;		Unchanged: 0/0
 12011+                          ; Data sizes:
 12012+                          ;		Autos:    0
 12013+                          ;		Params:   1
 12014+                          ;		Temp:     0
 12015+                          ;		Total:    1
 12016+                          ; This function calls:
 12017+                          ;		Nothing
 12018+                          ; This function is called by:
 12019+                          ;		_bmcConvertHex
 12020+                          ;		_gaoTx
 12021+                          ;		_nexaTx
 12022+                          ; This function uses a non-reentrant model
 12023+                          ; 
 12024+                                  psect   text28,class=CODE,space=0,reloc=
      +                          2
 12025+                          
 12026+                          	opt lm
 12027+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 12028+                          	line	69
 12029+ 000000                     	__size_of_asciiToHex	equ	__end_of_asciiToHex-_a
      +                          sciiToHex
 12030+                          ;batchpcb26k20.c: 69: char asciiToHex(char input
      +                          ){
 12031+                          	
 12032+ 00514A                     _asciiToHex:		; BSR set to: ?
 12033+                          
 12034+                          	opt stack 27
 12035+                          	line	70
 12036+ 00514A  0E3A               	movlw	(03Ah)&0ffh
 12037+ 00514C  0102               	movlb	2	; () banked
 12038+ 00514E  0102               	movlb	2	; () banked
 12039+ 005150  6150               	cpfslt	((asciiToHex@input))&0ffh
 12040+ 005152  EFAD  F028         	goto	u2891
 12041+ 005156  EFAF  F028         	goto	u2890
 12042+ 00515A                     u2891:
 12043+ 00515A  EFB5  F028         	goto	l267
 12044+ 00515E                     u2890:
 12045+ 00515E  0E30               	movlw	(030h)&0ffh
 12046+ 005160  0102               	movlb	2	; () banked
 12047+ 005162  0102               	movlb	2	; () banked
 12048+ 005164  5F50               	subwf	((asciiToHex@input))&0ffh
 12049+ 005166  EFB9  F028         	goto	l268
 12050+                          	line	71
 12051+                          	
 12052+ 00516A                     l267:		; BSR set to: ?
 12053+                          
 12054+                          ;batchpcb26k20.c: 71: else input -= 55;
 12055+ 00516A  0E37               	movlw	(037h)&0ffh
 12056+ 00516C  0102               	movlb	2	; () banked
 12057+ 00516E  0102               	movlb	2	; () banked
 12058+ 005170  5F50               	subwf	((asciiToHex@input))&0ffh
 12059+                          	
 12060+ 005172                     l268:		; BSR set to: ?
 12061+                          
 12062+                          	line	72
 12063+                          ;batchpcb26k20.c: 72: return input;
 12064+ 005172  0102               	movlb	2	; () banked
 12065+ 005174  0102               	movlb	2	; () banked
 12066+ 005176  5150               	movf	((asciiToHex@input))&0ffh,w
 12067+ 005178  EFBE  F028         	goto	l266
 12068+                          	line	73
 12069+                          ;batchpcb26k20.c: 73: }
 12070+ 00517C                     l266:
 12071+                          			; BSR set to: ?
 12072+                          
 12073+ 00517C  0012               	return
 12074+                          	opt stack 0
 12075+                          GLOBAL __end_of_asciiToHex
 12076+ 00517E                     	__end_of_asciiToHex:
 12077+                          	FNSIZE	_asciiToHex,0,1
 12078+                          ; =============== function _asciiToHex ends ====
      +                          ========
 12079+                          
 12080+                          	signat	_asciiToHex,4217
 12081+                          	global	_readAd
 12082+                          	global	??_readAd
 12083+                          	global	?_readAd
 12084+                          
 12085+                          ; *************** function _readAd *************
      +                          ****
 12086+                          ; Defined at:
 12087+                          ;		line 114 in file "D:\Hobby\Prosjekter\MultiTR
      +                          X\Firmware\FW1.2\batchpcb26k20.c"
 12088+                          ; Parameters:
 12089+                          ;		None
 12090+                          ; Auto variables:
 12091+                          ;		value       	       	type: unsigned char 
 12092+                          ;		temp        	       	type: int 
 12093+                          ;		j           	       	type: int 
 12094+                          ; Return value:
 12095+                          ;		type: unsigned int 
 12096+                          ;		size: 2
 12097+                          ; Registers used:
 12098+                          ;		wreg, status,2, status,0
 12099+                          ; Tracked objects:
 12100+                          ;		On entry : 0/0
 12101+                          ;		On exit  : 0/0
 12102+                          ;		Unchanged: 0/0
 12103+                          ; Data sizes:
 12104+                          ;		Autos:    5
 12105+                          ;		Params:   2
 12106+                          ;		Temp:     3
 12107+                          ;		Total:   10
 12108+                          ; This function calls:
 12109+                          ;		Nothing
 12110+                          ; This function is called by:
 12111+                          ;		_parseSettings
 12112+                          ; This function uses a non-reentrant model
 12113+                          ; 
 12114+                                  psect   text29,class=CODE,space=0,reloc=
      +                          2
 12115+                          
 12116+                          	opt lm
 12117+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 12118+                          	line	114
 12119+ 000000                     	__size_of_readAd	equ	__end_of_readAd-_readAd
 12120+                          ;batchpcb26k20.c: 114: unsigned int readAd(){
 12121+                          	
 12122+ 0042CA                     _readAd:		; BSR set to: ?
 12123+                          
 12124+                          	opt stack 27
 12125+                          	line	115
 12126+                          ;batchpcb26k20.c: 115: char value = 0;
 12127+ 0042CA  0102               	movlb	2	; () banked
 12128+ 0042CC  6F47               	movwf	(??_readAd+5+0)&0ffh
 12129+ 0042CE  0E00               	movlw	low(0)
 12130+ 0042D0  0102               	movlb	2	; () banked
 12131+ 0042D2  0102               	movlb	2	; () banked
 12132+ 0042D4  6F42               	movwf	((readAd@value))&0ffh
 12133+ 0042D6  0102               	movlb	2	; () banked
 12134+ 0042D8  5147               	movf	(??_readAd+5+0)&0ffh,w
 12135+                          	line	116
 12136+                          ;batchpcb26k20.c: 116: int temp = 0;
 12137+ 0042DA  0E00               	movlw	low(0)
 12138+ 0042DC  0102               	movlb	2	; () banked
 12139+ 0042DE  0102               	movlb	2	; () banked
 12140+ 0042E0  6F43               	movwf	((readAd@temp))&0ffh
 12141+ 0042E2  0E00               	movlw	high(0)
 12142+ 0042E4  0102               	movlb	2	; () banked
 12143+ 0042E6  6F44               	movwf	((readAd@temp+1))&0ffh
 12144+                          	line	117
 12145+                          ;batchpcb26k20.c: 117: for (int j=0; j<1000; j++
      +                          ){
 12146+ 0042E8  0E00               	movlw	low(0)
 12147+ 0042EA  0102               	movlb	2	; () banked
 12148+ 0042EC  0102               	movlb	2	; () banked
 12149+ 0042EE  6F45               	movwf	((readAd@j))&0ffh
 12150+ 0042F0  0E00               	movlw	high(0)
 12151+ 0042F2  0102               	movlb	2	; () banked
 12152+ 0042F4  6F46               	movwf	((readAd@j+1))&0ffh
 12153+ 0042F6  0102               	movlb	2	; () banked
 12154+ 0042F8  0102               	movlb	2	; () banked
 12155+ 0042FA  5146               	movf	((readAd@j+1))&0ffh,w
 12156+ 0042FC  0A80               	xorlw	80h
 12157+ 0042FE  0F7D               	addlw	-((03h)^80h)
 12158+ 004300  0EE8               	movlw	0E8h
 12159+ 004302  B4D8               	btfsc	status,2
 12160+ 004304  5D45               	subwf	((readAd@j))&0ffh,w
 12161+ 004306  A0D8               	btfss	status,0
 12162+ 004308  EF88  F021         	goto	u2981
 12163+ 00430C  EF8A  F021         	goto	u2980
 12164+ 004310                     u2981:
 12165+ 004310  EF8C  F021         	goto	l282
 12166+ 004314                     u2980:
 12167+ 004314  EFE8  F021         	goto	l283
 12168+                          	
 12169+ 004318                     l282:		; BSR set to: ?
 12170+                          
 12171+                          	line	118
 12172+                          ;batchpcb26k20.c: 118: ADCON0 |= 0b00000011;
 12173+ 004318  0E03               	movlw	(03h)&0ffh
 12174+ 00431A  12C2               	iorwf	((c:4034)),c	;volatile
 12175+                          	line	119
 12176+                          ;batchpcb26k20.c: 119: while(ADCON0 & 0b00000010
      +                          );
 12177+ 00431C  EF90  F021         	goto	l285
 12178+                          	
 12179+ 004320                     l285:		; BSR set to: ?
 12180+                          
 12181+                          	
 12182+ 004320  B2C2               	btfsc	((c:4034)),c,(1)&7	;volatile
 12183+ 004322  EF95  F021         	goto	u2991
 12184+ 004326  EF97  F021         	goto	u2990
 12185+ 00432A                     u2991:
 12186+ 00432A  EF90  F021         	goto	l285
 12187+ 00432E                     u2990:
 12188+                          	
 12189+ 00432E                     l287:		; BSR set to: ?
 12190+                          
 12191+                          	line	120
 12192+                          ;batchpcb26k20.c: 120: temp = (ADRESH<<8) | ADRE
      +                          SL;
 12193+ 00432E  50C3               	movf	((c:4035)),c,w	;volatile
 12194+ 004330  CFC4 F247          	movff	(c:4036),??_readAd+5+0	;volatile
 12195+ 004334  0102               	movlb	2	; () banked
 12196+ 004336  6B48               	clrf	(??_readAd+5+0+1)&0ffh
 12197+ 004338  C247  F248         	movff	??_readAd+5+0,??_readAd+5+1
 12198+ 00433C  0102               	movlb	2	; () banked
 12199+ 00433E  6B47               	clrf	(??_readAd+5+0)&0ffh
 12200+ 004340  0102               	movlb	2	; () banked
 12201+ 004342  1147               	iorwf	(??_readAd+5+0)&0ffh,w
 12202+ 004344  0102               	movlb	2	; () banked
 12203+                          	
 12204+ 004346  0102               	movlb	2	; () banked
 12205+ 004348  6F43               	movwf	((readAd@temp))&0ffh
 12206+ 00434A  0102               	movlb	2	; () banked
 12207+ 00434C  5148               	movf	(??_readAd+5+1)&0ffh,w
 12208+ 00434E  0102               	movlb	2	; () banked
 12209+ 004350  6F44               	movwf	1+((readAd@temp))&0ffh
 12210+                          	line	121
 12211+                          ;batchpcb26k20.c: 121: temp >>= 2;
 12212+ 004352  0102               	movlb	2	; () banked
 12213+ 004354  0102               	movlb	2	; () banked
 12214+ 004356  3544               	rlcf	((readAd@temp+1))&0ffh,w
 12215+ 004358  0102               	movlb	2	; () banked
 12216+ 00435A  3344               	rrcf	((readAd@temp+1))&0ffh
 12217+ 00435C  0102               	movlb	2	; () banked
 12218+ 00435E  3343               	rrcf	((readAd@temp))&0ffh
 12219+ 004360  0102               	movlb	2	; () banked
 12220+ 004362  0102               	movlb	2	; () banked
 12221+ 004364  3544               	rlcf	((readAd@temp+1))&0ffh,w
 12222+ 004366  0102               	movlb	2	; () banked
 12223+ 004368  3344               	rrcf	((readAd@temp+1))&0ffh
 12224+ 00436A  0102               	movlb	2	; () banked
 12225+ 00436C  3343               	rrcf	((readAd@temp))&0ffh
 12226+                          	line	122
 12227+                          ;batchpcb26k20.c: 122: if (temp > value) value =
      +                           temp;
 12228+ 00436E  0102               	movlb	2	; () banked
 12229+ 004370  C242  F247         	movff	(readAd@value),??_readAd+5+0
 12230+ 004374  0102               	movlb	2	; () banked
 12231+ 004376  6B48               	clrf	(??_readAd+5+0+1)&0ffh
 12232+ 004378  0102               	movlb	2	; () banked
 12233+ 00437A  5148               	movf	(??_readAd+5+1)&0ffh,w
 12234+ 00437C  0A80               	xorlw	80h
 12235+ 00437E  0102               	movlb	2	; () banked
 12236+ 004380  6F49               	movwf	(??_readAd+7+0)&0ffh
 12237+ 004382  0102               	movlb	2	; () banked
 12238+ 004384  0102               	movlb	2	; () banked
 12239+ 004386  5143               	movf	((readAd@temp))&0ffh,w
 12240+ 004388  0102               	movlb	2	; () banked
 12241+ 00438A  5D47               	subwf	(??_readAd+5+0)&0ffh,w
 12242+ 00438C  0102               	movlb	2	; () banked
 12243+ 00438E  0102               	movlb	2	; () banked
 12244+ 004390  5144               	movf	((readAd@temp+1))&0ffh,w
 12245+ 004392  0A80               	xorlw	80h
 12246+ 004394  0102               	movlb	2	; () banked
 12247+ 004396  5949               	subwfb	(??_readAd+7+0)&0ffh,w
 12248+ 004398  B0D8               	btfsc	status,0
 12249+ 00439A  EFD1  F021         	goto	u3001
 12250+ 00439E  EFD3  F021         	goto	u3000
 12251+ 0043A2                     u3001:
 12252+ 0043A2  EFD5  F021         	goto	l288
 12253+ 0043A6                     u3000:
 12254+ 0043A6  C243  F242         	movff	(readAd@temp),(readAd@value)
 12255+                          	
 12256+ 0043AA                     l288:		; BSR set to: ?
 12257+                          
 12258+                          	line	117
 12259+ 0043AA  0102               	movlb	2	; () banked
 12260+ 0043AC  0102               	movlb	2	; () banked
 12261+ 0043AE  4B45               	infsnz	((readAd@j))&0ffh
 12262+ 0043B0  2B46               	incf	((readAd@j+1))&0ffh
 12263+ 0043B2  0102               	movlb	2	; () banked
 12264+ 0043B4  0102               	movlb	2	; () banked
 12265+ 0043B6  5146               	movf	((readAd@j+1))&0ffh,w
 12266+ 0043B8  0A80               	xorlw	80h
 12267+ 0043BA  0F7D               	addlw	-((03h)^80h)
 12268+ 0043BC  0EE8               	movlw	0E8h
 12269+ 0043BE  B4D8               	btfsc	status,2
 12270+ 0043C0  5D45               	subwf	((readAd@j))&0ffh,w
 12271+ 0043C2  A0D8               	btfss	status,0
 12272+ 0043C4  EFE6  F021         	goto	u3011
 12273+ 0043C8  EFE8  F021         	goto	u3010
 12274+ 0043CC                     u3011:
 12275+ 0043CC  EF8C  F021         	goto	l282
 12276+ 0043D0                     u3010:
 12277+                          	
 12278+ 0043D0                     l283:		; BSR set to: ?
 12279+                          
 12280+                          	line	124
 12281+ 0043D0  0102               	movlb	2	; () banked
 12282+ 0043D2  0102               	movlb	2	; () banked
 12283+ 0043D4  C242  F240         	movff	(readAd@value),(?_readAd)
 12284+ 0043D8  0102               	movlb	2	; () banked
 12285+ 0043DA  0102               	movlb	2	; () banked
 12286+ 0043DC  6B41               	clrf	((?_readAd+1))&0ffh
 12287+ 0043DE  EFF1  F021         	goto	l281
 12288+                          	line	125
 12289+                          ;batchpcb26k20.c: 125: }
 12290+ 0043E2                     l281:
 12291+                          			; BSR set to: ?
 12292+                          
 12293+ 0043E2  0012               	return
 12294+                          	opt stack 0
 12295+                          GLOBAL __end_of_readAd
 12296+ 0043E4                     	__end_of_readAd:
 12297+                          	FNSIZE	_readAd,8,2
 12298+                          ; =============== function _readAd ends ========
      +                          ====
 12299+                          
 12300+                          	signat	_readAd,90
 12301+                          	global	_blinkRxLed
 12302+                          	global	??_blinkRxLed
 12303+                          	global	?_blinkRxLed
 12304+                          
 12305+                          ; *************** function _blinkRxLed *********
      +                          ********
 12306+                          ; Defined at:
 12307+                          ;		line 108 in file "D:\Hobby\Prosjekter\MultiTR
      +                          X\Firmware\FW1.2\batchpcb26k20.c"
 12308+                          ; Parameters:
 12309+                          ;		None
 12310+                          ; Auto variables:
 12311+                          ;		None
 12312+                          ; Return value:
 12313+                          ;		type: void 
 12314+                          ;		size: 0
 12315+                          ; Registers used:
 12316+                          ;		wreg, status,2
 12317+                          ; Tracked objects:
 12318+                          ;		On entry : 0/0
 12319+                          ;		On exit  : 0/0
 12320+                          ;		Unchanged: 0/0
 12321+                          ; Data sizes:
 12322+                          ;		Autos:    0
 12323+                          ;		Params:   0
 12324+                          ;		Temp:     0
 12325+                          ;		Total:    0
 12326+                          ; This function calls:
 12327+                          ;		Nothing
 12328+                          ; This function is called by:
 12329+                          ;		_bmcPrint
 12330+                          ;		_gaoPrint
 12331+                          ;		_nexaPrint
 12332+                          ;		_esicPrint
 12333+                          ;		_doroPrint
 12334+                          ; This function uses a non-reentrant model
 12335+                          ; 
 12336+                                  psect   text30,class=CODE,space=0,reloc=
      +                          2
 12337+                          
 12338+                          	opt lm
 12339+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 12340+                          	line	108
 12341+ 000000                     	__size_of_blinkRxLed	equ	__end_of_blinkRxLed-_b
      +                          linkRxLed
 12342+                          ;batchpcb26k20.c: 108: void blinkRxLed(){
 12343+                          	
 12344+ 00521A                     _blinkRxLed:		; BSR set to: ?
 12345+                          
 12346+                          	opt stack 27
 12347+                          	line	109
 12348+ 00521A  8A8B               	bsf	c:(31837/8),(31837)&7	;volatile
 12349+                          	line	110
 12350+                          ;batchpcb26k20.c: 110: TMR3H = 0; TMR3L = 0;
 12351+ 00521C  0E00               	movlw	low(0)
 12352+ 00521E  6EB3               	movwf	((c:4019)),c	;volatile
 12353+ 005220  0E00               	movlw	low(0)
 12354+ 005222  6EB2               	movwf	((c:4018)),c	;volatile
 12355+                          	line	111
 12356+                          ;batchpcb26k20.c: 111: TMR3ON = 1;
 12357+ 005224  80B1               	bsf	c:(32136/8),(32136)&7	;volatile
 12358+                          	line	112
 12359+                          ;batchpcb26k20.c: 112: }
 12360+ 005226                     l280:
 12361+                          			; BSR set to: ?
 12362+                          
 12363+ 005226  0012               	return
 12364+                          	opt stack 0
 12365+                          GLOBAL __end_of_blinkRxLed
 12366+ 005228                     	__end_of_blinkRxLed:
 12367+                          	FNSIZE	_blinkRxLed,0,0
 12368+                          ; =============== function _blinkRxLed ends ====
      +                          ========
 12369+                          
 12370+                          	signat	_blinkRxLed,88
 12371+                          	global	_saveEeprom
 12372+                          	global	??_saveEeprom
 12373+                          	global	?_saveEeprom
 12374+                          
 12375+                          ; *************** function _saveEeprom *********
      +                          ********
 12376+                          ; Defined at:
 12377+                          ;		line 43 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 12378+                          ; Parameters:
 12379+                          ;		settingsp      size:   2offs:   0	type: PTR u
      +                          nsigned char ; Largest target is 14
 12380+                          ;		 -> main@settings(14), 
 12381+                          ; Auto variables:
 12382+                          ;		j           	       	type: unsigned char 
 12383+                          ; Return value:
 12384+                          ;		type: void 
 12385+                          ;		size: 0
 12386+                          ; Registers used:
 12387+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
 12388+                          ; Tracked objects:
 12389+                          ;		On entry : 0/0
 12390+                          ;		On exit  : 0/0
 12391+                          ;		Unchanged: 0/0
 12392+                          ; Data sizes:
 12393+                          ;		Autos:    1
 12394+                          ;		Params:   2
 12395+                          ;		Temp:     1
 12396+                          ;		Total:    4
 12397+                          ; This function calls:
 12398+                          ;		_eeprom_write
 12399+                          ; This function is called by:
 12400+                          ;		_parseSettings
 12401+                          ; This function uses a non-reentrant model
 12402+                          ; 
 12403+                                  psect   text31,class=CODE,space=0,reloc=
      +                          2
 12404+                          
 12405+                          	opt lm
 12406+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 12407+                          	line	43
 12408+ 000000                     	__size_of_saveEeprom	equ	__end_of_saveEeprom-_s
      +                          aveEeprom
 12409+                          ;batchpcb26k20.c: 43: void saveEeprom(char* sett
      +                          ingsp){
 12410+                          	
 12411+ 004E1C                     _saveEeprom:		; BSR set to: ?
 12412+                          
 12413+                          	opt stack 27
 12414+                          	line	44
 12415+                          ;batchpcb26k20.c: 44: for (char j=0; j<settingsp
      +                          [0]; j++) eeprom_write(j, settingsp[j]);
 12416+ 004E1C  0102               	movlb	2	; () banked
 12417+ 004E1E  6F43               	movwf	(??_saveEeprom+1+0)&0ffh
 12418+ 004E20  0E00               	movlw	low(0)
 12419+ 004E22  0102               	movlb	2	; () banked
 12420+ 004E24  0102               	movlb	2	; () banked
 12421+ 004E26  6F42               	movwf	((saveEeprom@j))&0ffh
 12422+ 004E28  0102               	movlb	2	; () banked
 12423+ 004E2A  5143               	movf	(??_saveEeprom+1+0)&0ffh,w
 12424+ 004E2C  EF35  F027         	goto	l247
 12425+                          	
 12426+ 004E30                     l244:		; BSR set to: ?
 12427+                          
 12428+ 004E30  0102               	movlb	2	; () banked
 12429+ 004E32  0102               	movlb	2	; () banked
 12430+ 004E34  5142               	movf	((saveEeprom@j))&0ffh,w
 12431+ 004E36  0102               	movlb	2	; () banked
 12432+ 004E38  0102               	movlb	2	; () banked
 12433+ 004E3A  2540               	addwf	((saveEeprom@settingsp))&0ffh,w
 12434+ 004E3C  6EE9               	movwf	c:fsr0l
 12435+ 004E3E  0102               	movlb	2	; () banked
 12436+ 004E40  0E00               	movlw	0
 12437+ 004E42  0102               	movlb	2	; () banked
 12438+ 004E44  0102               	movlb	2	; () banked
 12439+ 004E46  2141               	addwfc	((saveEeprom@settingsp+1))&0ffh,w
 12440+ 004E48  6EEA               	movwf	1+c:fsr0l
 12441+ 004E4A  50EF               	movf	indf0,w
 12442+ 004E4C  0102               	movlb	2	; () banked
 12443+ 004E4E  0102               	movlb	2	; () banked
 12444+ 004E50  6F46               	movwf	(0+(?_eeprom_write+02h))&0ffh
 12445+ 004E52  0102               	movlb	2	; () banked
 12446+ 004E54  0102               	movlb	2	; () banked
 12447+ 004E56  C242  F244         	movff	(saveEeprom@j),(?_eeprom_write)
 12448+ 004E5A  0102               	movlb	2	; () banked
 12449+ 004E5C  0102               	movlb	2	; () banked
 12450+ 004E5E  6B45               	clrf	((?_eeprom_write+1))&0ffh
 12451+ 004E60  ECDA  F027         	call	_eeprom_write	;wreg free
 12452+ 004E64  0102               	movlb	2	; () banked
 12453+ 004E66  0102               	movlb	2	; () banked
 12454+ 004E68  2B42               	incf	((saveEeprom@j))&0ffh
 12455+                          	
 12456+ 004E6A                     l247:		; BSR set to: ?
 12457+                          
 12458+ 004E6A  C240  FFE9         	movff	(saveEeprom@settingsp),fsr0l
 12459+ 004E6E  C241  FFEA         	movff	(saveEeprom@settingsp+1),fsr0h
 12460+ 004E72  50EF               	movf	indf0,w
 12461+ 004E74  0102               	movlb	2	; () banked
 12462+ 004E76  0102               	movlb	2	; () banked
 12463+ 004E78  5D42               	subwf	((saveEeprom@j))&0ffh,w
 12464+ 004E7A  A0D8               	btfss	status,0
 12465+ 004E7C  EF42  F027         	goto	u2811
 12466+ 004E80  EF44  F027         	goto	u2810
 12467+ 004E84                     u2811:
 12468+ 004E84  EF18  F027         	goto	l244
 12469+ 004E88                     u2810:
 12470+                          	
 12471+ 004E88                     l245:		; BSR set to: ?
 12472+                          
 12473+                          	line	45
 12474+                          ;batchpcb26k20.c: 45: }
 12475+ 004E88                     l243:
 12476+                          			; BSR set to: ?
 12477+                          
 12478+ 004E88  0012               	return
 12479+                          	opt stack 0
 12480+                          GLOBAL __end_of_saveEeprom
 12481+ 004E8A                     	__end_of_saveEeprom:
 12482+                          	FNSIZE	_saveEeprom,2,2
 12483+                          ; =============== function _saveEeprom ends ====
      +                          ========
 12484+                          
 12485+                          	signat	_saveEeprom,4216
 12486+                          	global	___aldiv
 12487+                          	global	??___aldiv
 12488+                          	global	?___aldiv
 12489+                          
 12490+                          ; *************** function ___aldiv ************
      +                          *****
 12491+                          ; Defined at:
 12492+                          ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\aldiv.c"
 12493+                          ; Parameters:
 12494+                          ;		dividend       size:   4offs:   0	type: long 
 12495+                          ;		divisor        size:   4offs:   4	type: long 
 12496+                          ; Auto variables:
 12497+                          ;		counter     	       	type: unsigned char 
 12498+                          ;		sign        	       	type: unsigned char 
 12499+                          ;		quotient    	       	type: long 
 12500+                          ; Return value:
 12501+                          ;		type: long 
 12502+                          ;		size: 4
 12503+                          ; Registers used:
 12504+                          ;		wreg, status,2, status,0
 12505+                          ; Tracked objects:
 12506+                          ;		On entry : 0/0
 12507+                          ;		On exit  : 0/0
 12508+                          ;		Unchanged: 0/0
 12509+                          ; Data sizes:
 12510+                          ;		Autos:    6
 12511+                          ;		Params:   8
 12512+                          ;		Temp:     1
 12513+                          ;		Total:   15
 12514+                          ; This function calls:
 12515+                          ; This function is called by:
 12516+                          ;		_esicPrint
 12517+                          ; This function uses a non-reentrant model
 12518+                          ; 
 12519+                                  psect   text32,class=CODE,space=0,reloc=
      +                          2
 12520+                          
 12521+                          	opt lm
 12522+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\aldiv.c"
 12523+                          	line	5
 12524+ 000000                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
 12525+                          	
 12526+ 003632                     ___aldiv:		; BSR set to: ?
 12527+                          
 12528+                          	opt stack 27
 12529+                          	line	9
 12530+ 003632  0102               	movlb	2	; () banked
 12531+ 003634  6F5D               	movwf	(??___aldiv+6+0)&0ffh
 12532+ 003636  0E00               	movlw	low(0)
 12533+ 003638  0102               	movlb	2	; () banked
 12534+ 00363A  0102               	movlb	2	; () banked
 12535+ 00363C  6F58               	movwf	((___aldiv@sign))&0ffh
 12536+ 00363E  0102               	movlb	2	; () banked
 12537+ 003640  515D               	movf	(??___aldiv+6+0)&0ffh,w
 12538+                          	line	10
 12539+ 003642  0102               	movlb	2	; () banked
 12540+ 003644  0102               	movlb	2	; () banked
 12541+ 003646  AF56               	btfss	((___aldiv@divisor+3))&0ffh,7
 12542+ 003648  EF28  F01B         	goto	u8361
 12543+ 00364C  EF2A  F01B         	goto	u8360
 12544+ 003650                     u8361:
 12545+ 003650  EF42  F01B         	goto	l1030
 12546+ 003654                     u8360:
 12547+                          	line	11
 12548+ 003654  0102               	movlb	2	; () banked
 12549+ 003656  0102               	movlb	2	; () banked
 12550+ 003658  1F56               	comf	((___aldiv@divisor+3))&0ffh
 12551+ 00365A  0102               	movlb	2	; () banked
 12552+ 00365C  1F55               	comf	((___aldiv@divisor+2))&0ffh
 12553+ 00365E  0102               	movlb	2	; () banked
 12554+ 003660  1F54               	comf	((___aldiv@divisor+1))&0ffh
 12555+ 003662  0102               	movlb	2	; () banked
 12556+ 003664  6D53               	negf	((___aldiv@divisor))&0ffh
 12557+ 003666  0E00               	movlw	0
 12558+ 003668  0102               	movlb	2	; () banked
 12559+ 00366A  2354               	addwfc	((___aldiv@divisor+1))&0ffh
 12560+ 00366C  0102               	movlb	2	; () banked
 12561+ 00366E  2355               	addwfc	((___aldiv@divisor+2))&0ffh
 12562+ 003670  0102               	movlb	2	; () banked
 12563+ 003672  2356               	addwfc	((___aldiv@divisor+3))&0ffh
 12564+                          	line	12
 12565+ 003674  0102               	movlb	2	; () banked
 12566+ 003676  6F5D               	movwf	(??___aldiv+6+0)&0ffh
 12567+ 003678  0E01               	movlw	low(01h)
 12568+ 00367A  0102               	movlb	2	; () banked
 12569+ 00367C  0102               	movlb	2	; () banked
 12570+ 00367E  6F58               	movwf	((___aldiv@sign))&0ffh
 12571+ 003680  0102               	movlb	2	; () banked
 12572+ 003682  515D               	movf	(??___aldiv+6+0)&0ffh,w
 12573+                          	line	13
 12574+                          	
 12575+ 003684                     l1030:		; BSR set to: ?
 12576+                          
 12577+                          	line	14
 12578+ 003684  0102               	movlb	2	; () banked
 12579+ 003686  0102               	movlb	2	; () banked
 12580+ 003688  AF52               	btfss	((___aldiv@dividend+3))&0ffh,7
 12581+ 00368A  EF49  F01B         	goto	u8371
 12582+ 00368E  EF4B  F01B         	goto	u8370
 12583+ 003692                     u8371:
 12584+ 003692  EF5F  F01B         	goto	l1031
 12585+ 003696                     u8370:
 12586+                          	line	15
 12587+ 003696  0102               	movlb	2	; () banked
 12588+ 003698  0102               	movlb	2	; () banked
 12589+ 00369A  1F52               	comf	((___aldiv@dividend+3))&0ffh
 12590+ 00369C  0102               	movlb	2	; () banked
 12591+ 00369E  1F51               	comf	((___aldiv@dividend+2))&0ffh
 12592+ 0036A0  0102               	movlb	2	; () banked
 12593+ 0036A2  1F50               	comf	((___aldiv@dividend+1))&0ffh
 12594+ 0036A4  0102               	movlb	2	; () banked
 12595+ 0036A6  6D4F               	negf	((___aldiv@dividend))&0ffh
 12596+ 0036A8  0E00               	movlw	0
 12597+ 0036AA  0102               	movlb	2	; () banked
 12598+ 0036AC  2350               	addwfc	((___aldiv@dividend+1))&0ffh
 12599+ 0036AE  0102               	movlb	2	; () banked
 12600+ 0036B0  2351               	addwfc	((___aldiv@dividend+2))&0ffh
 12601+ 0036B2  0102               	movlb	2	; () banked
 12602+ 0036B4  2352               	addwfc	((___aldiv@dividend+3))&0ffh
 12603+                          	line	16
 12604+ 0036B6  0E01               	movlw	(01h)&0ffh
 12605+ 0036B8  0102               	movlb	2	; () banked
 12606+ 0036BA  0102               	movlb	2	; () banked
 12607+ 0036BC  1B58               	xorwf	((___aldiv@sign))&0ffh
 12608+                          	line	17
 12609+                          	
 12610+ 0036BE                     l1031:		; BSR set to: ?
 12611+                          
 12612+                          	line	18
 12613+ 0036BE  0E00               	movlw	low(0)
 12614+ 0036C0  0102               	movlb	2	; () banked
 12615+ 0036C2  0102               	movlb	2	; () banked
 12616+ 0036C4  6F59               	movwf	((___aldiv@quotient))&0ffh
 12617+ 0036C6  0E00               	movlw	high(0)
 12618+ 0036C8  0102               	movlb	2	; () banked
 12619+ 0036CA  6F5A               	movwf	((___aldiv@quotient+1))&0ffh
 12620+ 0036CC  0E00               	movlw	low highword(0)
 12621+ 0036CE  0102               	movlb	2	; () banked
 12622+ 0036D0  6F5B               	movwf	((___aldiv@quotient+2))&0ffh
 12623+ 0036D2  0E00               	movlw	high highword(0)
 12624+ 0036D4  0102               	movlb	2	; () banked
 12625+ 0036D6  6F5C               	movwf	((___aldiv@quotient+3))&0ffh
 12626+                          	line	19
 12627+ 0036D8  0102               	movlb	2	; () banked
 12628+ 0036DA  5156               	movf	((___aldiv@divisor+3))&0ffh,w
 12629+ 0036DC  1153               	iorwf ((___aldiv@divisor))&0ffh,w
 12630+ 0036DE  1154               	iorwf ((___aldiv@divisor+1))&0ffh,w
 12631+ 0036E0  1155               	iorwf ((___aldiv@divisor+2))&0ffh,w
 12632+                          
 12633+ 0036E2  B4D8               	btfsc	status,2
 12634+ 0036E4  EF76  F01B         	goto	u8381
 12635+ 0036E8  EF78  F01B         	goto	u8380
 12636+ 0036EC                     u8381:
 12637+ 0036EC  EFEB  F01B         	goto	l1032
 12638+ 0036F0                     u8380:
 12639+                          	line	20
 12640+ 0036F0  0102               	movlb	2	; () banked
 12641+ 0036F2  6F5D               	movwf	(??___aldiv+6+0)&0ffh
 12642+ 0036F4  0E01               	movlw	low(01h)
 12643+ 0036F6  0102               	movlb	2	; () banked
 12644+ 0036F8  0102               	movlb	2	; () banked
 12645+ 0036FA  6F57               	movwf	((___aldiv@counter))&0ffh
 12646+ 0036FC  0102               	movlb	2	; () banked
 12647+ 0036FE  515D               	movf	(??___aldiv+6+0)&0ffh,w
 12648+                          	line	21
 12649+ 003700  EF8F  F01B         	goto	l1033
 12650+                          	
 12651+ 003704                     l1034:		; BSR set to: ?
 12652+                          
 12653+                          	line	22
 12654+ 003704  0102               	movlb	2	; () banked
 12655+ 003706  90D8               	bcf	status,0
 12656+ 003708  0102               	movlb	2	; () banked
 12657+ 00370A  3753               	rlcf	((___aldiv@divisor))&0ffh
 12658+ 00370C  0102               	movlb	2	; () banked
 12659+ 00370E  3754               	rlcf	((___aldiv@divisor+1))&0ffh
 12660+ 003710  0102               	movlb	2	; () banked
 12661+ 003712  3755               	rlcf	((___aldiv@divisor+2))&0ffh
 12662+ 003714  0102               	movlb	2	; () banked
 12663+ 003716  3756               	rlcf	((___aldiv@divisor+3))&0ffh
 12664+                          	line	23
 12665+ 003718  0102               	movlb	2	; () banked
 12666+ 00371A  0102               	movlb	2	; () banked
 12667+ 00371C  2B57               	incf	((___aldiv@counter))&0ffh
 12668+                          	line	24
 12669+                          	
 12670+ 00371E                     l1033:		; BSR set to: ?
 12671+                          
 12672+                          	line	21
 12673+ 00371E  0102               	movlb	2	; () banked
 12674+                          	
 12675+ 003720  0102               	movlb	2	; () banked
 12676+ 003722  AF56               	btfss	((___aldiv@divisor+3))&0ffh,(31)&7
 12677+ 003724  EF96  F01B         	goto	u8391
 12678+ 003728  EF98  F01B         	goto	u8390
 12679+ 00372C                     u8391:
 12680+ 00372C  EF82  F01B         	goto	l1034
 12681+ 003730                     u8390:
 12682+                          	
 12683+ 003730                     l1035:		; BSR set to: ?
 12684+                          
 12685+                          	line	25
 12686+                          	
 12687+ 003730                     l1038:		; BSR set to: ?
 12688+                          
 12689+                          	line	26
 12690+ 003730  0102               	movlb	2	; () banked
 12691+ 003732  90D8               	bcf	status,0
 12692+ 003734  0102               	movlb	2	; () banked
 12693+ 003736  3759               	rlcf	((___aldiv@quotient))&0ffh
 12694+ 003738  0102               	movlb	2	; () banked
 12695+ 00373A  375A               	rlcf	((___aldiv@quotient+1))&0ffh
 12696+ 00373C  0102               	movlb	2	; () banked
 12697+ 00373E  375B               	rlcf	((___aldiv@quotient+2))&0ffh
 12698+ 003740  0102               	movlb	2	; () banked
 12699+ 003742  375C               	rlcf	((___aldiv@quotient+3))&0ffh
 12700+                          	line	27
 12701+ 003744  0102               	movlb	2	; () banked
 12702+ 003746  0102               	movlb	2	; () banked
 12703+ 003748  5153               	movf	((___aldiv@divisor))&0ffh,w
 12704+ 00374A  0102               	movlb	2	; () banked
 12705+ 00374C  0102               	movlb	2	; () banked
 12706+ 00374E  5D4F               	subwf	((___aldiv@dividend))&0ffh,w
 12707+ 003750  0102               	movlb	2	; () banked
 12708+ 003752  0102               	movlb	2	; () banked
 12709+ 003754  5154               	movf	((___aldiv@divisor+1))&0ffh,w
 12710+ 003756  0102               	movlb	2	; () banked
 12711+ 003758  0102               	movlb	2	; () banked
 12712+ 00375A  5950               	subwfb	((___aldiv@dividend+1))&0ffh,w
 12713+ 00375C  0102               	movlb	2	; () banked
 12714+ 00375E  0102               	movlb	2	; () banked
 12715+ 003760  5155               	movf	((___aldiv@divisor+2))&0ffh,w
 12716+ 003762  0102               	movlb	2	; () banked
 12717+ 003764  0102               	movlb	2	; () banked
 12718+ 003766  5951               	subwfb	((___aldiv@dividend+2))&0ffh,w
 12719+ 003768  0102               	movlb	2	; () banked
 12720+ 00376A  0102               	movlb	2	; () banked
 12721+ 00376C  5156               	movf	((___aldiv@divisor+3))&0ffh,w
 12722+ 00376E  0102               	movlb	2	; () banked
 12723+ 003770  0102               	movlb	2	; () banked
 12724+ 003772  5952               	subwfb	((___aldiv@dividend+3))&0ffh,w
 12725+ 003774  A0D8               	btfss	status,0
 12726+ 003776  EFBF  F01B         	goto	u8401
 12727+ 00377A  EFC1  F01B         	goto	u8400
 12728+ 00377E                     u8401:
 12729+ 00377E  EFDC  F01B         	goto	l1039
 12730+ 003782                     u8400:
 12731+                          	line	28
 12732+ 003782  0102               	movlb	2	; () banked
 12733+ 003784  0102               	movlb	2	; () banked
 12734+ 003786  5153               	movf	((___aldiv@divisor))&0ffh,w
 12735+ 003788  0102               	movlb	2	; () banked
 12736+ 00378A  0102               	movlb	2	; () banked
 12737+ 00378C  5F4F               	subwf	((___aldiv@dividend))&0ffh
 12738+ 00378E  0102               	movlb	2	; () banked
 12739+ 003790  0102               	movlb	2	; () banked
 12740+ 003792  5154               	movf	((___aldiv@divisor+1))&0ffh,w
 12741+ 003794  0102               	movlb	2	; () banked
 12742+ 003796  0102               	movlb	2	; () banked
 12743+ 003798  5B50               	subwfb	((___aldiv@dividend+1))&0ffh
 12744+ 00379A  0102               	movlb	2	; () banked
 12745+ 00379C  0102               	movlb	2	; () banked
 12746+ 00379E  5155               	movf	((___aldiv@divisor+2))&0ffh,w
 12747+ 0037A0  0102               	movlb	2	; () banked
 12748+ 0037A2  0102               	movlb	2	; () banked
 12749+ 0037A4  5B51               	subwfb	((___aldiv@dividend+2))&0ffh
 12750+ 0037A6  0102               	movlb	2	; () banked
 12751+ 0037A8  0102               	movlb	2	; () banked
 12752+ 0037AA  5156               	movf	((___aldiv@divisor+3))&0ffh,w
 12753+ 0037AC  0102               	movlb	2	; () banked
 12754+ 0037AE  0102               	movlb	2	; () banked
 12755+ 0037B0  5B52               	subwfb	((___aldiv@dividend+3))&0ffh
 12756+                          	line	29
 12757+ 0037B2  0102               	movlb	2	; () banked
 12758+ 0037B4  0102               	movlb	2	; () banked
 12759+ 0037B6  8159               	bsf	(0+(0/8)+(___aldiv@quotient))&0ffh,(0)&7
 12760+                          	line	30
 12761+                          	
 12762+ 0037B8                     l1039:		; BSR set to: ?
 12763+                          
 12764+                          	line	31
 12765+ 0037B8  0102               	movlb	2	; () banked
 12766+ 0037BA  90D8               	bcf	status,0
 12767+ 0037BC  0102               	movlb	2	; () banked
 12768+ 0037BE  3356               	rrcf	((___aldiv@divisor+3))&0ffh
 12769+ 0037C0  0102               	movlb	2	; () banked
 12770+ 0037C2  3355               	rrcf	((___aldiv@divisor+2))&0ffh
 12771+ 0037C4  0102               	movlb	2	; () banked
 12772+ 0037C6  3354               	rrcf	((___aldiv@divisor+1))&0ffh
 12773+ 0037C8  0102               	movlb	2	; () banked
 12774+ 0037CA  3353               	rrcf	((___aldiv@divisor))&0ffh
 12775+                          	line	32
 12776+ 0037CC  0102               	movlb	2	; () banked
 12777+ 0037CE  0102               	movlb	2	; () banked
 12778+ 0037D0  2F57               	decfsz	((___aldiv@counter))&0ffh
 12779+                          	
 12780+ 0037D2  EF98  F01B         	goto	l1038
 12781+                          	
 12782+ 0037D6                     l1037:		; BSR set to: ?
 12783+                          
 12784+                          	line	33
 12785+                          	
 12786+ 0037D6                     l1032:		; BSR set to: ?
 12787+                          
 12788+                          	line	34
 12789+ 0037D6  0102               	movlb	2	; () banked
 12790+ 0037D8  0102               	movlb	2	; () banked
 12791+ 0037DA  5158               	movf	((___aldiv@sign))&0ffh,w
 12792+ 0037DC  B4D8               	btfsc	status,2
 12793+ 0037DE  EFF3  F01B         	goto	u8411
 12794+ 0037E2  EFF5  F01B         	goto	u8410
 12795+ 0037E6                     u8411:
 12796+ 0037E6  EF05  F01C         	goto	l1040
 12797+ 0037EA                     u8410:
 12798+                          	line	35
 12799+ 0037EA  0102               	movlb	2	; () banked
 12800+ 0037EC  0102               	movlb	2	; () banked
 12801+ 0037EE  1F5C               	comf	((___aldiv@quotient+3))&0ffh
 12802+ 0037F0  0102               	movlb	2	; () banked
 12803+ 0037F2  1F5B               	comf	((___aldiv@quotient+2))&0ffh
 12804+ 0037F4  0102               	movlb	2	; () banked
 12805+ 0037F6  1F5A               	comf	((___aldiv@quotient+1))&0ffh
 12806+ 0037F8  0102               	movlb	2	; () banked
 12807+ 0037FA  6D59               	negf	((___aldiv@quotient))&0ffh
 12808+ 0037FC  0E00               	movlw	0
 12809+ 0037FE  0102               	movlb	2	; () banked
 12810+ 003800  235A               	addwfc	((___aldiv@quotient+1))&0ffh
 12811+ 003802  0102               	movlb	2	; () banked
 12812+ 003804  235B               	addwfc	((___aldiv@quotient+2))&0ffh
 12813+ 003806  0102               	movlb	2	; () banked
 12814+ 003808  235C               	addwfc	((___aldiv@quotient+3))&0ffh
 12815+                          	
 12816+ 00380A                     l1040:		; BSR set to: ?
 12817+                          
 12818+                          	line	36
 12819+ 00380A  C259  F24F         	movff	(___aldiv@quotient),(?___aldiv)
 12820+ 00380E  C25A  F250         	movff	(___aldiv@quotient+1),(?___aldiv+1)
 12821+ 003812  C25B  F251         	movff	(___aldiv@quotient+2),(?___aldiv+2)
 12822+ 003816  C25C  F252         	movff	(___aldiv@quotient+3),(?___aldiv+3)
 12823+ 00381A  EF0F  F01C         	goto	l1029
 12824+                          	line	37
 12825+ 00381E                     l1029:
 12826+                          			; BSR set to: ?
 12827+                          
 12828+ 00381E  0012               	return
 12829+                          	opt stack 0
 12830+                          GLOBAL __end_of___aldiv
 12831+ 003820                     	__end_of___aldiv:
 12832+                          	FNSIZE	___aldiv,7,8
 12833+                          ; =============== function ___aldiv ends =======
      +                          =====
 12834+                          
 12835+                          	signat	___aldiv,8316
 12836+                          	global	_loadEeprom
 12837+                          	global	??_loadEeprom
 12838+                          	global	?_loadEeprom
 12839+                          
 12840+                          ; *************** function _loadEeprom *********
      +                          ********
 12841+                          ; Defined at:
 12842+                          ;		line 47 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 12843+                          ; Parameters:
 12844+                          ;		settingsp      size:   2offs:   0	type: PTR u
      +                          nsigned char ; Largest target is 14
 12845+                          ;		 -> main@settings(14), 
 12846+                          ; Auto variables:
 12847+                          ;		j           	       	type: unsigned char 
 12848+                          ; Return value:
 12849+                          ;		type: void 
 12850+                          ;		size: 0
 12851+                          ; Registers used:
 12852+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
 12853+                          ; Tracked objects:
 12854+                          ;		On entry : 0/0
 12855+                          ;		On exit  : 0/0
 12856+                          ;		Unchanged: 0/0
 12857+                          ; Data sizes:
 12858+                          ;		Autos:    1
 12859+                          ;		Params:   2
 12860+                          ;		Temp:     1
 12861+                          ;		Total:    4
 12862+                          ; This function calls:
 12863+                          ;		_eeprom_read
 12864+                          ; This function is called by:
 12865+                          ;		_parseSettings
 12866+                          ;		_main
 12867+                          ; This function uses a non-reentrant model
 12868+                          ; 
 12869+                                  psect   text33,class=CODE,space=0,reloc=
      +                          2
 12870+                          
 12871+                          	opt lm
 12872+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 12873+                          	line	47
 12874+ 000000                     	__size_of_loadEeprom	equ	__end_of_loadEeprom-_l
      +                          oadEeprom
 12875+                          ;batchpcb26k20.c: 47: void loadEeprom(char* sett
      +                          ingsp){
 12876+                          	
 12877+ 004DAC                     _loadEeprom:		; BSR set to: ?
 12878+                          
 12879+                          	opt stack 27
 12880+                          	line	48
 12881+ 004DAC  0102               	movlb	2	; () banked
 12882+ 004DAE  6F43               	movwf	(??_loadEeprom+1+0)&0ffh
 12883+ 004DB0  0E00               	movlw	low(0)
 12884+ 004DB2  0102               	movlb	2	; () banked
 12885+ 004DB4  0102               	movlb	2	; () banked
 12886+ 004DB6  6F42               	movwf	((loadEeprom@j))&0ffh
 12887+ 004DB8  0102               	movlb	2	; () banked
 12888+ 004DBA  5143               	movf	(??_loadEeprom+1+0)&0ffh,w
 12889+ 004DBC  EFFA  F026         	goto	l252
 12890+                          	
 12891+ 004DC0                     l249:		; BSR set to: ?
 12892+                          
 12893+ 004DC0  0102               	movlb	2	; () banked
 12894+ 004DC2  0102               	movlb	2	; () banked
 12895+ 004DC4  5142               	movf	((loadEeprom@j))&0ffh,w
 12896+ 004DC6  0102               	movlb	2	; () banked
 12897+ 004DC8  0102               	movlb	2	; () banked
 12898+ 004DCA  2540               	addwf	((loadEeprom@settingsp))&0ffh,w
 12899+ 004DCC  6EE9               	movwf	c:fsr0l
 12900+ 004DCE  0102               	movlb	2	; () banked
 12901+ 004DD0  0E00               	movlw	0
 12902+ 004DD2  0102               	movlb	2	; () banked
 12903+ 004DD4  0102               	movlb	2	; () banked
 12904+ 004DD6  2141               	addwfc	((loadEeprom@settingsp+1))&0ffh,w
 12905+ 004DD8  6EEA               	movwf	1+c:fsr0l
 12906+ 004DDA  0102               	movlb	2	; () banked
 12907+ 004DDC  0102               	movlb	2	; () banked
 12908+ 004DDE  C242  F244         	movff	(loadEeprom@j),(?_eeprom_read)
 12909+ 004DE2  0102               	movlb	2	; () banked
 12910+ 004DE4  0102               	movlb	2	; () banked
 12911+ 004DE6  6B45               	clrf	((?_eeprom_read+1))&0ffh
 12912+ 004DE8  ECEB  F028         	call	_eeprom_read	;wreg free
 12913+ 004DEC  6EEF               	movwf	indf0
 12914+                          
 12915+ 004DEE  0102               	movlb	2	; () banked
 12916+ 004DF0  0102               	movlb	2	; () banked
 12917+ 004DF2  2B42               	incf	((loadEeprom@j))&0ffh
 12918+                          	
 12919+ 004DF4                     l252:		; BSR set to: ?
 12920+                          
 12921+ 004DF4  0E00               	movlw	low(0)
 12922+ 004DF6  0102               	movlb	2	; () banked
 12923+ 004DF8  0102               	movlb	2	; () banked
 12924+ 004DFA  6F44               	movwf	((?_eeprom_read))&0ffh
 12925+ 004DFC  0E00               	movlw	high(0)
 12926+ 004DFE  0102               	movlb	2	; () banked
 12927+ 004E00  6F45               	movwf	((?_eeprom_read+1))&0ffh
 12928+ 004E02  ECEB  F028         	call	_eeprom_read	;wreg free
 12929+ 004E06  0102               	movlb	2	; () banked
 12930+ 004E08  0102               	movlb	2	; () banked
 12931+ 004E0A  5D42               	subwf	((loadEeprom@j))&0ffh,w
 12932+ 004E0C  A0D8               	btfss	status,0
 12933+ 004E0E  EF0B  F027         	goto	u2821
 12934+ 004E12  EF0D  F027         	goto	u2820
 12935+ 004E16                     u2821:
 12936+ 004E16  EFE0  F026         	goto	l249
 12937+ 004E1A                     u2820:
 12938+                          	
 12939+ 004E1A                     l250:		; BSR set to: ?
 12940+                          
 12941+                          	line	49
 12942+                          ;batchpcb26k20.c: 49: }
 12943+ 004E1A                     l248:
 12944+                          			; BSR set to: ?
 12945+                          
 12946+ 004E1A  0012               	return
 12947+                          	opt stack 0
 12948+                          GLOBAL __end_of_loadEeprom
 12949+ 004E1C                     	__end_of_loadEeprom:
 12950+                          	FNSIZE	_loadEeprom,2,2
 12951+                          ; =============== function _loadEeprom ends ====
      +                          ========
 12952+                          
 12953+                          	signat	_loadEeprom,4216
 12954+                          	global	___aslmul
 12955+                          	global	??___aslmul
 12956+                          	global	?___aslmul
 12957+                          
 12958+                          ; *************** function ___aslmul ***********
      +                          ******
 12959+                          ; Defined at:
 12960+                          ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\aslmul.c"
 12961+                          ; Parameters:
 12962+                          ;		mp             size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
 12963+                          ;		 -> esicPrint@temperature(4), 
 12964+                          ;		multiplicand   size:   4offs:   2	type: unsig
      +                          ned long 
 12965+                          ; Auto variables:
 12966+                          ;		None
 12967+                          ; Return value:
 12968+                          ;		type: unsigned long 
 12969+                          ;		size: 4
 12970+                          ; Registers used:
 12971+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
 12972+                          ; Tracked objects:
 12973+                          ;		On entry : 0/0
 12974+                          ;		On exit  : 0/0
 12975+                          ;		Unchanged: 0/0
 12976+                          ; Data sizes:
 12977+                          ;		Autos:    0
 12978+                          ;		Params:   6
 12979+                          ;		Temp:     0
 12980+                          ;		Total:    6
 12981+                          ; This function calls:
 12982+                          ;		___lmul
 12983+                          ; This function is called by:
 12984+                          ;		_esicPrint
 12985+                          ; This function uses a non-reentrant model
 12986+                          ; 
 12987+                                  psect   text34,class=CODE,space=0,reloc=
      +                          2
 12988+                          
 12989+                          	opt lm
 12990+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\aslmul.c"
 12991+                          	line	5
 12992+ 000000                     	__size_of___aslmul	equ	__end_of___aslmul-___asl
      +                          mul
 12993+                          	
 12994+ 004F56                     ___aslmul:		; BSR set to: ?
 12995+                          
 12996+                          	opt stack 27
 12997+                          	line	6
 12998+ 004F56  C251  F259         	movff	(___aslmul@multiplicand),0+(?___lmul+04h)
 12999+ 004F5A  C252  F25A         	movff	(___aslmul@multiplicand+1),1+(?___lmul+04
      +                          h)
 13000+ 004F5E  C253  F25B         	movff	(___aslmul@multiplicand+2),2+(?___lmul+04
      +                          h)
 13001+ 004F62  C254  F25C         	movff	(___aslmul@multiplicand+3),3+(?___lmul+04
      +                          h)
 13002+ 004F66  C24F  FFE9         	movff	(___aslmul@mp),fsr0l
 13003+ 004F6A  C250  FFEA         	movff	(___aslmul@mp+1),fsr0h
 13004+ 004F6E  0102               	movlb	2	; () banked
 13005+ 004F70  CFEE F255          	movff	postinc0,(?___lmul)
 13006+ 004F74  0102               	movlb	2	; () banked
 13007+ 004F76  CFEE F256          	movff	postinc0,(?___lmul+1)
 13008+ 004F7A  0102               	movlb	2	; () banked
 13009+ 004F7C  CFEE F257          	movff	postinc0,(?___lmul+2)
 13010+ 004F80  0102               	movlb	2	; () banked
 13011+ 004F82  CFEE F258          	movff	postinc0,(?___lmul+3)
 13012+ 004F86  EC32  F024         	call	___lmul	;wreg free
 13013+ 004F8A  C24F  FFE9         	movff	(___aslmul@mp),fsr0l
 13014+ 004F8E  C250  FFEA         	movff	(___aslmul@mp+1),fsr0h
 13015+ 004F92  0102               	movlb	2	; () banked
 13016+ 004F94  C255  FFEE         	movff	0+?___lmul,postinc0
 13017+ 004F98  0102               	movlb	2	; () banked
 13018+ 004F9A  C256  FFEE         	movff	1+?___lmul,postinc0
 13019+ 004F9E  0102               	movlb	2	; () banked
 13020+ 004FA0  C257  FFEE         	movff	2+?___lmul,postinc0
 13021+ 004FA4  0102               	movlb	2	; () banked
 13022+ 004FA6  C258  FFED         	movff	3+?___lmul,postdec0
 13023+ 004FAA  52ED               	movf	postdec0
 13024+ 004FAC  52ED               	movf	postdec0
 13025+ 004FAE  EFD9  F027         	goto	l1314
 13026+                          	line	7
 13027+ 004FB2                     l1314:
 13028+                          			; BSR set to: ?
 13029+                          
 13030+ 004FB2  0012               	return
 13031+                          	opt stack 0
 13032+                          GLOBAL __end_of___aslmul
 13033+ 004FB4                     	__end_of___aslmul:
 13034+                          	FNSIZE	___aslmul,0,6
 13035+                          ; =============== function ___aslmul ends ======
      +                          ======
 13036+                          
 13037+                          	signat	___aslmul,8316
 13038+                          	global	___almod
 13039+                          	global	??___almod
 13040+                          	global	?___almod
 13041+                          
 13042+                          ; *************** function ___almod ************
      +                          *****
 13043+                          ; Defined at:
 13044+                          ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\almod.c"
 13045+                          ; Parameters:
 13046+                          ;		dividend       size:   4offs:   0	type: long 
 13047+                          ;		divisor        size:   4offs:   4	type: long 
 13048+                          ; Auto variables:
 13049+                          ;		sign        	       	type: unsigned char 
 13050+                          ;		counter     	       	type: unsigned char 
 13051+                          ; Return value:
 13052+                          ;		type: long 
 13053+                          ;		size: 4
 13054+                          ; Registers used:
 13055+                          ;		wreg, status,2, status,0
 13056+                          ; Tracked objects:
 13057+                          ;		On entry : 0/0
 13058+                          ;		On exit  : 0/0
 13059+                          ;		Unchanged: 0/0
 13060+                          ; Data sizes:
 13061+                          ;		Autos:    2
 13062+                          ;		Params:   8
 13063+                          ;		Temp:     1
 13064+                          ;		Total:   11
 13065+                          ; This function calls:
 13066+                          ;		Nothing
 13067+                          ; This function is called by:
 13068+                          ;		_esicPrint
 13069+                          ; This function uses a non-reentrant model
 13070+                          ; 
 13071+                                  psect   text35,class=CODE,space=0,reloc=
      +                          2
 13072+                          
 13073+                          	opt lm
 13074+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\almod.c"
 13075+                          	line	5
 13076+ 000000                     	__size_of___almod	equ	__end_of___almod-___almod
 13077+                          	
 13078+ 003BBE                     ___almod:		; BSR set to: ?
 13079+                          
 13080+                          	opt stack 27
 13081+                          	line	8
 13082+ 003BBE  0102               	movlb	2	; () banked
 13083+ 003BC0  6F59               	movwf	(??___almod+2+0)&0ffh
 13084+ 003BC2  0E00               	movlw	low(0)
 13085+ 003BC4  0102               	movlb	2	; () banked
 13086+ 003BC6  0102               	movlb	2	; () banked
 13087+ 003BC8  6F57               	movwf	((___almod@sign))&0ffh
 13088+ 003BCA  0102               	movlb	2	; () banked
 13089+ 003BCC  5159               	movf	(??___almod+2+0)&0ffh,w
 13090+                          	line	9
 13091+ 003BCE  0102               	movlb	2	; () banked
 13092+ 003BD0  0102               	movlb	2	; () banked
 13093+ 003BD2  AF52               	btfss	((___almod@dividend+3))&0ffh,7
 13094+ 003BD4  EFEE  F01D         	goto	u8241
 13095+ 003BD8  EFF0  F01D         	goto	u8240
 13096+ 003BDC                     u8241:
 13097+ 003BDC  EF08  F01E         	goto	l1042
 13098+ 003BE0                     u8240:
 13099+                          	line	10
 13100+ 003BE0  0102               	movlb	2	; () banked
 13101+ 003BE2  0102               	movlb	2	; () banked
 13102+ 003BE4  1F52               	comf	((___almod@dividend+3))&0ffh
 13103+ 003BE6  0102               	movlb	2	; () banked
 13104+ 003BE8  1F51               	comf	((___almod@dividend+2))&0ffh
 13105+ 003BEA  0102               	movlb	2	; () banked
 13106+ 003BEC  1F50               	comf	((___almod@dividend+1))&0ffh
 13107+ 003BEE  0102               	movlb	2	; () banked
 13108+ 003BF0  6D4F               	negf	((___almod@dividend))&0ffh
 13109+ 003BF2  0E00               	movlw	0
 13110+ 003BF4  0102               	movlb	2	; () banked
 13111+ 003BF6  2350               	addwfc	((___almod@dividend+1))&0ffh
 13112+ 003BF8  0102               	movlb	2	; () banked
 13113+ 003BFA  2351               	addwfc	((___almod@dividend+2))&0ffh
 13114+ 003BFC  0102               	movlb	2	; () banked
 13115+ 003BFE  2352               	addwfc	((___almod@dividend+3))&0ffh
 13116+                          	line	11
 13117+ 003C00  0102               	movlb	2	; () banked
 13118+ 003C02  6F59               	movwf	(??___almod+2+0)&0ffh
 13119+ 003C04  0E01               	movlw	low(01h)
 13120+ 003C06  0102               	movlb	2	; () banked
 13121+ 003C08  0102               	movlb	2	; () banked
 13122+ 003C0A  6F57               	movwf	((___almod@sign))&0ffh
 13123+ 003C0C  0102               	movlb	2	; () banked
 13124+ 003C0E  5159               	movf	(??___almod+2+0)&0ffh,w
 13125+                          	line	12
 13126+                          	
 13127+ 003C10                     l1042:		; BSR set to: ?
 13128+                          
 13129+                          	line	13
 13130+ 003C10  0102               	movlb	2	; () banked
 13131+ 003C12  0102               	movlb	2	; () banked
 13132+ 003C14  AF56               	btfss	((___almod@divisor+3))&0ffh,7
 13133+ 003C16  EF0F  F01E         	goto	u8251
 13134+ 003C1A  EF11  F01E         	goto	u8250
 13135+ 003C1E                     u8251:
 13136+ 003C1E  EF21  F01E         	goto	l1043
 13137+ 003C22                     u8250:
 13138+                          	line	14
 13139+ 003C22  0102               	movlb	2	; () banked
 13140+ 003C24  0102               	movlb	2	; () banked
 13141+ 003C26  1F56               	comf	((___almod@divisor+3))&0ffh
 13142+ 003C28  0102               	movlb	2	; () banked
 13143+ 003C2A  1F55               	comf	((___almod@divisor+2))&0ffh
 13144+ 003C2C  0102               	movlb	2	; () banked
 13145+ 003C2E  1F54               	comf	((___almod@divisor+1))&0ffh
 13146+ 003C30  0102               	movlb	2	; () banked
 13147+ 003C32  6D53               	negf	((___almod@divisor))&0ffh
 13148+ 003C34  0E00               	movlw	0
 13149+ 003C36  0102               	movlb	2	; () banked
 13150+ 003C38  2354               	addwfc	((___almod@divisor+1))&0ffh
 13151+ 003C3A  0102               	movlb	2	; () banked
 13152+ 003C3C  2355               	addwfc	((___almod@divisor+2))&0ffh
 13153+ 003C3E  0102               	movlb	2	; () banked
 13154+ 003C40  2356               	addwfc	((___almod@divisor+3))&0ffh
 13155+                          	
 13156+ 003C42                     l1043:		; BSR set to: ?
 13157+                          
 13158+                          	line	15
 13159+ 003C42  0102               	movlb	2	; () banked
 13160+ 003C44  5156               	movf	((___almod@divisor+3))&0ffh,w
 13161+ 003C46  1153               	iorwf ((___almod@divisor))&0ffh,w
 13162+ 003C48  1154               	iorwf ((___almod@divisor+1))&0ffh,w
 13163+ 003C4A  1155               	iorwf ((___almod@divisor+2))&0ffh,w
 13164+                          
 13165+ 003C4C  B4D8               	btfsc	status,2
 13166+ 003C4E  EF2B  F01E         	goto	u8261
 13167+ 003C52  EF2D  F01E         	goto	u8260
 13168+ 003C56                     u8261:
 13169+ 003C56  EF93  F01E         	goto	l1044
 13170+ 003C5A                     u8260:
 13171+                          	line	16
 13172+ 003C5A  0102               	movlb	2	; () banked
 13173+ 003C5C  6F59               	movwf	(??___almod+2+0)&0ffh
 13174+ 003C5E  0E01               	movlw	low(01h)
 13175+ 003C60  0102               	movlb	2	; () banked
 13176+ 003C62  0102               	movlb	2	; () banked
 13177+ 003C64  6F58               	movwf	((___almod@counter))&0ffh
 13178+ 003C66  0102               	movlb	2	; () banked
 13179+ 003C68  5159               	movf	(??___almod+2+0)&0ffh,w
 13180+                          	line	17
 13181+ 003C6A  EF44  F01E         	goto	l1045
 13182+                          	
 13183+ 003C6E                     l1046:		; BSR set to: ?
 13184+                          
 13185+                          	line	18
 13186+ 003C6E  0102               	movlb	2	; () banked
 13187+ 003C70  90D8               	bcf	status,0
 13188+ 003C72  0102               	movlb	2	; () banked
 13189+ 003C74  3753               	rlcf	((___almod@divisor))&0ffh
 13190+ 003C76  0102               	movlb	2	; () banked
 13191+ 003C78  3754               	rlcf	((___almod@divisor+1))&0ffh
 13192+ 003C7A  0102               	movlb	2	; () banked
 13193+ 003C7C  3755               	rlcf	((___almod@divisor+2))&0ffh
 13194+ 003C7E  0102               	movlb	2	; () banked
 13195+ 003C80  3756               	rlcf	((___almod@divisor+3))&0ffh
 13196+                          	line	19
 13197+ 003C82  0102               	movlb	2	; () banked
 13198+ 003C84  0102               	movlb	2	; () banked
 13199+ 003C86  2B58               	incf	((___almod@counter))&0ffh
 13200+                          	line	20
 13201+                          	
 13202+ 003C88                     l1045:		; BSR set to: ?
 13203+                          
 13204+                          	line	17
 13205+ 003C88  0102               	movlb	2	; () banked
 13206+                          	
 13207+ 003C8A  0102               	movlb	2	; () banked
 13208+ 003C8C  AF56               	btfss	((___almod@divisor+3))&0ffh,(31)&7
 13209+ 003C8E  EF4B  F01E         	goto	u8271
 13210+ 003C92  EF4D  F01E         	goto	u8270
 13211+ 003C96                     u8271:
 13212+ 003C96  EF37  F01E         	goto	l1046
 13213+ 003C9A                     u8270:
 13214+                          	
 13215+ 003C9A                     l1047:		; BSR set to: ?
 13216+                          
 13217+                          	line	21
 13218+                          	
 13219+ 003C9A                     l1050:		; BSR set to: ?
 13220+                          
 13221+                          	line	22
 13222+ 003C9A  0102               	movlb	2	; () banked
 13223+ 003C9C  0102               	movlb	2	; () banked
 13224+ 003C9E  5153               	movf	((___almod@divisor))&0ffh,w
 13225+ 003CA0  0102               	movlb	2	; () banked
 13226+ 003CA2  0102               	movlb	2	; () banked
 13227+ 003CA4  5D4F               	subwf	((___almod@dividend))&0ffh,w
 13228+ 003CA6  0102               	movlb	2	; () banked
 13229+ 003CA8  0102               	movlb	2	; () banked
 13230+ 003CAA  5154               	movf	((___almod@divisor+1))&0ffh,w
 13231+ 003CAC  0102               	movlb	2	; () banked
 13232+ 003CAE  0102               	movlb	2	; () banked
 13233+ 003CB0  5950               	subwfb	((___almod@dividend+1))&0ffh,w
 13234+ 003CB2  0102               	movlb	2	; () banked
 13235+ 003CB4  0102               	movlb	2	; () banked
 13236+ 003CB6  5155               	movf	((___almod@divisor+2))&0ffh,w
 13237+ 003CB8  0102               	movlb	2	; () banked
 13238+ 003CBA  0102               	movlb	2	; () banked
 13239+ 003CBC  5951               	subwfb	((___almod@dividend+2))&0ffh,w
 13240+ 003CBE  0102               	movlb	2	; () banked
 13241+ 003CC0  0102               	movlb	2	; () banked
 13242+ 003CC2  5156               	movf	((___almod@divisor+3))&0ffh,w
 13243+ 003CC4  0102               	movlb	2	; () banked
 13244+ 003CC6  0102               	movlb	2	; () banked
 13245+ 003CC8  5952               	subwfb	((___almod@dividend+3))&0ffh,w
 13246+ 003CCA  A0D8               	btfss	status,0
 13247+ 003CCC  EF6A  F01E         	goto	u8281
 13248+ 003CD0  EF6C  F01E         	goto	u8280
 13249+ 003CD4                     u8281:
 13250+ 003CD4  EF84  F01E         	goto	l1051
 13251+ 003CD8                     u8280:
 13252+                          	line	23
 13253+ 003CD8  0102               	movlb	2	; () banked
 13254+ 003CDA  0102               	movlb	2	; () banked
 13255+ 003CDC  5153               	movf	((___almod@divisor))&0ffh,w
 13256+ 003CDE  0102               	movlb	2	; () banked
 13257+ 003CE0  0102               	movlb	2	; () banked
 13258+ 003CE2  5F4F               	subwf	((___almod@dividend))&0ffh
 13259+ 003CE4  0102               	movlb	2	; () banked
 13260+ 003CE6  0102               	movlb	2	; () banked
 13261+ 003CE8  5154               	movf	((___almod@divisor+1))&0ffh,w
 13262+ 003CEA  0102               	movlb	2	; () banked
 13263+ 003CEC  0102               	movlb	2	; () banked
 13264+ 003CEE  5B50               	subwfb	((___almod@dividend+1))&0ffh
 13265+ 003CF0  0102               	movlb	2	; () banked
 13266+ 003CF2  0102               	movlb	2	; () banked
 13267+ 003CF4  5155               	movf	((___almod@divisor+2))&0ffh,w
 13268+ 003CF6  0102               	movlb	2	; () banked
 13269+ 003CF8  0102               	movlb	2	; () banked
 13270+ 003CFA  5B51               	subwfb	((___almod@dividend+2))&0ffh
 13271+ 003CFC  0102               	movlb	2	; () banked
 13272+ 003CFE  0102               	movlb	2	; () banked
 13273+ 003D00  5156               	movf	((___almod@divisor+3))&0ffh,w
 13274+ 003D02  0102               	movlb	2	; () banked
 13275+ 003D04  0102               	movlb	2	; () banked
 13276+ 003D06  5B52               	subwfb	((___almod@dividend+3))&0ffh
 13277+                          	
 13278+ 003D08                     l1051:		; BSR set to: ?
 13279+                          
 13280+                          	line	24
 13281+ 003D08  0102               	movlb	2	; () banked
 13282+ 003D0A  90D8               	bcf	status,0
 13283+ 003D0C  0102               	movlb	2	; () banked
 13284+ 003D0E  3356               	rrcf	((___almod@divisor+3))&0ffh
 13285+ 003D10  0102               	movlb	2	; () banked
 13286+ 003D12  3355               	rrcf	((___almod@divisor+2))&0ffh
 13287+ 003D14  0102               	movlb	2	; () banked
 13288+ 003D16  3354               	rrcf	((___almod@divisor+1))&0ffh
 13289+ 003D18  0102               	movlb	2	; () banked
 13290+ 003D1A  3353               	rrcf	((___almod@divisor))&0ffh
 13291+                          	line	25
 13292+ 003D1C  0102               	movlb	2	; () banked
 13293+ 003D1E  0102               	movlb	2	; () banked
 13294+ 003D20  2F58               	decfsz	((___almod@counter))&0ffh
 13295+                          	
 13296+ 003D22  EF4D  F01E         	goto	l1050
 13297+                          	
 13298+ 003D26                     l1049:		; BSR set to: ?
 13299+                          
 13300+                          	line	26
 13301+                          	
 13302+ 003D26                     l1044:		; BSR set to: ?
 13303+                          
 13304+                          	line	27
 13305+ 003D26  0102               	movlb	2	; () banked
 13306+ 003D28  0102               	movlb	2	; () banked
 13307+ 003D2A  5157               	movf	((___almod@sign))&0ffh,w
 13308+ 003D2C  B4D8               	btfsc	status,2
 13309+ 003D2E  EF9B  F01E         	goto	u8291
 13310+ 003D32  EF9D  F01E         	goto	u8290
 13311+ 003D36                     u8291:
 13312+ 003D36  EFAD  F01E         	goto	l1052
 13313+ 003D3A                     u8290:
 13314+                          	line	28
 13315+ 003D3A  0102               	movlb	2	; () banked
 13316+ 003D3C  0102               	movlb	2	; () banked
 13317+ 003D3E  1F52               	comf	((___almod@dividend+3))&0ffh
 13318+ 003D40  0102               	movlb	2	; () banked
 13319+ 003D42  1F51               	comf	((___almod@dividend+2))&0ffh
 13320+ 003D44  0102               	movlb	2	; () banked
 13321+ 003D46  1F50               	comf	((___almod@dividend+1))&0ffh
 13322+ 003D48  0102               	movlb	2	; () banked
 13323+ 003D4A  6D4F               	negf	((___almod@dividend))&0ffh
 13324+ 003D4C  0E00               	movlw	0
 13325+ 003D4E  0102               	movlb	2	; () banked
 13326+ 003D50  2350               	addwfc	((___almod@dividend+1))&0ffh
 13327+ 003D52  0102               	movlb	2	; () banked
 13328+ 003D54  2351               	addwfc	((___almod@dividend+2))&0ffh
 13329+ 003D56  0102               	movlb	2	; () banked
 13330+ 003D58  2352               	addwfc	((___almod@dividend+3))&0ffh
 13331+                          	
 13332+ 003D5A                     l1052:		; BSR set to: ?
 13333+                          
 13334+                          	line	29
 13335+ 003D5A  C24F  F24F         	movff	(___almod@dividend),(?___almod)
 13336+ 003D5E  C250  F250         	movff	(___almod@dividend+1),(?___almod+1)
 13337+ 003D62  C251  F251         	movff	(___almod@dividend+2),(?___almod+2)
 13338+ 003D66  C252  F252         	movff	(___almod@dividend+3),(?___almod+3)
 13339+ 003D6A  EFB7  F01E         	goto	l1041
 13340+                          	line	30
 13341+ 003D6E                     l1041:
 13342+                          			; BSR set to: ?
 13343+                          
 13344+ 003D6E  0012               	return
 13345+                          	opt stack 0
 13346+                          GLOBAL __end_of___almod
 13347+ 003D70                     	__end_of___almod:
 13348+                          	FNSIZE	___almod,3,8
 13349+                          ; =============== function ___almod ends =======
      +                          =====
 13350+                          
 13351+                          	signat	___almod,8316
 13352+                          	global	___awdiv
 13353+                          	global	??___awdiv
 13354+                          	global	?___awdiv
 13355+                          
 13356+                          ; *************** function ___awdiv ************
      +                          *****
 13357+                          ; Defined at:
 13358+                          ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\awdiv.c"
 13359+                          ; Parameters:
 13360+                          ;		dividend       size:   2offs:   0	type: int 
 13361+                          ;		divisor        size:   2offs:   2	type: int 
 13362+                          ; Auto variables:
 13363+                          ;		counter     	       	type: unsigned char 
 13364+                          ;		sign        	       	type: unsigned char 
 13365+                          ;		quotient    	       	type: int 
 13366+                          ; Return value:
 13367+                          ;		type: int 
 13368+                          ;		size: 2
 13369+                          ; Registers used:
 13370+                          ;		wreg, status,2, status,0
 13371+                          ; Tracked objects:
 13372+                          ;		On entry : 0/0
 13373+                          ;		On exit  : 0/0
 13374+                          ;		Unchanged: 0/0
 13375+                          ; Data sizes:
 13376+                          ;		Autos:    4
 13377+                          ;		Params:   4
 13378+                          ;		Temp:     1
 13379+                          ;		Total:    9
 13380+                          ; This function calls:
 13381+                          ;		Nothing
 13382+                          ; This function is called by:
 13383+                          ;		_esicPrint
 13384+                          ; This function uses a non-reentrant model
 13385+                          ; 
 13386+                                  psect   text36,class=CODE,space=0,reloc=
      +                          2
 13387+                          
 13388+                          	opt lm
 13389+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\awdiv.c"
 13390+                          	line	5
 13391+ 000000                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 13392+                          	
 13393+ 003EFC                     ___awdiv:		; BSR set to: ?
 13394+                          
 13395+                          	opt stack 27
 13396+                          	line	9
 13397+ 003EFC  0102               	movlb	2	; () banked
 13398+ 003EFE  6F57               	movwf	(??___awdiv+4+0)&0ffh
 13399+ 003F00  0E00               	movlw	low(0)
 13400+ 003F02  0102               	movlb	2	; () banked
 13401+ 003F04  0102               	movlb	2	; () banked
 13402+ 003F06  6F54               	movwf	((___awdiv@sign))&0ffh
 13403+ 003F08  0102               	movlb	2	; () banked
 13404+ 003F0A  5157               	movf	(??___awdiv+4+0)&0ffh,w
 13405+                          	line	10
 13406+ 003F0C  0102               	movlb	2	; () banked
 13407+ 003F0E  0102               	movlb	2	; () banked
 13408+ 003F10  AF52               	btfss	((___awdiv@divisor+1))&0ffh,7
 13409+ 003F12  EF8D  F01F         	goto	u8301
 13410+ 003F16  EF8F  F01F         	goto	u8300
 13411+ 003F1A                     u8301:
 13412+ 003F1A  EF9E  F01F         	goto	l1065
 13413+ 003F1E                     u8300:
 13414+                          	line	11
 13415+ 003F1E  0102               	movlb	2	; () banked
 13416+ 003F20  0102               	movlb	2	; () banked
 13417+ 003F22  6D51               	negf	((___awdiv@divisor))&0ffh
 13418+ 003F24  0102               	movlb	2	; () banked
 13419+ 003F26  1F52               	comf	((___awdiv@divisor+1))&0ffh
 13420+ 003F28  B0D8               	btfsc	status,0
 13421+ 003F2A  2B52               	incf	((___awdiv@divisor+1))&0ffh
 13422+                          	line	12
 13423+ 003F2C  0102               	movlb	2	; () banked
 13424+ 003F2E  6F57               	movwf	(??___awdiv+4+0)&0ffh
 13425+ 003F30  0E01               	movlw	low(01h)
 13426+ 003F32  0102               	movlb	2	; () banked
 13427+ 003F34  0102               	movlb	2	; () banked
 13428+ 003F36  6F54               	movwf	((___awdiv@sign))&0ffh
 13429+ 003F38  0102               	movlb	2	; () banked
 13430+ 003F3A  5157               	movf	(??___awdiv+4+0)&0ffh,w
 13431+                          	line	13
 13432+                          	
 13433+ 003F3C                     l1065:		; BSR set to: ?
 13434+                          
 13435+                          	line	14
 13436+ 003F3C  0102               	movlb	2	; () banked
 13437+ 003F3E  0102               	movlb	2	; () banked
 13438+ 003F40  AF50               	btfss	((___awdiv@dividend+1))&0ffh,7
 13439+ 003F42  EFA5  F01F         	goto	u8311
 13440+ 003F46  EFA7  F01F         	goto	u8310
 13441+ 003F4A                     u8311:
 13442+ 003F4A  EFB2  F01F         	goto	l1066
 13443+ 003F4E                     u8310:
 13444+                          	line	15
 13445+ 003F4E  0102               	movlb	2	; () banked
 13446+ 003F50  0102               	movlb	2	; () banked
 13447+ 003F52  6D4F               	negf	((___awdiv@dividend))&0ffh
 13448+ 003F54  0102               	movlb	2	; () banked
 13449+ 003F56  1F50               	comf	((___awdiv@dividend+1))&0ffh
 13450+ 003F58  B0D8               	btfsc	status,0
 13451+ 003F5A  2B50               	incf	((___awdiv@dividend+1))&0ffh
 13452+                          	line	16
 13453+ 003F5C  0E01               	movlw	(01h)&0ffh
 13454+ 003F5E  0102               	movlb	2	; () banked
 13455+ 003F60  0102               	movlb	2	; () banked
 13456+ 003F62  1B54               	xorwf	((___awdiv@sign))&0ffh
 13457+                          	line	17
 13458+                          	
 13459+ 003F64                     l1066:		; BSR set to: ?
 13460+                          
 13461+                          	line	18
 13462+ 003F64  0E00               	movlw	low(0)
 13463+ 003F66  0102               	movlb	2	; () banked
 13464+ 003F68  0102               	movlb	2	; () banked
 13465+ 003F6A  6F55               	movwf	((___awdiv@quotient))&0ffh
 13466+ 003F6C  0E00               	movlw	high(0)
 13467+ 003F6E  0102               	movlb	2	; () banked
 13468+ 003F70  6F56               	movwf	((___awdiv@quotient+1))&0ffh
 13469+                          	line	19
 13470+ 003F72  0102               	movlb	2	; () banked
 13471+ 003F74  0102               	movlb	2	; () banked
 13472+ 003F76  5152               	movf	((___awdiv@divisor+1))&0ffh,w
 13473+ 003F78  1151               	iorwf ((___awdiv@divisor))&0ffh,w
 13474+                          
 13475+ 003F7A  B4D8               	btfsc	status,2
 13476+ 003F7C  EFC2  F01F         	goto	u8321
 13477+ 003F80  EFC4  F01F         	goto	u8320
 13478+ 003F84                     u8321:
 13479+ 003F84  EF13  F020         	goto	l1067
 13480+ 003F88                     u8320:
 13481+                          	line	20
 13482+ 003F88  0102               	movlb	2	; () banked
 13483+ 003F8A  6F57               	movwf	(??___awdiv+4+0)&0ffh
 13484+ 003F8C  0E01               	movlw	low(01h)
 13485+ 003F8E  0102               	movlb	2	; () banked
 13486+ 003F90  0102               	movlb	2	; () banked
 13487+ 003F92  6F53               	movwf	((___awdiv@counter))&0ffh
 13488+ 003F94  0102               	movlb	2	; () banked
 13489+ 003F96  5157               	movf	(??___awdiv+4+0)&0ffh,w
 13490+                          	line	21
 13491+ 003F98  EFD7  F01F         	goto	l1068
 13492+                          	
 13493+ 003F9C                     l1069:		; BSR set to: ?
 13494+                          
 13495+                          	line	22
 13496+ 003F9C  0102               	movlb	2	; () banked
 13497+ 003F9E  90D8               	bcf	status,0
 13498+ 003FA0  0102               	movlb	2	; () banked
 13499+ 003FA2  3751               	rlcf	((___awdiv@divisor))&0ffh
 13500+ 003FA4  0102               	movlb	2	; () banked
 13501+ 003FA6  3752               	rlcf	((___awdiv@divisor+1))&0ffh
 13502+                          	line	23
 13503+ 003FA8  0102               	movlb	2	; () banked
 13504+ 003FAA  0102               	movlb	2	; () banked
 13505+ 003FAC  2B53               	incf	((___awdiv@counter))&0ffh
 13506+                          	line	24
 13507+                          	
 13508+ 003FAE                     l1068:		; BSR set to: ?
 13509+                          
 13510+                          	line	21
 13511+ 003FAE  0102               	movlb	2	; () banked
 13512+                          	
 13513+ 003FB0  0102               	movlb	2	; () banked
 13514+ 003FB2  AF52               	btfss	((___awdiv@divisor+1))&0ffh,(15)&7
 13515+ 003FB4  EFDE  F01F         	goto	u8331
 13516+ 003FB8  EFE0  F01F         	goto	u8330
 13517+ 003FBC                     u8331:
 13518+ 003FBC  EFCE  F01F         	goto	l1069
 13519+ 003FC0                     u8330:
 13520+                          	
 13521+ 003FC0                     l1070:		; BSR set to: ?
 13522+                          
 13523+                          	line	25
 13524+                          	
 13525+ 003FC0                     l1073:		; BSR set to: ?
 13526+                          
 13527+                          	line	26
 13528+ 003FC0  0102               	movlb	2	; () banked
 13529+ 003FC2  90D8               	bcf	status,0
 13530+ 003FC4  0102               	movlb	2	; () banked
 13531+ 003FC6  3755               	rlcf	((___awdiv@quotient))&0ffh
 13532+ 003FC8  0102               	movlb	2	; () banked
 13533+ 003FCA  3756               	rlcf	((___awdiv@quotient+1))&0ffh
 13534+                          	line	27
 13535+ 003FCC  0102               	movlb	2	; () banked
 13536+ 003FCE  0102               	movlb	2	; () banked
 13537+ 003FD0  5151               	movf	((___awdiv@divisor))&0ffh,w
 13538+ 003FD2  0102               	movlb	2	; () banked
 13539+ 003FD4  0102               	movlb	2	; () banked
 13540+ 003FD6  5D4F               	subwf	((___awdiv@dividend))&0ffh,w
 13541+ 003FD8  0102               	movlb	2	; () banked
 13542+ 003FDA  0102               	movlb	2	; () banked
 13543+ 003FDC  5152               	movf	((___awdiv@divisor+1))&0ffh,w
 13544+ 003FDE  0102               	movlb	2	; () banked
 13545+ 003FE0  0102               	movlb	2	; () banked
 13546+ 003FE2  5950               	subwfb	((___awdiv@dividend+1))&0ffh,w
 13547+ 003FE4  A0D8               	btfss	status,0
 13548+ 003FE6  EFF7  F01F         	goto	u8341
 13549+ 003FEA  EFF9  F01F         	goto	u8340
 13550+ 003FEE                     u8341:
 13551+ 003FEE  EF08  F020         	goto	l1074
 13552+ 003FF2                     u8340:
 13553+                          	line	28
 13554+ 003FF2  0102               	movlb	2	; () banked
 13555+ 003FF4  0102               	movlb	2	; () banked
 13556+ 003FF6  5151               	movf	((___awdiv@divisor))&0ffh,w
 13557+ 003FF8  0102               	movlb	2	; () banked
 13558+ 003FFA  0102               	movlb	2	; () banked
 13559+ 003FFC  5F4F               	subwf	((___awdiv@dividend))&0ffh
 13560+ 003FFE  0102               	movlb	2	; () banked
 13561+ 004000  0102               	movlb	2	; () banked
 13562+ 004002  5152               	movf	((___awdiv@divisor+1))&0ffh,w
 13563+ 004004  0102               	movlb	2	; () banked
 13564+ 004006  0102               	movlb	2	; () banked
 13565+ 004008  5B50               	subwfb	((___awdiv@dividend+1))&0ffh
 13566+                          
 13567+                          	line	29
 13568+ 00400A  0102               	movlb	2	; () banked
 13569+ 00400C  0102               	movlb	2	; () banked
 13570+ 00400E  8155               	bsf	(0+(0/8)+(___awdiv@quotient))&0ffh,(0)&7
 13571+                          	line	30
 13572+                          	
 13573+ 004010                     l1074:		; BSR set to: ?
 13574+                          
 13575+                          	line	31
 13576+ 004010  0102               	movlb	2	; () banked
 13577+ 004012  90D8               	bcf	status,0
 13578+ 004014  0102               	movlb	2	; () banked
 13579+ 004016  3352               	rrcf	((___awdiv@divisor+1))&0ffh
 13580+ 004018  0102               	movlb	2	; () banked
 13581+ 00401A  3351               	rrcf	((___awdiv@divisor))&0ffh
 13582+                          	line	32
 13583+ 00401C  0102               	movlb	2	; () banked
 13584+ 00401E  0102               	movlb	2	; () banked
 13585+ 004020  2F53               	decfsz	((___awdiv@counter))&0ffh
 13586+                          	
 13587+ 004022  EFE0  F01F         	goto	l1073
 13588+                          	
 13589+ 004026                     l1072:		; BSR set to: ?
 13590+                          
 13591+                          	line	33
 13592+                          	
 13593+ 004026                     l1067:		; BSR set to: ?
 13594+                          
 13595+                          	line	34
 13596+ 004026  0102               	movlb	2	; () banked
 13597+ 004028  0102               	movlb	2	; () banked
 13598+ 00402A  5154               	movf	((___awdiv@sign))&0ffh,w
 13599+ 00402C  B4D8               	btfsc	status,2
 13600+ 00402E  EF1B  F020         	goto	u8351
 13601+ 004032  EF1D  F020         	goto	u8350
 13602+ 004036                     u8351:
 13603+ 004036  EF24  F020         	goto	l1075
 13604+ 00403A                     u8350:
 13605+                          	line	35
 13606+ 00403A  0102               	movlb	2	; () banked
 13607+ 00403C  0102               	movlb	2	; () banked
 13608+ 00403E  6D55               	negf	((___awdiv@quotient))&0ffh
 13609+ 004040  0102               	movlb	2	; () banked
 13610+ 004042  1F56               	comf	((___awdiv@quotient+1))&0ffh
 13611+ 004044  B0D8               	btfsc	status,0
 13612+ 004046  2B56               	incf	((___awdiv@quotient+1))&0ffh
 13613+                          	
 13614+ 004048                     l1075:		; BSR set to: ?
 13615+                          
 13616+                          	line	36
 13617+ 004048  C255  F24F         	movff	(___awdiv@quotient),(?___awdiv)
 13618+ 00404C  C256  F250         	movff	(___awdiv@quotient+1),(?___awdiv+1)
 13619+ 004050  EF2A  F020         	goto	l1064
 13620+                          	line	37
 13621+ 004054                     l1064:
 13622+                          			; BSR set to: ?
 13623+                          
 13624+ 004054  0012               	return
 13625+                          	opt stack 0
 13626+                          GLOBAL __end_of___awdiv
 13627+ 004056                     	__end_of___awdiv:
 13628+                          	FNSIZE	___awdiv,5,4
 13629+                          ; =============== function ___awdiv ends =======
      +                          =====
 13630+                          
 13631+                          	signat	___awdiv,8314
 13632+                          	global	_sPutint
 13633+                          	global	??_sPutint
 13634+                          	global	?_sPutint
 13635+                          
 13636+                          ; *************** function _sPutint ************
      +                          *****
 13637+                          ; Defined at:
 13638+                          ;		line 54 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\uartring.c"
 13639+                          ; Parameters:
 13640+                          ;		input          size:   2offs:   0	type: unsig
      +                          ned int 
 13641+                          ; Auto variables:
 13642+                          ;		start       	       	type: unsigned char 
 13643+                          ;		stop        	       	type: unsigned char 
 13644+                          ;		temp        	       	type: unsigned int 
 13645+                          ;		buffer      	       	type: unsigned char [7]
 13646+                          ;		j           	       	type: char 
 13647+                          ; Return value:
 13648+                          ;		type: void 
 13649+                          ;		size: 0
 13650+                          ; Registers used:
 13651+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
 13652+                          ; Tracked objects:
 13653+                          ;		On entry : 0/0
 13654+                          ;		On exit  : 0/0
 13655+                          ;		Unchanged: 0/0
 13656+                          ; Data sizes:
 13657+                          ;		Autos:   12
 13658+                          ;		Params:   2
 13659+                          ;		Temp:     1
 13660+                          ;		Total:   15
 13661+                          ; This function calls:
 13662+                          ;		___lwdiv
 13663+                          ;		___lwmod
 13664+                          ;		_sPuts
 13665+                          ; This function is called by:
 13666+                          ;		_gaoDecode
 13667+                          ;		_esicPrint
 13668+                          ;		_parseSettings
 13669+                          ; This function uses a non-reentrant model
 13670+                          ; 
 13671+                                  psect   text37,class=CODE,space=0,reloc=
      +                          2
 13672+                          
 13673+                          	opt lm
 13674+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\uartring.c"
 13675+                          	line	54
 13676+ 000000                     	__size_of_sPutint	equ	__end_of_sPutint-_sPutint
 13677+                          ;uartring.c: 54: void sPutint(unsigned int input
      +                          ){
 13678+                          	
 13679+ 003D70                     _sPutint:		; BSR set to: ?
 13680+                          
 13681+                          	opt stack 27
 13682+                          	line	56
 13683+ 003D70  0102               	movlb	2	; () banked
 13684+ 003D72  6F5D               	movwf	(??_sPutint+12+0)&0ffh
 13685+ 003D74  0E00               	movlw	low(0)
 13686+ 003D76  0102               	movlb	2	; () banked
 13687+ 003D78  0102               	movlb	2	; () banked
 13688+ 003D7A  6F51               	movwf	((sPutint@start))&0ffh
 13689+ 003D7C  0102               	movlb	2	; () banked
 13690+ 003D7E  515D               	movf	(??_sPutint+12+0)&0ffh,w
 13691+                          	line	57
 13692+                          ;uartring.c: 57: char stop = 0;
 13693+ 003D80  0102               	movlb	2	; () banked
 13694+ 003D82  6F5D               	movwf	(??_sPutint+12+0)&0ffh
 13695+ 003D84  0E00               	movlw	low(0)
 13696+ 003D86  0102               	movlb	2	; () banked
 13697+ 003D88  0102               	movlb	2	; () banked
 13698+ 003D8A  6F52               	movwf	((sPutint@stop))&0ffh
 13699+ 003D8C  0102               	movlb	2	; () banked
 13700+ 003D8E  515D               	movf	(??_sPutint+12+0)&0ffh,w
 13701+                          	line	58
 13702+                          ;uartring.c: 58: if(input > 0b0111111111111111){
 13703+ 003D90  0E00               	movlw	0
 13704+ 003D92  0102               	movlb	2	; () banked
 13705+ 003D94  0102               	movlb	2	; () banked
 13706+ 003D96  5D4F               	subwf	((sPutint@input))&0ffh,w
 13707+ 003D98  0E80               	movlw	080h
 13708+ 003D9A  0102               	movlb	2	; () banked
 13709+ 003D9C  5950               	subwfb	((sPutint@input+1))&0ffh,w
 13710+ 003D9E  A0D8               	btfss	status,0
 13711+ 003DA0  EFD4  F01E         	goto	u6051
 13712+ 003DA4  EFD6  F01E         	goto	u6050
 13713+ 003DA8                     u6051:
 13714+ 003DA8  EFF5  F01E         	goto	l229
 13715+ 003DAC                     u6050:
 13716+                          	line	59
 13717+                          ;uartring.c: 59: buffer[0] = '-';
 13718+ 003DAC  0102               	movlb	2	; () banked
 13719+ 003DAE  6F5D               	movwf	(??_sPutint+12+0)&0ffh
 13720+ 003DB0  0E2D               	movlw	low(02Dh)
 13721+ 003DB2  0102               	movlb	2	; () banked
 13722+ 003DB4  0102               	movlb	2	; () banked
 13723+ 003DB6  6F55               	movwf	((sPutint@buffer))&0ffh
 13724+ 003DB8  0102               	movlb	2	; () banked
 13725+ 003DBA  515D               	movf	(??_sPutint+12+0)&0ffh,w
 13726+                          	line	60
 13727+                          ;uartring.c: 60: start = 1;
 13728+ 003DBC  0102               	movlb	2	; () banked
 13729+ 003DBE  6F5D               	movwf	(??_sPutint+12+0)&0ffh
 13730+ 003DC0  0E01               	movlw	low(01h)
 13731+ 003DC2  0102               	movlb	2	; () banked
 13732+ 003DC4  0102               	movlb	2	; () banked
 13733+ 003DC6  6F51               	movwf	((sPutint@start))&0ffh
 13734+ 003DC8  0102               	movlb	2	; () banked
 13735+ 003DCA  515D               	movf	(??_sPutint+12+0)&0ffh,w
 13736+                          	line	61
 13737+                          ;uartring.c: 61: stop = 1;
 13738+ 003DCC  0102               	movlb	2	; () banked
 13739+ 003DCE  6F5D               	movwf	(??_sPutint+12+0)&0ffh
 13740+ 003DD0  0E01               	movlw	low(01h)
 13741+ 003DD2  0102               	movlb	2	; () banked
 13742+ 003DD4  0102               	movlb	2	; () banked
 13743+ 003DD6  6F52               	movwf	((sPutint@stop))&0ffh
 13744+ 003DD8  0102               	movlb	2	; () banked
 13745+ 003DDA  515D               	movf	(??_sPutint+12+0)&0ffh,w
 13746+                          	line	62
 13747+                          ;uartring.c: 62: input = (input^0b11111111111111
      +                          11) + 1;
 13748+ 003DDC  0102               	movlb	2	; () banked
 13749+ 003DDE  0102               	movlb	2	; () banked
 13750+ 003DE0  6D4F               	negf	((sPutint@input))&0ffh
 13751+ 003DE2  0102               	movlb	2	; () banked
 13752+ 003DE4  1F50               	comf	((sPutint@input+1))&0ffh
 13753+ 003DE6  B0D8               	btfsc	status,0
 13754+ 003DE8  2B50               	incf	((sPutint@input+1))&0ffh
 13755+                          	line	63
 13756+                          	
 13757+ 003DEA                     l229:		; BSR set to: ?
 13758+                          
 13759+                          	line	64
 13760+                          ;uartring.c: 63: }
 13761+                          ;uartring.c: 64: unsigned int temp = input;
 13762+ 003DEA  C24F  F253         	movff	(sPutint@input),(sPutint@temp)
 13763+ 003DEE  C250  F254         	movff	(sPutint@input+1),(sPutint@temp+1)
 13764+                          	line	65
 13765+                          ;uartring.c: 65: while(temp >= 10){
 13766+ 003DF2  EF0F  F01F         	goto	l230
 13767+                          	
 13768+ 003DF6                     l231:		; BSR set to: ?
 13769+                          
 13770+                          	line	66
 13771+                          ;uartring.c: 66: stop += 1;
 13772+ 003DF6  0102               	movlb	2	; () banked
 13773+ 003DF8  0102               	movlb	2	; () banked
 13774+ 003DFA  2B52               	incf	((sPutint@stop))&0ffh
 13775+                          	line	67
 13776+                          ;uartring.c: 67: temp /= 10;
 13777+ 003DFC  0E0A               	movlw	low(0Ah)
 13778+ 003DFE  0102               	movlb	2	; () banked
 13779+ 003E00  0102               	movlb	2	; () banked
 13780+ 003E02  6F60               	movwf	(0+(?___lwdiv+02h))&0ffh
 13781+ 003E04  0E00               	movlw	high(0Ah)
 13782+ 003E06  0102               	movlb	2	; () banked
 13783+ 003E08  6F61               	movwf	(1+(?___lwdiv+02h))&0ffh
 13784+ 003E0A  C253  F25E         	movff	(sPutint@temp),(?___lwdiv)
 13785+ 003E0E  C254  F25F         	movff	(sPutint@temp+1),(?___lwdiv+1)
 13786+ 003E12  EC6B  F023         	call	___lwdiv	;wreg free
 13787+ 003E16  C25E  F253         	movff	0+?___lwdiv,(sPutint@temp)
 13788+ 003E1A  C25F  F254         	movff	1+?___lwdiv,(sPutint@temp+1)
 13789+                          	line	68
 13790+                          	
 13791+ 003E1E                     l230:		; BSR set to: ?
 13792+                          
 13793+                          	line	65
 13794+ 003E1E  0E0A               	movlw	0Ah
 13795+ 003E20  0102               	movlb	2	; () banked
 13796+ 003E22  0102               	movlb	2	; () banked
 13797+ 003E24  5D53               	subwf	((sPutint@temp))&0ffh,w
 13798+ 003E26  0E00               	movlw	0
 13799+ 003E28  0102               	movlb	2	; () banked
 13800+ 003E2A  5954               	subwfb	((sPutint@temp+1))&0ffh,w
 13801+ 003E2C  B0D8               	btfsc	status,0
 13802+ 003E2E  EF1B  F01F         	goto	u6061
 13803+ 003E32  EF1D  F01F         	goto	u6060
 13804+ 003E36                     u6061:
 13805+ 003E36  EFFB  F01E         	goto	l231
 13806+ 003E3A                     u6060:
 13807+                          	
 13808+ 003E3A                     l232:		; BSR set to: ?
 13809+                          
 13810+                          	line	69
 13811+                          ;uartring.c: 68: }
 13812+                          ;uartring.c: 69: for (signed char j=stop; j>=sta
      +                          rt; j--){
 13813+ 003E3A  C252  F25C         	movff	(sPutint@stop),(sPutint@j)
 13814+ 003E3E  EF51  F01F         	goto	l236
 13815+                          	
 13816+ 003E42                     l233:		; BSR set to: ?
 13817+                          
 13818+                          	line	70
 13819+                          ;uartring.c: 70: buffer[j] = input%10 + '0';
 13820+ 003E42  0102               	movlb	2	; () banked
 13821+ 003E44  0E55               	movlw	low(sPutint@buffer)
 13822+ 003E46  0102               	movlb	2	; () banked
 13823+ 003E48  0102               	movlb	2	; () banked
 13824+ 003E4A  255C               	addwf	((sPutint@j))&0ffh,w
 13825+ 003E4C  6EE9               	movwf	c:fsr0l
 13826+ 003E4E  6AEA               	clrf	1+c:fsr0l
 13827+ 003E50  0102               	movlb	2	; () banked
 13828+ 003E52  0E02               	movlw	high(sPutint@buffer)
 13829+ 003E54  22EA               	addwfc	1+c:fsr0l
 13830+ 003E56  0E0A               	movlw	low(0Ah)
 13831+ 003E58  0102               	movlb	2	; () banked
 13832+ 003E5A  0102               	movlb	2	; () banked
 13833+ 003E5C  6F60               	movwf	(0+(?___lwmod+02h))&0ffh
 13834+ 003E5E  0E00               	movlw	high(0Ah)
 13835+ 003E60  0102               	movlb	2	; () banked
 13836+ 003E62  6F61               	movwf	(1+(?___lwmod+02h))&0ffh
 13837+ 003E64  C24F  F25E         	movff	(sPutint@input),(?___lwmod)
 13838+ 003E68  C250  F25F         	movff	(sPutint@input+1),(?___lwmod+1)
 13839+ 003E6C  ECE3  F024         	call	___lwmod	;wreg free
 13840+ 003E70  0102               	movlb	2	; () banked
 13841+ 003E72  0102               	movlb	2	; () banked
 13842+ 003E74  515E               	movf	(0+?___lwmod)&0ffh,w
 13843+ 003E76  0F30               	addlw	low(030h)
 13844+ 003E78  6EEF               	movwf	indf0
 13845+                          
 13846+                          	line	71
 13847+                          ;uartring.c: 71: input /= 10;
 13848+ 003E7A  0E0A               	movlw	low(0Ah)
 13849+ 003E7C  0102               	movlb	2	; () banked
 13850+ 003E7E  0102               	movlb	2	; () banked
 13851+ 003E80  6F60               	movwf	(0+(?___lwdiv+02h))&0ffh
 13852+ 003E82  0E00               	movlw	high(0Ah)
 13853+ 003E84  0102               	movlb	2	; () banked
 13854+ 003E86  6F61               	movwf	(1+(?___lwdiv+02h))&0ffh
 13855+ 003E88  C24F  F25E         	movff	(sPutint@input),(?___lwdiv)
 13856+ 003E8C  C250  F25F         	movff	(sPutint@input+1),(?___lwdiv+1)
 13857+ 003E90  EC6B  F023         	call	___lwdiv	;wreg free
 13858+ 003E94  C25E  F24F         	movff	0+?___lwdiv,(sPutint@input)
 13859+ 003E98  C25F  F250         	movff	1+?___lwdiv,(sPutint@input+1)
 13860+                          	line	69
 13861+ 003E9C  0102               	movlb	2	; () banked
 13862+ 003E9E  0102               	movlb	2	; () banked
 13863+ 003EA0  075C               	decf	((sPutint@j))&0ffh
 13864+                          	
 13865+ 003EA2                     l236:		; BSR set to: ?
 13866+                          
 13867+ 003EA2  0102               	movlb	2	; () banked
 13868+ 003EA4  0102               	movlb	2	; () banked
 13869+ 003EA6  5151               	movf	((sPutint@start))&0ffh,w
 13870+ 003EA8  90D8               	bcf	status,0
 13871+ 003EAA  0102               	movlb	2	; () banked
 13872+ 003EAC  0102               	movlb	2	; () banked
 13873+ 003EAE  AF5C               	btfss	((sPutint@j))&0ffh,7
 13874+ 003EB0  5D5C               	subwf	((sPutint@j))&0ffh,w
 13875+ 003EB2  B0D8               	btfsc	status,0
 13876+ 003EB4  80D8               	bsf	status,0
 13877+ 003EB6  B0D8               	btfsc	status,0
 13878+ 003EB8  EF60  F01F         	goto	u6071
 13879+ 003EBC  EF62  F01F         	goto	u6070
 13880+ 003EC0                     u6071:
 13881+ 003EC0  EF21  F01F         	goto	l233
 13882+ 003EC4                     u6070:
 13883+                          	
 13884+ 003EC4                     l234:		; BSR set to: ?
 13885+                          
 13886+                          	line	73
 13887+                          ;uartring.c: 72: }
 13888+                          ;uartring.c: 73: buffer[stop+1] = 0;
 13889+ 003EC4  C252  F25D         	movff	(sPutint@stop),??_sPutint+12+0
 13890+ 003EC8  0E01               	movlw	01h
 13891+ 003ECA  0102               	movlb	2	; () banked
 13892+ 003ECC  275D               	addwf	(??_sPutint+12+0)&0ffh
 13893+ 003ECE  0102               	movlb	2	; () banked
 13894+ 003ED0  0E55               	movlw	low(sPutint@buffer)
 13895+ 003ED2  0102               	movlb	2	; () banked
 13896+ 003ED4  255D               	addwf	(??_sPutint+12+0)&0ffh,w
 13897+ 003ED6  6EE9               	movwf	c:fsr0l
 13898+ 003ED8  6AEA               	clrf	1+c:fsr0l
 13899+ 003EDA  0102               	movlb	2	; () banked
 13900+ 003EDC  0E02               	movlw	high(sPutint@buffer)
 13901+ 003EDE  22EA               	addwfc	1+c:fsr0l
 13902+ 003EE0  0E00               	movlw	low(0)
 13903+ 003EE2  6EEF               	movwf	indf0
 13904+                          	line	74
 13905+                          ;uartring.c: 74: sPuts(&buffer);
 13906+ 003EE4  0102               	movlb	2	; () banked
 13907+ 003EE6  0E55               	movlw	low(sPutint@buffer)
 13908+ 003EE8  0102               	movlb	2	; () banked
 13909+ 003EEA  0102               	movlb	2	; () banked
 13910+ 003EEC  6F5E               	movwf	((?_sPuts))&0ffh
 13911+ 003EEE  0102               	movlb	2	; () banked
 13912+ 003EF0  0E02               	movlw	high(sPutint@buffer)
 13913+ 003EF2  0102               	movlb	2	; () banked
 13914+ 003EF4  6F5F               	movwf	((?_sPuts+1))&0ffh
 13915+ 003EF6  EC9E  F026         	call	_sPuts	;wreg free
 13916+                          	line	75
 13917+                          ;uartring.c: 75: }
 13918+ 003EFA                     l228:
 13919+                          			; BSR set to: ?
 13920+                          
 13921+ 003EFA  0012               	return
 13922+                          	opt stack 0
 13923+                          GLOBAL __end_of_sPutint
 13924+ 003EFC                     	__end_of_sPutint:
 13925+                          	FNSIZE	_sPutint,13,2
 13926+                          ; =============== function _sPutint ends =======
      +                          =====
 13927+                          
 13928+                          	signat	_sPutint,4216
 13929+                          	global	_sPuthex
 13930+                          	global	??_sPuthex
 13931+                          	global	?_sPuthex
 13932+                          
 13933+                          ; *************** function _sPuthex ************
      +                          *****
 13934+                          ; Defined at:
 13935+                          ;		line 82 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\uartring.c"
 13936+                          ; Parameters:
 13937+                          ;		input          size:   1offs:   0	type: unsig
      +                          ned char 
 13938+                          ; Auto variables:
 13939+                          ;		None
 13940+                          ; Return value:
 13941+                          ;		type: void 
 13942+                          ;		size: 0
 13943+                          ; Registers used:
 13944+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
 13945+                          ; Tracked objects:
 13946+                          ;		On entry : 0/0
 13947+                          ;		On exit  : 0/0
 13948+                          ;		Unchanged: 0/0
 13949+                          ; Data sizes:
 13950+                          ;		Autos:    0
 13951+                          ;		Params:   1
 13952+                          ;		Temp:     1
 13953+                          ;		Total:    2
 13954+                          ; This function calls:
 13955+                          ;		_sPutonehex
 13956+                          ; This function is called by:
 13957+                          ;		_bmcPrint
 13958+                          ; This function uses a non-reentrant model
 13959+                          ; 
 13960+                                  psect   text38,class=CODE,space=0,reloc=
      +                          2
 13961+                          
 13962+                          	opt lm
 13963+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\uartring.c"
 13964+                          	line	82
 13965+ 000000                     	__size_of_sPuthex	equ	__end_of_sPuthex-_sPuthex
 13966+                          ;uartring.c: 82: void sPuthex(char input){
 13967+                          	
 13968+ 00517E                     _sPuthex:		; BSR set to: ?
 13969+                          
 13970+                          	opt stack 27
 13971+                          	line	83
 13972+ 00517E  C248  F249         	movff	(sPuthex@input),??_sPuthex+0+0
 13973+ 005182  0EF0               	movlw	0F0h
 13974+ 005184  0102               	movlb	2	; () banked
 13975+ 005186  1749               	andwf	(??_sPuthex+0+0)&0ffh
 13976+ 005188  0102               	movlb	2	; () banked
 13977+ 00518A  3949               	swapf	(??_sPuthex+0+0)&0ffh,w
 13978+ 00518C  0B0F               	andlw	(0ffh shr 4) & 0ffh
 13979+ 00518E  0102               	movlb	2	; () banked
 13980+ 005190  0102               	movlb	2	; () banked
 13981+ 005192  6F4A               	movwf	((?_sPutonehex))&0ffh
 13982+ 005194  EC4C  F028         	call	_sPutonehex	;wreg free
 13983+                          	line	84
 13984+                          ;uartring.c: 84: sPutonehex(input & 0b00001111);
 13985+ 005198  0102               	movlb	2	; () banked
 13986+ 00519A  0102               	movlb	2	; () banked
 13987+ 00519C  5148               	movf	((sPuthex@input))&0ffh,w
 13988+ 00519E  0B0F               	andlw	low(0Fh)
 13989+ 0051A0  0102               	movlb	2	; () banked
 13990+ 0051A2  0102               	movlb	2	; () banked
 13991+ 0051A4  6F4A               	movwf	((?_sPutonehex))&0ffh
 13992+ 0051A6  EC4C  F028         	call	_sPutonehex	;wreg free
 13993+                          	line	85
 13994+                          ;uartring.c: 85: }
 13995+ 0051AA                     l240:
 13996+                          			; BSR set to: ?
 13997+                          
 13998+ 0051AA  0012               	return
 13999+                          	opt stack 0
 14000+                          GLOBAL __end_of_sPuthex
 14001+ 0051AC                     	__end_of_sPuthex:
 14002+                          	FNSIZE	_sPuthex,1,1
 14003+                          ; =============== function _sPuthex ends =======
      +                          =====
 14004+                          
 14005+                          	signat	_sPuthex,4216
 14006+                          	global	_loadDefaults
 14007+                          	global	??_loadDefaults
 14008+                          	global	?_loadDefaults
 14009+                          
 14010+                          ; *************** function _loadDefaults *******
      +                          **********
 14011+                          ; Defined at:
 14012+                          ;		line 26 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 14013+                          ; Parameters:
 14014+                          ;		settingsp      size:   2offs:   0	type: PTR s
      +                          truct .; Largest target is 14
 14015+                          ;		 -> main@settings(14), 
 14016+                          ; Auto variables:
 14017+                          ;		None
 14018+                          ; Return value:
 14019+                          ;		type: void 
 14020+                          ;		size: 0
 14021+                          ; Registers used:
 14022+                          ;		wreg, fsr0l, fsr0h, status,2, status,0
 14023+                          ; Tracked objects:
 14024+                          ;		On entry : 0/0
 14025+                          ;		On exit  : 0/0
 14026+                          ;		Unchanged: 0/0
 14027+                          ; Data sizes:
 14028+                          ;		Autos:    0
 14029+                          ;		Params:   2
 14030+                          ;		Temp:     0
 14031+                          ;		Total:    2
 14032+                          ; This function calls:
 14033+                          ;		Nothing
 14034+                          ; This function is called by:
 14035+                          ;		_parseSettings
 14036+                          ; This function uses a non-reentrant model
 14037+                          ; 
 14038+                                  psect   text39,class=CODE,space=0,reloc=
      +                          2
 14039+                          
 14040+                          	opt lm
 14041+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 14042+                          	line	26
 14043+ 000000                     	__size_of_loadDefaults	equ	__end_of_loadDefault
      +                          s-_loadDefaults
 14044+                          ;batchpcb26k20.c: 26: void loadDefaults(settings
      +                          _t *settingsp){
 14045+                          	
 14046+ 004056                     _loadDefaults:		; BSR set to: ?
 14047+                          
 14048+                          	opt stack 27
 14049+                          	line	27
 14050+                          ;batchpcb26k20.c: 27: settingsp->nr_settings = 1
      +                          4;
 14051+ 004056  C240  FFE9         	movff	(loadDefaults@settingsp),fsr0l
 14052+ 00405A  C241  FFEA         	movff	(loadDefaults@settingsp+1),fsr0h
 14053+ 00405E  0E0E               	movlw	low(0Eh)
 14054+ 004060  6EEF               	movwf	indf0
 14055+                          	line	28
 14056+                          ;batchpcb26k20.c: 28: settingsp->bmc_en_rx = 1;
 14057+ 004062  0E01               	movlw	low(01h)
 14058+ 004064  0102               	movlb	2	; () banked
 14059+ 004066  0102               	movlb	2	; () banked
 14060+ 004068  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14061+ 00406A  6EE9               	movwf	c:fsr0l
 14062+ 00406C  0E00               	movlw	high(01h)
 14063+ 00406E  0102               	movlb	2	; () banked
 14064+ 004070  0102               	movlb	2	; () banked
 14065+ 004072  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14066+ 004074  6EEA               	movwf	1+c:fsr0l
 14067+ 004076  0E01               	movlw	low(01h)
 14068+ 004078  6EEF               	movwf	indf0
 14069+                          	line	29
 14070+                          ;batchpcb26k20.c: 29: settingsp->bmc_sends = 2;
 14071+ 00407A  0E02               	movlw	low(02h)
 14072+ 00407C  0102               	movlb	2	; () banked
 14073+ 00407E  0102               	movlb	2	; () banked
 14074+ 004080  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14075+ 004082  6EE9               	movwf	c:fsr0l
 14076+ 004084  0E00               	movlw	high(02h)
 14077+ 004086  0102               	movlb	2	; () banked
 14078+ 004088  0102               	movlb	2	; () banked
 14079+ 00408A  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14080+ 00408C  6EEA               	movwf	1+c:fsr0l
 14081+ 00408E  0E02               	movlw	low(02h)
 14082+ 004090  6EEF               	movwf	indf0
 14083+                          	line	30
 14084+                          ;batchpcb26k20.c: 30: settingsp->bmc_en_hex = 0;
 14085+ 004092  0E03               	movlw	low(03h)
 14086+ 004094  0102               	movlb	2	; () banked
 14087+ 004096  0102               	movlb	2	; () banked
 14088+ 004098  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14089+ 00409A  6EE9               	movwf	c:fsr0l
 14090+ 00409C  0E00               	movlw	high(03h)
 14091+ 00409E  0102               	movlb	2	; () banked
 14092+ 0040A0  0102               	movlb	2	; () banked
 14093+ 0040A2  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14094+ 0040A4  6EEA               	movwf	1+c:fsr0l
 14095+ 0040A6  0E00               	movlw	low(0)
 14096+ 0040A8  6EEF               	movwf	indf0
 14097+                          	line	31
 14098+                          ;batchpcb26k20.c: 31: settingsp->bmc_repeat = 1;
 14099+ 0040AA  0E04               	movlw	low(04h)
 14100+ 0040AC  0102               	movlb	2	; () banked
 14101+ 0040AE  0102               	movlb	2	; () banked
 14102+ 0040B0  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14103+ 0040B2  6EE9               	movwf	c:fsr0l
 14104+ 0040B4  0E00               	movlw	high(04h)
 14105+ 0040B6  0102               	movlb	2	; () banked
 14106+ 0040B8  0102               	movlb	2	; () banked
 14107+ 0040BA  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14108+ 0040BC  6EEA               	movwf	1+c:fsr0l
 14109+ 0040BE  0E01               	movlw	low(01h)
 14110+ 0040C0  6EEF               	movwf	indf0
 14111+                          	line	32
 14112+                          ;batchpcb26k20.c: 32: settingsp->bmc_hops = 2;
 14113+ 0040C2  0E05               	movlw	low(05h)
 14114+ 0040C4  0102               	movlb	2	; () banked
 14115+ 0040C6  0102               	movlb	2	; () banked
 14116+ 0040C8  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14117+ 0040CA  6EE9               	movwf	c:fsr0l
 14118+ 0040CC  0E00               	movlw	high(05h)
 14119+ 0040CE  0102               	movlb	2	; () banked
 14120+ 0040D0  0102               	movlb	2	; () banked
 14121+ 0040D2  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14122+ 0040D4  6EEA               	movwf	1+c:fsr0l
 14123+ 0040D6  0E02               	movlw	low(02h)
 14124+ 0040D8  6EEF               	movwf	indf0
 14125+                          	line	33
 14126+                          ;batchpcb26k20.c: 33: settingsp->doro_en_rx = 1;
 14127+ 0040DA  0E06               	movlw	low(06h)
 14128+ 0040DC  0102               	movlb	2	; () banked
 14129+ 0040DE  0102               	movlb	2	; () banked
 14130+ 0040E0  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14131+ 0040E2  6EE9               	movwf	c:fsr0l
 14132+ 0040E4  0E00               	movlw	high(06h)
 14133+ 0040E6  0102               	movlb	2	; () banked
 14134+ 0040E8  0102               	movlb	2	; () banked
 14135+ 0040EA  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14136+ 0040EC  6EEA               	movwf	1+c:fsr0l
 14137+ 0040EE  0E01               	movlw	low(01h)
 14138+ 0040F0  6EEF               	movwf	indf0
 14139+                          	line	34
 14140+                          ;batchpcb26k20.c: 34: settingsp->gao_en_rx = 1;
 14141+ 0040F2  0E07               	movlw	low(07h)
 14142+ 0040F4  0102               	movlb	2	; () banked
 14143+ 0040F6  0102               	movlb	2	; () banked
 14144+ 0040F8  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14145+ 0040FA  6EE9               	movwf	c:fsr0l
 14146+ 0040FC  0E00               	movlw	high(07h)
 14147+ 0040FE  0102               	movlb	2	; () banked
 14148+ 004100  0102               	movlb	2	; () banked
 14149+ 004102  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14150+ 004104  6EEA               	movwf	1+c:fsr0l
 14151+ 004106  0E01               	movlw	low(01h)
 14152+ 004108  6EEF               	movwf	indf0
 14153+                          	line	35
 14154+                          ;batchpcb26k20.c: 35: settingsp->gao_sends = 6;
 14155+ 00410A  0E08               	movlw	low(08h)
 14156+ 00410C  0102               	movlb	2	; () banked
 14157+ 00410E  0102               	movlb	2	; () banked
 14158+ 004110  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14159+ 004112  6EE9               	movwf	c:fsr0l
 14160+ 004114  0E00               	movlw	high(08h)
 14161+ 004116  0102               	movlb	2	; () banked
 14162+ 004118  0102               	movlb	2	; () banked
 14163+ 00411A  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14164+ 00411C  6EEA               	movwf	1+c:fsr0l
 14165+ 00411E  0E06               	movlw	low(06h)
 14166+ 004120  6EEF               	movwf	indf0
 14167+                          	line	36
 14168+                          ;batchpcb26k20.c: 36: settingsp->esic_en_rx = 1;
 14169+ 004122  0E09               	movlw	low(09h)
 14170+ 004124  0102               	movlb	2	; () banked
 14171+ 004126  0102               	movlb	2	; () banked
 14172+ 004128  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14173+ 00412A  6EE9               	movwf	c:fsr0l
 14174+ 00412C  0E00               	movlw	high(09h)
 14175+ 00412E  0102               	movlb	2	; () banked
 14176+ 004130  0102               	movlb	2	; () banked
 14177+ 004132  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14178+ 004134  6EEA               	movwf	1+c:fsr0l
 14179+ 004136  0E01               	movlw	low(01h)
 14180+ 004138  6EEF               	movwf	indf0
 14181+                          	line	37
 14182+                          ;batchpcb26k20.c: 37: settingsp->nexa_en_rx = 1;
 14183+ 00413A  0E0A               	movlw	low(0Ah)
 14184+ 00413C  0102               	movlb	2	; () banked
 14185+ 00413E  0102               	movlb	2	; () banked
 14186+ 004140  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14187+ 004142  6EE9               	movwf	c:fsr0l
 14188+ 004144  0E00               	movlw	high(0Ah)
 14189+ 004146  0102               	movlb	2	; () banked
 14190+ 004148  0102               	movlb	2	; () banked
 14191+ 00414A  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14192+ 00414C  6EEA               	movwf	1+c:fsr0l
 14193+ 00414E  0E01               	movlw	low(01h)
 14194+ 004150  6EEF               	movwf	indf0
 14195+                          	line	38
 14196+                          ;batchpcb26k20.c: 38: settingsp->nexa_sends = 5;
 14197+ 004152  0E0B               	movlw	low(0Bh)
 14198+ 004154  0102               	movlb	2	; () banked
 14199+ 004156  0102               	movlb	2	; () banked
 14200+ 004158  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14201+ 00415A  6EE9               	movwf	c:fsr0l
 14202+ 00415C  0E00               	movlw	high(0Bh)
 14203+ 00415E  0102               	movlb	2	; () banked
 14204+ 004160  0102               	movlb	2	; () banked
 14205+ 004162  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14206+ 004164  6EEA               	movwf	1+c:fsr0l
 14207+ 004166  0E05               	movlw	low(05h)
 14208+ 004168  6EEF               	movwf	indf0
 14209+                          	line	39
 14210+                          ;batchpcb26k20.c: 39: settingsp->waveman_sends =
      +                           8;
 14211+ 00416A  0E0C               	movlw	low(0Ch)
 14212+ 00416C  0102               	movlb	2	; () banked
 14213+ 00416E  0102               	movlb	2	; () banked
 14214+ 004170  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14215+ 004172  6EE9               	movwf	c:fsr0l
 14216+ 004174  0E00               	movlw	high(0Ch)
 14217+ 004176  0102               	movlb	2	; () banked
 14218+ 004178  0102               	movlb	2	; () banked
 14219+ 00417A  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14220+ 00417C  6EEA               	movwf	1+c:fsr0l
 14221+ 00417E  0E08               	movlw	low(08h)
 14222+ 004180  6EEF               	movwf	indf0
 14223+                          	line	40
 14224+                          ;batchpcb26k20.c: 40: settingsp->kangthai_sends 
      +                          = 6;
 14225+ 004182  0E0D               	movlw	low(0Dh)
 14226+ 004184  0102               	movlb	2	; () banked
 14227+ 004186  0102               	movlb	2	; () banked
 14228+ 004188  2540               	addwf	((loadDefaults@settingsp))&0ffh,w
 14229+ 00418A  6EE9               	movwf	c:fsr0l
 14230+ 00418C  0E00               	movlw	high(0Dh)
 14231+ 00418E  0102               	movlb	2	; () banked
 14232+ 004190  0102               	movlb	2	; () banked
 14233+ 004192  2141               	addwfc	((loadDefaults@settingsp+1))&0ffh,w
 14234+ 004194  6EEA               	movwf	1+c:fsr0l
 14235+ 004196  0E06               	movlw	low(06h)
 14236+ 004198  6EEF               	movwf	indf0
 14237+                          	line	41
 14238+                          ;batchpcb26k20.c: 41: }settings_t;
 14239+ 00419A                     l242:
 14240+                          			; BSR set to: ?
 14241+                          
 14242+ 00419A  0012               	return
 14243+                          	opt stack 0
 14244+                          GLOBAL __end_of_loadDefaults
 14245+ 00419C                     	__end_of_loadDefaults:
 14246+                          	FNSIZE	_loadDefaults,0,2
 14247+                          ; =============== function _loadDefaults ends ==
      +                          ==========
 14248+                          
 14249+                          	signat	_loadDefaults,4216
 14250+                          	global	_eeprom_read
 14251+                          	global	??_eeprom_read
 14252+                          	global	?_eeprom_read
 14253+                          
 14254+                          ; *************** function _eeprom_read ********
      +                          *********
 14255+                          ; Defined at:
 14256+                          ;		line 6 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\eeread.c"
 14257+                          ; Parameters:
 14258+                          ;		addr           size:   2offs:   0	type: unsig
      +                          ned int 
 14259+                          ; Auto variables:
 14260+                          ;		None
 14261+                          ; Return value:
 14262+                          ;		type: unsigned char 
 14263+                          ;		size: 1
 14264+                          ; Registers used:
 14265+                          ;		wreg, status,2, status,0
 14266+                          ; Tracked objects:
 14267+                          ;		On entry : 0/0
 14268+                          ;		On exit  : 0/0
 14269+                          ;		Unchanged: 0/0
 14270+                          ; Data sizes:
 14271+                          ;		Autos:    0
 14272+                          ;		Params:   2
 14273+                          ;		Temp:     0
 14274+                          ;		Total:    2
 14275+                          ; This function calls:
 14276+                          ;		Nothing
 14277+                          ; This function is called by:
 14278+                          ;		_loadEeprom
 14279+                          ; This function uses a non-reentrant model
 14280+                          ; 
 14281+                                  psect   text40,class=CODE,space=0,reloc=
      +                          2
 14282+                          
 14283+                          	opt lm
 14284+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\eeread.c"
 14285+                          	line	6
 14286+ 000000                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-
      +                          _eeprom_read
 14287+                          	
 14288+ 0051D6                     _eeprom_read:		; BSR set to: ?
 14289+                          
 14290+                          	opt stack 26
 14291+                          	line	7
 14292+ 0051D6  EFEF  F028         	goto	l794
 14293+                          	
 14294+ 0051DA                     l795:		; BSR set to: ?
 14295+                          
 14296+ 0051DA  EFEF  F028         	goto	l794
 14297+                          	
 14298+ 0051DE                     l794:		; BSR set to: ?
 14299+                          
 14300+                          	
 14301+ 0051DE  B2A6               	btfsc	((c:4006)),c,1	;volatile
 14302+ 0051E0  EFF4  F028         	goto	u5021
 14303+ 0051E4  EFF6  F028         	goto	u5020
 14304+ 0051E8                     u5021:
 14305+ 0051E8  EFED  F028         	goto	l795
 14306+ 0051EC                     u5020:
 14307+                          	
 14308+ 0051EC                     l796:		; BSR set to: ?
 14309+                          
 14310+                          	line	8
 14311+ 0051EC  C244  FFA9         	movff	(eeprom_read@addr),(c:4009)	;volatile
 14312+ 0051F0  0E3F               	movlw	(03Fh)&0ffh
 14313+ 0051F2  16A6               	andwf	((c:4006)),c	;volatile
 14314+ 0051F4  80A6               	bsf	((c:4006)),c,0	;volatile
 14315+ 0051F6  50A8               	movf	((c:4008)),c,w	;volatile
 14316+ 0051F8  EFFE  F028         	goto	l793
 14317+                          	line	9
 14318+ 0051FC                     l793:
 14319+                          			; BSR set to: ?
 14320+                          
 14321+ 0051FC  0012               	return
 14322+                          	opt stack 0
 14323+                          GLOBAL __end_of_eeprom_read
 14324+ 0051FE                     	__end_of_eeprom_read:
 14325+                          	FNSIZE	_eeprom_read,0,2
 14326+                          ; =============== function _eeprom_read ends ===
      +                          =========
 14327+                          
 14328+                          	signat	_eeprom_read,4217
 14329+                          	global	_sPutonehex
 14330+                          	global	??_sPutonehex
 14331+                          	global	?_sPutonehex
 14332+                          
 14333+                          ; *************** function _sPutonehex *********
      +                          ********
 14334+                          ; Defined at:
 14335+                          ;		line 77 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\uartring.c"
 14336+                          ; Parameters:
 14337+                          ;		data           size:   1offs:   0	type: unsig
      +                          ned char 
 14338+                          ; Auto variables:
 14339+                          ;		None
 14340+                          ; Return value:
 14341+                          ;		type: void 
 14342+                          ;		size: 0
 14343+                          ; Registers used:
 14344+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
 14345+                          ; Tracked objects:
 14346+                          ;		On entry : 0/0
 14347+                          ;		On exit  : 0/0
 14348+                          ;		Unchanged: 0/0
 14349+                          ; Data sizes:
 14350+                          ;		Autos:    0
 14351+                          ;		Params:   1
 14352+                          ;		Temp:     0
 14353+                          ;		Total:    1
 14354+                          ; This function calls:
 14355+                          ;		_sPut
 14356+                          ; This function is called by:
 14357+                          ;		_sPuthex
 14358+                          ;		_gaoPrint
 14359+                          ;		_nexaPrint
 14360+                          ;		_doroPrint
 14361+                          ; This function uses a non-reentrant model
 14362+                          ; 
 14363+                                  psect   text41,class=CODE,space=0,reloc=
      +                          2
 14364+                          
 14365+                          	opt lm
 14366+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\uartring.c"
 14367+                          	line	77
 14368+ 000000                     	__size_of_sPutonehex	equ	__end_of_sPutonehex-_s
      +                          Putonehex
 14369+                          ;uartring.c: 77: void sPutonehex(char data){
 14370+                          	
 14371+ 005098                     _sPutonehex:		; BSR set to: ?
 14372+                          
 14373+                          	opt stack 26
 14374+                          	line	78
 14375+ 005098  0E0A               	movlw	(0Ah)&0ffh
 14376+ 00509A  0102               	movlb	2	; () banked
 14377+ 00509C  0102               	movlb	2	; () banked
 14378+ 00509E  614A               	cpfslt	((sPutonehex@data))&0ffh
 14379+ 0050A0  EF54  F028         	goto	u8041
 14380+ 0050A4  EF56  F028         	goto	u8040
 14381+ 0050A8                     u8041:
 14382+ 0050A8  EF61  F028         	goto	l238
 14383+ 0050AC                     u8040:
 14384+ 0050AC  0102               	movlb	2	; () banked
 14385+ 0050AE  0102               	movlb	2	; () banked
 14386+ 0050B0  514A               	movf	((sPutonehex@data))&0ffh,w
 14387+ 0050B2  0F30               	addlw	low(030h)
 14388+ 0050B4  0102               	movlb	2	; () banked
 14389+ 0050B6  0102               	movlb	2	; () banked
 14390+ 0050B8  6F60               	movwf	((?_sPut))&0ffh
 14391+ 0050BA  ECDF  F025         	call	_sPut	;wreg free
 14392+ 0050BE  EF6A  F028         	goto	l239
 14393+                          	line	79
 14394+                          	
 14395+ 0050C2                     l238:		; BSR set to: ?
 14396+                          
 14397+                          ;uartring.c: 79: else sPut(data + 55);
 14398+ 0050C2  0102               	movlb	2	; () banked
 14399+ 0050C4  0102               	movlb	2	; () banked
 14400+ 0050C6  514A               	movf	((sPutonehex@data))&0ffh,w
 14401+ 0050C8  0F37               	addlw	low(037h)
 14402+ 0050CA  0102               	movlb	2	; () banked
 14403+ 0050CC  0102               	movlb	2	; () banked
 14404+ 0050CE  6F60               	movwf	((?_sPut))&0ffh
 14405+ 0050D0  ECDF  F025         	call	_sPut	;wreg free
 14406+                          	
 14407+ 0050D4                     l239:		; BSR set to: ?
 14408+                          
 14409+                          	line	80
 14410+                          ;uartring.c: 80: }
 14411+ 0050D4                     l237:
 14412+                          			; BSR set to: ?
 14413+                          
 14414+ 0050D4  0012               	return
 14415+                          	opt stack 0
 14416+                          GLOBAL __end_of_sPutonehex
 14417+ 0050D6                     	__end_of_sPutonehex:
 14418+                          	FNSIZE	_sPutonehex,0,1
 14419+                          ; =============== function _sPutonehex ends ====
      +                          ========
 14420+                          
 14421+                          	signat	_sPutonehex,4216
 14422+                          	global	_startTransmit
 14423+                          	global	??_startTransmit
 14424+                          	global	?_startTransmit
 14425+                          
 14426+                          ; *************** function _startTransmit ******
      +                          ***********
 14427+                          ; Defined at:
 14428+                          ;		line 84 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 14429+                          ; Parameters:
 14430+                          ;		None
 14431+                          ; Auto variables:
 14432+                          ;		None
 14433+                          ; Return value:
 14434+                          ;		type: void 
 14435+                          ;		size: 0
 14436+                          ; Registers used:
 14437+                          ;		wreg, status,2, status,0, cstack
 14438+                          ; Tracked objects:
 14439+                          ;		On entry : 0/0
 14440+                          ;		On exit  : 0/0
 14441+                          ;		Unchanged: 0/0
 14442+                          ; Data sizes:
 14443+                          ;		Autos:    0
 14444+                          ;		Params:   0
 14445+                          ;		Temp:     0
 14446+                          ;		Total:    0
 14447+                          ; This function calls:
 14448+                          ;		_delayms
 14449+                          ;		_dataPinOut
 14450+                          ; This function is called by:
 14451+                          ;		_bmcTx
 14452+                          ;		_gaoTx
 14453+                          ;		_nexaTx
 14454+                          ;		_kangthaiTx
 14455+                          ;		_wavemanTx
 14456+                          ;		_parseCmd
 14457+                          ; This function uses a non-reentrant model
 14458+                          ; 
 14459+                                  psect   text42,class=CODE,space=0,reloc=
      +                          2
 14460+                          
 14461+                          	opt lm
 14462+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 14463+                          	line	84
 14464+ 000000                     	__size_of_startTransmit	equ	__end_of_startTrans
      +                          mit-_startTransmit
 14465+                          ;batchpcb26k20.c: 84: void startTransmit(){
 14466+                          	
 14467+ 0051FE                     _startTransmit:		; BSR set to: ?
 14468+                          
 14469+                          	opt stack 26
 14470+                          	line	85
 14471+ 0051FE  888B               	bsf	c:(31836/8),(31836)&7	;volatile
 14472+                          	line	86
 14473+                          ;batchpcb26k20.c: 86: LATB3 = 1;
 14474+ 005200  868A               	bsf	c:(31827/8),(31827)&7	;volatile
 14475+                          	line	87
 14476+                          ;batchpcb26k20.c: 87: delayms(3);
 14477+ 005202  0E03               	movlw	low(03h)
 14478+ 005204  0102               	movlb	2	; () banked
 14479+ 005206  0102               	movlb	2	; () banked
 14480+ 005208  6F54               	movwf	((?_delayms))&0ffh
 14481+ 00520A  0E00               	movlw	high(03h)
 14482+ 00520C  0102               	movlb	2	; () banked
 14483+ 00520E  6F55               	movwf	((?_delayms+1))&0ffh
 14484+ 005210  EC7A  F027         	call	_delayms	;wreg free
 14485+                          	line	88
 14486+                          ;batchpcb26k20.c: 88: dataPinOut();
 14487+ 005214  EC14  F029         	call	_dataPinOut	;wreg free
 14488+                          	line	89
 14489+                          ;batchpcb26k20.c: 89: }
 14490+ 005218                     l274:
 14491+                          			; BSR set to: ?
 14492+                          
 14493+ 005218  0012               	return
 14494+                          	opt stack 0
 14495+                          GLOBAL __end_of_startTransmit
 14496+ 00521A                     	__end_of_startTransmit:
 14497+                          	FNSIZE	_startTransmit,0,0
 14498+                          ; =============== function _startTransmit ends =
      +                          ===========
 14499+                          
 14500+                          	signat	_startTransmit,88
 14501+                          	global	___lwdiv
 14502+                          	global	??___lwdiv
 14503+                          	global	?___lwdiv
 14504+                          
 14505+                          ; *************** function ___lwdiv ************
      +                          *****
 14506+                          ; Defined at:
 14507+                          ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwdiv.c"
 14508+                          ; Parameters:
 14509+                          ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
 14510+                          ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
 14511+                          ; Auto variables:
 14512+                          ;		counter     	       	type: unsigned char 
 14513+                          ;		quotient    	       	type: unsigned int 
 14514+                          ; Return value:
 14515+                          ;		type: unsigned int 
 14516+                          ;		size: 2
 14517+                          ; Registers used:
 14518+                          ;		wreg, status,2, status,0
 14519+                          ; Tracked objects:
 14520+                          ;		On entry : 0/0
 14521+                          ;		On exit  : 0/0
 14522+                          ;		Unchanged: 0/0
 14523+                          ; Data sizes:
 14524+                          ;		Autos:    3
 14525+                          ;		Params:   4
 14526+                          ;		Temp:     1
 14527+                          ;		Total:    8
 14528+                          ; This function calls:
 14529+                          ;		Nothing
 14530+                          ; This function is called by:
 14531+                          ;		_sPutint
 14532+                          ; This function uses a non-reentrant model
 14533+                          ; 
 14534+                                  psect   text43,class=CODE,space=0,reloc=
      +                          2
 14535+                          
 14536+                          	opt lm
 14537+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\lwdiv.c"
 14538+                          	line	5
 14539+ 000000                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 14540+                          	
 14541+ 0046D6                     ___lwdiv:		; BSR set to: ?
 14542+                          
 14543+                          	opt stack 26
 14544+                          	line	9
 14545+ 0046D6  0E00               	movlw	low(0)
 14546+ 0046D8  0102               	movlb	2	; () banked
 14547+ 0046DA  0102               	movlb	2	; () banked
 14548+ 0046DC  6F63               	movwf	((___lwdiv@quotient))&0ffh
 14549+ 0046DE  0E00               	movlw	high(0)
 14550+ 0046E0  0102               	movlb	2	; () banked
 14551+ 0046E2  6F64               	movwf	((___lwdiv@quotient+1))&0ffh
 14552+                          	line	10
 14553+ 0046E4  0102               	movlb	2	; () banked
 14554+ 0046E6  0102               	movlb	2	; () banked
 14555+ 0046E8  5161               	movf	((___lwdiv@divisor+1))&0ffh,w
 14556+ 0046EA  1160               	iorwf ((___lwdiv@divisor))&0ffh,w
 14557+                          
 14558+ 0046EC  B4D8               	btfsc	status,2
 14559+ 0046EE  EF7B  F023         	goto	u8211
 14560+ 0046F2  EF7D  F023         	goto	u8210
 14561+ 0046F6                     u8211:
 14562+ 0046F6  EFCC  F023         	goto	l1316
 14563+ 0046FA                     u8210:
 14564+                          	line	11
 14565+ 0046FA  0102               	movlb	2	; () banked
 14566+ 0046FC  6F65               	movwf	(??___lwdiv+3+0)&0ffh
 14567+ 0046FE  0E01               	movlw	low(01h)
 14568+ 004700  0102               	movlb	2	; () banked
 14569+ 004702  0102               	movlb	2	; () banked
 14570+ 004704  6F62               	movwf	((___lwdiv@counter))&0ffh
 14571+ 004706  0102               	movlb	2	; () banked
 14572+ 004708  5165               	movf	(??___lwdiv+3+0)&0ffh,w
 14573+                          	line	12
 14574+ 00470A  EF90  F023         	goto	l1317
 14575+                          	
 14576+ 00470E                     l1318:		; BSR set to: ?
 14577+                          
 14578+                          	line	13
 14579+ 00470E  0102               	movlb	2	; () banked
 14580+ 004710  90D8               	bcf	status,0
 14581+ 004712  0102               	movlb	2	; () banked
 14582+ 004714  3760               	rlcf	((___lwdiv@divisor))&0ffh
 14583+ 004716  0102               	movlb	2	; () banked
 14584+ 004718  3761               	rlcf	((___lwdiv@divisor+1))&0ffh
 14585+                          	line	14
 14586+ 00471A  0102               	movlb	2	; () banked
 14587+ 00471C  0102               	movlb	2	; () banked
 14588+ 00471E  2B62               	incf	((___lwdiv@counter))&0ffh
 14589+                          	line	15
 14590+                          	
 14591+ 004720                     l1317:		; BSR set to: ?
 14592+                          
 14593+                          	line	12
 14594+ 004720  0102               	movlb	2	; () banked
 14595+                          	
 14596+ 004722  0102               	movlb	2	; () banked
 14597+ 004724  AF61               	btfss	((___lwdiv@divisor+1))&0ffh,(15)&7
 14598+ 004726  EF97  F023         	goto	u8221
 14599+ 00472A  EF99  F023         	goto	u8220
 14600+ 00472E                     u8221:
 14601+ 00472E  EF87  F023         	goto	l1318
 14602+ 004732                     u8220:
 14603+                          	
 14604+ 004732                     l1319:		; BSR set to: ?
 14605+                          
 14606+                          	line	16
 14607+                          	
 14608+ 004732                     l1322:		; BSR set to: ?
 14609+                          
 14610+                          	line	17
 14611+ 004732  0102               	movlb	2	; () banked
 14612+ 004734  90D8               	bcf	status,0
 14613+ 004736  0102               	movlb	2	; () banked
 14614+ 004738  3763               	rlcf	((___lwdiv@quotient))&0ffh
 14615+ 00473A  0102               	movlb	2	; () banked
 14616+ 00473C  3764               	rlcf	((___lwdiv@quotient+1))&0ffh
 14617+                          	line	18
 14618+ 00473E  0102               	movlb	2	; () banked
 14619+ 004740  0102               	movlb	2	; () banked
 14620+ 004742  5160               	movf	((___lwdiv@divisor))&0ffh,w
 14621+ 004744  0102               	movlb	2	; () banked
 14622+ 004746  0102               	movlb	2	; () banked
 14623+ 004748  5D5E               	subwf	((___lwdiv@dividend))&0ffh,w
 14624+ 00474A  0102               	movlb	2	; () banked
 14625+ 00474C  0102               	movlb	2	; () banked
 14626+ 00474E  5161               	movf	((___lwdiv@divisor+1))&0ffh,w
 14627+ 004750  0102               	movlb	2	; () banked
 14628+ 004752  0102               	movlb	2	; () banked
 14629+ 004754  595F               	subwfb	((___lwdiv@dividend+1))&0ffh,w
 14630+ 004756  A0D8               	btfss	status,0
 14631+ 004758  EFB0  F023         	goto	u8231
 14632+ 00475C  EFB2  F023         	goto	u8230
 14633+ 004760                     u8231:
 14634+ 004760  EFC1  F023         	goto	l1323
 14635+ 004764                     u8230:
 14636+                          	line	19
 14637+ 004764  0102               	movlb	2	; () banked
 14638+ 004766  0102               	movlb	2	; () banked
 14639+ 004768  5160               	movf	((___lwdiv@divisor))&0ffh,w
 14640+ 00476A  0102               	movlb	2	; () banked
 14641+ 00476C  0102               	movlb	2	; () banked
 14642+ 00476E  5F5E               	subwf	((___lwdiv@dividend))&0ffh
 14643+ 004770  0102               	movlb	2	; () banked
 14644+ 004772  0102               	movlb	2	; () banked
 14645+ 004774  5161               	movf	((___lwdiv@divisor+1))&0ffh,w
 14646+ 004776  0102               	movlb	2	; () banked
 14647+ 004778  0102               	movlb	2	; () banked
 14648+ 00477A  5B5F               	subwfb	((___lwdiv@dividend+1))&0ffh
 14649+                          
 14650+                          	line	20
 14651+ 00477C  0102               	movlb	2	; () banked
 14652+ 00477E  0102               	movlb	2	; () banked
 14653+ 004780  8163               	bsf	(0+(0/8)+(___lwdiv@quotient))&0ffh,(0)&7
 14654+                          	line	21
 14655+                          	
 14656+ 004782                     l1323:		; BSR set to: ?
 14657+                          
 14658+                          	line	22
 14659+ 004782  0102               	movlb	2	; () banked
 14660+ 004784  90D8               	bcf	status,0
 14661+ 004786  0102               	movlb	2	; () banked
 14662+ 004788  3361               	rrcf	((___lwdiv@divisor+1))&0ffh
 14663+ 00478A  0102               	movlb	2	; () banked
 14664+ 00478C  3360               	rrcf	((___lwdiv@divisor))&0ffh
 14665+                          	line	23
 14666+ 00478E  0102               	movlb	2	; () banked
 14667+ 004790  0102               	movlb	2	; () banked
 14668+ 004792  2F62               	decfsz	((___lwdiv@counter))&0ffh
 14669+                          	
 14670+ 004794  EF99  F023         	goto	l1322
 14671+                          	
 14672+ 004798                     l1321:		; BSR set to: ?
 14673+                          
 14674+                          	line	24
 14675+                          	
 14676+ 004798                     l1316:		; BSR set to: ?
 14677+                          
 14678+                          	line	25
 14679+ 004798  C263  F25E         	movff	(___lwdiv@quotient),(?___lwdiv)
 14680+ 00479C  C264  F25F         	movff	(___lwdiv@quotient+1),(?___lwdiv+1)
 14681+ 0047A0  EFD2  F023         	goto	l1315
 14682+                          	line	26
 14683+ 0047A4                     l1315:
 14684+                          			; BSR set to: ?
 14685+                          
 14686+ 0047A4  0012               	return
 14687+                          	opt stack 0
 14688+                          GLOBAL __end_of___lwdiv
 14689+ 0047A6                     	__end_of___lwdiv:
 14690+                          	FNSIZE	___lwdiv,4,4
 14691+                          ; =============== function ___lwdiv ends =======
      +                          =====
 14692+                          
 14693+                          	signat	___lwdiv,8314
 14694+                          	global	___lwmod
 14695+                          	global	??___lwmod
 14696+                          	global	?___lwmod
 14697+                          
 14698+                          ; *************** function ___lwmod ************
      +                          *****
 14699+                          ; Defined at:
 14700+                          ;		line 5 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lwmod.c"
 14701+                          ; Parameters:
 14702+                          ;		dividend       size:   2offs:   0	type: unsig
      +                          ned int 
 14703+                          ;		divisor        size:   2offs:   2	type: unsig
      +                          ned int 
 14704+                          ; Auto variables:
 14705+                          ;		counter     	       	type: unsigned char 
 14706+                          ; Return value:
 14707+                          ;		type: unsigned int 
 14708+                          ;		size: 2
 14709+                          ; Registers used:
 14710+                          ;		wreg, status,2, status,0
 14711+                          ; Tracked objects:
 14712+                          ;		On entry : 0/0
 14713+                          ;		On exit  : 0/0
 14714+                          ;		Unchanged: 0/0
 14715+                          ; Data sizes:
 14716+                          ;		Autos:    1
 14717+                          ;		Params:   4
 14718+                          ;		Temp:     1
 14719+                          ;		Total:    6
 14720+                          ; This function calls:
 14721+                          ;		Nothing
 14722+                          ; This function is called by:
 14723+                          ;		_sPutint
 14724+                          ; This function uses a non-reentrant model
 14725+                          ; 
 14726+                                  psect   text44,class=CODE,space=0,reloc=
      +                          2
 14727+                          
 14728+                          	opt lm
 14729+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\lwmod.c"
 14730+                          	line	5
 14731+ 000000                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 14732+                          	
 14733+ 0049C6                     ___lwmod:		; BSR set to: ?
 14734+                          
 14735+                          	opt stack 26
 14736+                          	line	8
 14737+ 0049C6  0102               	movlb	2	; () banked
 14738+ 0049C8  0102               	movlb	2	; () banked
 14739+ 0049CA  5161               	movf	((___lwmod@divisor+1))&0ffh,w
 14740+ 0049CC  1160               	iorwf ((___lwmod@divisor))&0ffh,w
 14741+                          
 14742+ 0049CE  B4D8               	btfsc	status,2
 14743+ 0049D0  EFEC  F024         	goto	u8181
 14744+ 0049D4  EFEE  F024         	goto	u8180
 14745+ 0049D8                     u8181:
 14746+ 0049D8  EF34  F025         	goto	l1325
 14747+ 0049DC                     u8180:
 14748+                          	line	9
 14749+ 0049DC  0102               	movlb	2	; () banked
 14750+ 0049DE  6F63               	movwf	(??___lwmod+1+0)&0ffh
 14751+ 0049E0  0E01               	movlw	low(01h)
 14752+ 0049E2  0102               	movlb	2	; () banked
 14753+ 0049E4  0102               	movlb	2	; () banked
 14754+ 0049E6  6F62               	movwf	((___lwmod@counter))&0ffh
 14755+ 0049E8  0102               	movlb	2	; () banked
 14756+ 0049EA  5163               	movf	(??___lwmod+1+0)&0ffh,w
 14757+                          	line	10
 14758+ 0049EC  EF01  F025         	goto	l1326
 14759+                          	
 14760+ 0049F0                     l1327:		; BSR set to: ?
 14761+                          
 14762+                          	line	11
 14763+ 0049F0  0102               	movlb	2	; () banked
 14764+ 0049F2  90D8               	bcf	status,0
 14765+ 0049F4  0102               	movlb	2	; () banked
 14766+ 0049F6  3760               	rlcf	((___lwmod@divisor))&0ffh
 14767+ 0049F8  0102               	movlb	2	; () banked
 14768+ 0049FA  3761               	rlcf	((___lwmod@divisor+1))&0ffh
 14769+                          	line	12
 14770+ 0049FC  0102               	movlb	2	; () banked
 14771+ 0049FE  0102               	movlb	2	; () banked
 14772+ 004A00  2B62               	incf	((___lwmod@counter))&0ffh
 14773+                          	line	13
 14774+                          	
 14775+ 004A02                     l1326:		; BSR set to: ?
 14776+                          
 14777+                          	line	10
 14778+ 004A02  0102               	movlb	2	; () banked
 14779+                          	
 14780+ 004A04  0102               	movlb	2	; () banked
 14781+ 004A06  AF61               	btfss	((___lwmod@divisor+1))&0ffh,(15)&7
 14782+ 004A08  EF08  F025         	goto	u8191
 14783+ 004A0C  EF0A  F025         	goto	u8190
 14784+ 004A10                     u8191:
 14785+ 004A10  EFF8  F024         	goto	l1327
 14786+ 004A14                     u8190:
 14787+                          	
 14788+ 004A14                     l1328:		; BSR set to: ?
 14789+                          
 14790+                          	line	14
 14791+                          	
 14792+ 004A14                     l1331:		; BSR set to: ?
 14793+                          
 14794+                          	line	15
 14795+ 004A14  0102               	movlb	2	; () banked
 14796+ 004A16  0102               	movlb	2	; () banked
 14797+ 004A18  5160               	movf	((___lwmod@divisor))&0ffh,w
 14798+ 004A1A  0102               	movlb	2	; () banked
 14799+ 004A1C  0102               	movlb	2	; () banked
 14800+ 004A1E  5D5E               	subwf	((___lwmod@dividend))&0ffh,w
 14801+ 004A20  0102               	movlb	2	; () banked
 14802+ 004A22  0102               	movlb	2	; () banked
 14803+ 004A24  5161               	movf	((___lwmod@divisor+1))&0ffh,w
 14804+ 004A26  0102               	movlb	2	; () banked
 14805+ 004A28  0102               	movlb	2	; () banked
 14806+ 004A2A  595F               	subwfb	((___lwmod@dividend+1))&0ffh,w
 14807+ 004A2C  A0D8               	btfss	status,0
 14808+ 004A2E  EF1B  F025         	goto	u8201
 14809+ 004A32  EF1D  F025         	goto	u8200
 14810+ 004A36                     u8201:
 14811+ 004A36  EF29  F025         	goto	l1332
 14812+ 004A3A                     u8200:
 14813+                          	line	16
 14814+ 004A3A  0102               	movlb	2	; () banked
 14815+ 004A3C  0102               	movlb	2	; () banked
 14816+ 004A3E  5160               	movf	((___lwmod@divisor))&0ffh,w
 14817+ 004A40  0102               	movlb	2	; () banked
 14818+ 004A42  0102               	movlb	2	; () banked
 14819+ 004A44  5F5E               	subwf	((___lwmod@dividend))&0ffh
 14820+ 004A46  0102               	movlb	2	; () banked
 14821+ 004A48  0102               	movlb	2	; () banked
 14822+ 004A4A  5161               	movf	((___lwmod@divisor+1))&0ffh,w
 14823+ 004A4C  0102               	movlb	2	; () banked
 14824+ 004A4E  0102               	movlb	2	; () banked
 14825+ 004A50  5B5F               	subwfb	((___lwmod@dividend+1))&0ffh
 14826+                          
 14827+                          	
 14828+ 004A52                     l1332:		; BSR set to: ?
 14829+                          
 14830+                          	line	17
 14831+ 004A52  0102               	movlb	2	; () banked
 14832+ 004A54  90D8               	bcf	status,0
 14833+ 004A56  0102               	movlb	2	; () banked
 14834+ 004A58  3361               	rrcf	((___lwmod@divisor+1))&0ffh
 14835+ 004A5A  0102               	movlb	2	; () banked
 14836+ 004A5C  3360               	rrcf	((___lwmod@divisor))&0ffh
 14837+                          	line	18
 14838+ 004A5E  0102               	movlb	2	; () banked
 14839+ 004A60  0102               	movlb	2	; () banked
 14840+ 004A62  2F62               	decfsz	((___lwmod@counter))&0ffh
 14841+                          	
 14842+ 004A64  EF0A  F025         	goto	l1331
 14843+                          	
 14844+ 004A68                     l1330:		; BSR set to: ?
 14845+                          
 14846+                          	line	19
 14847+                          	
 14848+ 004A68                     l1325:		; BSR set to: ?
 14849+                          
 14850+                          	line	20
 14851+ 004A68  C25E  F25E         	movff	(___lwmod@dividend),(?___lwmod)
 14852+ 004A6C  C25F  F25F         	movff	(___lwmod@dividend+1),(?___lwmod+1)
 14853+ 004A70  EF3A  F025         	goto	l1324
 14854+                          	line	21
 14855+ 004A74                     l1324:
 14856+                          			; BSR set to: ?
 14857+                          
 14858+ 004A74  0012               	return
 14859+                          	opt stack 0
 14860+                          GLOBAL __end_of___lwmod
 14861+ 004A76                     	__end_of___lwmod:
 14862+                          	FNSIZE	___lwmod,2,4
 14863+                          ; =============== function ___lwmod ends =======
      +                          =====
 14864+                          
 14865+                          	signat	___lwmod,8314
 14866+                          	global	_eeprom_write
 14867+                          	global	??_eeprom_write
 14868+                          	global	?_eeprom_write
 14869+                          
 14870+                          ; *************** function _eeprom_write *******
      +                          **********
 14871+                          ; Defined at:
 14872+                          ;		line 7 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\eewrite.c"
 14873+                          ; Parameters:
 14874+                          ;		addr           size:   2offs:   0	type: unsig
      +                          ned int 
 14875+                          ;		value          size:   1offs:   2	type: unsig
      +                          ned char 
 14876+                          ; Auto variables:
 14877+                          ;		None
 14878+                          ; Return value:
 14879+                          ;		type: void 
 14880+                          ;		size: 0
 14881+                          ; Registers used:
 14882+                          ;		wreg, status,2, status,0
 14883+                          ; Tracked objects:
 14884+                          ;		On entry : 0/0
 14885+                          ;		On exit  : 0/0
 14886+                          ;		Unchanged: 0/0
 14887+                          ; Data sizes:
 14888+                          ;		Autos:    0
 14889+                          ;		Params:   3
 14890+                          ;		Temp:     0
 14891+                          ;		Total:    3
 14892+                          ; This function calls:
 14893+                          ;		Nothing
 14894+                          ; This function is called by:
 14895+                          ;		_saveEeprom
 14896+                          ; This function uses a non-reentrant model
 14897+                          ; 
 14898+                                  psect   text45,class=CODE,space=0,reloc=
      +                          2
 14899+                          
 14900+                          	opt lm
 14901+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\eewrite.c"
 14902+                          	line	7
 14903+ 000000                     	__size_of_eeprom_write	equ	__end_of_eeprom_writ
      +                          e-_eeprom_write
 14904+                          	
 14905+ 004FB4                     _eeprom_write:		; BSR set to: ?
 14906+                          
 14907+                          	opt stack 26
 14908+                          	line	8
 14909+                          	
 14910+ 004FB4                     l999:		; BSR set to: ?
 14911+                          
 14912+ 004FB4  EFDC  F027         	goto	l1000
 14913+                          	
 14914+ 004FB8                     l1000:		; BSR set to: ?
 14915+                          
 14916+                          	
 14917+ 004FB8  B2A6               	btfsc	((c:4006)),c,1	;volatile
 14918+ 004FBA  EFE1  F027         	goto	u5031
 14919+ 004FBE  EFE3  F027         	goto	u5030
 14920+ 004FC2                     u5031:
 14921+ 004FC2  EFDA  F027         	goto	l999
 14922+ 004FC6                     u5030:
 14923+                          	
 14924+ 004FC6                     l1002:		; BSR set to: ?
 14925+                          
 14926+ 004FC6  C244  FFA9         	movff	(eeprom_write@addr),(c:4009)	;volatile
 14927+ 004FCA  C246  FFA8         	movff	(eeprom_write@value),(c:4008)	;volatile
 14928+ 004FCE  0E3F               	movlw	(03Fh)&0ffh
 14929+ 004FD0  16A6               	andwf	((c:4006)),c	;volatile
 14930+ 004FD2  90D8               	bcf	c:(32448/8),(32448)&7	;volatile
 14931+ 004FD4  AEF2               	btfss	c:(32663/8),(32663)&7	;volatile
 14932+ 004FD6  EFEF  F027         	goto	u5041
 14933+ 004FDA  EFF1  F027         	goto	u5040
 14934+ 004FDE                     u5041:
 14935+ 004FDE  EFF2  F027         	goto	l1003
 14936+ 004FE2                     u5040:
 14937+ 004FE2  80D8               	bsf	c:(32448/8),(32448)&7	;volatile
 14938+                          	
 14939+ 004FE4                     l1003:		; BSR set to: ?
 14940+                          
 14941+ 004FE4  9EF2               	bcf	c:(32663/8),(32663)&7	;volatile
 14942+ 004FE6  84A6               	bsf	c:(32050/8),(32050)&7	;volatile
 14943+ 004FE8  0E55               	movlw	low(055h)
 14944+ 004FEA  6EA7               	movwf	((c:4007)),c	;volatile
 14945+ 004FEC  0EAA               	movlw	low(0AAh)
 14946+ 004FEE  6EA7               	movwf	((c:4007)),c	;volatile
 14947+ 004FF0  82A6               	bsf	((c:4006)),c,1	;volatile
 14948+ 004FF2  98A1               	bcf	c:(32012/8),(32012)&7	;volatile
 14949+ 004FF4  94A6               	bcf	c:(32050/8),(32050)&7	;volatile
 14950+ 004FF6  A0D8               	btfss	c:(32448/8),(32448)&7	;volatile
 14951+ 004FF8  EF00  F028         	goto	u5051
 14952+ 004FFC  EF02  F028         	goto	u5050
 14953+ 005000                     u5051:
 14954+ 005000  EF03  F028         	goto	l998
 14955+ 005004                     u5050:
 14956+ 005004  8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
 14957+                          	
 14958+ 005006                     l1004:		; BSR set to: ?
 14959+                          
 14960+                          	
 14961+ 005006                     l998:		; BSR set to: ?
 14962+                          
 14963+                          	line	9
 14964+ 005006                     l996:
 14965+                          			; BSR set to: ?
 14966+                          
 14967+ 005006  0012               	return
 14968+                          	opt stack 0
 14969+                          GLOBAL __end_of_eeprom_write
 14970+ 005008                     	__end_of_eeprom_write:
 14971+                          	FNSIZE	_eeprom_write,0,3
 14972+                          ; =============== function _eeprom_write ends ==
      +                          ==========
 14973+                          
 14974+                          	signat	_eeprom_write,8312
 14975+                          	global	___lmul
 14976+                          	global	??___lmul
 14977+                          	global	?___lmul
 14978+                          
 14979+                          ; *************** function ___lmul *************
      +                          ****
 14980+                          ; Defined at:
 14981+                          ;		line 3 in file "C:\Program Files (x86)\HI-TEC
      +                          H Software\PICC-18\PRO\9.66\sources\lmul.c"
 14982+                          ; Parameters:
 14983+                          ;		multiplier     size:   4offs:   0	type: unsig
      +                          ned long 
 14984+                          ;		multiplicand   size:   4offs:   4	type: unsig
      +                          ned long 
 14985+                          ; Auto variables:
 14986+                          ;		product     	       	type: unsigned long 
 14987+                          ; Return value:
 14988+                          ;		type: unsigned long 
 14989+                          ;		size: 4
 14990+                          ; Registers used:
 14991+                          ;		wreg, status,2, status,0
 14992+                          ; Tracked objects:
 14993+                          ;		On entry : 0/0
 14994+                          ;		On exit  : 0/0
 14995+                          ;		Unchanged: 0/0
 14996+                          ; Data sizes:
 14997+                          ;		Autos:    4
 14998+                          ;		Params:   8
 14999+                          ;		Temp:     0
 15000+                          ;		Total:   12
 15001+                          ; This function calls:
 15002+                          ;		Nothing
 15003+                          ; This function is called by:
 15004+                          ;		_esicPrint
 15005+                          ;		___aslmul
 15006+                          ; This function uses a non-reentrant model
 15007+                          ; 
 15008+                                  psect   text46,class=CODE,space=0,reloc=
      +                          2
 15009+                          
 15010+                          	opt lm
 15011+                          	file	"C:\Program Files (x86)\HI-TECH Software\P
      +                          ICC-18\PRO\9.66\sources\lmul.c"
 15012+                          	line	3
 15013+ 000000                     	__size_of___lmul	equ	__end_of___lmul-___lmul
 15014+                          	
 15015+ 004864                     ___lmul:		; BSR set to: ?
 15016+                          
 15017+                          	opt stack 26
 15018+                          	line	4
 15019+ 004864  0E00               	movlw	low(0)
 15020+ 004866  0102               	movlb	2	; () banked
 15021+ 004868  0102               	movlb	2	; () banked
 15022+ 00486A  6F5D               	movwf	((___lmul@product))&0ffh
 15023+ 00486C  0E00               	movlw	high(0)
 15024+ 00486E  0102               	movlb	2	; () banked
 15025+ 004870  6F5E               	movwf	((___lmul@product+1))&0ffh
 15026+ 004872  0E00               	movlw	low highword(0)
 15027+ 004874  0102               	movlb	2	; () banked
 15028+ 004876  6F5F               	movwf	((___lmul@product+2))&0ffh
 15029+ 004878  0E00               	movlw	high highword(0)
 15030+ 00487A  0102               	movlb	2	; () banked
 15031+ 00487C  6F60               	movwf	((___lmul@product+3))&0ffh
 15032+                          	line	6
 15033+                          	
 15034+ 00487E                     l1312:		; BSR set to: ?
 15035+                          
 15036+                          	line	7
 15037+ 00487E  0102               	movlb	2	; () banked
 15038+                          	
 15039+ 004880  0102               	movlb	2	; () banked
 15040+ 004882  A155               	btfss	((___lmul@multiplier))&0ffh,(0)&7
 15041+ 004884  EF46  F024         	goto	u8421
 15042+ 004888  EF48  F024         	goto	u8420
 15043+ 00488C                     u8421:
 15044+ 00488C  EF60  F024         	goto	l1313
 15045+ 004890                     u8420:
 15046+                          	line	8
 15047+ 004890  0102               	movlb	2	; () banked
 15048+ 004892  0102               	movlb	2	; () banked
 15049+ 004894  5159               	movf	((___lmul@multiplicand))&0ffh,w
 15050+ 004896  0102               	movlb	2	; () banked
 15051+ 004898  0102               	movlb	2	; () banked
 15052+ 00489A  275D               	addwf	((___lmul@product))&0ffh
 15053+ 00489C  0102               	movlb	2	; () banked
 15054+ 00489E  0102               	movlb	2	; () banked
 15055+ 0048A0  515A               	movf	((___lmul@multiplicand+1))&0ffh,w
 15056+ 0048A2  0102               	movlb	2	; () banked
 15057+ 0048A4  0102               	movlb	2	; () banked
 15058+ 0048A6  235E               	addwfc	((___lmul@product+1))&0ffh
 15059+ 0048A8  0102               	movlb	2	; () banked
 15060+ 0048AA  0102               	movlb	2	; () banked
 15061+ 0048AC  515B               	movf	((___lmul@multiplicand+2))&0ffh,w
 15062+ 0048AE  0102               	movlb	2	; () banked
 15063+ 0048B0  0102               	movlb	2	; () banked
 15064+ 0048B2  235F               	addwfc	((___lmul@product+2))&0ffh
 15065+ 0048B4  0102               	movlb	2	; () banked
 15066+ 0048B6  0102               	movlb	2	; () banked
 15067+ 0048B8  515C               	movf	((___lmul@multiplicand+3))&0ffh,w
 15068+ 0048BA  0102               	movlb	2	; () banked
 15069+ 0048BC  0102               	movlb	2	; () banked
 15070+ 0048BE  2360               	addwfc	((___lmul@product+3))&0ffh
 15071+                          	
 15072+ 0048C0                     l1313:		; BSR set to: ?
 15073+                          
 15074+                          	line	9
 15075+ 0048C0  0102               	movlb	2	; () banked
 15076+ 0048C2  90D8               	bcf	status,0
 15077+ 0048C4  0102               	movlb	2	; () banked
 15078+ 0048C6  3759               	rlcf	((___lmul@multiplicand))&0ffh
 15079+ 0048C8  0102               	movlb	2	; () banked
 15080+ 0048CA  375A               	rlcf	((___lmul@multiplicand+1))&0ffh
 15081+ 0048CC  0102               	movlb	2	; () banked
 15082+ 0048CE  375B               	rlcf	((___lmul@multiplicand+2))&0ffh
 15083+ 0048D0  0102               	movlb	2	; () banked
 15084+ 0048D2  375C               	rlcf	((___lmul@multiplicand+3))&0ffh
 15085+                          	line	10
 15086+ 0048D4  0102               	movlb	2	; () banked
 15087+ 0048D6  90D8               	bcf	status,0
 15088+ 0048D8  0102               	movlb	2	; () banked
 15089+ 0048DA  3358               	rrcf	((___lmul@multiplier+3))&0ffh
 15090+ 0048DC  0102               	movlb	2	; () banked
 15091+ 0048DE  3357               	rrcf	((___lmul@multiplier+2))&0ffh
 15092+ 0048E0  0102               	movlb	2	; () banked
 15093+ 0048E2  3356               	rrcf	((___lmul@multiplier+1))&0ffh
 15094+ 0048E4  0102               	movlb	2	; () banked
 15095+ 0048E6  3355               	rrcf	((___lmul@multiplier))&0ffh
 15096+                          	line	11
 15097+ 0048E8  0102               	movlb	2	; () banked
 15098+ 0048EA  5158               	movf	((___lmul@multiplier+3))&0ffh,w
 15099+ 0048EC  1155               	iorwf ((___lmul@multiplier))&0ffh,w
 15100+ 0048EE  1156               	iorwf ((___lmul@multiplier+1))&0ffh,w
 15101+ 0048F0  1157               	iorwf ((___lmul@multiplier+2))&0ffh,w
 15102+                          
 15103+ 0048F2  A4D8               	btfss	status,2
 15104+ 0048F4  EF7E  F024         	goto	u8431
 15105+ 0048F8  EF80  F024         	goto	u8430
 15106+ 0048FC                     u8431:
 15107+ 0048FC  EF3F  F024         	goto	l1312
 15108+ 004900                     u8430:
 15109+                          	
 15110+ 004900                     l1311:		; BSR set to: ?
 15111+                          
 15112+                          	line	12
 15113+ 004900  C25D  F255         	movff	(___lmul@product),(?___lmul)
 15114+ 004904  C25E  F256         	movff	(___lmul@product+1),(?___lmul+1)
 15115+ 004908  C25F  F257         	movff	(___lmul@product+2),(?___lmul+2)
 15116+ 00490C  C260  F258         	movff	(___lmul@product+3),(?___lmul+3)
 15117+ 004910  EF8A  F024         	goto	l1309
 15118+                          	line	13
 15119+ 004914                     l1309:
 15120+                          			; BSR set to: ?
 15121+                          
 15122+ 004914  0012               	return
 15123+                          	opt stack 0
 15124+                          GLOBAL __end_of___lmul
 15125+ 004916                     	__end_of___lmul:
 15126+                          	FNSIZE	___lmul,4,8
 15127+                          ; =============== function ___lmul ends ========
      +                          ====
 15128+                          
 15129+                          	signat	___lmul,8316
 15130+                          	global	_stopTransmit
 15131+                          	global	??_stopTransmit
 15132+                          	global	?_stopTransmit
 15133+                          
 15134+                          ; *************** function _stopTransmit *******
      +                          **********
 15135+                          ; Defined at:
 15136+                          ;		line 91 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 15137+                          ; Parameters:
 15138+                          ;		None
 15139+                          ; Auto variables:
 15140+                          ;		None
 15141+                          ; Return value:
 15142+                          ;		type: void 
 15143+                          ;		size: 0
 15144+                          ; Registers used:
 15145+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
 15146+                          ; Tracked objects:
 15147+                          ;		On entry : 0/0
 15148+                          ;		On exit  : 0/0
 15149+                          ;		Unchanged: 0/0
 15150+                          ; Data sizes:
 15151+                          ;		Autos:    0
 15152+                          ;		Params:   0
 15153+                          ;		Temp:     1
 15154+                          ;		Total:    1
 15155+                          ; This function calls:
 15156+                          ;		_dataPinIn
 15157+                          ;		_delayms
 15158+                          ;		_sPuts
 15159+                          ;		_sPut
 15160+                          ; This function is called by:
 15161+                          ;		_bmcTx
 15162+                          ;		_gaoTx
 15163+                          ;		_nexaTx
 15164+                          ;		_kangthaiTx
 15165+                          ;		_wavemanTx
 15166+                          ;		_parseCmd
 15167+                          ; This function uses a non-reentrant model
 15168+                          ; 
 15169+                                  psect   text47,class=CODE,space=0,reloc=
      +                          2
 15170+                          
 15171+                          	opt lm
 15172+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 15173+                          	line	91
 15174+ 000000                     	__size_of_stopTransmit	equ	__end_of_stopTransmi
      +                          t-_stopTransmit
 15175+                          ;batchpcb26k20.c: 91: void stopTransmit(){
 15176+                          	
 15177+ 005056                     _stopTransmit:		; BSR set to: ?
 15178+                          
 15179+                          	opt stack 26
 15180+                          	line	92
 15181+                          ;batchpcb26k20.c: 92: dataPinIn();
 15182+ 005056  EC17  F029         	call	_dataPinIn	;wreg free
 15183+                          	line	93
 15184+                          ;batchpcb26k20.c: 93: delayms(3);
 15185+ 00505A  0E03               	movlw	low(03h)
 15186+ 00505C  0102               	movlb	2	; () banked
 15187+ 00505E  0102               	movlb	2	; () banked
 15188+ 005060  6F54               	movwf	((?_delayms))&0ffh
 15189+ 005062  0E00               	movlw	high(03h)
 15190+ 005064  0102               	movlb	2	; () banked
 15191+ 005066  6F55               	movwf	((?_delayms+1))&0ffh
 15192+ 005068  EC7A  F027         	call	_delayms	;wreg free
 15193+                          	line	94
 15194+                          ;batchpcb26k20.c: 94: LATB3 = 0;
 15195+ 00506C  968A               	bcf	c:(31827/8),(31827)&7	;volatile
 15196+                          	line	95
 15197+                          ;batchpcb26k20.c: 95: LATC4 = 0;
 15198+ 00506E  988B               	bcf	c:(31836/8),(31836)&7	;volatile
 15199+                          	line	96
 15200+                          ;batchpcb26k20.c: 96: sPuts("$OK");
 15201+ 005070  0EEC               	movlw	low(STR_1)
 15202+ 005072  0102               	movlb	2	; () banked
 15203+ 005074  0102               	movlb	2	; () banked
 15204+ 005076  6F5E               	movwf	((?_sPuts))&0ffh
 15205+ 005078  0E7F               	movlw	high(STR_1)
 15206+ 00507A  0102               	movlb	2	; () banked
 15207+ 00507C  6F5F               	movwf	((?_sPuts+1))&0ffh
 15208+ 00507E  EC9E  F026         	call	_sPuts	;wreg free
 15209+                          	line	97
 15210+                          ;batchpcb26k20.c: 97: sPut(10);
 15211+ 005082  0102               	movlb	2	; () banked
 15212+ 005084  6F53               	movwf	(??_stopTransmit+0+0)&0ffh
 15213+ 005086  0E0A               	movlw	low(0Ah)
 15214+ 005088  0102               	movlb	2	; () banked
 15215+ 00508A  0102               	movlb	2	; () banked
 15216+ 00508C  6F60               	movwf	((?_sPut))&0ffh
 15217+ 00508E  0102               	movlb	2	; () banked
 15218+ 005090  5153               	movf	(??_stopTransmit+0+0)&0ffh,w
 15219+ 005092  ECDF  F025         	call	_sPut	;wreg free
 15220+                          	line	98
 15221+                          ;batchpcb26k20.c: 98: }
 15222+ 005096                     l275:
 15223+                          			; BSR set to: ?
 15224+                          
 15225+ 005096  0012               	return
 15226+                          	opt stack 0
 15227+                          GLOBAL __end_of_stopTransmit
 15228+ 005098                     	__end_of_stopTransmit:
 15229+                          	FNSIZE	_stopTransmit,1,0
 15230+                          ; =============== function _stopTransmit ends ==
      +                          ==========
 15231+                          
 15232+                          	signat	_stopTransmit,88
 15233+                          	global	_bmcTxByte
 15234+                          	global	??_bmcTxByte
 15235+                          	global	?_bmcTxByte
 15236+                          
 15237+                          ; *************** function _bmcTxByte **********
      +                          *******
 15238+                          ; Defined at:
 15239+                          ;		line 12 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\bmc.h"
 15240+                          ; Parameters:
 15241+                          ;		data           size:   1offs:   0	type: unsig
      +                          ned char 
 15242+                          ; Auto variables:
 15243+                          ;		j           	       	type: unsigned char 
 15244+                          ; Return value:
 15245+                          ;		type: void 
 15246+                          ;		size: 0
 15247+                          ; Registers used:
 15248+                          ;		wreg, status,2, status,0, cstack
 15249+                          ; Tracked objects:
 15250+                          ;		On entry : 0/0
 15251+                          ;		On exit  : 0/0
 15252+                          ;		Unchanged: 0/0
 15253+                          ; Data sizes:
 15254+                          ;		Autos:    1
 15255+                          ;		Params:   1
 15256+                          ;		Temp:     1
 15257+                          ;		Total:    3
 15258+                          ; This function calls:
 15259+                          ;		_waitTimer
 15260+                          ; This function is called by:
 15261+                          ;		_bmcTx
 15262+                          ; This function uses a non-reentrant model
 15263+                          ; 
 15264+                                  psect   text48,class=CODE,space=0,reloc=
      +                          2
 15265+                          
 15266+                          	opt lm
 15267+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\bmc.h"
 15268+                          	line	12
 15269+ 000000                     	__size_of_bmcTxByte	equ	__end_of_bmcTxByte-_bmc
      +                          TxByte
 15270+                          ;bmc.h: 12: void bmcTxByte(char data){
 15271+                          	
 15272+ 004B22                     _bmcTxByte:		; BSR set to: ?
 15273+                          
 15274+                          	opt stack 26
 15275+                          	line	14
 15276+ 004B22  0102               	movlb	2	; () banked
 15277+ 004B24  6F55               	movwf	(??_bmcTxByte+1+0)&0ffh
 15278+ 004B26  0E00               	movlw	low(0)
 15279+ 004B28  0102               	movlb	2	; () banked
 15280+ 004B2A  0102               	movlb	2	; () banked
 15281+ 004B2C  6F54               	movwf	((bmcTxByte@j))&0ffh
 15282+ 004B2E  0102               	movlb	2	; () banked
 15283+ 004B30  5155               	movf	(??_bmcTxByte+1+0)&0ffh,w
 15284+ 004B32  0E07               	movlw	(08h-1)
 15285+ 004B34  0102               	movlb	2	; () banked
 15286+ 004B36  0102               	movlb	2	; () banked
 15287+ 004B38  6554               	cpfsgt	((bmcTxByte@j))&0ffh
 15288+ 004B3A  EFA1  F025         	goto	u8091
 15289+ 004B3E  EFA3  F025         	goto	u8090
 15290+ 004B42                     u8091:
 15291+ 004B42  EFA5  F025         	goto	l295
 15292+ 004B46                     u8090:
 15293+ 004B46  EFDE  F025         	goto	l296
 15294+                          	
 15295+ 004B4A                     l295:		; BSR set to: ?
 15296+                          
 15297+                          	line	15
 15298+                          ;bmc.h: 15: if (data&0b10000000){
 15299+ 004B4A  0102               	movlb	2	; () banked
 15300+                          	
 15301+ 004B4C  0102               	movlb	2	; () banked
 15302+ 004B4E  AF53               	btfss	((bmcTxByte@data))&0ffh,(7)&7
 15303+ 004B50  EFAC  F025         	goto	u8101
 15304+ 004B54  EFAE  F025         	goto	u8100
 15305+ 004B58                     u8101:
 15306+ 004B58  EFC4  F025         	goto	l298
 15307+ 004B5C                     u8100:
 15308+                          	line	16
 15309+                          ;bmc.h: 16: LATB2 ^= 1;
 15310+ 004B5C  748A               	btg	c:(31826/8),(31826)&7	;volatile
 15311+                          	line	17
 15312+                          ;bmc.h: 17: waitTimer(500);
 15313+ 004B5E  0EF4               	movlw	low(01F4h)
 15314+ 004B60  0102               	movlb	2	; () banked
 15315+ 004B62  0102               	movlb	2	; () banked
 15316+ 004B64  6F56               	movwf	((?_waitTimer))&0ffh
 15317+ 004B66  0E01               	movlw	high(01F4h)
 15318+ 004B68  0102               	movlb	2	; () banked
 15319+ 004B6A  6F57               	movwf	((?_waitTimer+1))&0ffh
 15320+ 004B6C  EC04  F028         	call	_waitTimer	;wreg free
 15321+                          	line	18
 15322+                          ;bmc.h: 18: LATB2 ^= 1;
 15323+ 004B70  748A               	btg	c:(31826/8),(31826)&7	;volatile
 15324+                          	line	19
 15325+                          ;bmc.h: 19: waitTimer(500);
 15326+ 004B72  0EF4               	movlw	low(01F4h)
 15327+ 004B74  0102               	movlb	2	; () banked
 15328+ 004B76  0102               	movlb	2	; () banked
 15329+ 004B78  6F56               	movwf	((?_waitTimer))&0ffh
 15330+ 004B7A  0E01               	movlw	high(01F4h)
 15331+ 004B7C  0102               	movlb	2	; () banked
 15332+ 004B7E  6F57               	movwf	((?_waitTimer+1))&0ffh
 15333+ 004B80  EC04  F028         	call	_waitTimer	;wreg free
 15334+                          	line	20
 15335+                          ;bmc.h: 20: }
 15336+ 004B84  EFCE  F025         	goto	l299
 15337+                          	line	21
 15338+                          	
 15339+ 004B88                     l298:		; BSR set to: ?
 15340+                          
 15341+                          	line	22
 15342+                          ;bmc.h: 21: else{
 15343+                          ;bmc.h: 22: LATB2 ^= 1;
 15344+ 004B88  748A               	btg	c:(31826/8),(31826)&7	;volatile
 15345+                          	line	23
 15346+                          ;bmc.h: 23: waitTimer(500*2);
 15347+ 004B8A  0EE8               	movlw	low(03E8h)
 15348+ 004B8C  0102               	movlb	2	; () banked
 15349+ 004B8E  0102               	movlb	2	; () banked
 15350+ 004B90  6F56               	movwf	((?_waitTimer))&0ffh
 15351+ 004B92  0E03               	movlw	high(03E8h)
 15352+ 004B94  0102               	movlb	2	; () banked
 15353+ 004B96  6F57               	movwf	((?_waitTimer+1))&0ffh
 15354+ 004B98  EC04  F028         	call	_waitTimer	;wreg free
 15355+                          	line	24
 15356+                          	
 15357+ 004B9C                     l299:		; BSR set to: ?
 15358+                          
 15359+                          	line	25
 15360+                          ;bmc.h: 24: }
 15361+                          ;bmc.h: 25: data <<= 1;
 15362+ 004B9C  0102               	movlb	2	; () banked
 15363+ 004B9E  90D8               	bcf status,0
 15364+ 004BA0  3753               	rlcf	((bmcTxByte@data))&0ffh
 15365+                          
 15366+                          	line	14
 15367+ 004BA2  0102               	movlb	2	; () banked
 15368+ 004BA4  0102               	movlb	2	; () banked
 15369+ 004BA6  2B54               	incf	((bmcTxByte@j))&0ffh
 15370+ 004BA8  0E07               	movlw	(08h-1)
 15371+ 004BAA  0102               	movlb	2	; () banked
 15372+ 004BAC  0102               	movlb	2	; () banked
 15373+ 004BAE  6554               	cpfsgt	((bmcTxByte@j))&0ffh
 15374+ 004BB0  EFDC  F025         	goto	u8111
 15375+ 004BB4  EFDE  F025         	goto	u8110
 15376+ 004BB8                     u8111:
 15377+ 004BB8  EFA5  F025         	goto	l295
 15378+ 004BBC                     u8110:
 15379+                          	
 15380+ 004BBC                     l296:		; BSR set to: ?
 15381+                          
 15382+                          	line	27
 15383+                          ;bmc.h: 26: }
 15384+                          ;bmc.h: 27: }
 15385+ 004BBC                     l294:
 15386+                          			; BSR set to: ?
 15387+                          
 15388+ 004BBC  0012               	return
 15389+                          	opt stack 0
 15390+                          GLOBAL __end_of_bmcTxByte
 15391+ 004BBE                     	__end_of_bmcTxByte:
 15392+                          	FNSIZE	_bmcTxByte,2,1
 15393+                          ; =============== function _bmcTxByte ends =====
      +                          =======
 15394+                          
 15395+                          	signat	_bmcTxByte,4216
 15396+                          	global	_waitTimer
 15397+                          	global	??_waitTimer
 15398+                          	global	?_waitTimer
 15399+                          
 15400+                          ; *************** function _waitTimer **********
      +                          *******
 15401+                          ; Defined at:
 15402+                          ;		line 59 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 15403+                          ; Parameters:
 15404+                          ;		value          size:   2offs:   0	type: unsig
      +                          ned int 
 15405+                          ; Auto variables:
 15406+                          ;		None
 15407+                          ; Return value:
 15408+                          ;		type: void 
 15409+                          ;		size: 0
 15410+                          ; Registers used:
 15411+                          ;		wreg, status,2, status,0
 15412+                          ; Tracked objects:
 15413+                          ;		On entry : 0/0
 15414+                          ;		On exit  : 0/0
 15415+                          ;		Unchanged: 0/0
 15416+                          ; Data sizes:
 15417+                          ;		Autos:    0
 15418+                          ;		Params:   2
 15419+                          ;		Temp:     2
 15420+                          ;		Total:    4
 15421+                          ; This function calls:
 15422+                          ;		Nothing
 15423+                          ; This function is called by:
 15424+                          ;		_bmcTxByte
 15425+                          ;		_bmcTx
 15426+                          ;		_gaoTx
 15427+                          ;		_nexaTx
 15428+                          ;		_kangthaiTx
 15429+                          ;		_wavemanTx
 15430+                          ; This function uses a non-reentrant model
 15431+                          ; 
 15432+                                  psect   text49,class=CODE,space=0,reloc=
      +                          2
 15433+                          
 15434+                          	opt lm
 15435+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 15436+                          	line	59
 15437+ 000000                     	__size_of_waitTimer	equ	__end_of_waitTimer-_wai
      +                          tTimer
 15438+                          ;batchpcb26k20.c: 59: void waitTimer(unsigned in
      +                          t value){
 15439+                          	
 15440+ 005008                     _waitTimer:		; BSR set to: ?
 15441+                          
 15442+                          	opt stack 25
 15443+                          	line	60
 15444+ 005008  0102               	movlb	2	; () banked
 15445+ 00500A  0102               	movlb	2	; () banked
 15446+ 00500C  1F56               	comf	((waitTimer@value))&0ffh
 15447+ 00500E  0102               	movlb	2	; () banked
 15448+ 005010  1F57               	comf	((waitTimer@value+1))&0ffh
 15449+                          	line	61
 15450+                          ;batchpcb26k20.c: 61: TMR1L = value & 0x00FF;
 15451+ 005012  C256  FFCE         	movff	(waitTimer@value),(c:4046)	;volatile
 15452+                          	line	62
 15453+                          ;batchpcb26k20.c: 62: TMR1H = (value & 0xFF00) >
      +                          > 8;
 15454+ 005016  0E00               	movlw	0
 15455+ 005018  0102               	movlb	2	; () banked
 15456+ 00501A  0102               	movlb	2	; () banked
 15457+ 00501C  1556               	andwf	((waitTimer@value))&0ffh,w
 15458+ 00501E  0102               	movlb	2	; () banked
 15459+ 005020  6F58               	movwf	(??_waitTimer+0+0)&0ffh
 15460+ 005022  0EFF               	movlw	0FFh
 15461+ 005024  0102               	movlb	2	; () banked
 15462+ 005026  0102               	movlb	2	; () banked
 15463+ 005028  1557               	andwf	((waitTimer@value+1))&0ffh,w
 15464+ 00502A  0102               	movlb	2	; () banked
 15465+ 00502C  6F59               	movwf	1+(??_waitTimer+0+0)&0ffh
 15466+ 00502E  C259  F258         	movff	??_waitTimer+0+1,??_waitTimer+0+0
 15467+ 005032  0102               	movlb	2	; () banked
 15468+ 005034  6B59               	clrf	(??_waitTimer+0+1)&0ffh
 15469+ 005036  0102               	movlb	2	; () banked
 15470+ 005038  5158               	movf	(??_waitTimer+0+0)&0ffh,w
 15471+ 00503A  6ECF               	movwf	((c:4047)),c	;volatile
 15472+                          	line	63
 15473+                          ;batchpcb26k20.c: 63: TMR1ON = 1;
 15474+ 00503C  80CD               	bsf	c:(32360/8),(32360)&7	;volatile
 15475+                          	line	64
 15476+                          ;batchpcb26k20.c: 64: while(!TMR1IF);
 15477+ 00503E  EF21  F028         	goto	l263
 15478+                          	
 15479+ 005042                     l263:		; BSR set to: ?
 15480+                          
 15481+ 005042  A09E               	btfss	c:(31984/8),(31984)&7	;volatile
 15482+ 005044  EF26  F028         	goto	u8121
 15483+ 005048  EF28  F028         	goto	u8120
 15484+ 00504C                     u8121:
 15485+ 00504C  EF21  F028         	goto	l263
 15486+ 005050                     u8120:
 15487+                          	
 15488+ 005050                     l265:		; BSR set to: ?
 15489+                          
 15490+                          	line	65
 15491+                          ;batchpcb26k20.c: 65: TMR1ON = 0;
 15492+ 005050  90CD               	bcf	c:(32360/8),(32360)&7	;volatile
 15493+                          	line	66
 15494+                          ;batchpcb26k20.c: 66: TMR1IF = 0;
 15495+ 005052  909E               	bcf	c:(31984/8),(31984)&7	;volatile
 15496+                          	line	67
 15497+                          ;batchpcb26k20.c: 67: }
 15498+ 005054                     l262:
 15499+                          			; BSR set to: ?
 15500+                          
 15501+ 005054  0012               	return
 15502+                          	opt stack 0
 15503+                          GLOBAL __end_of_waitTimer
 15504+ 005056                     	__end_of_waitTimer:
 15505+                          	FNSIZE	_waitTimer,2,2
 15506+                          ; =============== function _waitTimer ends =====
      +                          =======
 15507+                          
 15508+                          	signat	_waitTimer,4216
 15509+                          	global	_dataPinOut
 15510+                          	global	??_dataPinOut
 15511+                          	global	?_dataPinOut
 15512+                          
 15513+                          ; *************** function _dataPinOut *********
      +                          ********
 15514+                          ; Defined at:
 15515+                          ;		line 36 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\hardware_config_11.h"
 15516+                          ; Parameters:
 15517+                          ;		None
 15518+                          ; Auto variables:
 15519+                          ;		None
 15520+                          ; Return value:
 15521+                          ;		type: int 
 15522+                          ;		size: 2
 15523+                          ; Registers used:
 15524+                          ;		wreg, status,2
 15525+                          ; Tracked objects:
 15526+                          ;		On entry : 0/0
 15527+                          ;		On exit  : 0/0
 15528+                          ;		Unchanged: 0/0
 15529+                          ; Data sizes:
 15530+                          ;		Autos:    0
 15531+                          ;		Params:   0
 15532+                          ;		Temp:     0
 15533+                          ;		Total:    0
 15534+                          ; This function calls:
 15535+                          ;		Nothing
 15536+                          ; This function is called by:
 15537+                          ;		_startTransmit
 15538+                          ; This function uses a non-reentrant model
 15539+                          ; 
 15540+                                  psect   text50,class=CODE,space=0,reloc=
      +                          2
 15541+                          
 15542+                          	opt lm
 15543+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\hardware_config_11.h"
 15544+                          	line	36
 15545+ 000000                     	__size_of_dataPinOut	equ	__end_of_dataPinOut-_d
      +                          ataPinOut
 15546+                          ;hardware_config_11.h: 36: dataPinOut(){
 15547+                          	
 15548+ 005228                     _dataPinOut:		; BSR set to: ?
 15549+                          
 15550+                          	opt stack 25
 15551+                          	line	37
 15552+ 005228  0E02               	movlw	low(02h)
 15553+ 00522A  6E93               	movwf	((c:3987)),c	;volatile
 15554+                          	line	38
 15555+                          ;hardware_config_11.h: 38: }
 15556+ 00522C                     l213:
 15557+                          			; BSR set to: ?
 15558+                          
 15559+ 00522C  0012               	return
 15560+                          	opt stack 0
 15561+                          GLOBAL __end_of_dataPinOut
 15562+ 00522E                     	__end_of_dataPinOut:
 15563+                          	FNSIZE	_dataPinOut,0,0
 15564+                          ; =============== function _dataPinOut ends ====
      +                          ========
 15565+                          
 15566+                          	signat	_dataPinOut,90
 15567+                          	global	_delayms
 15568+                          	global	??_delayms
 15569+                          	global	?_delayms
 15570+                          
 15571+                          ; *************** function _delayms ************
      +                          *****
 15572+                          ; Defined at:
 15573+                          ;		line 55 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 15574+                          ; Parameters:
 15575+                          ;		ms             size:   2offs:   0	type: int 
 15576+                          ; Auto variables:
 15577+                          ;		counter     	       	type: int 
 15578+                          ; Return value:
 15579+                          ;		type: void 
 15580+                          ;		size: 0
 15581+                          ; Registers used:
 15582+                          ;		wreg, status,2, status,0
 15583+                          ; Tracked objects:
 15584+                          ;		On entry : 0/0
 15585+                          ;		On exit  : 0/0
 15586+                          ;		Unchanged: 0/0
 15587+                          ; Data sizes:
 15588+                          ;		Autos:    2
 15589+                          ;		Params:   2
 15590+                          ;		Temp:     1
 15591+                          ;		Total:    5
 15592+                          ; This function calls:
 15593+                          ;		__delay
 15594+                          ; This function is called by:
 15595+                          ;		_startTransmit
 15596+                          ;		_stopTransmit
 15597+                          ;		_startupBlinkLed
 15598+                          ;		_parseCmd
 15599+                          ;		_main
 15600+                          ; This function uses a non-reentrant model
 15601+                          ; 
 15602+                                  psect   text51,class=CODE,space=0,reloc=
      +                          2
 15603+                          
 15604+                          	opt lm
 15605+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 15606+                          	line	55
 15607+ 000000                     	__size_of_delayms	equ	__end_of_delayms-_delayms
 15608+                          ;batchpcb26k20.c: 55: void delayms(int ms){
 15609+                          	
 15610+ 004EF4                     _delayms:		; BSR set to: ?
 15611+                          
 15612+                          	opt stack 25
 15613+                          	line	56
 15614+                          ;batchpcb26k20.c: 56: for (int counter = 0; coun
      +                          ter < ms; counter++) _delay((unsigned long)((1)*
      +                          (32000000/4000.0)));
 15615+ 004EF4  0E00               	movlw	low(0)
 15616+ 004EF6  0102               	movlb	2	; () banked
 15617+ 004EF8  0102               	movlb	2	; () banked
 15618+ 004EFA  6F56               	movwf	((delayms@counter))&0ffh
 15619+ 004EFC  0E00               	movlw	high(0)
 15620+ 004EFE  0102               	movlb	2	; () banked
 15621+ 004F00  6F57               	movwf	((delayms@counter+1))&0ffh
 15622+ 004F02  EF92  F027         	goto	l261
 15623+                          	
 15624+ 004F06                     l258:		; BSR set to: ?
 15625+                          
 15626+ 004F06  0E0B               	movlw	11
 15627+ 004F08  0102               	movlb	2	; () banked
 15628+ 004F0A  6F58               movwf	(??_delayms+2+0)&0ffh,f
 15629+ 004F0C  0E62               	movlw	98
 15630+ 004F0E                     u8467:
 15631+ 004F0E  2EE8               	decfsz	wreg,f
 15632+ 004F10  EF87  F027         	goto	u8467
 15633+ 004F14  2F58               	decfsz	(??_delayms+2+0)&0ffh,f
 15634+ 004F16  EF87  F027         	goto	u8467
 15635+ 004F1A  0004               	clrwdt
 15636+                          
 15637+ 004F1C  0102               	movlb	2	; () banked
 15638+ 004F1E  0102               	movlb	2	; () banked
 15639+ 004F20  4B56               	infsnz	((delayms@counter))&0ffh
 15640+ 004F22  2B57               	incf	((delayms@counter+1))&0ffh
 15641+                          	
 15642+ 004F24                     l261:		; BSR set to: ?
 15643+                          
 15644+ 004F24  0102               	movlb	2	; () banked
 15645+ 004F26  0102               	movlb	2	; () banked
 15646+ 004F28  5157               	movf	((delayms@counter+1))&0ffh,w
 15647+ 004F2A  0A80               	xorlw	80h
 15648+ 004F2C  0102               	movlb	2	; () banked
 15649+ 004F2E  6F58               	movwf	(??_delayms+2+0)&0ffh
 15650+ 004F30  0102               	movlb	2	; () banked
 15651+ 004F32  5154               	movf	((delayms@ms))&0ffh,w
 15652+ 004F34  0102               	movlb	2	; () banked
 15653+ 004F36  0102               	movlb	2	; () banked
 15654+ 004F38  5D56               	subwf	((delayms@counter))&0ffh,w
 15655+ 004F3A  0102               	movlb	2	; () banked
 15656+ 004F3C  0102               	movlb	2	; () banked
 15657+ 004F3E  5155               	movf	((delayms@ms+1))&0ffh,w
 15658+ 004F40  0A80               	xorlw	80h
 15659+ 004F42  0102               	movlb	2	; () banked
 15660+ 004F44  5958               	subwfb	(??_delayms+2+0)&0ffh,w
 15661+ 004F46  A0D8               	btfss	status,0
 15662+ 004F48  EFA8  F027         	goto	u8131
 15663+ 004F4C  EFAA  F027         	goto	u8130
 15664+ 004F50                     u8131:
 15665+ 004F50  EF83  F027         	goto	l258
 15666+ 004F54                     u8130:
 15667+                          	
 15668+ 004F54                     l259:		; BSR set to: ?
 15669+                          
 15670+                          	line	57
 15671+                          ;batchpcb26k20.c: 57: }
 15672+ 004F54                     l257:
 15673+                          			; BSR set to: ?
 15674+                          
 15675+ 004F54  0012               	return
 15676+                          	opt stack 0
 15677+                          GLOBAL __end_of_delayms
 15678+ 004F56                     	__end_of_delayms:
 15679+                          	FNSIZE	_delayms,3,2
 15680+                          ; =============== function _delayms ends =======
      +                          =====
 15681+                          
 15682+                          	signat	_delayms,4216
 15683+                          	global	_sPuts
 15684+                          	global	??_sPuts
 15685+                          	global	?_sPuts
 15686+                          
 15687+                          ; *************** function _sPuts **************
      +                          ***
 15688+                          ; Defined at:
 15689+                          ;		line 50 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\uartring.c"
 15690+                          ; Parameters:
 15691+                          ;		s              size:   2offs:   0	type: PTR c
      +                          onst unsigned char ; Largest target is 41
 15692+                          ;		 -> STR_51(41), STR_50(41), STR_49(4), STR_48
      +                          (4), 
 15693+                          ;		 -> STR_47(4), STR_46(4), STR_45(4), STR_44(4
      +                          ), 
 15694+                          ;		 -> STR_43(4), STR_42(4), STR_41(4), STR_40(4
      +                          ), 
 15695+                          ;		 -> STR_39(4), STR_38(4), STR_37(4), STR_36(4
      +                          ), 
 15696+                          ;		 -> STR_35(4), STR_34(4), STR_33(15), STR_32(
      +                          7), 
 15697+                          ;		 -> STR_31(19), STR_30(17), STR_29(17), STR_2
      +                          8(10), 
 15698+                          ;		 -> STR_27(15), STR_26(10), STR_25(15), STR_2
      +                          4(9), 
 15699+                          ;		 -> STR_23(15), STR_22(15), STR_21(6), STR_20
      +                          (15), 
 15700+                          ;		 -> STR_19(6), STR_18(15), STR_17(15), STR_16
      +                          (5), 
 15701+                          ;		 -> STR_15(15), STR_14(6), STR_13(15), STR_12
      +                          (15), 
 15702+                          ;		 -> STR_11(15), STR_10(15), STR_9(15), STR_8(
      +                          5), 
 15703+                          ;		 -> STR_7(30), STR_6(3), STR_5(3), STR_4(3), 
 15704+                          ;		 -> STR_3(3), STR_2(3), STR_1(4), sPutint@buf
      +                          fer(7), 
 15705+                          ; Auto variables:
 15706+                          ;		None
 15707+                          ; Return value:
 15708+                          ;		type: void 
 15709+                          ;		size: 0
 15710+                          ; Registers used:
 15711+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat, cstack
 15712+                          ; Tracked objects:
 15713+                          ;		On entry : 0/0
 15714+                          ;		On exit  : 0/0
 15715+                          ;		Unchanged: 0/0
 15716+                          ; Data sizes:
 15717+                          ;		Autos:    0
 15718+                          ;		Params:   2
 15719+                          ;		Temp:     0
 15720+                          ;		Total:    2
 15721+                          ; This function calls:
 15722+                          ;		_sPut
 15723+                          ; This function is called by:
 15724+                          ;		_sPutint
 15725+                          ;		_stopTransmit
 15726+                          ;		_bmcPrint
 15727+                          ;		_gaoPrint
 15728+                          ;		_nexaPrint
 15729+                          ;		_esicPrint
 15730+                          ;		_doroPrint
 15731+                          ;		_parseSettings
 15732+                          ;		_parseCmd
 15733+                          ;		_main
 15734+                          ; This function uses a non-reentrant model
 15735+                          ; 
 15736+                                  psect   text52,class=CODE,space=0,reloc=
      +                          2
 15737+                          
 15738+                          	opt lm
 15739+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\uartring.c"
 15740+                          	line	50
 15741+ 000000                     	__size_of_sPuts	equ	__end_of_sPuts-_sPuts
 15742+                          ;uartring.c: 50: void sPuts(const char *s){
 15743+                          	
 15744+ 004D3C                     _sPuts:		; BSR set to: ?
 15745+                          
 15746+                          	opt stack 25
 15747+                          	line	51
 15748+ 004D3C  EFBB  F026         	goto	l225
 15749+                          	
 15750+ 004D40                     l226:		; BSR set to: ?
 15751+                          
 15752+ 004D40  0102               	movlb	2	; () banked
 15753+ 004D42  0102               	movlb	2	; () banked
 15754+ 004D44  515E               	movf	((sPuts@s))&0ffh,w
 15755+ 004D46  6EF6               	movwf	tblptrl
 15756+ 004D48  6EE9               	movwf	fsr0l
 15757+ 004D4A  0E0E               	movlw	high __ramtop-1
 15758+ 004D4C  6EEA               	movwf	fsr0h
 15759+ 004D4E  0102               	movlb	2	; () banked
 15760+ 004D50  0102               	movlb	2	; () banked
 15761+ 004D52  515F               	movf	((sPuts@s+1))&0ffh,w
 15762+ 004D54  64EA               	cpfsgt	fsr0h
 15763+ 004D56  D003               	bra	u6027
 15764+ 004D58  6EEA               	movwf	fsr0h
 15765+ 004D5A  50EF               	movf	indf0,w
 15766+ 004D5C  D003               	bra	u6020
 15767+ 004D5E                     u6027:
 15768+ 004D5E  6EF7               	movwf	tblptrh
 15769+ 004D60  0008               	tblrd	*
 15770+                          	
 15771+ 004D62  50F5               	movf	tablat,w
 15772+ 004D64                     u6020:
 15773+ 004D64  0102               	movlb	2	; () banked
 15774+ 004D66  0102               	movlb	2	; () banked
 15775+ 004D68  6F60               	movwf	((?_sPut))&0ffh
 15776+ 004D6A  ECDF  F025         	call	_sPut	;wreg free
 15777+ 004D6E  0102               	movlb	2	; () banked
 15778+ 004D70  0102               	movlb	2	; () banked
 15779+ 004D72  4B5E               	infsnz	((sPuts@s))&0ffh
 15780+ 004D74  2B5F               	incf	((sPuts@s+1))&0ffh
 15781+                          	
 15782+ 004D76                     l225:		; BSR set to: ?
 15783+                          
 15784+ 004D76  0102               	movlb	2	; () banked
 15785+ 004D78  0102               	movlb	2	; () banked
 15786+ 004D7A  515E               	movf	((sPuts@s))&0ffh,w
 15787+ 004D7C  6EF6               	movwf	tblptrl
 15788+ 004D7E  6EE9               	movwf	fsr0l
 15789+ 004D80  0E0E               	movlw	high __ramtop-1
 15790+ 004D82  6EEA               	movwf	fsr0h
 15791+ 004D84  0102               	movlb	2	; () banked
 15792+ 004D86  0102               	movlb	2	; () banked
 15793+ 004D88  515F               	movf	((sPuts@s+1))&0ffh,w
 15794+ 004D8A  64EA               	cpfsgt	fsr0h
 15795+ 004D8C  D003               	bra	u6037
 15796+ 004D8E  6EEA               	movwf	fsr0h
 15797+ 004D90  50EF               	movf	indf0,w
 15798+ 004D92  D003               	bra	u6030
 15799+ 004D94                     u6037:
 15800+ 004D94  6EF7               	movwf	tblptrh
 15801+ 004D96  0008               	tblrd	*
 15802+                          	
 15803+ 004D98  50F5               	movf	tablat,w
 15804+ 004D9A                     u6030:
 15805+ 004D9A  0900               	iorlw	0
 15806+ 004D9C  A4D8               	btfss	status,2
 15807+ 004D9E  EFD3  F026         	goto	u6041
 15808+ 004DA2  EFD5  F026         	goto	u6040
 15809+ 004DA6                     u6041:
 15810+ 004DA6  EFA0  F026         	goto	l226
 15811+ 004DAA                     u6040:
 15812+                          	
 15813+ 004DAA                     l227:		; BSR set to: ?
 15814+                          
 15815+                          	line	52
 15816+                          ;uartring.c: 52: }
 15817+ 004DAA                     l224:
 15818+                          			; BSR set to: ?
 15819+                          
 15820+ 004DAA  0012               	return
 15821+                          	opt stack 0
 15822+                          GLOBAL __end_of_sPuts
 15823+ 004DAC                     	__end_of_sPuts:
 15824+                          	FNSIZE	_sPuts,0,2
 15825+                          ; =============== function _sPuts ends =========
      +                          ===
 15826+                          
 15827+                          	signat	_sPuts,4216
 15828+                          	global	_dataPinIn
 15829+                          	global	??_dataPinIn
 15830+                          	global	?_dataPinIn
 15831+                          
 15832+                          ; *************** function _dataPinIn **********
      +                          *******
 15833+                          ; Defined at:
 15834+                          ;		line 40 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\hardware_config_11.h"
 15835+                          ; Parameters:
 15836+                          ;		None
 15837+                          ; Auto variables:
 15838+                          ;		None
 15839+                          ; Return value:
 15840+                          ;		type: int 
 15841+                          ;		size: 2
 15842+                          ; Registers used:
 15843+                          ;		wreg, status,2
 15844+                          ; Tracked objects:
 15845+                          ;		On entry : 0/0
 15846+                          ;		On exit  : 0/0
 15847+                          ;		Unchanged: 0/0
 15848+                          ; Data sizes:
 15849+                          ;		Autos:    0
 15850+                          ;		Params:   0
 15851+                          ;		Temp:     0
 15852+                          ;		Total:    0
 15853+                          ; This function calls:
 15854+                          ;		Nothing
 15855+                          ; This function is called by:
 15856+                          ;		_stopTransmit
 15857+                          ; This function uses a non-reentrant model
 15858+                          ; 
 15859+                                  psect   text53,class=CODE,space=0,reloc=
      +                          2
 15860+                          
 15861+                          	opt lm
 15862+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\hardware_config_11.h"
 15863+                          	line	40
 15864+ 000000                     	__size_of_dataPinIn	equ	__end_of_dataPinIn-_dat
      +                          aPinIn
 15865+                          ;hardware_config_11.h: 40: dataPinIn(){
 15866+                          	
 15867+ 00522E                     _dataPinIn:		; BSR set to: ?
 15868+                          
 15869+                          	opt stack 25
 15870+                          	line	41
 15871+ 00522E  0E06               	movlw	low(06h)
 15872+ 005230  6E93               	movwf	((c:3987)),c	;volatile
 15873+                          	line	42
 15874+                          ;hardware_config_11.h: 42: }
 15875+ 005232                     l214:
 15876+                          			; BSR set to: ?
 15877+                          
 15878+ 005232  0012               	return
 15879+                          	opt stack 0
 15880+                          GLOBAL __end_of_dataPinIn
 15881+ 005234                     	__end_of_dataPinIn:
 15882+                          	FNSIZE	_dataPinIn,0,0
 15883+                          ; =============== function _dataPinIn ends =====
      +                          =======
 15884+                          
 15885+                          	signat	_dataPinIn,90
 15886+                          	global	_sPut
 15887+                          	global	??_sPut
 15888+                          	global	?_sPut
 15889+                          
 15890+                          ; *************** function _sPut ***************
      +                          **
 15891+                          ; Defined at:
 15892+                          ;		line 37 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\uartring.c"
 15893+                          ; Parameters:
 15894+                          ;		c              size:   1offs:   0	type: unsig
      +                          ned char 
 15895+                          ; Auto variables:
 15896+                          ;		None
 15897+                          ; Return value:
 15898+                          ;		type: void 
 15899+                          ;		size: 0
 15900+                          ; Registers used:
 15901+                          ;		wreg, fsr0l, fsr0h, status,2, status,0
 15902+                          ; Tracked objects:
 15903+                          ;		On entry : 0/0
 15904+                          ;		On exit  : 0/0
 15905+                          ;		Unchanged: 0/0
 15906+                          ; Data sizes:
 15907+                          ;		Autos:    0
 15908+                          ;		Params:   1
 15909+                          ;		Temp:     4
 15910+                          ;		Total:    5
 15911+                          ; This function calls:
 15912+                          ;		Nothing
 15913+                          ; This function is called by:
 15914+                          ;		_sPuts
 15915+                          ;		_sPutonehex
 15916+                          ;		_stopTransmit
 15917+                          ;		_bmcPrint
 15918+                          ;		_gaoPrint
 15919+                          ;		_nexaPrint
 15920+                          ;		_esicPrint
 15921+                          ;		_doroPrint
 15922+                          ;		_parseSettings
 15923+                          ;		_parseCmd
 15924+                          ;		_main
 15925+                          ; This function uses a non-reentrant model
 15926+                          ; 
 15927+                                  psect   text54,class=CODE,space=0,reloc=
      +                          2
 15928+                          
 15929+                          	opt lm
 15930+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\uartring.c"
 15931+                          	line	37
 15932+ 000000                     	__size_of_sPut	equ	__end_of_sPut-_sPut
 15933+                          ;uartring.c: 37: void sPut(char c){
 15934+                          	
 15935+ 004BBE                     _sPut:		; BSR set to: ?
 15936+                          
 15937+                          	opt stack 24
 15938+                          	line	38
 15939+                          ;uartring.c: 38: GIE = 0;
 15940+ 004BBE  9EF2               	bcf	c:(32663/8),(32663)&7	;volatile
 15941+                          	line	39
 15942+                          ;uartring.c: 39: if(txop == ((txip+1) & (128 - 1
      +                          ))){
 15943+ 004BC0  0101               	movlb	1	; () banked
 15944+ 004BC2  C12B F261          	movff	(299),??_sPut+0+0	;volatile
 15945+ 004BC6  0102               	movlb	2	; () banked
 15946+ 004BC8  6B62               	clrf	(??_sPut+0+0+1)&0ffh
 15947+ 004BCA  0E01               	movlw	01h
 15948+ 004BCC  0102               	movlb	2	; () banked
 15949+ 004BCE  2761               	addwf	(??_sPut+0+0)&0ffh
 15950+ 004BD0  0E00               	movlw	0
 15951+ 004BD2  2362               	addwfc	(??_sPut+0+1)&0ffh
 15952+ 004BD4  0E7F               	movlw	07Fh
 15953+ 004BD6  0102               	movlb	2	; () banked
 15954+ 004BD8  1761               	andwf	(??_sPut+0+0)&0ffh
 15955+ 004BDA  0E00               	movlw	0
 15956+ 004BDC  1762               	andwf	(??_sPut+0+1)&0ffh
 15957+ 004BDE  0101               	movlb	1	; () banked
 15958+ 004BE0  C12C F263          	movff	(300),??_sPut+2+0	;volatile
 15959+ 004BE4  0102               	movlb	2	; () banked
 15960+ 004BE6  6B64               	clrf	(??_sPut+2+0+1)&0ffh
 15961+ 004BE8  0102               	movlb	2	; () banked
 15962+ 004BEA  5162               	movf	(??_sPut+0+1)&0ffh,w
 15963+ 004BEC  0102               	movlb	2	; () banked
 15964+ 004BEE  1964               	xorwf	(??_sPut+2+1)&0ffh,w
 15965+ 004BF0  E104               	bnz	u6005
 15966+ 004BF2  0102               	movlb	2	; () banked
 15967+ 004BF4  5161               	movf	(??_sPut+0+0)&0ffh,w
 15968+ 004BF6  0102               	movlb	2	; () banked
 15969+ 004BF8  1963               	xorwf	(??_sPut+2+0)&0ffh,w
 15970+ 004BFA                     u6005:
 15971+                          
 15972+ 004BFA  A4D8               	btfss	status,2
 15973+ 004BFC  EF02  F026         	goto	u6001
 15974+ 004C00  EF04  F026         	goto	u6000
 15975+ 004C04                     u6001:
 15976+ 004C04  EF0F  F026         	goto	l220
 15977+ 004C08                     u6000:
 15978+                          	line	40
 15979+                          ;uartring.c: 40: GIE = 1;
 15980+ 004C08  8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
 15981+                          	line	41
 15982+                          ;uartring.c: 41: while(TXIE);
 15983+ 004C0A  EF07  F026         	goto	l221
 15984+                          	
 15985+ 004C0E                     l221:		; BSR set to: ?
 15986+                          
 15987+ 004C0E  B89D               	btfsc	c:(31980/8),(31980)&7	;volatile
 15988+ 004C10  EF0C  F026         	goto	u6011
 15989+ 004C14  EF0E  F026         	goto	u6010
 15990+ 004C18                     u6011:
 15991+ 004C18  EF07  F026         	goto	l221
 15992+ 004C1C                     u6010:
 15993+                          	
 15994+ 004C1C                     l223:		; BSR set to: ?
 15995+                          
 15996+                          	line	42
 15997+                          ;uartring.c: 42: GIE = 0;
 15998+ 004C1C  9EF2               	bcf	c:(32663/8),(32663)&7	;volatile
 15999+                          	line	43
 16000+                          	
 16001+ 004C1E                     l220:		; BSR set to: ?
 16002+                          
 16003+                          	line	44
 16004+                          ;uartring.c: 43: }
 16005+                          ;uartring.c: 44: txbuffer[txip] = c;
 16006+ 004C1E  0100               	movlb	0	; () banked
 16007+ 004C20  0E00               	movlw	low(0)	;volatile
 16008+ 004C22  0101               	movlb	1	; () banked
 16009+ 004C24  0101               	movlb	1	; () banked
 16010+ 004C26  252B               	addwf	((299))&0ffh,w	;volatile
 16011+ 004C28  6EE9               	movwf	c:fsr0l
 16012+ 004C2A  6AEA               	clrf	1+c:fsr0l
 16013+ 004C2C  0100               	movlb	0	; () banked
 16014+ 004C2E  0E00               	movlw	high(0)	;volatile
 16015+ 004C30  22EA               	addwfc	1+c:fsr0l
 16016+ 004C32  0102               	movlb	2	; () banked
 16017+ 004C34  C260  FFEF         	movff	(sPut@c),indf0
 16018+                          
 16019+                          	line	45
 16020+                          ;uartring.c: 45: txip = (txip+1) & (128 - 1);
 16021+ 004C38  0101               	movlb	1	; () banked
 16022+ 004C3A  0101               	movlb	1	; () banked
 16023+ 004C3C  292B               	incf	((299))&0ffh,w	;volatile
 16024+ 004C3E  0B7F               	andlw	low(07Fh)
 16025+ 004C40  0101               	movlb	1	; () banked
 16026+ 004C42  0101               	movlb	1	; () banked
 16027+ 004C44  6F2B               	movwf	((299))&0ffh	;volatile
 16028+                          	line	46
 16029+                          ;uartring.c: 46: TXIE = 1;
 16030+ 004C46  889D               	bsf	c:(31980/8),(31980)&7	;volatile
 16031+                          	line	47
 16032+                          ;uartring.c: 47: GIE = 1;
 16033+ 004C48  8EF2               	bsf	c:(32663/8),(32663)&7	;volatile
 16034+                          	line	48
 16035+                          ;uartring.c: 48: }
 16036+ 004C4A                     l219:
 16037+                          			; BSR set to: ?
 16038+                          
 16039+ 004C4A  0012               	return
 16040+                          	opt stack 0
 16041+                          GLOBAL __end_of_sPut
 16042+ 004C4C                     	__end_of_sPut:
 16043+                          	FNSIZE	_sPut,4,1
 16044+                          ; =============== function _sPut ends ==========
      +                          ==
 16045+                          
 16046+                          	signat	_sPut,4216
 16047+                          	global	_intRoutineHigh
 16048+                          	global	??_intRoutineHigh
 16049+                          	global	?_intRoutineHigh
 16050+                          
 16051+                          ; *************** function _intRoutineHigh *****
      +                          ************
 16052+                          ; Defined at:
 16053+                          ;		line 51 in file "D:\Hobby\Prosjekter\MultiTRX
      +                          \Firmware\FW1.2\batchpcb26k20.c"
 16054+                          ; Parameters:
 16055+                          ;		None
 16056+                          ; Auto variables:
 16057+                          ;		None
 16058+                          ; Return value:
 16059+                          ;		type: void 
 16060+                          ;		size: 0
 16061+                          ; Registers used:
 16062+                          ;		wreg, fsr0l, fsr0h, status,2, status,0
 16063+                          ; Tracked objects:
 16064+                          ;		On entry : 0/0
 16065+                          ;		On exit  : 0/0
 16066+                          ;		Unchanged: 0/0
 16067+                          ; Data sizes:
 16068+                          ;		Autos:    0
 16069+                          ;		Params:   0
 16070+                          ;		Temp:    14
 16071+                          ;		Total:   14
 16072+                          ; This function calls:
 16073+                          ;		Nothing
 16074+                          ; This function is called by:
 16075+                          ;		Interrupt level 2
 16076+                          ; This function uses a non-reentrant model
 16077+                          ; 
 16078+                                  psect   text55,class=CODE,space=0,reloc=
      +                          2
 16079+                          
 16080+                          	opt lm
 16081+                          	file	"D:\Hobby\Prosjekter\MultiTRX\Firmware\FW1
      +                          .2\batchpcb26k20.c"
 16082+                          	line	51
 16083+ 000000                     	__size_of_intRoutineHigh	equ	__end_of_intRoutin
      +                          eHigh-_intRoutineHigh
 16084+                          ;batchpcb26k20.c: 51: void interrupt intRoutineH
      +                          igh(void){
 16085+                          	
 16086+ 0045E0                     _intRoutineHigh:		; BSR set to: ?
 16087+                          
 16088+                          	opt stack 31
 16089+                                  psect   intcode,class=CODE,space=0,reloc
      +                          =2
 16090+                          	global	int_func
 16091+ 000008                     int_func:
 16092+                                  psect   intcode
 16093+ 000008  CFFA F266          	movff	pclat+0,??_intRoutineHigh+0
 16094+ 00000C  CFFB F267          	movff	pclat+1,??_intRoutineHigh+1
 16095+ 000010  CFE9 F268          	movff	fsr0l+0,??_intRoutineHigh+2
 16096+ 000014  EFF0  F022         	goto	_intRoutineHigh
 16097+                                  psect   text55
 16098+ 0045E0  CFEA F269          	movff	fsr0h+0,??_intRoutineHigh+3
 16099+ 0045E4  CFE1 F26A          	movff	fsr1l+0,??_intRoutineHigh+4
 16100+ 0045E8  CFE2 F26B          	movff	fsr1h+0,??_intRoutineHigh+5
 16101+ 0045EC  CFD9 F26C          	movff	fsr2l+0,??_intRoutineHigh+6
 16102+ 0045F0  CFDA F26D          	movff	fsr2h+0,??_intRoutineHigh+7
 16103+ 0045F4  CFF3 F26E          	movff	prodl+0,??_intRoutineHigh+8
 16104+ 0045F8  CFF4 F26F          	movff	prodh+0,??_intRoutineHigh+9
 16105+ 0045FC  CFF6 F270          	movff	tblptrl+0,??_intRoutineHigh+10
 16106+ 004600  CFF7 F271          	movff	tblptrh+0,??_intRoutineHigh+11
 16107+ 004604  CFF8 F272          	movff	tblptru+0,??_intRoutineHigh+12
 16108+ 004608  CFF5 F273          	movff	tablat+0,??_intRoutineHigh+13
 16109+                          	line	52
 16110+                          ;batchpcb26k20.c: 52: if(RCIF){ rxbuffer[rxip] =
      +                           RCREG; rxip = (rxip+1) & (128 - 1); } if(TXIF &
      +                          & TXIE){ TXREG = txbuffer[txop]; txop = (txop+1)
      +                           & (128 - 1); if(txop == txip) TXIE = 0; };
 16111+ 00460C  AA9E               	btfss	c:(31989/8),(31989)&7	;volatile
 16112+ 00460E  EF0B  F023         	goto	i2u8051
 16113+ 004612  EF0D  F023         	goto	i2u8050
 16114+ 004616                     i2u8051:
 16115+ 004616  EF20  F023         	goto	i2l254
 16116+ 00461A                     i2u8050:
 16117+ 00461A  0100               	movlb	0	; () banked
 16118+ 00461C  0E80               	movlw	low(128)	;volatile
 16119+ 00461E  0101               	movlb	1	; () banked
 16120+ 004620  0101               	movlb	1	; () banked
 16121+ 004622  253B               	addwf	((315))&0ffh,w	;volatile
 16122+ 004624  6EE9               	movwf	c:fsr0l
 16123+ 004626  6AEA               	clrf	1+c:fsr0l
 16124+ 004628  0100               	movlb	0	; () banked
 16125+ 00462A  0E00               	movlw	high(128)	;volatile
 16126+ 00462C  22EA               	addwfc	1+c:fsr0l
 16127+ 00462E  CFAE FFEF          	movff	(c:4014),indf0	;volatile
 16128+                          
 16129+ 004632  0101               	movlb	1	; () banked
 16130+ 004634  0101               	movlb	1	; () banked
 16131+ 004636  293B               	incf	((315))&0ffh,w	;volatile
 16132+ 004638  0B7F               	andlw	low(07Fh)
 16133+ 00463A  0101               	movlb	1	; () banked
 16134+ 00463C  0101               	movlb	1	; () banked
 16135+ 00463E  6F3B               	movwf	((315))&0ffh	;volatile
 16136+                          	
 16137+ 004640                     i2l254:		; BSR set to: ?
 16138+                          
 16139+ 004640  A89E               	btfss	c:(31988/8),(31988)&7	;volatile
 16140+ 004642  EF25  F023         	goto	i2u8061
 16141+ 004646  EF27  F023         	goto	i2u8060
 16142+ 00464A                     i2u8061:
 16143+ 00464A  EF4E  F023         	goto	i2l255
 16144+ 00464E                     i2u8060:
 16145+ 00464E  A89D               	btfss	c:(31980/8),(31980)&7	;volatile
 16146+ 004650  EF2C  F023         	goto	i2u8071
 16147+ 004654  EF2E  F023         	goto	i2u8070
 16148+ 004658                     i2u8071:
 16149+ 004658  EF4E  F023         	goto	i2l255
 16150+ 00465C                     i2u8070:
 16151+ 00465C  0100               	movlb	0	; () banked
 16152+ 00465E  0E00               	movlw	low(0)	;volatile
 16153+ 004660  0101               	movlb	1	; () banked
 16154+ 004662  0101               	movlb	1	; () banked
 16155+ 004664  252C               	addwf	((300))&0ffh,w	;volatile
 16156+ 004666  6EE9               	movwf	c:fsr0l
 16157+ 004668  6AEA               	clrf	1+c:fsr0l
 16158+ 00466A  0100               	movlb	0	; () banked
 16159+ 00466C  0E00               	movlw	high(0)	;volatile
 16160+ 00466E  22EA               	addwfc	1+c:fsr0l
 16161+ 004670  50EF               	movf	indf0,w
 16162+ 004672  6EAD               	movwf	((c:4013)),c	;volatile
 16163+ 004674  0101               	movlb	1	; () banked
 16164+ 004676  0101               	movlb	1	; () banked
 16165+ 004678  292C               	incf	((300))&0ffh,w	;volatile
 16166+ 00467A  0B7F               	andlw	low(07Fh)
 16167+ 00467C  0101               	movlb	1	; () banked
 16168+ 00467E  0101               	movlb	1	; () banked
 16169+ 004680  6F2C               	movwf	((300))&0ffh	;volatile
 16170+ 004682  0101               	movlb	1	; () banked
 16171+ 004684  0101               	movlb	1	; () banked
 16172+ 004686  512B               	movf	((299))&0ffh,w	;volatile
 16173+ 004688  0101               	movlb	1	; () banked
 16174+ 00468A  0101               	movlb	1	; () banked
 16175+ 00468C  632C               	cpfseq	((300))&0ffh	;volatile
 16176+ 00468E  EF4B  F023         	goto	i2u8081
 16177+ 004692  EF4D  F023         	goto	i2u8080
 16178+ 004696                     i2u8081:
 16179+ 004696  EF4E  F023         	goto	i2l255
 16180+ 00469A                     i2u8080:
 16181+ 00469A  989D               	bcf	c:(31980/8),(31980)&7	;volatile
 16182+                          	
 16183+ 00469C                     i2l256:		; BSR set to: ?
 16184+                          
 16185+                          	
 16186+ 00469C                     i2l255:		; BSR set to: ?
 16187+                          
 16188+                          	line	53
 16189+                          ;batchpcb26k20.c: 53: }
 16190+ 00469C                     i2l253:
 16191+                          			; BSR set to: ?
 16192+                          
 16193+ 00469C  C273  FFF5         	movff	??_intRoutineHigh+13,tablat+0
 16194+ 0046A0  C272  FFF8         	movff	??_intRoutineHigh+12,tblptru+0
 16195+ 0046A4  C271  FFF7         	movff	??_intRoutineHigh+11,tblptrh+0
 16196+ 0046A8  C270  FFF6         	movff	??_intRoutineHigh+10,tblptrl+0
 16197+ 0046AC  C26F  FFF4         	movff	??_intRoutineHigh+9,prodh+0
 16198+ 0046B0  C26E  FFF3         	movff	??_intRoutineHigh+8,prodl+0
 16199+ 0046B4  C26D  FFDA         	movff	??_intRoutineHigh+7,fsr2h+0
 16200+ 0046B8  C26C  FFD9         	movff	??_intRoutineHigh+6,fsr2l+0
 16201+ 0046BC  C26B  FFE2         	movff	??_intRoutineHigh+5,fsr1h+0
 16202+ 0046C0  C26A  FFE1         	movff	??_intRoutineHigh+4,fsr1l+0
 16203+ 0046C4  C269  FFEA         	movff	??_intRoutineHigh+3,fsr0h+0
 16204+ 0046C8  C268  FFE9         	movff	??_intRoutineHigh+2,fsr0l+0
 16205+ 0046CC  C267  FFFB         	movff	??_intRoutineHigh+1,pclat+1
 16206+ 0046D0  C266  FFFA         	movff	??_intRoutineHigh+0,pclat+0
 16207+ 0046D4  0011               	retfie f
 16208+                          	opt stack 0
 16209+                          GLOBAL __end_of_intRoutineHigh
 16210+ 0046D6                     	__end_of_intRoutineHigh:
 16211+                          	FNSIZE	_intRoutineHigh,14,0
 16212+                          ; =============== function _intRoutineHigh ends 
      +                          ============
 16213+                          
 16214+                          	signat	_intRoutineHigh,88
 16215+                          	FNCALL	_main,_init
 16216+                          	FNCALL	_main,_sInit
 16217+                          	FNCALL	_main,_startupBlinkLed
 16218+                          	FNCALL	_main,_sPuts
 16219+                          	FNCALL	_main,_sPut
 16220+                          	FNCALL	_main,_delayms
 16221+                          	FNCALL	_main,_loadEeprom
 16222+                          	FNCALL	_main,_doroDecode
 16223+                          	FNCALL	_main,_esicDecode
 16224+                          	FNCALL	_main,_gaoDecode
 16225+                          	FNCALL	_main,_nexaDecode
 16226+                          	FNCALL	_main,_bmcDecode
 16227+                          	FNCALL	_main,_sGet
 16228+                          	FNCALL	_main,_parseCmd
 16229+                          	FNCALL	_main,_sInWaiting
 16230+                          	FNCALL	_gaoDecode,_sPutint
 16231+                          	FNCALL	_gaoDecode,_gaoPrint
 16232+                          	FNCALL	_nexaDecode,_nexaPrint
 16233+                          	FNCALL	_doroDecode,_doroPrint
 16234+                          	FNCALL	_esicDecode,_esicPrint
 16235+                          	FNCALL	_parseCmd,_gaoTx
 16236+                          	FNCALL	_parseCmd,_wavemanTx
 16237+                          	FNCALL	_parseCmd,_nexaTx
 16238+                          	FNCALL	_parseCmd,_kangthaiTx
 16239+                          	FNCALL	_parseCmd,_bmcConvertHex
 16240+                          	FNCALL	_parseCmd,_bmcTx
 16241+                          	FNCALL	_parseCmd,_sPuts
 16242+                          	FNCALL	_parseCmd,_sPut
 16243+                          	FNCALL	_parseCmd,_parseSettings
 16244+                          	FNCALL	_parseCmd,_startTransmit
 16245+                          	FNCALL	_parseCmd,_delayms
 16246+                          	FNCALL	_parseCmd,_stopTransmit
 16247+                          	FNCALL	_bmcDecode,_bmcPrint
 16248+                          	FNCALL	_bmcDecode,_bmcRepeat
 16249+                          	FNCALL	_startupBlinkLed,_delayms
 16250+                          	FNCALL	_sInit,___lldiv
 16251+                          	FNCALL	_bmcRepeat,_bmcTx
 16252+                          	FNCALL	_nexaPrint,_sPuts
 16253+                          	FNCALL	_nexaPrint,_sPutonehex
 16254+                          	FNCALL	_nexaPrint,_sPut
 16255+                          	FNCALL	_nexaPrint,_blinkRxLed
 16256+                          	FNCALL	_gaoPrint,_sPuts
 16257+                          	FNCALL	_gaoPrint,_sPutonehex
 16258+                          	FNCALL	_gaoPrint,_sPut
 16259+                          	FNCALL	_gaoPrint,_blinkRxLed
 16260+                          	FNCALL	_bmcPrint,_sPuts
 16261+                          	FNCALL	_bmcPrint,_sPuthex
 16262+                          	FNCALL	_bmcPrint,_sPut
 16263+                          	FNCALL	_bmcPrint,_blinkRxLed
 16264+                          	FNCALL	_kangthaiTx,_startTransmit
 16265+                          	FNCALL	_kangthaiTx,_waitTimer
 16266+                          	FNCALL	_kangthaiTx,_stopTransmit
 16267+                          	FNCALL	_bmcConvertHex,_asciiToHex
 16268+                          	FNCALL	_parseSettings,_sPut
 16269+                          	FNCALL	_parseSettings,_sPuts
 16270+                          	FNCALL	_parseSettings,_readAd
 16271+                          	FNCALL	_parseSettings,_sPutint
 16272+                          	FNCALL	_parseSettings,_saveEeprom
 16273+                          	FNCALL	_parseSettings,_loadEeprom
 16274+                          	FNCALL	_parseSettings,_loadDefaults
 16275+                          	FNCALL	_gaoTx,_asciiToHex
 16276+                          	FNCALL	_gaoTx,_startTransmit
 16277+                          	FNCALL	_gaoTx,_waitTimer
 16278+                          	FNCALL	_gaoTx,_stopTransmit
 16279+                          	FNCALL	_wavemanTx,_reverse
 16280+                          	FNCALL	_wavemanTx,___wmul
 16281+                          	FNCALL	_wavemanTx,_startTransmit
 16282+                          	FNCALL	_wavemanTx,_waitTimer
 16283+                          	FNCALL	_wavemanTx,_stopTransmit
 16284+                          	FNCALL	_nexaTx,_asciiToHex
 16285+                          	FNCALL	_nexaTx,_startTransmit
 16286+                          	FNCALL	_nexaTx,_waitTimer
 16287+                          	FNCALL	_nexaTx,_stopTransmit
 16288+                          	FNCALL	_doroPrint,_sPuts
 16289+                          	FNCALL	_doroPrint,_sPutonehex
 16290+                          	FNCALL	_doroPrint,_sPut
 16291+                          	FNCALL	_doroPrint,_blinkRxLed
 16292+                          	FNCALL	_esicPrint,___lmul
 16293+                          	FNCALL	_esicPrint,___aldiv
 16294+                          	FNCALL	_esicPrint,_sPuts
 16295+                          	FNCALL	_esicPrint,_sPutint
 16296+                          	FNCALL	_esicPrint,_sPut
 16297+                          	FNCALL	_esicPrint,___aslmul
 16298+                          	FNCALL	_esicPrint,___almod
 16299+                          	FNCALL	_esicPrint,___awdiv
 16300+                          	FNCALL	_esicPrint,_blinkRxLed
 16301+                          	FNCALL	_bmcTx,_startTransmit
 16302+                          	FNCALL	_bmcTx,_bmcTxByte
 16303+                          	FNCALL	_bmcTx,_waitTimer
 16304+                          	FNCALL	_bmcTx,_stopTransmit
 16305+                          	FNCALL	_saveEeprom,_eeprom_write
 16306+                          	FNCALL	_loadEeprom,_eeprom_read
 16307+                          	FNCALL	___aslmul,___lmul
 16308+                          	FNCALL	_sPutint,___lwdiv
 16309+                          	FNCALL	_sPutint,___lwmod
 16310+                          	FNCALL	_sPutint,_sPuts
 16311+                          	FNCALL	_sPuthex,_sPutonehex
 16312+                          	FNCALL	_sPutonehex,_sPut
 16313+                          	FNCALL	_startTransmit,_delayms
 16314+                          	FNCALL	_startTransmit,_dataPinOut
 16315+                          	FNCALL	_stopTransmit,_dataPinIn
 16316+                          	FNCALL	_stopTransmit,_delayms
 16317+                          	FNCALL	_stopTransmit,_sPuts
 16318+                          	FNCALL	_stopTransmit,_sPut
 16319+                          	FNCALL	_bmcTxByte,_waitTimer
 16320+                          	FNCALL	_sPuts,_sPut
 16321+                          	FNROOT	_main
 16322+                          	FNCALL	intlevel2,_intRoutineHigh
 16323+                          	global	intlevel2
 16324+                          	FNROOT	intlevel2
 16325+                          ;	FNARG	___aldiv,___lmul
 16326+                                  psect   mediumconst,class=MEDIUMCONST,sp
      +                          ace=0,reloc=2
 16327+                          	global	_rxbuffer
 16328+                          	global	_rxbuffer
 16329+ 000000                     _rxbuffer  equ     128
 16330+                          
 16331+                          	DABS	1,128,128	;_rxbuffer
 16332+                          	global	_txbuffer
 16333+                          	global	_txbuffer
 16334+ 000000                     _txbuffer  equ     0
 16335+                          
 16336+                          	DABS	1,0,128	;_txbuffer
 16337+                          	global	F2852
 16338+ 000000                     F2852  equ     256
 16339+                          
 16340+                          	DABS	1,256,33	;F2852
 16341+                          	global	F2876
 16342+ 000000                     F2876  equ     294
 16343+                          
 16344+                          	DABS	1,294,4	;F2876
 16345+                          	global	F2899
 16346+ 000000                     F2899  equ     306
 16347+                          
 16348+                          	DABS	1,306,4	;F2899
 16349+                          	global	F2917
 16350+ 000000                     F2917  equ     302
 16351+                          
 16352+                          	DABS	1,302,4	;F2917
 16353+                          	global	F2929
 16354+ 000000                     F2929  equ     317
 16355+                          
 16356+                          	DABS	1,317,2	;F2929
 16357+                          	global	F2849
 16358+ 000000                     F2849  equ     301
 16359+                          
 16360+                          	DABS	1,301,1	;F2849
 16361+                          	global	F2850
 16362+ 000000                     F2850  equ     314
 16363+                          
 16364+                          	DABS	1,314,1	;F2850
 16365+                          	global	F2851
 16366+ 000000                     F2851  equ     320
 16367+                          
 16368+                          	DABS	1,320,1	;F2851
 16369+                          	global	F2853
 16370+ 000000                     F2853  equ     292
 16371+                          
 16372+                          	DABS	1,292,1	;F2853
 16373+                          	global	F2854
 16374+ 000000                     F2854  equ     324
 16375+                          
 16376+                          	DABS	1,324,1	;F2854
 16377+                          	global	F2873
 16378+ 000000                     F2873  equ     313
 16379+                          
 16380+                          	DABS	1,313,1	;F2873
 16381+                          	global	F2874
 16382+ 000000                     F2874  equ     293
 16383+                          
 16384+                          	DABS	1,293,1	;F2874
 16385+                          	global	F2875
 16386+ 000000                     F2875  equ     289
 16387+                          
 16388+                          	DABS	1,289,1	;F2875
 16389+                          	global	F2877
 16390+ 000000                     F2877  equ     323
 16391+                          
 16392+                          	DABS	1,323,1	;F2877
 16393+                          	global	F2878
 16394+ 000000                     F2878  equ     322
 16395+                          
 16396+                          	DABS	1,322,1	;F2878
 16397+                          	global	F2879
 16398+ 000000                     F2879  equ     325
 16399+                          
 16400+                          	DABS	1,325,1	;F2879
 16401+                          	global	F2896
 16402+ 000000                     F2896  equ     310
 16403+                          
 16404+                          	DABS	1,310,1	;F2896
 16405+                          	global	F2897
 16406+ 000000                     F2897  equ     298
 16407+                          
 16408+                          	DABS	1,298,1	;F2897
 16409+                          	global	F2898
 16410+ 000000                     F2898  equ     311
 16411+                          
 16412+                          	DABS	1,311,1	;F2898
 16413+                          	global	F2900
 16414+ 000000                     F2900  equ     327
 16415+                          
 16416+                          	DABS	1,327,1	;F2900
 16417+                          	global	F2916
 16418+ 000000                     F2916  equ     290
 16419+                          
 16420+                          	DABS	1,290,1	;F2916
 16421+                          	global	F2918
 16422+ 000000                     F2918  equ     319
 16423+                          
 16424+                          	DABS	1,319,1	;F2918
 16425+                          	global	F2919
 16426+ 000000                     F2919  equ     326
 16427+                          
 16428+                          	DABS	1,326,1	;F2919
 16429+                          	global	F2920
 16430+ 000000                     F2920  equ     321
 16431+                          
 16432+                          	DABS	1,321,1	;F2920
 16433+                          	global	F2928
 16434+ 000000                     F2928  equ     291
 16435+                          
 16436+                          	DABS	1,291,1	;F2928
 16437+                          	global	F2930
 16438+ 000000                     F2930  equ     312
 16439+                          
 16440+                          	DABS	1,312,1	;F2930
 16441+                          	global	_CapStatus
 16442+                          	global	_CapStatus
 16443+ 000000                     _CapStatus  equ     328
 16444+                          
 16445+                          	DABS	1,328,1	;_CapStatus
 16446+                          	global	_rxip
 16447+                          	global	_rxip
 16448+ 000000                     _rxip  equ     315
 16449+                          
 16450+                          	DABS	1,315,1	;_rxip
 16451+                          	global	_rxop
 16452+                          	global	_rxop
 16453+ 000000                     _rxop  equ     316
 16454+                          
 16455+                          	DABS	1,316,1	;_rxop
 16456+                          	global	_txip
 16457+                          	global	_txip
 16458+ 000000                     _txip  equ     299
 16459+                          
 16460+                          	DABS	1,299,1	;_txip
 16461+                          	global	_txop
 16462+                          	global	_txop
 16463+ 000000                     _txop  equ     300
 16464+                          
 16465+                          	DABS	1,300,1	;_txop
 16466+                          	global	_ADCON0
 16467+ 000000                     _ADCON0	equ	0xFC2
 16468+                          	global	_ADCON1
 16469+ 000000                     _ADCON1	equ	0xFC1
 16470+                          	global	_ADCON2
 16471+ 000000                     _ADCON2	equ	0xFC0
 16472+                          	global	_ADRESH
 16473+ 000000                     _ADRESH	equ	0xFC4
 16474+                          	global	_ADRESL
 16475+ 000000                     _ADRESL	equ	0xFC3
 16476+                          	global	_ANSEL
 16477+ 000000                     _ANSEL	equ	0xF7E
 16478+                          	global	_ANSELH
 16479+ 000000                     _ANSELH	equ	0xF7F
 16480+                          	global	_BAUDCON
 16481+ 000000                     _BAUDCON	equ	0xFB8
 16482+                          	global	_EEADR
 16483+ 000000                     _EEADR	equ	0xFA9
 16484+                          	global	_EECON1
 16485+ 000000                     _EECON1	equ	0xFA6
 16486+                          	global	_EECON1bits
 16487+ 000000                     _EECON1bits	equ	0xFA6
 16488+                          	global	_EECON2
 16489+ 000000                     _EECON2	equ	0xFA7
 16490+                          	global	_EEDATA
 16491+ 000000                     _EEDATA	equ	0xFA8
 16492+                          	global	_INTCON
 16493+ 000000                     _INTCON	equ	0xFF2
 16494+                          	global	_PIE1
 16495+ 000000                     _PIE1	equ	0xF9D
 16496+                          	global	_PORTB
 16497+ 000000                     _PORTB	equ	0xF81
 16498+                          	global	_RCREG
 16499+ 000000                     _RCREG	equ	0xFAE
 16500+                          	global	_RCSTA
 16501+ 000000                     _RCSTA	equ	0xFAB
 16502+                          	global	_SPBRG
 16503+ 000000                     _SPBRG	equ	0xFAF
 16504+                          	global	_T1CON
 16505+ 000000                     _T1CON	equ	0xFCD
 16506+                          	global	_TMR0L
 16507+ 000000                     _TMR0L	equ	0xFD6
 16508+                          	global	_TMR1H
 16509+ 000000                     _TMR1H	equ	0xFCF
 16510+                          	global	_TMR1L
 16511+ 000000                     _TMR1L	equ	0xFCE
 16512+                          	global	_TMR3H
 16513+ 000000                     _TMR3H	equ	0xFB3
 16514+                          	global	_TMR3L
 16515+ 000000                     _TMR3L	equ	0xFB2
 16516+                          	global	_TRISA
 16517+ 000000                     _TRISA	equ	0xF92
 16518+                          	global	_TRISB
 16519+ 000000                     _TRISB	equ	0xF93
 16520+                          	global	_TRISC
 16521+ 000000                     _TRISC	equ	0xF94
 16522+                          	global	_TXREG
 16523+ 000000                     _TXREG	equ	0xFAD
 16524+                          	global	_TXSTA
 16525+ 000000                     _TXSTA	equ	0xFAC
 16526+                          	global	_WDTCON
 16527+ 000000                     _WDTCON	equ	0xFD1
 16528+                          	global	_CARRY
 16529+ 000000                     _CARRY	equ	0x7EC0
 16530+                          	global	_CREN
 16531+ 000000                     _CREN	equ	0x7D5C
 16532+                          	global	_EEIF
 16533+ 000000                     _EEIF	equ	0x7D0C
 16534+                          	global	_GIE
 16535+ 000000                     _GIE	equ	0x7F97
 16536+                          	global	_LATB2
 16537+ 000000                     _LATB2	equ	0x7C52
 16538+                          	global	_LATB3
 16539+ 000000                     _LATB3	equ	0x7C53
 16540+                          	global	_LATC4
 16541+ 000000                     _LATC4	equ	0x7C5C
 16542+                          	global	_LATC5
 16543+ 000000                     _LATC5	equ	0x7C5D
 16544+                          	global	_OERR
 16545+ 000000                     _OERR	equ	0x7D59
 16546+                          	global	_RCIF
 16547+ 000000                     _RCIF	equ	0x7CF5
 16548+                          	global	_TMR0IF
 16549+ 000000                     _TMR0IF	equ	0x7F92
 16550+                          	global	_TMR1IF
 16551+ 000000                     _TMR1IF	equ	0x7CF0
 16552+                          	global	_TMR1ON
 16553+ 000000                     _TMR1ON	equ	0x7E68
 16554+                          	global	_TMR3IF
 16555+ 000000                     _TMR3IF	equ	0x7D09
 16556+                          	global	_TMR3ON
 16557+ 000000                     _TMR3ON	equ	0x7D88
 16558+                          	global	_TXIE
 16559+ 000000                     _TXIE	equ	0x7CEC
 16560+                          	global	_TXIF
 16561+ 000000                     _TXIF	equ	0x7CF4
 16562+                          	global	_WREN
 16563+ 000000                     _WREN	equ	0x7D32
 16564+                          	
 16565+ 007E5E                     STR_50:		; BSR set to: ?
 16566+                          
 16567+ 007E5E  4D                 	db	77	;'M'
 16568+ 007E5F  75                 	db	117	;'u'
 16569+ 007E60  6C                 	db	108	;'l'
 16570+ 007E61  74                 	db	116	;'t'
 16571+ 007E62  69                 	db	105	;'i'
 16572+ 007E63  54                 	db	84	;'T'
 16573+ 007E64  52                 	db	82	;'R'
 16574+ 007E65  58                 	db	88	;'X'
 16575+ 007E66  20                 	db	32
 16576+ 007E67  48                 	db	72	;'H'
 16577+ 007E68  57                 	db	87	;'W'
 16578+ 007E69  49                 	db	73	;'I'
 16579+ 007E6A  44                 	db	68	;'D'
 16580+ 007E6B  20                 	db	32
 16581+ 007E6C  31                 	db	49	;'1'
 16582+ 007E6D  2E                 	db	46
 16583+ 007E6E  31                 	db	49	;'1'
 16584+ 007E6F  2C                 	db	44
 16585+ 007E70  20                 	db	32
 16586+ 007E71  46                 	db	70	;'F'
 16587+ 007E72  57                 	db	87	;'W'
 16588+ 007E73  49                 	db	73	;'I'
 16589+ 007E74  44                 	db	68	;'D'
 16590+ 007E75  20                 	db	32
 16591+ 007E76  31                 	db	49	;'1'
 16592+ 007E77  2E                 	db	46
 16593+ 007E78  32                 	db	50	;'2'
 16594+ 007E79  20                 	db	32
 16595+ 007E7A  2D                 	db	45
 16596+ 007E7B  20                 	db	32
 16597+ 007E7C  73                 	db	115	;'s'
 16598+ 007E7D  6B                 	db	107	;'k'
 16599+ 007E7E  61                 	db	97	;'a'
 16600+ 007E7F  67                 	db	103	;'g'
 16601+ 007E80  6D                 	db	109	;'m'
 16602+ 007E81  6F                 	db	111	;'o'
 16603+ 007E82  2E                 	db	46
 16604+ 007E83  63                 	db	99	;'c'
 16605+ 007E84  6F                 	db	111	;'o'
 16606+ 007E85  6D                 	db	109	;'m'
 16607+ 007E86  00                 	db	0
 16608+                          	
 16609+ 007E87                     STR_7:		; BSR set to: ?
 16610+                          
 16611+ 007E87  2D                 	db	45
 16612+ 007E88  2D                 	db	45
 16613+ 007E89  2D                 	db	45
 16614+ 007E8A  2D                 	db	45
 16615+ 007E8B  2D                 	db	45
 16616+ 007E8C  2D                 	db	45
 16617+ 007E8D  2D                 	db	45
 16618+ 007E8E  2D                 	db	45
 16619+ 007E8F  2D                 	db	45
 16620+ 007E90  20                 	db	32
 16621+ 007E91  53                 	db	83	;'S'
 16622+ 007E92  65                 	db	101	;'e'
 16623+ 007E93  74                 	db	116	;'t'
 16624+ 007E94  74                 	db	116	;'t'
 16625+ 007E95  69                 	db	105	;'i'
 16626+ 007E96  6E                 	db	110	;'n'
 16627+ 007E97  67                 	db	103	;'g'
 16628+ 007E98  73                 	db	115	;'s'
 16629+ 007E99  20                 	db	32
 16630+ 007E9A  2D                 	db	45
 16631+ 007E9B  2D                 	db	45
 16632+ 007E9C  2D                 	db	45
 16633+ 007E9D  2D                 	db	45
 16634+ 007E9E  2D                 	db	45
 16635+ 007E9F  2D                 	db	45
 16636+ 007EA0  2D                 	db	45
 16637+ 007EA1  2D                 	db	45
 16638+ 007EA2  2D                 	db	45
 16639+ 007EA3  2D                 	db	45
 16640+ 007EA4  00                 	db	0
 16641+                          	
 16642+ 007EA5                     STR_31:		; BSR set to: ?
 16643+                          
 16644+ 007EA5  20                 	db	32
 16645+ 007EA6  5B                 	db	91	;'['
 16646+ 007EA7  46                 	db	70	;'F'
 16647+ 007EA8  5D                 	db	93	;']'
 16648+ 007EA9  20                 	db	32
 16649+ 007EAA  4C                 	db	76	;'L'
 16650+ 007EAB  6F                 	db	111	;'o'
 16651+ 007EAC  61                 	db	97	;'a'
 16652+ 007EAD  64                 	db	100	;'d'
 16653+ 007EAE  20                 	db	32
 16654+ 007EAF  64                 	db	100	;'d'
 16655+ 007EB0  65                 	db	101	;'e'
 16656+ 007EB1  66                 	db	102	;'f'
 16657+ 007EB2  61                 	db	97	;'a'
 16658+ 007EB3  75                 	db	117	;'u'
 16659+ 007EB4  6C                 	db	108	;'l'
 16660+ 007EB5  74                 	db	116	;'t'
 16661+ 007EB6  73                 	db	115	;'s'
 16662+ 007EB7  00                 	db	0
 16663+                          	
 16664+ 007EB8                     STR_29:		; BSR set to: ?
 16665+                          
 16666+ 007EB8  20                 	db	32
 16667+ 007EB9  5B                 	db	91	;'['
 16668+ 007EBA  53                 	db	83	;'S'
 16669+ 007EBB  5D                 	db	93	;']'
 16670+ 007EBC  20                 	db	32
 16671+ 007EBD  45                 	db	69	;'E'
 16672+ 007EBE  45                 	db	69	;'E'
 16673+ 007EBF  50                 	db	80	;'P'
 16674+ 007EC0  52                 	db	82	;'R'
 16675+ 007EC1  4F                 	db	79	;'O'
 16676+ 007EC2  4D                 	db	77	;'M'
 16677+ 007EC3  20                 	db	32
 16678+ 007EC4  73                 	db	115	;'s'
 16679+ 007EC5  61                 	db	97	;'a'
 16680+ 007EC6  76                 	db	118	;'v'
 16681+ 007EC7  65                 	db	101	;'e'
 16682+ 007EC8  00                 	db	0
 16683+                          	
 16684+ 007EC9                     STR_30:		; BSR set to: ?
 16685+                          
 16686+ 007EC9  20                 	db	32
 16687+ 007ECA  5B                 	db	91	;'['
 16688+ 007ECB  4C                 	db	76	;'L'
 16689+ 007ECC  5D                 	db	93	;']'
 16690+ 007ECD  20                 	db	32
 16691+ 007ECE  45                 	db	69	;'E'
 16692+ 007ECF  45                 	db	69	;'E'
 16693+ 007ED0  50                 	db	80	;'P'
 16694+ 007ED1  52                 	db	82	;'R'
 16695+ 007ED2  4F                 	db	79	;'O'
 16696+ 007ED3  4D                 	db	77	;'M'
 16697+ 007ED4  20                 	db	32
 16698+ 007ED5  6C                 	db	108	;'l'
 16699+ 007ED6  6F                 	db	111	;'o'
 16700+ 007ED7  61                 	db	97	;'a'
 16701+ 007ED8  64                 	db	100	;'d'
 16702+ 007ED9  00                 	db	0
 16703+                          	
 16704+ 007EDA                     STR_13:		; BSR set to: ?
 16705+                          
 16706+ 007EDA  20                 	db	32
 16707+ 007EDB  5B                 	db	91	;'['
 16708+ 007EDC  48                 	db	72	;'H'
 16709+ 007EDD  5D                 	db	93	;']'
 16710+ 007EDE  20                 	db	32
 16711+ 007EDF  48                 	db	72	;'H'
 16712+ 007EE0  6F                 	db	111	;'o'
 16713+ 007EE1  70                 	db	112	;'p'
 16714+ 007EE2  73                 	db	115	;'s'
 16715+ 007EE3  20                 	db	32
 16716+ 007EE4  20                 	db	32
 16717+ 007EE5  20                 	db	32
 16718+ 007EE6  3D                 	db	61	;'='
 16719+ 007EE7  20                 	db	32
 16720+ 007EE8  00                 	db	0
 16721+                          	
 16722+ 007EE9                     STR_18:		; BSR set to: ?
 16723+                          
 16724+ 007EE9  20                 	db	32
 16725+ 007EEA  5B                 	db	91	;'['
 16726+ 007EEB  41                 	db	65	;'A'
 16727+ 007EEC  5D                 	db	93	;']'
 16728+ 007EED  20                 	db	32
 16729+ 007EEE  53                 	db	83	;'S'
 16730+ 007EEF  65                 	db	101	;'e'
 16731+ 007EF0  6E                 	db	110	;'n'
 16732+ 007EF1  64                 	db	100	;'d'
 16733+ 007EF2  73                 	db	115	;'s'
 16734+ 007EF3  20                 	db	32
 16735+ 007EF4  20                 	db	32
 16736+ 007EF5  3D                 	db	61	;'='
 16737+ 007EF6  20                 	db	32
 16738+ 007EF7  00                 	db	0
 16739+                          	
 16740+ 007EF8                     STR_27:		; BSR set to: ?
 16741+                          
 16742+ 007EF8  20                 	db	32
 16743+ 007EF9  5B                 	db	91	;'['
 16744+ 007EFA  4B                 	db	75	;'K'
 16745+ 007EFB  5D                 	db	93	;']'
 16746+ 007EFC  20                 	db	32
 16747+ 007EFD  53                 	db	83	;'S'
 16748+ 007EFE  65                 	db	101	;'e'
 16749+ 007EFF  6E                 	db	110	;'n'
 16750+ 007F00  64                 	db	100	;'d'
 16751+ 007F01  73                 	db	115	;'s'
 16752+ 007F02  20                 	db	32
 16753+ 007F03  20                 	db	32
 16754+ 007F04  3D                 	db	61	;'='
 16755+ 007F05  20                 	db	32
 16756+ 007F06  00                 	db	0
 16757+                          	
 16758+ 007F07                     STR_10:		; BSR set to: ?
 16759+                          
 16760+ 007F07  20                 	db	32
 16761+ 007F08  5B                 	db	91	;'['
 16762+ 007F09  4D                 	db	77	;'M'
 16763+ 007F0A  5D                 	db	93	;']'
 16764+ 007F0B  20                 	db	32
 16765+ 007F0C  53                 	db	83	;'S'
 16766+ 007F0D  65                 	db	101	;'e'
 16767+ 007F0E  6E                 	db	110	;'n'
 16768+ 007F0F  64                 	db	100	;'d'
 16769+ 007F10  73                 	db	115	;'s'
 16770+ 007F11  20                 	db	32
 16771+ 007F12  20                 	db	32
 16772+ 007F13  3D                 	db	61	;'='
 16773+ 007F14  20                 	db	32
 16774+ 007F15  00                 	db	0
 16775+                          	
 16776+ 007F16                     STR_25:		; BSR set to: ?
 16777+                          
 16778+ 007F16  20                 	db	32
 16779+ 007F17  5B                 	db	91	;'['
 16780+ 007F18  57                 	db	87	;'W'
 16781+ 007F19  5D                 	db	93	;']'
 16782+ 007F1A  20                 	db	32
 16783+ 007F1B  53                 	db	83	;'S'
 16784+ 007F1C  65                 	db	101	;'e'
 16785+ 007F1D  6E                 	db	110	;'n'
 16786+ 007F1E  64                 	db	100	;'d'
 16787+ 007F1F  73                 	db	115	;'s'
 16788+ 007F20  20                 	db	32
 16789+ 007F21  20                 	db	32
 16790+ 007F22  3D                 	db	61	;'='
 16791+ 007F23  20                 	db	32
 16792+ 007F24  00                 	db	0
 16793+                          	
 16794+ 007F25                     STR_23:		; BSR set to: ?
 16795+                          
 16796+ 007F25  20                 	db	32
 16797+ 007F26  5B                 	db	91	;'['
 16798+ 007F27  58                 	db	88	;'X'
 16799+ 007F28  5D                 	db	93	;']'
 16800+ 007F29  20                 	db	32
 16801+ 007F2A  53                 	db	83	;'S'
 16802+ 007F2B  65                 	db	101	;'e'
 16803+ 007F2C  6E                 	db	110	;'n'
 16804+ 007F2D  64                 	db	100	;'d'
 16805+ 007F2E  73                 	db	115	;'s'
 16806+ 007F2F  20                 	db	32
 16807+ 007F30  20                 	db	32
 16808+ 007F31  3D                 	db	61	;'='
 16809+ 007F32  20                 	db	32
 16810+ 007F33  00                 	db	0
 16811+                          	
 16812+ 007F34                     STR_12:		; BSR set to: ?
 16813+                          
 16814+ 007F34  20                 	db	32
 16815+ 007F35  5B                 	db	91	;'['
 16816+ 007F36  52                 	db	82	;'R'
 16817+ 007F37  5D                 	db	93	;']'
 16818+ 007F38  20                 	db	32
 16819+ 007F39  52                 	db	82	;'R'
 16820+ 007F3A  65                 	db	101	;'e'
 16821+ 007F3B  70                 	db	112	;'p'
 16822+ 007F3C  65                 	db	101	;'e'
 16823+ 007F3D  61                 	db	97	;'a'
 16824+ 007F3E  74                 	db	116	;'t'
 16825+ 007F3F  20                 	db	32
 16826+ 007F40  3D                 	db	61	;'='
 16827+ 007F41  20                 	db	32
 16828+ 007F42  00                 	db	0
 16829+                          	
 16830+ 007F43                     STR_9:		; BSR set to: ?
 16831+                          
 16832+ 007F43  20                 	db	32
 16833+ 007F44  5B                 	db	91	;'['
 16834+ 007F45  42                 	db	66	;'B'
 16835+ 007F46  5D                 	db	93	;']'
 16836+ 007F47  20                 	db	32
 16837+ 007F48  45                 	db	69	;'E'
 16838+ 007F49  6E                 	db	110	;'n'
 16839+ 007F4A  2E                 	db	46
 16840+ 007F4B  20                 	db	32
 16841+ 007F4C  52                 	db	82	;'R'
 16842+ 007F4D  58                 	db	88	;'X'
 16843+ 007F4E  20                 	db	32
 16844+ 007F4F  3D                 	db	61	;'='
 16845+ 007F50  20                 	db	32
 16846+ 007F51  00                 	db	0
 16847+                          	
 16848+ 007F52                     STR_33:		; BSR set to: ?
 16849+                          
 16850+ 007F52  20                 	db	32
 16851+ 007F53  43                 	db	67	;'C'
 16852+ 007F54  75                 	db	117	;'u'
 16853+ 007F55  72                 	db	114	;'r'
 16854+ 007F56  72                 	db	114	;'r'
 16855+ 007F57  2E                 	db	46
 16856+ 007F58  20                 	db	32
 16857+ 007F59  52                 	db	82	;'R'
 16858+ 007F5A  53                 	db	83	;'S'
 16859+ 007F5B  53                 	db	83	;'S'
 16860+ 007F5C  49                 	db	73	;'I'
 16861+ 007F5D  20                 	db	32
 16862+ 007F5E  3D                 	db	61	;'='
 16863+ 007F5F  20                 	db	32
 16864+ 007F60  00                 	db	0
 16865+                          	
 16866+ 007F61                     STR_11:		; BSR set to: ?
 16867+                          
 16868+ 007F61  20                 	db	32
 16869+ 007F62  5B                 	db	91	;'['
 16870+ 007F63  43                 	db	67	;'C'
 16871+ 007F64  5D                 	db	93	;']'
 16872+ 007F65  20                 	db	32
 16873+ 007F66  49                 	db	73	;'I'
 16874+ 007F67  6E                 	db	110	;'n'
 16875+ 007F68  20                 	db	32
 16876+ 007F69  68                 	db	104	;'h'
 16877+ 007F6A  65                 	db	101	;'e'
 16878+ 007F6B  78                 	db	120	;'x'
 16879+ 007F6C  20                 	db	32
 16880+ 007F6D  3D                 	db	61	;'='
 16881+ 007F6E  20                 	db	32
 16882+ 007F6F  00                 	db	0
 16883+                          	
 16884+ 007F70                     STR_17:		; BSR set to: ?
 16885+                          
 16886+ 007F70  20                 	db	32
 16887+ 007F71  5B                 	db	91	;'['
 16888+ 007F72  47                 	db	71	;'G'
 16889+ 007F73  5D                 	db	93	;']'
 16890+ 007F74  20                 	db	32
 16891+ 007F75  45                 	db	69	;'E'
 16892+ 007F76  6E                 	db	110	;'n'
 16893+ 007F77  2E                 	db	46
 16894+ 007F78  20                 	db	32
 16895+ 007F79  52                 	db	82	;'R'
 16896+ 007F7A  58                 	db	88	;'X'
 16897+ 007F7B  20                 	db	32
 16898+ 007F7C  3D                 	db	61	;'='
 16899+ 007F7D  20                 	db	32
 16900+ 007F7E  00                 	db	0
 16901+                          	
 16902+ 007F7F                     STR_22:		; BSR set to: ?
 16903+                          
 16904+ 007F7F  20                 	db	32
 16905+ 007F80  5B                 	db	91	;'['
 16906+ 007F81  4E                 	db	78	;'N'
 16907+ 007F82  5D                 	db	93	;']'
 16908+ 007F83  20                 	db	32
 16909+ 007F84  45                 	db	69	;'E'
 16910+ 007F85  6E                 	db	110	;'n'
 16911+ 007F86  2E                 	db	46
 16912+ 007F87  20                 	db	32
 16913+ 007F88  52                 	db	82	;'R'
 16914+ 007F89  58                 	db	88	;'X'
 16915+ 007F8A  20                 	db	32
 16916+ 007F8B  3D                 	db	61	;'='
 16917+ 007F8C  20                 	db	32
 16918+ 007F8D  00                 	db	0
 16919+                          	
 16920+ 007F8E                     STR_15:		; BSR set to: ?
 16921+                          
 16922+ 007F8E  20                 	db	32
 16923+ 007F8F  5B                 	db	91	;'['
 16924+ 007F90  44                 	db	68	;'D'
 16925+ 007F91  5D                 	db	93	;']'
 16926+ 007F92  20                 	db	32
 16927  007F93  45                 	db	69	;'E'
 16928  007F94  6E                 	db	110	;'n'
 16929  007F95  2E                 	db	46
 16930  007F96  20                 	db	32
 16931  007F97  52                 	db	82	;'R'
 16932  007F98  58                 	db	88	;'X'
 16933  007F99  20                 	db	32
 16934  007F9A  3D                 	db	61	;'='
 16935  007F9B  20                 	db	32
 16936  007F9C  00                 	db	0
 16937                           	
 16938  007F9D                     STR_20:		; BSR set to: ?
 16939                           
 16940  007F9D  20                 	db	32
 16941  007F9E  5B                 	db	91	;'['
 16942  007F9F  45                 	db	69	;'E'
 16943  007FA0  5D                 	db	93	;']'
 16944  007FA1  20                 	db	32
 16945  007FA2  45                 	db	69	;'E'
 16946  007FA3  6E                 	db	110	;'n'
 16947  007FA4  2E                 	db	46
 16948  007FA5  20                 	db	32
 16949  007FA6  52                 	db	82	;'R'
 16950  007FA7  58                 	db	88	;'X'
 16951  007FA8  20                 	db	32
 16952  007FA9  3D                 	db	61	;'='
 16953  007FAA  20                 	db	32
 16954  007FAB  00                 	db	0
 16955                           	
 16956  007FAC                     STR_26:		; BSR set to: ?
 16957                           
 16958  007FAC  4B                 	db	75	;'K'
 16959  007FAD  61                 	db	97	;'a'
 16960  007FAE  6E                 	db	110	;'n'
 16961  007FAF  67                 	db	103	;'g'
 16962  007FB0  74                 	db	116	;'t'
 16963  007FB1  68                 	db	104	;'h'
 16964  007FB2  61                 	db	97	;'a'
 16965  007FB3  69                 	db	105	;'i'
 16966  007FB4  3A                 	db	58	;':'
 16967  007FB5  00                 	db	0
 16968                           	
 16969  007FB6                     STR_28:		; BSR set to: ?
 16970                           
 16971  007FB6  53                 	db	83	;'S'
 16972  007FB7  65                 	db	101	;'e'
 16973  007FB8  74                 	db	116	;'t'
 16974  007FB9  74                 	db	116	;'t'
 16975  007FBA  69                 	db	105	;'i'
 16976  007FBB  6E                 	db	110	;'n'
 16977  007FBC  67                 	db	103	;'g'
 16978  007FBD  73                 	db	115	;'s'
 16979  007FBE  3A                 	db	58	;':'
 16980  007FBF  00                 	db	0
 16981                           	
 16982  007FC0                     STR_24:		; BSR set to: ?
 16983                           
 16984  007FC0  57                 	db	87	;'W'
 16985  007FC1  61                 	db	97	;'a'
 16986  007FC2  76                 	db	118	;'v'
 16987  007FC3  65                 	db	101	;'e'
 16988  007FC4  6D                 	db	109	;'m'
 16989  007FC5  61                 	db	97	;'a'
 16990  007FC6  6E                 	db	110	;'n'
 16991  007FC7  3A                 	db	58	;':'
 16992  007FC8  00                 	db	0
 16993                           	
 16994  007FC9                     STR_32:		; BSR set to: ?
 16995                           
 16996  007FC9  4F                 	db	79	;'O'
 16997  007FCA  74                 	db	116	;'t'
 16998  007FCB  68                 	db	104	;'h'
 16999  007FCC  65                 	db	101	;'e'
 17000  007FCD  72                 	db	114	;'r'
 17001  007FCE  3A                 	db	58	;':'
 17002  007FCF  00                 	db	0
 17003                           	
 17004  007FD0                     STR_21:		; BSR set to: ?
 17005                           
 17006  007FD0  4E                 	db	78	;'N'
 17007  007FD1  65                 	db	101	;'e'
 17008  007FD2  78                 	db	120	;'x'
 17009  007FD3  61                 	db	97	;'a'
 17010  007FD4  3A                 	db	58	;':'
 17011  007FD5  00                 	db	0
 17012                           	
 17013  007FD6                     STR_14:		; BSR set to: ?
 17014                           
 17015  007FD6  44                 	db	68	;'D'
 17016  007FD7  6F                 	db	111	;'o'
 17017  007FD8  72                 	db	114	;'r'
 17018  007FD9  6F                 	db	111	;'o'
 17019  007FDA  3A                 	db	58	;':'
 17020  007FDB  00                 	db	0
 17021                           	
 17022  007FDC                     STR_19:		; BSR set to: ?
 17023                           
 17024  007FDC  45                 	db	69	;'E'
 17025  007FDD  73                 	db	115	;'s'
 17026  007FDE  69                 	db	105	;'i'
 17027  007FDF  63                 	db	99	;'c'
 17028  007FE0  3A                 	db	58	;':'
 17029  007FE1  00                 	db	0
 17030                           	
 17031  007FE2                     STR_16:		; BSR set to: ?
 17032                           
 17033  007FE2  47                 	db	71	;'G'
 17034  007FE3  41                 	db	65	;'A'
 17035  007FE4  4F                 	db	79	;'O'
 17036  007FE5  3A                 	db	58	;':'
 17037  007FE6  00                 	db	0
 17038                           	
 17039  007FE7                     STR_8:		; BSR set to: ?
 17040                           
 17041  007FE7  42                 	db	66	;'B'
 17042  007FE8  4D                 	db	77	;'M'
 17043  007FE9  43                 	db	67	;'C'
 17044  007FEA  3A                 	db	58	;':'
 17045  007FEB  00                 	db	0
 17046                           	
 17047  007FEC                     STR_47:		; BSR set to: ?
 17048                           
 17049  007FEC  24                 	db	36
 17050  007FED  4F                 	db	79	;'O'
 17051  007FEE  4B                 	db	75	;'K'
 17052  007FEF  00                 	db	0
 17053                           	
 17054  007FF0                     STR_6:		; BSR set to: ?
 17055                           
 17056  007FF0  24                 	db	36
 17057  007FF1  44                 	db	68	;'D'
 17058  007FF2  00                 	db	0
 17059                           	
 17060  007FF3                     STR_5:		; BSR set to: ?
 17061                           
 17062  007FF3  24                 	db	36
 17063  007FF4  45                 	db	69	;'E'
 17064  007FF5  00                 	db	0
 17065                           	
 17066  007FF6                     STR_2:		; BSR set to: ?
 17067                           
 17068  007FF6  24                 	db	36
 17069  007FF7  42                 	db	66	;'B'
 17070  007FF8  00                 	db	0
 17071                           	
 17072  007FF9                     STR_3:		; BSR set to: ?
 17073                           
 17074  007FF9  24                 	db	36
 17075  007FFA  47                 	db	71	;'G'
 17076  007FFB  00                 	db	0
 17077                           	
 17078  007FFC                     STR_4:		; BSR set to: ?
 17079                           
 17080  007FFC  24                 	db	36
 17081  007FFD  4E                 	db	78	;'N'
 17082  007FFE  00                 	db	0
 17083  000000                     STR_51	equ	STR_50+0
 17084  000000                     STR_1	equ	STR_47+0
 17085  000000                     STR_43	equ	STR_47+0
 17086  000000                     STR_48	equ	STR_47+0
 17087  000000                     STR_45	equ	STR_47+0
 17088  000000                     STR_46	equ	STR_47+0
 17089  000000                     STR_49	equ	STR_47+0
 17090  000000                     STR_44	equ	STR_47+0
 17091  000000                     STR_36	equ	STR_47+0
 17092  000000                     STR_41	equ	STR_47+0
 17093  000000                     STR_42	equ	STR_47+0
 17094  000000                     STR_40	equ	STR_47+0
 17095  000000                     STR_39	equ	STR_47+0
 17096  000000                     STR_34	equ	STR_47+0
 17097  000000                     STR_37	equ	STR_47+0
 17098  000000                     STR_38	equ	STR_47+0
 17099  000000                     STR_35	equ	STR_47+0
 17100  007FFF  00                 	db 0	; dummy byte at the end
 17101                           	psect	intsave_regs,class=BIGRAM,space=1
 17102                           	PSECT	param2,class=BANK2,space=1
 17103                           	GLOBAL	__Lparam2
 17104                           	FNCONF	param2,??,?
 17105                           	GLOBAL	__Labsbss0
 17106  000000                     __Labsbss0	EQU	0
 17107                           	GLOBAL	__Habsbss0
 17108  000000                     __Habsbss0	EQU	329
 17109                           GLOBAL	__Lparam, __Hparam
 17110                           GLOBAL	__Lparam2, __Hparam2
 17111  000000                     __Lparam	EQU	__Lparam2
 17112  000000                     __Hparam	EQU	__Hparam2


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Tue Feb 07 19:51:17 2012

            nexaTx@dimming 023D               ___awdiv@sign 0254  
      ___wmul@multiplicand 0248                        l220 4C1E  
                      l300 39FE                        l212 51D4  
                      l221 4C0E                        l213 522C  
                      l301 3868                        l214 5232  
                      l230 3E1E                        l310 3918  
                      l302 38AA                        l223 4C1C  
                      l231 3DF6                        l215 4B20  
                      l224 4DAA                        l240 51AA  
                      l232 3E3A                        l312 3934  
                      l304 3890                        l216 5148  
                      l400 19DC                        l225 4D76  
                      l233 3E42                        l313 397A  
                      l305 38C2                        l321 4486  
                      l217 5128                        l401 1A76  
                      l226 4D40                        l242 419A  
                      l234 3EC4                        l250 4E1A  
                      l306 39FA                        l410 13DE  
                      l322 445A                        l218 510E  
                      l330 1B18                        l402 1A4E  
                      l219 4C4A                        l227 4DAA  
                      l243 4E88                        l315 3960  
                      l411 13EE                        l323 4480  
                      l331 1B68                        l403 1A9C  
                      l228 3EFA                        l236 3EA2  
                      l252 4DF4                        l244 4E30  
                      l316 39DA                        l308 39E0  
                      l404 1722                        l420 14F6  
                      l412 1406                        l324 49C4  
                      l340 1C2A                        l332 1B58  
                      l500 33A2                        l261 4F24  
                      l237 50D4                        l229 3DEA  
                      l245 4E88                        l309 38EA  
                      l413 171E                        l421 14E4  
                      l405 11F4                        l317 44E4  
                      l325 49C4                        l341 1E26  
                      l333 1B68                        l501 33EA  
                      l262 5054                        l238 50C2  
                      l270 4C74                        l422 14F6  
                      l406 125E                        l350 24BA  
                      l510 1FBA                        l318 441C  
                      l326 4982                        l342 1E16  
                      l334 1B82                        l502 3432  
                      l263 5042                        l239 50D4  
                      l247 4E6A                        l271 4C8C  
                      l431 1646                        l423 154C  
                      l415 1704                        l351 21C2  
                      l319 44CC                        l343 1E16  
                      l335 1BBC                        l327 1E40  
                      l503 3432                        l248 4E1A  
                      l280 5226                        l272 4CA4  
                      l432 1658                        l424 1586  
                      l416 1466                        l408 1338  
                      l360 2336                        l352 222C  
                      l520 2148                        l512 1F8C  
                      l440 31BC                        l344 1CF8  
                      l336 1E40                        l328 1B1C  
                      l504 3422                        l257 4F54  
                      l265 5050                        l249 4DC0  
                      l281 43E2                        l273 4CBC  
                      l433 1696                        l425 1574  
                      l417 15B4                        l409 1390  
                      l361 2378                        l505 217E  
                      l513 1FFC                        l441 31F8  
                      l345 1D62                        l337 1E2A  
                      l329 1B08                        l258 4F06  
                      l274 5218                        l282 4318  
                      l266 517C                        l434 16A8  
                      l426 1586                        l354 2288  
                      l290 44FA                        l522 20A4  
                      l514 2002                        l506 1E84  
                      l370 3BBC                        l442 320C  
                      l338 1BD8                        l450 2BE6  
                      l259 4F54                        l275 5096  
                      l283 43D0                        l267 516A  
                      l427 16D6                        l419 14BC  
                      l531 2A66                        l363 23A0  
                      l355 22E6                        l291 45D2  
                      l523 20B6                        l515 201A  
                      l507 1F16                        l371 3A3A  
                      l435 3224                        l347 1D1A  
                      l339 1C26                        l443 2D46  
                      l451 2C06                        l268 5172  
                      l428 1608                        l532 299A  
                      l364 246E                        l356 22FE  
                      l516 217A                        l524 20E0  
                      l372 3ACC                        l436 3040  
                      l276 4EF2                        l348 1E06  
                      l460 2D20                        l452 2CB4  
                      l444 2B2C                        l380 17A6  
                      l285 4320                        l269 4CC6  
                      l429 16D6                        l533 2A4E  
                      l357 24B6                        l541 0B50  
                      l293 45B4                        l525 20F2  
                      l509 1F3E                        l437 30D2  
                      l277 4EB2                        l349 1E06  
                      l461 2D0C                        l453 2C40  
                      l445 2B08                        l381 17C6  
                      l294 4BBC                        l462 11B0  
                      l526 2A84                        l366 23DE  
                      l550 08F6                        l542 0636  
                      l518 2160                        l374 3B2E  
                      l278 4EF2                        l470 3486  
                      l454 2CA4                        l446 2B28  
                      l390 1908                        l382 18A4  
                      l295 4B4A                        l287 432E  
                      l463 0C20                        l535 29D8  
                      l527 292A                        l367 23F0  
                      l359 249C                        l551 094E  
                      l543 068E                        l519 207A  
                      l375 3BA4                        l439 31A8  
                      l471 3496                        l455 2C6A  
                      l447 2C06                        l391 1942  
                      l383 1828                        l296 4BBC  
                      l288 43AA                        l464 0CA0  
                      l536 2A00                        l528 2942  
                      l368 242E                        l552 09A6  
                      l544 06E6                        l376 3B90  
                      l560 2778                        l480 3578  
                      l472 350E                        l456 2CA4  
                      l448 2B8A                        l392 1932  
                      l384 18A4                        l529 2A80  
                      l369 2440                        l537 0BB8  
                      l553 09FE                        l545 073E  
                      l289 45DE                        l377 3BA4  
                      l561 24C0                        l481 358C  
                      l473 34FE                        l457 2C94  
                      l449 2C06                        l393 1942  
                      l385 1884                        l298 4B88  
                      l466 11B0                        l554 0A56  
                      l546 0796                        l538 0632  
                      l570 26EC                        l562 2510  
                      l482 3590                        l474 350E  
                      l490 3432                        l458 2CA4  
                      l378 1AB4                        l394 196C  
                      l386 18A4                        l299 4B9C  
                      l467 10AA                        l555 0AAE  
                      l547 07EE                        l539 0BB8  
                      l571 2692                        l563 2514  
                      l483 35F4                        l475 3630  
                      l491 331A                        l459 2CCE  
                      l395 1994                        l387 1952  
                      l379 17CA                        l556 0AE4  
                      l548 0846                        l572 26F0  
                      l564 2564                        l468 3630  
                      l484 35D0                        l492 32A0  
                      l396 1AB4                        l388 18DE  
                      l580 2EEC                        l557 0B1A  
                      l549 089E                        l573 271A  
                      l565 2568                        l485 361A  
                      l477 361E                        l469 349A  
                      l493 3316                        l397 1AA0  
                      l389 1942                        l581 2E3E  
                      l486 4862                        l558 27C0  
                      l574 2752                        l566 25CA  
                      l478 3528                        l494 3306  
                      l398 1998                        l590 2FFE  
                      l582 2E62                        l487 47E0  
                      l575 2758                        l567 25CE  
                      l559 27C0                        l479 357C  
                      l495 3316                        l399 19D4  
                      l591 2F38                        l583 2E7E  
                      l488 484A                        l568 261E  
                      l496 33A2                        l592 2FEA  
                      l584 2E9E                        l569 2622  
                      l497 3356                        l577 2FFE  
                      l593 2FDA                        l585 2EBE  
                      l498 33A2                        l586 2EEC  
                      l578 2E00                        l499 3392  
                      l587 2F04                        l588 2FEA  
                      l589 2F08                        l793 51FC  
                      l794 51DE                        l795 51DA  
                      l796 51EC                        _GIE 007F97  
                      l996 5006                        l998 5006  
                      l999 4FB4              nexaTx@resends 023C  
           bmcConvertHex@k 023F                        wreg 000FE8  
                     F2900 000147                       F2920 000141  
                     F2930 000138                       F2850 00013A  
                     F2851 000140                       F2916 000122  
                     F2852 000100                       F2853 000124  
                     F2917 00012E                       F2918 00013F  
                     F2854 000144                       F2919 000146  
                     F2928 000123                       F2873 000139  
                     F2849 00012D                       F2929 00013D  
                     F2874 000125                       F2875 000121  
                     F2876 000126                       F2877 000143  
                     F2878 000142                       F2879 000145  
                     F2896 000136                       F2897 00012A  
                     F2898 000137                       F2899 000132  
                     l1000 4FB8                       l1002 4FC6  
                     l1003 4FE4                       l1004 5006  
                     l1030 3684                       l1031 36BE  
                     l1040 380A                       l1032 37D6  
                     l1041 3D6E                       l1033 371E  
                     l1050 3C9A                       l1042 3C10  
                     l1034 3704                       l1051 3D08  
                     l1043 3C42                       l1035 3730  
                     l1052 3D5A                       l1044 3D26  
                     l1045 3C88                       l1029 381E  
                     l1037 37D6                       l1070 3FC0  
                     l1046 3C6E                       l1038 3730  
                     l1311 4900                       l1047 3C9A  
                     l1039 37B8                       l1312 487E  
                     l1064 4054                       l1072 4026  
                     l1313 48C0                       l1321 4798  
                     l1073 3FC0                       l1065 3F3C  
                     l1049 3D26                       l1330 4A68  
                     l1322 4732                       l1074 4010  
                     l1066 3F64                       l1314 4FB2  
                     l1331 4A14                       l1315 47A4  
                     l1323 4782                       l1075 4048  
                     l1067 4026                       l1324 4A74  
                     l1332 4A52                       l1316 4798  
                     l1068 3FAE                       l1340 4CD6  
                     l1309 4914                       l1325 4A68  
                     l1317 4720                       l1069 3F9C  
                     l1341 4D00                       l1326 4A02  
                     l1318 470E                       l1327 49F0  
                     l1319 4732                       l1328 4A14  
                     l1337 4D3A                       l1290 42B4  
                     l1339 4D2E                       l1291 420E  
                     l1284 42C8                       l1292 4296  
            nexaPrint@data 0238                       l1285 42B4  
                     l1286 41FC                       l1287 41E2  
                     l1288 420E                       _EEIF 007D0C  
                     STR_1 7FEC                       STR_2 7FF6  
                     STR_3 7FF9                       STR_4 7FFC  
                     STR_5 7FF3                       STR_6 7FF0  
                     STR_7 7E87                       STR_8 7FE7  
                     STR_9 7F43                       _CREN 007D5C  
                     u3000 43A6                       u3001 43A2  
                     u3010 43D0                       u3011 43CC  
                     u3020 45D2                       u3021 45CE  
                     u5020 51EC                       u5021 51E8  
                     u5030 4FC6                       _PIE1 000F9D  
                     u5031 4FC2                       u6000 4C08  
                     u5040 4FE2                       u6001 4C04  
                     u5041 4FDE                       u6010 4C1C  
                     u5050 5004                       u2810 4E88  
                     u6011 4C18                       u5051 5000  
                     u2811 4E84                       u6020 4D64  
                     u2820 4E1A                       u2900 4C6E  
                     u6100 1770                       u6005 4BFA  
                     u2821 4E16                       u2901 4C6A  
                     u6101 176C                       u6030 4D9A  
                     u2910 4C86                       u2911 4C82  
                     u6040 4DAA                       u2920 4C9E  
                     u7000 1D92                       u6200 18F4  
                     u6120 17DE                       u6041 4DA6  
                     u2921 4C9A                       u7001 1D8E  
                     u6201 18F0                       u6121 17DA  
                     u6050 3DAC                       u2930 4CB6  
                     u2690 4ABE                       u7010 1DE8  
                     u6210 191E                       u6130 17F2  
                     u6114 1788                       u6027 4D5E  
                     u6051 3DA8                       u2931 4CB2  
                     u7011 1DE4                       u6211 191A  
                     u6131 17EE                       u6115 1782  
                     u6060 3E3A                       u7100 23C8  
                     u7020 21BE                       u6220 1968  
                     u6300 2E36                       u6037 4D94  
                     u6061 3E36                       u7101 23C4  
                     u7021 21BA                       u6221 1964  
                     u6301 2E32                       u6070 3EC4  
                     u7110 2418                       u6230 1982  
                     u6150 183C                       u6310 2E56  
                     u6071 3EC0                       u7111 2414  
                     u2695 4AAA                       u6231 197E  
                     u6151 1838                       u6311 2E52  
                     u7200 138A                       u7120 246E  
                     u7040 222C                       u8000 33B6  
                     u6240 19AE                       u6160 1850  
                     u6144 180A                       u6080 1748  
                     u6400 2F98                       u6320 2E76  
                     u7201 1386                       u7121 246A  
                     u7041 2228                       u8001 33B2  
                     u6241 19AA                       u6161 184C  
                     u6145 1804                       u6081 1744  
                     u6401 2F94                       u6321 2E72  
                     u2890 515E                       u7210 13B4  
                     u7130 24B6                       u7050 226E  
                     u8010 33C8                       u6250 19C4  
                     u6090 175C                       u6410 2FAE  
                     u6330 2E92                       u2891 515A  
                     u7211 13B0                       u7131 24B2  
                     u7051 226A                       u7035 21FA  
                     u8011 33C4                       u6251 19C0  
                     u6091 1758                       u6411 2FAA  
                     u6331 2E8E                       _RCIF 007CF5  
                     u8100 4B5C                       u2980 4314  
                     u7300 15C8                       u7220 1462  
                     u7140 11F0                       u7060 22CC  
                     u8020 3400                       u6260 19F2  
                     u6180 18B8                       u6420 2FFE  
                     u6340 2EB2                       u8101 4B58  
                     u2981 4310                       u7301 15C4  
                     u7221 145E                       u7141 11EC  
                     u7061 22C8                       u8021 33FC  
                     u6261 19EE                       u6181 18B4  
                     u6421 2FFA                       u6341 2EAE  
                     u8110 4BBC                       u2990 432E  
                     u6510 0E8E                       u6430 0C1C  
                     u7310 1604                       u7230 1490  
                     u7070 2332                       u8030 3416  
                     u6270 1A08                       u6190 18CA  
                     u6174 1868                       u6350 2ED2  
                     u8111 4BB8                       u2991 432A  
                     u6431 0C18                       u7311 1600  
                     u7231 148C                       u7071 232E  
                     u8031 3412                       u6271 1A04  
                     u6191 18C6                       u6175 1862  
                     u6351 2ECE                       u8120 5050  
                     u8200 4A3A                       u8040 50AC  
                     u6520 0EFA                       u7320 1630  
                     u7240 14A6                       u7160 125E  
                     u7080 2378                       u7400 1FBA  
                     u6600 34D8                       u6280 1A1C  
                     u6360 2EFE                       u8121 504C  
                     u8201 4A36                       u8041 50A8  
                     u6505 0DCA                       u7321 162C  
                     u7241 14A2                       u7161 125A  
                     u7081 2374                       u7401 1FB6  
                     u6601 34D4                       u6281 1A18  
                     u6361 2EFA                       u8130 4F54  
                     u8210 46FA                       u6450 0CA0  
                     u7330 1680                       u7250 14CE  
                     u7090 239C                       u7410 1FF2  
                     u6610 34EA                       u6370 2F28  
                     u6290 2E24                       u8131 4F50  
                     u8211 46F6                       u6515 0E82  
                     u6451 0C9C                       u7331 167C  
                     u7251 14CA                       u7155 122C  
                     u7091 2398                       u7411 1FEE  
                     u6611 34E6                       u6371 2F24  
                     u6291 2E20                       u8220 4732  
                     u8300 3F1E                       u6540 1066  
                     u7340 16D6                       u7260 1520  
                     u7500 2A4E                       u7420 2076  
                     u8140 4EAE                       u6700 257C  
                     u6620 3524                       u6380 2F6E  
                     u8221 472E                       u8301 3F1A  
                     u6541 1062                       u6525 0EEE  
                     u6445 0C6A                       u7341 16D2  
                     u7261 151C                       u7501 2A4A  
                     u7421 2072                       u8141 4EAA  
                     u6701 2578                       u6621 3520  
                     u6381 2F6A                       u8230 4764  
                     u8310 3F4E                       u6470 0D0E  
                     u7350 171E                       u7270 1536  
                     u7190 1332                       u7510 2A80  
                     u7430 208E                       u8150 4EC4  
                     u6710 2590                       u6630 353E  
                     u6550 3448                       u6390 2F84  
                     u8231 4760                       u8311 3F4A  
                     u6535 0FD6                       u6471 0D0A  
                     u7351 171A                       u7271 1532  
                     u7191 132E                       u7175 1262  
                     u7511 2A7C                       u7431 208A  
                     u8151 4EBE                       u6711 258C  
                     u6631 353A                       u6551 3444  
                     u6391 2F80                       u8320 3F88  
                     u8240 3BE0                       u8400 3782  
                     u6800 39C8                       u6480 0D26  
                     u7280 155E                       u7440 20CA  
                     u7360 1E80                       u7520 4430  
                     u7600 303C                       u6720 25E4  
                     u6640 3568                       u6560 345C  
                     u8321 3F84                       u8241 3BDC  
                     u8401 377E                       u6801 39C4  
                     u6481 0D22                       u6465 0CD8  
                     u7281 155A                       u7185 129E  
                     u7441 20C6                       u7361 1E7C  
                     u7521 442C                       u7601 3038  
                     u6721 25E0                       u6641 3564  
                     u6561 3458                       _OERR 007D59  
                     u8090 4B46                       u8330 3FC0  
                     u8250 3C22                       u8410 37EA  
                     u6810 39FA                       u6490 0D82  
                     u7290 15B4                       u7450 2148  
                     u7370 1F16                       u7530 44CC  
                     u8170 4EF2                       u6730 2636  
                     u6650 35A6                       u6570 3472  
                     u8091 4B42                       u8331 3FBC  
                     u8251 3C1E                       u8411 37E6  
                     u6811 39F6                       u7291 15B0  
                     u7451 2144                       u7371 1F12  
                     u7531 44C8                       u8171 4EEE  
                     u6731 2632                       u6651 35A2  
                     u6571 346E                       u8420 4890  
                     u8180 49DC                       u8340 3FF2  
                     u8260 3C5A                       u7460 217A  
                     u7380 1F3A                       u7540 3A36  
                     u5860 41CE                       u6900 1B7E  
                     u6740 2662                       u6660 35BC  
                     u6580 34AE                       u7700 2AD2  
                     u8421 488C                       u8181 49D8  
                     u8341 3FEE                       u8261 3C56  
                     u7461 2176                       u7381 1F36  
                     u7541 3A32                       u5861 41CA  
                     u8165 4EC6                       u6901 1B7A  
                     u6741 265E                       u6661 35B8  
                     u6581 34AA                       u7701 2ACE  
                     u8430 4900                       u8190 4A14  
                     u8350 403A                       u8270 3C9A  
                     u7470 2922                       u6670 004E  
                     u7390 1F86                       u7630 30D2  
                     u5870 420E                       u6830 4968  
                     u6910 1B98                       u6590 34C2  
                     u8431 48FC                       u8191 4A10  
                     u8351 4036                       u8271 3C96  
                     u6495 0D76                       u7471 291E  
                     u6671 004A                       u7391 1F82  
                     u7631 30CE                       u7615 3076  
                     u5871 420A                       u6831 4964  
                     u6911 1B94                       u6591 34BE  
                     u8280 3CD8                       u8360 3654  
                     u6760 38AA                       u7480 2996  
                     u5880 4260                       u6840 497C  
                     u6920 1BEE                       u8440 511E  
                     u6680 24D6                       u7800 2C56  
                     u7720 2B40                       u8281 3CD4  
                     u8361 3650                       u6761 38A6  
                     u7481 2992                       u7625 3094  
                     u5881 425C                       u6841 4978  
                     u6825 493C                       u6921 1BEA  
                     u8441 511A                       u6681 24D2  
                     u7801 2C52                       u7721 2B3C  
                     u8290 3D3A                       u8370 3696  
                     u5970 4CE8                       u6770 38E6  
                     u7490 29AC                       u7570 3ACC  
                     u7650 3168                       u6930 1C02  
                     u6850 1ACA                       u8450 5142  
                     u6690 252A                       u7810 2C80  
                     u7730 2B54                       u7714 2AEA  
                     u8291 3D36                       u8371 3692  
                     u5971 4CE4                       u6771 38E2  
                     u6755 3830                       u7491 29A8  
                     u7571 3AC8                       u7555 3A70  
                     u6931 1BFE                       u6851 1AC6  
                     u8451 513C                       u6691 2526  
                     u7811 2C7C                       u7731 2B50  
                     u7715 2AE4                       u8380 36F0  
                     u5980 4D2E                       u6780 3918  
                     u7580 3B16                       u7660 3190  
                     u6940 1C40                       u6860 1ADE  
                     u7900 3276                       u7820 2CCA  
                     u8381 36EC                       u5981 4D2A  
                     u6781 3914                       u7581 3B12  
                     u7565 3A8E                       u7661 318C  
                     u7645 310A                       u6941 1C3C  
                     u6861 1ADA                       u7901 3272  
                     u7821 2CC6                       u8390 3730  
                     u6790 397A                       u7590 3B78  
                     u7670 31E0                       u6950 1C52  
                     u6870 1AF4                       u7910 328C  
                     u7830 2CE4                       u7750 2B9E  
                     u8391 372C                       u6791 3976  
                     u7591 3B74                       u7671 31DC  
                     u7655 315C                       u6951 1C4E  
                     u6871 1AF0                       u7911 3288  
                     u7831 2CE0                       u7751 2B9A  
                     u6960 1C68                       u6880 1B30  
                     u8456 5144                       u7920 32B4  
                     u7840 2CF8                       u7760 2BB2  
                     u7744 2B6C                       u7680 2AAA  
                     u6961 1C64                       u6881 1B2C  
                     u7921 32B0                       u7841 2CF4  
                     u7761 2BAE                       u7745 2B66  
                     u7681 2AA6                       u7850 47DC  
                     u6970 1C9C                       u6890 1B44  
                     u7930 32C8                       u7690 2ABE  
                     u8467 4F0E                       u7851 47D8  
                     u6971 1C98                       u6891 1B40  
                     u7931 32C4                       u7691 2ABA  
                     u7860 484A                       u6980 1CD4  
                     u7940 32DC                       u7780 2C1A  
                     u7861 4846                       u6981 1CD0  
                     u7941 32D8                       u7781 2C16  
                     u6990 1D62                       u7950 32F2  
                     u7870 323A                       u7790 2C2C  
                     u7774 2BCA                       u6991 1D5E  
                     u7951 32EE                       u7871 3236  
                     u7791 2C28                       u7775 2BC4  
                     u7960 332E                       u7880 324E  
                     u7961 332A                       u7881 324A  
                     u7970 3342                       u7890 3262  
                     u7971 333E                       u7891 325E  
                     u7980 336A                       u7981 3366  
                     u7990 337E                       u7991 337A  
                     _TXIE 007CEC                       _WREN 007D32  
                     _TXIF 007CF4             ??_eeprom_write 0247  
                     _sGet 50D6                       _main 2D48  
                     _sPut 4BBE                       _init 51AC  
                     fsr0h 000FEA                       fsr1h 000FE2  
                     indf0 000FEF                       fsr0l 000FE9  
                     fsr2h 000FDA                       indf1 000FE7  
                     fsr1l 000FE1                       fsr2l 000FD9  
                     _rxip 00013B                       _rxop 00013C  
                     _txip 00012B                       _txop 00012C  
                     pclat 000FFA                       prodh 000FF4  
                     prodl 000FF3                       start 0018  
   esicPrint@constantcheck 023A              _startTransmit 51FE  
                    ?_sGet 0234            __end_of___aldiv 3820  
          __end_of___almod 3D70                      ?_main 0200  
                    ?_sPut 0260                      ?_init 0234  
          __end_of___awdiv 4056                      _EEADR 000FA9  
                    STR_10 7F07                      STR_11 7F61  
                    STR_20 7F9D                      STR_12 7F34  
                    STR_21 7FD0                      STR_13 7EDA  
                    STR_30 7EC9                      STR_22 7F7F  
                    STR_14 7FD6                      STR_31 7EA5  
                    STR_23 7F25                      STR_15 7F8E  
                    STR_40 7FEC                      STR_32 7FC9  
                    STR_24 7FC0                      STR_16 7FE2  
                    STR_41 7FEC                      STR_33 7F52  
                    STR_25 7F16                      STR_17 7F70  
                    STR_42 7FEC                      STR_34 7FEC  
                    STR_26 7FAC                      STR_18 7EE9  
                    STR_50 7E5E                      STR_43 7FEC  
                    STR_35 7FEC                      STR_27 7EF8  
                    STR_19 7FDC                      STR_51 7E5E  
                    STR_44 7FEC                      STR_36 7FEC  
                    STR_28 7FB6                      STR_45 7FEC  
                    STR_37 7FEC                      STR_29 7EB8  
                    STR_46 7FEC                      STR_38 7FEC  
                    STR_47 7FEC                      STR_39 7FEC  
                    STR_48 7FEC                      STR_49 7FEC  
                    _CARRY 007EC0                      _ANSEL 000F7E  
          __end_of___lldiv 42CA            ___awdiv@divisor 0251  
                    _T1CON 000FCD                      _LATB2 007C52  
                    _LATB3 007C53                      _LATC4 007C5C  
                    _LATC5 007C5D            __end_of___lwdiv 47A6  
          __end_of___lwmod 4A76                kangthaiTx@j 0245  
                    i2l253 469C                      i2l254 4640  
                    i2l255 469C                      i2l256 469C  
              kangthaiTx@s 023A            ___awdiv@counter 0253  
                    _RCREG 000FAE                      _RCSTA 000FAB  
                    _TMR1H 000FCF                      _TMR0L 000FD6  
                    _TMR3H 000FB3                      _TMR1L 000FCE  
                    _TMR3L 000FB2                      _SPBRG 000FAF  
                    _PORTB 000F81                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94  
                    _TXREG 000FAD               main@line_len 0203  
 gaoDecode@rf_pulse_length 0235                      _TXSTA 000FAC  
esicDecode@rf_pulse_length 0234            __end_of_delayms 4F56  
      ___lmul@multiplicand 0259               main@rf_state 0200  
                    _bmcTx 3820              ?_loadDefaults 0240  
                    _gaoTx 2180                      _sInit 4A76  
          __end_of_sPuthex 51AC        main@rf_pulse_length 0204  
          __end_of_sPutint 3EFC                      sGet@c 0234  
                    _sPuts 4D3C              parseCmd@linep 0234  
doroDecode@rf_pulse_length 0235                      sPut@c 0260  
             _stopTransmit 5056                      tablat 000FF5  
             main@settings 0205            __end_of_reverse 4CC8  
                    status 000FD8               __end_of_sGet 5110  
             __end_of_main 3006               __end_of_sPut 4C4C  
             __end_of_init 51D6              bmcTx@data_len 0248  
            bmcTx@checksum 024C              bmcRepeat@hops 0243  
           ?_startTransmit 0253                readAd@value 0242  
              loadEeprom@j 0242              wavemanTx@data 023E  
            wavemanTx@temp 0240                     ??_sGet 0234  
                   ??_main 0200                     ??_sPut 0261  
                   ??_init 0234              __activetblptr 000002  
           ??_loadDefaults 0242                     ?_bmcTx 0246  
                   ?_gaoTx 023A                     ?_sInit 0234  
                   _ADCON0 000FC2                     _ADCON1 000FC1  
                   _ADCON2 000FC0                     ?_sPuts 025E  
                   _ADRESH 000FC4                     _ADRESL 000FC3  
                   _EEDATA 000FA8           __end_of___aslmul 4FB4  
                   _EECON1 000FA6                     _EECON2 000FA7  
           delayms@counter 0256                sPutint@temp 0253  
         ___awdiv@dividend 024F                sPutint@stop 0252  
                   _ANSELH 000F7F                     _INTCON 000FF2  
          nexaPrint@number 023C                     i2u8050 461A  
                   i2u8051 4616                     i2u8060 464E  
                   i2u8061 464A                     i2u8070 465C  
                   i2u8071 4658                     i2u8080 469A  
                   i2u8081 4696                     _TMR0IF 007F92  
                   _TMR1IF 007CF0                     _TMR3IF 007D09  
                   _TMR1ON 007E68                     _TMR3ON 007D88  
      esicPrint@paritycalc 0241                     _WDTCON 000FD1  
         __end_of_bmcPrint 44E6           __end_of_gaoPrint 3BBE  
            bmcTxByte@data 0253                     __Ldata 000000  
          esicPrint@parity 0240                     ___lmul 4864  
                ??___aldiv 0257                  ??___almod 0257  
                   ___wmul 4CC8                  ??___awdiv 0253  
                ??___lldiv 0244          bmcConvertHex@temp 023E  
                ??___lwdiv 0262              bmcPrint@datap 023E  
                ??___lwmod 0262                     bmcTx@j 024E  
                   bmcTx@k 024D                     _readAd 42CA  
         wavemanTx@resends 023C                     _nexaTx 11B2  
                   gaoTx@j 0245                     gaoTx@s 023A  
         ___awdiv@quotient 0255                  ??_delayms 0256  
         __end_of_parseCmd 27C2       __end_of_eeprom_write 5008  
        gaoDecode@rf_state 0234                     sPuts@s 025E  
                ??_sPuthex 0249                  ??_sPutint 0251  
             __mediumconst 7E5E                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8  
                ??_reverse 0247      ___aslmul@multiplicand 0251  
               __accesstop 0060            eeprom_read@addr 0244  
              nexaTx@bitnr 023E        loadEeprom@settingsp 0240  
            __end_of_bmcTx 3A00            ??_startTransmit 0253  
            __end_of_gaoTx 24BC              __end_of_sInit 4B22  
            __end_of_sPuts 4DAC             bmcRepeat@datap 023E  
        ??_startupBlinkLed 0234      bmcConvertHex@data_len 023C  
     esicPrint@packetcount 023B              esicPrint@data 0236  
         startupBlinkLed@j 0234             wavemanTx@bitnr 023D  
            esicPrint@temp 0246          eeprom_write@value 0246  
                  ??_bmcTx 024B                    ??_gaoTx 023D  
                  ??_sInit 0238                    ??_sPuts 0260  
               _dataPinOut 5228         doroDecode@rf_state 0234  
               _sInWaiting 5110               sPuthex@input 0248  
              saveEeprom@j 0242       bmcPrint@payload_size 0241  
     __end_of_loadDefaults 419C                    ?___lmul 0255  
               _blinkRxLed 521A                    ?___wmul 0246  
               _asciiToHex 514A                    ?_readAd 0240  
                  _BAUDCON 000FB8                  l600000361 34EA  
                l600000353 1A08                  l600000362 1C68  
                l600000354 2F84                  l600000364 328C  
                l600000365 32F2                  l600000366 33C8  
                ?___aslmul 024F                    ?_nexaTx 023A  
           ___lmul@product 025D               sPutint@input 024F  
             sPutint@start 0251                 bmcDecode@j 0238  
                ?_bmcPrint 023E          __end_of_bmcDecode 1E42  
                ?_gaoPrint 0238                 _esicDecode 3434  
            _bmcConvertHex 44E6                 _doroDecode 3226  
        __end_of_gaoDecode 1AB6          __end_of_bmcRepeat 49C6  
        __end_of_bmcTxByte 4BBE          __end_of_dataPinIn 5234  
               _kangthaiTx 1E42           esicPrint@channel 023C  
               bmcTx@k_167 024F                 bmcTx@k_168 0250  
                ?_parseCmd 0234                 bmcTx@datap 0246  
         esicPrint@counter 024A                 _loadEeprom 4DAC  
                  __Hparam 0274                 bmcTx@sends 024A  
                  __Lparam 0200              doroPrint@data 0237  
               bmcTxByte@j 0254           esicPrint@lowbatt 023F  
               _sPutonehex 5098                    ___aldiv 3632  
                  ___almod 3BBE                    ___awdiv 3EFC  
    parseSettings@line_len 023C                    ___lldiv 419C  
        __end_of_esicPrint 11B2                    ___lwdiv 46D6  
                  ___lwmod 49C6         bmcConvertHex@datap 023A  
 bmcDecode@rf_pulse_length 0234          __end_of_doroPrint 4864  
               _nexaDecode 2A86                 ??___aslmul 0255  
                  __ramtop 0F00                    _delayms 4EF4  
           bmcPrint@in_hex 0240                    _sPuthex 517E  
                  _sPutint 3D70         parseSettings@linep 023A  
               ??_bmcPrint 0241                 gaoTx@bitnr 0248  
         ___aldiv@dividend 024F                 ??_gaoPrint 023C  
        __end_of_nexaPrint 3226                    _reverse 4C4C  
           ?_bmcConvertHex 023A                 _saveEeprom 4E1C  
          kangthaiTx@j_270 0246                ?_dataPinOut 0253  
                  readAd@j 0245              gaoTx@preamble 0247  
          kangthaiTx@bitnr 0248       esicPrint@temperature 0242  
            __Lmediumconst 7E5E               _eeprom_write 4FB4  
                  int_func 0008                    nexaTx@j 0247  
                  nexaTx@s 023A          __end_of_waitTimer 5056  
              ?_sInWaiting 0234                 ??_parseCmd 0239  
          ___lldiv@divisor 0240            ___lldiv@counter 0244  
            _parseSettings 003A          __end_of_wavemanTx 2A86  
         ___aldiv@quotient 0259                    postdec0 000FED  
              ?_blinkRxLed 024F                    postinc0 000FEE  
              ?_asciiToHex 0250                ?_esicDecode 0234  
           sPutonehex@data 024A                ?_doroDecode 0234  
              ___aslmul@mp 024F               nexaTx@resend 0248  
                _CapStatus 000148                ?_kangthaiTx 023A  
            ??_eeprom_read 0246                 main@temp_c 0201  
              ?_loadEeprom 0240             ?_parseSettings 023A  
          _startupBlinkLed 4E8A                ?_sPutonehex 024A  
           __end_of___lmul 4916                ?_nexaDecode 0234  
           __end_of___wmul 4D3C                 doroPrint@j 023B  
           __end_of_readAd 43E4             __end_of_nexaTx 1724  
          ??_bmcConvertHex 023E                  __Habsbss0 000149  
             _loadDefaults 4056                ?_saveEeprom 0240  
               readAd@temp 0243                  __Labsbss0 000000  
           esicPrint@house 023D             waitTimer@value 0256  
                 ??___lmul 025D                   ??___wmul 024A  
          wavemanTx@resend 0242        __end_of_eeprom_read 51FE  
          doroPrint@number 0239          main@prev_rf_state 0202  
           _intRoutineHigh 45E0                   ??_readAd 0242  
                 ??_nexaTx 023D      __end_of_startTransmit 521A  
       bmcRepeat@settingsp 0240                 nexaTx@data 0243  
               nexaTx@temp 023F                 nexaPrint@j 0240  
            ?_stopTransmit 0253                  _bmcDecode 1AB6  
         eeprom_write@addr 0244    __end_of_startupBlinkLed 4EF4  
                _gaoDecode 1724                  _bmcRepeat 4916  
                _bmcTxByte 4B22            ??_parseSettings 023F  
                _dataPinIn 522E           ___lwdiv@dividend 025E  
   __end_of_intRoutineHigh 46D6                   ?___aldiv 024F  
                 ?___almod 024F                   ?___awdiv 024F  
                 ?___lldiv 023C                   ?___lwdiv 025E  
                 ?___lwmod 025E                   ?_delayms 0254  
         ___almod@dividend 024F                  _esicPrint 0BBA  
              __smallconst 0F00                   ?_sPuthex 0248  
                _doroPrint 47A6                   ?_sPutint 024F  
            sPutint@buffer 0255                  bmcTx@hops 0249  
                bmcTx@temp 024B                  bmcPrint@j 0242  
                 ?_reverse 0246           ___lwdiv@quotient 0263  
           ??_stopTransmit 0253               ??_dataPinOut 0253  
               ?_bmcDecode 0234                  _nexaPrint 3006  
                gaoTx@data 0241                  gaoTx@temp 023D  
          ___aldiv@divisor 0253                  gaoPrint@j 0240  
          ___aldiv@counter 0257                 ?_gaoDecode 0234  
               ?_bmcRepeat 023E             ___wmul@product 024A  
               ?_bmcTxByte 0253                 ?_dataPinIn 0254  
             ??_sInWaiting 0234               gaoTx@resends 023C  
           kangthaiTx@data 0241                  delayms@ms 0254  
              _eeprom_read 51D6             kangthaiTx@temp 023D  
                sInit@baud 0234                  _waitTimer 5008  
             ??_blinkRxLed 024F            ?_intRoutineHigh 0266  
        parseCmd@settingsp 0237               ??_asciiToHex 0251  
             gaoPrint@data 0238                  _wavemanTx 27C2  
    bmcRepeat@payload_size 0242         __end_of_dataPinOut 522E  
        ___wmul@multiplier 0246                 ?_esicPrint 0236  
               ?_doroPrint 0237         __end_of_sInWaiting 514A  
             ??_esicDecode 0235                 wavemanTx@s 023A  
             ??_doroDecode 0236          ___lmul@multiplier 0255  
               ?_nexaPrint 0238               ??_kangthaiTx 023D  
       __end_of_blinkRxLed 5228         __end_of_asciiToHex 517E  
         ?_startupBlinkLed 0234                 _EECON1bits 000FA6  
                 __Hparam2 0274               ??_loadEeprom 0242  
       bmcDecode@settingsp 0235          esicPrint@humidity 023E  
                 __Lparam2 0200                 ?_waitTimer 0256  
             __Lsmallconst 0F00               ??_sPutonehex 024B  
        kangthaiTx@resends 023C         __end_of_esicDecode 3632  
             ??_nexaDecode 0236                 ?_wavemanTx 023A  
       __end_of_doroDecode 3434                   ___aslmul 4F56  
       __end_of_kangthaiTx 2180                   _bmcPrint 43E4  
                 _gaoPrint 3A00            ___lwdiv@divisor 0260  
            reverse@output 0247            ___lwdiv@counter 0262  
       __end_of_loadEeprom 4E1C        saveEeprom@settingsp 0240  
             ??_saveEeprom 0242                ??_bmcDecode 0237  
          ___almod@divisor 0253            ___almod@counter 0258  
       __end_of_sPutonehex 50D6           parseCmd@line_len 0236  
nexaDecode@rf_pulse_length 0235                ??_gaoDecode 0236  
              ??_bmcRepeat 0242     parseSettings@settingsp 023D  
              ??_bmcTxByte 0254         __end_of_nexaDecode 2D48  
              ??_dataPinIn 0254          bmcDecode@checksum 0237  
                 _parseCmd 24BC            asciiToHex@input 0250  
              gaoTx@resend 0246       __end_of_stopTransmit 5098  
                 _rxbuffer 000080                   main@line 0213  
       __end_of_saveEeprom 4E8A                   _txbuffer 000000  
              ??_esicPrint 023A                ??_doroPrint 0239  
                 sPutint@j 025C         nexaDecode@rf_state 0234  
    __end_of_bmcConvertHex 45E0           kangthaiTx@resend 0247  
              ??_nexaPrint 023C                   intlevel2 5234  
             reverse@input 0246           ___lwmod@dividend 025E  
         ___lldiv@dividend 023C                ??_waitTimer 0258  
              ??_wavemanTx 023D           ___lldiv@quotient 0245  
          ___lwmod@divisor 0260            sInit@spbrg_calc 0238  
          ___lwmod@counter 0262               ___aldiv@sign 0258  
           gaoPrint@number 023C               ___almod@sign 0257  
            ?_eeprom_write 0244           ??_intRoutineHigh 0266  
             ?_eeprom_read 0244      __end_of_parseSettings 0BBA  
    loadDefaults@settingsp 0240  
